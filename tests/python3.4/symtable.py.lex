(LIT "Interface to the compiler's internal symbol tables")
(NEWLINE)
(KEYWORD import)
(ID "_symtable")
(NEWLINE)
(KEYWORD from)
(ID "_symtable")
(KEYWORD import)
(PUNCT "(")
(ID "USE")
(PUNCT ",")
(ID "DEF_GLOBAL")
(PUNCT ",")
(ID "DEF_LOCAL")
(PUNCT ",")
(ID "DEF_PARAM")
(PUNCT ",")
(ID "DEF_IMPORT")
(PUNCT ",")
(ID "DEF_BOUND")
(PUNCT ",")
(ID "OPT_IMPORT_STAR")
(PUNCT ",")
(ID "SCOPE_OFF")
(PUNCT ",")
(ID "SCOPE_MASK")
(PUNCT ",")
(ID "FREE")
(PUNCT ",")
(ID "LOCAL")
(PUNCT ",")
(ID "GLOBAL_IMPLICIT")
(PUNCT ",")
(ID "GLOBAL_EXPLICIT")
(PUNCT ",")
(ID "CELL")
(PUNCT ")")
(NEWLINE)
(KEYWORD import)
(ID "weakref")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "symtable")
(PUNCT ",")
(LIT "SymbolTable")
(PUNCT ",")
(LIT "Class")
(PUNCT ",")
(LIT "Function")
(PUNCT ",")
(LIT "Symbol")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "symtable")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "compile_type")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "top")
(PUNCT "=")
(ID "_symtable")
(PUNCT ".")
(ID "symtable")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "compile_type")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "_newSymbolTable")
(PUNCT "(")
(ID "top")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "SymbolTableFactory")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "__memo")
(PUNCT "=")
(ID "weakref")
(PUNCT ".")
(ID "WeakValueDictionary")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "new")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "table")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "table")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "_symtable")
(PUNCT ".")
(ID "TYPE_FUNCTION")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "Function")
(PUNCT "(")
(ID "table")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "table")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "_symtable")
(PUNCT ".")
(ID "TYPE_CLASS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "Class")
(PUNCT "(")
(ID "table")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "SymbolTable")
(PUNCT "(")
(ID "table")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "table")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "table")
(PUNCT ",")
(ID "filename")
(NEWLINE)
(ID "obj")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "__memo")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "obj")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "__memo")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "new")
(PUNCT "(")
(ID "table")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "obj")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "_newSymbolTable")
(PUNCT "=")
(ID "SymbolTableFactory")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "SymbolTable")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "raw_table")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT "=")
(ID "raw_table")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_filename")
(PUNCT "=")
(ID "filename")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_symbols")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT "==")
(ID "SymbolTable")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kind")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kind")
(PUNCT "=")
(LIT "%s ")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "name")
(PUNCT "==")
(LIT "global")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<{0}SymbolTable for module {1}>")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "kind")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<{0}SymbolTable for {1} in {2}>")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "kind")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "name")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_type")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "_symtable")
(PUNCT ".")
(ID "TYPE_MODULE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "module")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "_symtable")
(PUNCT ".")
(ID "TYPE_FUNCTION")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "function")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "_symtable")
(PUNCT ".")
(ID "TYPE_CLASS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "class")
(NEWLINE)
(DEDENT)
(KEYWORD assert)
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "type")
(KEYWORD in)
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(LIT 2)
(PUNCT ",")
(LIT 3)
(PUNCT ")")
(PUNCT ",")
(LIT "unexpected type: {0}")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "type")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_id")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "id")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_name")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_lineno")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "lineno")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_optimized")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "_symtable")
(PUNCT ".")
(ID "TYPE_FUNCTION")
(KEYWORD and)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "optimized")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_nested")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "nested")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "has_children")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "children")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "has_exec")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return true if the scope uses exec.  Deprecated method.")
(NEWLINE)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "has_import_star")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return true if the scope uses import *")
(NEWLINE)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "optimized")
(PUNCT "&")
(ID "OPT_IMPORT_STAR")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_identifiers")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "symbols")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "lookup")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sym")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_symbols")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sym")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "symbols")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(NEWLINE)
(ID "namespaces")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "__check_children")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(ID "sym")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_symbols")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "Symbol")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "flags")
(PUNCT ",")
(ID "namespaces")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "sym")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_symbols")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "lookup")
(PUNCT "(")
(ID "ident")
(PUNCT ")")
(KEYWORD for)
(ID "ident")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "get_identifiers")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__check_children")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(ID "_newSymbolTable")
(PUNCT "(")
(ID "st")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_filename")
(PUNCT ")")
(KEYWORD for)
(ID "st")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "children")
(KEYWORD if)
(ID "st")
(PUNCT ".")
(ID "name")
(PUNCT "==")
(ID "name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_children")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(ID "_newSymbolTable")
(PUNCT "(")
(ID "st")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_filename")
(PUNCT ")")
(KEYWORD for)
(ID "st")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "children")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Function")
(PUNCT "(")
(ID "SymbolTable")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "__params")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "__locals")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "__frees")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "__globals")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "__idents_matching")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "test_func")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "tuple")
(PUNCT "(")
(PUNCT "[")
(ID "ident")
(KEYWORD for)
(ID "ident")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "get_identifiers")
(PUNCT "(")
(PUNCT ")")
(KEYWORD if)
(ID "test_func")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "symbols")
(PUNCT "[")
(ID "ident")
(PUNCT "]")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_parameters")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "__params")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "__params")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "__idents_matching")
(PUNCT "(")
(KEYWORD lambda)
(ID "x")
(PUNCT ":")
(ID "x")
(PUNCT "&")
(ID "DEF_PARAM")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "__params")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_locals")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "__locals")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "locs")
(PUNCT "=")
(PUNCT "(")
(ID "LOCAL")
(PUNCT ",")
(ID "CELL")
(PUNCT ")")
(NEWLINE)
(ID "test")
(PUNCT "=")
(KEYWORD lambda)
(ID "x")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(ID "x")
(PUNCT ">>")
(ID "SCOPE_OFF")
(PUNCT ")")
(PUNCT "&")
(ID "SCOPE_MASK")
(PUNCT ")")
(KEYWORD in)
(ID "locs")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__locals")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "__idents_matching")
(PUNCT "(")
(ID "test")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "__locals")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_globals")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "__globals")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "glob")
(PUNCT "=")
(PUNCT "(")
(ID "GLOBAL_IMPLICIT")
(PUNCT ",")
(ID "GLOBAL_EXPLICIT")
(PUNCT ")")
(NEWLINE)
(ID "test")
(PUNCT "=")
(KEYWORD lambda)
(ID "x")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(ID "x")
(PUNCT ">>")
(ID "SCOPE_OFF")
(PUNCT ")")
(PUNCT "&")
(ID "SCOPE_MASK")
(PUNCT ")")
(KEYWORD in)
(ID "glob")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__globals")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "__idents_matching")
(PUNCT "(")
(ID "test")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "__globals")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_frees")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "__frees")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "is_free")
(PUNCT "=")
(KEYWORD lambda)
(ID "x")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(ID "x")
(PUNCT ">>")
(ID "SCOPE_OFF")
(PUNCT ")")
(PUNCT "&")
(ID "SCOPE_MASK")
(PUNCT ")")
(PUNCT "==")
(ID "FREE")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__frees")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "__idents_matching")
(PUNCT "(")
(ID "is_free")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "__frees")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Class")
(PUNCT "(")
(ID "SymbolTable")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "__methods")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "get_methods")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "__methods")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "d")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "st")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_table")
(PUNCT ".")
(ID "children")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "d")
(PUNCT "[")
(ID "st")
(PUNCT ".")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "__methods")
(PUNCT "=")
(ID "tuple")
(PUNCT "(")
(ID "d")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "__methods")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Symbol")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "flags")
(PUNCT ",")
(ID "namespaces")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "__name")
(PUNCT "=")
(ID "name")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__flags")
(PUNCT "=")
(ID "flags")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__scope")
(PUNCT "=")
(PUNCT "(")
(ID "flags")
(PUNCT ">>")
(ID "SCOPE_OFF")
(PUNCT ")")
(PUNCT "&")
(ID "SCOPE_MASK")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__namespaces")
(PUNCT "=")
(ID "namespaces")
(KEYWORD or)
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<symbol {0!r}>")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_name")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "__name")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_referenced")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__flags")
(PUNCT "&")
(ID "_symtable")
(PUNCT ".")
(ID "USE")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_parameter")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__flags")
(PUNCT "&")
(ID "DEF_PARAM")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_global")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__scope")
(KEYWORD in)
(PUNCT "(")
(ID "GLOBAL_IMPLICIT")
(PUNCT ",")
(ID "GLOBAL_EXPLICIT")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_declared_global")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__scope")
(PUNCT "==")
(ID "GLOBAL_EXPLICIT")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_local")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__flags")
(PUNCT "&")
(ID "DEF_BOUND")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_free")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__scope")
(PUNCT "==")
(ID "FREE")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_imported")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__flags")
(PUNCT "&")
(ID "DEF_IMPORT")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_assigned")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__flags")
(PUNCT "&")
(ID "DEF_LOCAL")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_namespace")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns true if name binding introduces new namespace.\n\n        If the name is used as the target of a function or class\n        statement, this will be true.\n\n        Note that a single name can be bound to multiple objects.  If\n        is_namespace() is true, the name may also be bound to other\n        objects, like an int or list, that does not introduce a new\n        namespace.\n        ")
(NEWLINE)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__namespaces")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_namespaces")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a list of namespaces bound to this name")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "__namespaces")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_namespace")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns the single namespace bound to this name.\n\n        Raises ValueError if the name is bound to multiple namespaces.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__namespaces")
(PUNCT ")")
(PUNCT "!=")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "name is bound to multiple namespaces")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "__namespaces")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "os")
(PUNCT ",")
(ID "sys")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "src")
(PUNCT "=")
(ID "f")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "mod")
(PUNCT "=")
(ID "symtable")
(PUNCT "(")
(ID "src")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ",")
(LIT "exec")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "ident")
(KEYWORD in)
(ID "mod")
(PUNCT ".")
(ID "get_identifiers")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT "=")
(ID "mod")
(PUNCT ".")
(ID "lookup")
(PUNCT "(")
(ID "ident")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "info")
(PUNCT ",")
(ID "info")
(PUNCT ".")
(ID "is_local")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "info")
(PUNCT ".")
(ID "is_namespace")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
