(LIT "Wrapper to the POSIX crypt library call and associated functionality.")
(NEWLINE)
(KEYWORD import)
(ID "_crypt")
(NEWLINE)
(KEYWORD import)
(ID "string")
(KEYWORD as)
(ID "_string")
(NEWLINE)
(KEYWORD from)
(ID "random")
(KEYWORD import)
(ID "SystemRandom")
(KEYWORD as)
(ID "_SystemRandom")
(NEWLINE)
(KEYWORD from)
(ID "collections")
(KEYWORD import)
(ID "namedtuple")
(KEYWORD as)
(ID "_namedtuple")
(NEWLINE)
(ID "_saltchars")
(PUNCT "=")
(ID "_string")
(PUNCT ".")
(ID "ascii_letters")
(PUNCT "+")
(ID "_string")
(PUNCT ".")
(ID "digits")
(PUNCT "+")
(LIT "./")
(NEWLINE)
(ID "_sr")
(PUNCT "=")
(ID "_SystemRandom")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "_Method")
(PUNCT "(")
(ID "_namedtuple")
(PUNCT "(")
(LIT "_Method")
(PUNCT ",")
(LIT "name ident salt_chars total_size")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Class representing a salt method per the Modular Crypt Format or the\n    legacy 2-character crypt method.")
(NEWLINE)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<crypt.METHOD_{}>")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "mksalt")
(PUNCT "(")
(ID "method")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Generate a salt for the specified method.\n\n    If not specified, the strongest available method will be used.\n\n    ")
(NEWLINE)
(KEYWORD if)
(ID "method")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "method")
(PUNCT "=")
(ID "methods")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(LIT "${}$")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "method")
(PUNCT ".")
(ID "ident")
(PUNCT ")")
(KEYWORD if)
(ID "method")
(PUNCT ".")
(ID "ident")
(KEYWORD else)
(LIT "")
(NEWLINE)
(ID "s")
(PUNCT "+=")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "_sr")
(PUNCT ".")
(ID "choice")
(PUNCT "(")
(ID "_saltchars")
(PUNCT ")")
(KEYWORD for)
(ID "char")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "method")
(PUNCT ".")
(ID "salt_chars")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "crypt")
(PUNCT "(")
(ID "word")
(PUNCT ",")
(ID "salt")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a string representing the one-way hash of a password, with a salt\n    prepended.\n\n    If ``salt`` is not specified or is ``None``, the strongest\n    available method will be selected and a salt generated.  Otherwise,\n    ``salt`` may be one of the ``crypt.METHOD_*`` values, or a string as\n    returned by ``crypt.mksalt()``.\n\n    ")
(NEWLINE)
(KEYWORD if)
(ID "salt")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID "isinstance")
(PUNCT "(")
(ID "salt")
(PUNCT ",")
(ID "_Method")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "salt")
(PUNCT "=")
(ID "mksalt")
(PUNCT "(")
(ID "salt")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_crypt")
(PUNCT ".")
(ID "crypt")
(PUNCT "(")
(ID "word")
(PUNCT ",")
(ID "salt")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "METHOD_CRYPT")
(PUNCT "=")
(ID "_Method")
(PUNCT "(")
(LIT "CRYPT")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT 2)
(PUNCT ",")
(LIT 13)
(PUNCT ")")
(NEWLINE)
(ID "METHOD_MD5")
(PUNCT "=")
(ID "_Method")
(PUNCT "(")
(LIT "MD5")
(PUNCT ",")
(LIT "1")
(PUNCT ",")
(LIT 8)
(PUNCT ",")
(LIT 34)
(PUNCT ")")
(NEWLINE)
(ID "METHOD_SHA256")
(PUNCT "=")
(ID "_Method")
(PUNCT "(")
(LIT "SHA256")
(PUNCT ",")
(LIT "5")
(PUNCT ",")
(LIT 16)
(PUNCT ",")
(LIT 63)
(PUNCT ")")
(NEWLINE)
(ID "METHOD_SHA512")
(PUNCT "=")
(ID "_Method")
(PUNCT "(")
(LIT "SHA512")
(PUNCT ",")
(LIT "6")
(PUNCT ",")
(LIT 16)
(PUNCT ",")
(LIT 106)
(PUNCT ")")
(NEWLINE)
(ID "methods")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "_method")
(KEYWORD in)
(PUNCT "(")
(ID "METHOD_SHA512")
(PUNCT ",")
(ID "METHOD_SHA256")
(PUNCT ",")
(ID "METHOD_MD5")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_result")
(PUNCT "=")
(ID "crypt")
(PUNCT "(")
(LIT "")
(PUNCT ",")
(ID "_method")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "_result")
(KEYWORD and)
(ID "len")
(PUNCT "(")
(ID "_result")
(PUNCT ")")
(PUNCT "==")
(ID "_method")
(PUNCT ".")
(ID "total_size")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "methods")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "_method")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "methods")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "METHOD_CRYPT")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "_result")
(PUNCT ",")
(ID "_method")
(NEWLINE)
(ENDMARKER)
