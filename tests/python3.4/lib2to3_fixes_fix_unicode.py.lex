(LIT "Fixer for unicode.\n\n* Changes unicode to str and unichr to chr.\n\n* If \"...\\u...\" is not unicode literal change it into \"...\\\\u...\".\n\n* Change u\"...\" into \"...\".\n\n")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(ID "pgen2")
(KEYWORD import)
(ID "token")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(KEYWORD import)
(ID "fixer_base")
(NEWLINE)
(ID "_mapping")
(PUNCT "=")
(PUNCT "{")
(LIT "unichr")
(PUNCT ":")
(LIT "chr")
(PUNCT ",")
(LIT "unicode")
(PUNCT ":")
(LIT "str")
(PUNCT "}")
(NEWLINE)
(KEYWORD class)
(ID "FixUnicode")
(PUNCT "(")
(ID "fixer_base")
(PUNCT ".")
(ID "BaseFix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "BM_compatible")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "PATTERN")
(PUNCT "=")
(LIT "STRING | 'unicode' | 'unichr'")
(NEWLINE)
(KEYWORD def)
(ID "start_tree")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "tree")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "FixUnicode")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "start_tree")
(PUNCT "(")
(ID "tree")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "unicode_literals")
(PUNCT "=")
(LIT "unicode_literals")
(KEYWORD in)
(ID "tree")
(PUNCT ".")
(ID "future_features")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "transform")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "node")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "token")
(PUNCT ".")
(ID "NAME")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "new")
(PUNCT ".")
(ID "value")
(PUNCT "=")
(ID "_mapping")
(PUNCT "[")
(ID "node")
(PUNCT ".")
(ID "value")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "new")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "node")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "token")
(PUNCT ".")
(ID "STRING")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "val")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "value")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "unicode_literals")
(KEYWORD and)
(ID "val")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(LIT "'\"")
(KEYWORD and)
(LIT "\\")
(KEYWORD in)
(ID "val")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "val")
(PUNCT "=")
(LIT "\\\\")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "[")
(ID "v")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "\\u")
(PUNCT ",")
(LIT "\\\\u")
(PUNCT ")")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "\\U")
(PUNCT ",")
(LIT "\\\\U")
(PUNCT ")")
(KEYWORD for)
(ID "v")
(KEYWORD in)
(ID "val")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "\\\\")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "val")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(LIT "uU")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "val")
(PUNCT "=")
(ID "val")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "val")
(PUNCT "==")
(ID "node")
(PUNCT ".")
(ID "value")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "node")
(NEWLINE)
(DEDENT)
(ID "new")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "new")
(PUNCT ".")
(ID "value")
(PUNCT "=")
(ID "val")
(NEWLINE)
(KEYWORD return)
(ID "new")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ENDMARKER)
