(LIT "Utilities to get a password and/or the current user name.\n\ngetpass(prompt[, stream]) - Prompt for a password, with echo turned off.\ngetuser() - Get the user name from the environment or password database.\n\nGetPassWarning - This UserWarning is issued when getpass() cannot prevent\n                 echoing of the password contents while reading.\n\nOn Windows, the msvcrt module will be used.\nOn the Mac EasyDialogs.AskPassword is used, if available.\n\n")
(NEWLINE)
(KEYWORD import)
(ID "contextlib")
(NEWLINE)
(KEYWORD import)
(ID "io")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "warnings")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "getpass")
(PUNCT ",")
(LIT "getuser")
(PUNCT ",")
(LIT "GetPassWarning")
(PUNCT "]")
(NEWLINE)
(KEYWORD class)
(ID "GetPassWarning")
(PUNCT "(")
(ID "UserWarning")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "unix_getpass")
(PUNCT "(")
(ID "prompt")
(PUNCT "=")
(LIT "Password: ")
(PUNCT ",")
(ID "stream")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Prompt for a password, with echo turned off.\n\n    Args:\n      prompt: Written on stream to ask for the input.  Default: 'Password: '\n      stream: A writable file object to display the prompt.  Defaults to\n              the tty.  If no tty is available defaults to sys.stderr.\n    Returns:\n      The seKr3t input.\n    Raises:\n      EOFError: If our input tty or stdin was closed.\n      GetPassWarning: When we were unable to turn echo off on the input.\n\n    Always restores terminal settings before returning.\n    ")
(NEWLINE)
(ID "passwd")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD with)
(ID "contextlib")
(PUNCT ".")
(ID "ExitStack")
(PUNCT "(")
(PUNCT ")")
(KEYWORD as)
(ID "stack")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(LIT "/dev/tty")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "O_RDWR")
(PUNCT "|")
(ID "os")
(PUNCT ".")
(ID "O_NOCTTY")
(PUNCT ")")
(NEWLINE)
(ID "tty")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "FileIO")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(LIT "w+")
(PUNCT ")")
(NEWLINE)
(ID "stack")
(PUNCT ".")
(ID "enter_context")
(PUNCT "(")
(ID "tty")
(PUNCT ")")
(NEWLINE)
(ID "input")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "TextIOWrapper")
(PUNCT "(")
(ID "tty")
(PUNCT ")")
(NEWLINE)
(ID "stack")
(PUNCT ".")
(ID "enter_context")
(PUNCT "(")
(ID "input")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "stream")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stream")
(PUNCT "=")
(ID "input")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stack")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "AttributeError")
(PUNCT ",")
(ID "ValueError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "passwd")
(PUNCT "=")
(ID "fallback_getpass")
(PUNCT "(")
(ID "prompt")
(PUNCT ",")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "input")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdin")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "stream")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stream")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stderr")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "fd")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "old")
(PUNCT "=")
(ID "termios")
(PUNCT ".")
(ID "tcgetattr")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(ID "new")
(PUNCT "=")
(ID "old")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "new")
(PUNCT "[")
(LIT 3)
(PUNCT "]")
(PUNCT "&=")
(PUNCT "~")
(ID "termios")
(PUNCT ".")
(ID "ECHO")
(NEWLINE)
(ID "tcsetattr_flags")
(PUNCT "=")
(ID "termios")
(PUNCT ".")
(ID "TCSAFLUSH")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "termios")
(PUNCT ",")
(LIT "TCSASOFT")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tcsetattr_flags")
(PUNCT "|=")
(ID "termios")
(PUNCT ".")
(ID "TCSASOFT")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "termios")
(PUNCT ".")
(ID "tcsetattr")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "tcsetattr_flags")
(PUNCT ",")
(ID "new")
(PUNCT ")")
(NEWLINE)
(ID "passwd")
(PUNCT "=")
(ID "_raw_input")
(PUNCT "(")
(ID "prompt")
(PUNCT ",")
(ID "stream")
(PUNCT ",")
(ID "input")
(PUNCT "=")
(ID "input")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "termios")
(PUNCT ".")
(ID "tcsetattr")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "tcsetattr_flags")
(PUNCT ",")
(ID "old")
(PUNCT ")")
(NEWLINE)
(ID "stream")
(PUNCT ".")
(ID "flush")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "termios")
(PUNCT ".")
(ID "error")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "passwd")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "stream")
(KEYWORD is)
(KEYWORD not)
(ID "input")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stack")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "passwd")
(PUNCT "=")
(ID "fallback_getpass")
(PUNCT "(")
(ID "prompt")
(PUNCT ",")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "stream")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "passwd")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "win_getpass")
(PUNCT "(")
(ID "prompt")
(PUNCT "=")
(LIT "Password: ")
(PUNCT ",")
(ID "stream")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Prompt for password with echo off, using Windows getch().")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "stdin")
(KEYWORD is)
(KEYWORD not)
(ID "sys")
(PUNCT ".")
(ID "__stdin__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "fallback_getpass")
(PUNCT "(")
(ID "prompt")
(PUNCT ",")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD import)
(ID "msvcrt")
(NEWLINE)
(KEYWORD for)
(ID "c")
(KEYWORD in)
(ID "prompt")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msvcrt")
(PUNCT ".")
(ID "putwch")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "pw")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "msvcrt")
(PUNCT ".")
(ID "getwch")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "c")
(PUNCT "==")
(LIT "\r")
(KEYWORD or)
(ID "c")
(PUNCT "==")
(LIT "\n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "c")
(PUNCT "==")
(LIT "\u0003")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyboardInterrupt")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "c")
(PUNCT "==")
(LIT "\b")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pw")
(PUNCT "=")
(ID "pw")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pw")
(PUNCT "=")
(ID "pw")
(PUNCT "+")
(ID "c")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "msvcrt")
(PUNCT ".")
(ID "putwch")
(PUNCT "(")
(LIT "\r")
(PUNCT ")")
(NEWLINE)
(ID "msvcrt")
(PUNCT ".")
(ID "putwch")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "pw")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "fallback_getpass")
(PUNCT "(")
(ID "prompt")
(PUNCT "=")
(LIT "Password: ")
(PUNCT ",")
(ID "stream")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "Can not control echo on the terminal.")
(PUNCT ",")
(ID "GetPassWarning")
(PUNCT ",")
(ID "stacklevel")
(PUNCT "=")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "stream")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stream")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stderr")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(LIT "Warning: Password input may be echoed.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "_raw_input")
(PUNCT "(")
(ID "prompt")
(PUNCT ",")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_raw_input")
(PUNCT "(")
(ID "prompt")
(PUNCT "=")
(LIT "")
(PUNCT ",")
(ID "stream")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "input")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "stream")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stream")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stderr")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "input")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "input")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdin")
(NEWLINE)
(DEDENT)
(ID "prompt")
(PUNCT "=")
(ID "str")
(PUNCT "(")
(ID "prompt")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "prompt")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stream")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "prompt")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "UnicodeEncodeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "prompt")
(PUNCT "=")
(ID "prompt")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(ID "stream")
(PUNCT ".")
(ID "encoding")
(PUNCT ",")
(LIT "replace")
(PUNCT ")")
(NEWLINE)
(ID "prompt")
(PUNCT "=")
(ID "prompt")
(PUNCT ".")
(ID "decode")
(PUNCT "(")
(ID "stream")
(PUNCT ".")
(ID "encoding")
(PUNCT ")")
(NEWLINE)
(ID "stream")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "prompt")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "stream")
(PUNCT ".")
(ID "flush")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "line")
(PUNCT "=")
(ID "input")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "EOFError")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "line")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "\n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "line")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getuser")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Get the username from the environment or password database.\n\n    First try various environment variables, then the password\n    database.  This works on Windows as long as USERNAME is set.\n\n    ")
(NEWLINE)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(PUNCT "(")
(LIT "LOGNAME")
(PUNCT ",")
(LIT "USER")
(PUNCT ",")
(LIT "LNAME")
(PUNCT ",")
(LIT "USERNAME")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "user")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "user")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "user")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD import)
(ID "pwd")
(NEWLINE)
(KEYWORD return)
(ID "pwd")
(PUNCT ".")
(ID "getpwuid")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "getuid")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "termios")
(NEWLINE)
(ID "termios")
(PUNCT ".")
(ID "tcgetattr")
(PUNCT ",")
(ID "termios")
(PUNCT ".")
(ID "tcsetattr")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "ImportError")
(PUNCT ",")
(ID "AttributeError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "msvcrt")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "getpass")
(PUNCT "=")
(ID "fallback_getpass")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "getpass")
(PUNCT "=")
(ID "win_getpass")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "getpass")
(PUNCT "=")
(ID "unix_getpass")
(NEWLINE)
(DEDENT)
(ENDMARKER)
