(LIT "Selectors module.\n\nThis module allows high-level and efficient I/O multiplexing, built upon the\n`select` module primitives.\n")
(NEWLINE)
(KEYWORD from)
(ID "abc")
(KEYWORD import)
(ID "ABCMeta")
(PUNCT ",")
(ID "abstractmethod")
(NEWLINE)
(KEYWORD from)
(ID "collections")
(KEYWORD import)
(ID "namedtuple")
(PUNCT ",")
(ID "Mapping")
(NEWLINE)
(KEYWORD import)
(ID "math")
(NEWLINE)
(KEYWORD import)
(ID "select")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(ID "EVENT_READ")
(PUNCT "=")
(PUNCT "(")
(LIT 1)
(PUNCT "<<")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "EVENT_WRITE")
(PUNCT "=")
(PUNCT "(")
(LIT 1)
(PUNCT "<<")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "_fileobj_to_fd")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a file descriptor from a file object.\n\n    Parameters:\n    fileobj -- file object or file descriptor\n\n    Returns:\n    corresponding file descriptor\n\n    Raises:\n    ValueError if the object is invalid\n    ")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "fileobj")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "fileobj")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "fileobj")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "AttributeError")
(PUNCT ",")
(ID "TypeError")
(PUNCT ",")
(ID "ValueError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Invalid file object: ")
(LIT "{!r}")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(PUNCT ")")
(KEYWORD from)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "fd")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Invalid file descriptor: {}")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "fd")
(NEWLINE)
(DEDENT)
(ID "SelectorKey")
(PUNCT "=")
(ID "namedtuple")
(PUNCT "(")
(LIT "SelectorKey")
(PUNCT ",")
(PUNCT "[")
(LIT "fileobj")
(PUNCT ",")
(LIT "fd")
(PUNCT ",")
(LIT "events")
(PUNCT ",")
(LIT "data")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(LIT "Object used to associate a file object to its backing file descriptor,\nselected event mask and attached data.")
(NEWLINE)
(KEYWORD class)
(ID "_SelectorMapping")
(PUNCT "(")
(ID "Mapping")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Mapping of file objects to selector keys.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "selector")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT "=")
(ID "selector")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__len__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "_fd_to_key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "_fileobj_lookup")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "_fd_to_key")
(PUNCT "[")
(ID "fd")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(LIT "{!r} is not registered")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(PUNCT ")")
(KEYWORD from)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__iter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "iter")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "_fd_to_key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "BaseSelector")
(PUNCT "(")
(ID "metaclass")
(PUNCT "=")
(ID "ABCMeta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Selector abstract base class.\n\n    A selector supports registering file objects to be monitored for specific\n    I/O events.\n\n    A file object is a file descriptor or any object with a `fileno()` method.\n    An arbitrary object can be attached to the file object, which can be used\n    for example to store context information, a callback, etc.\n\n    A selector can use various implementations (select(), poll(), epoll()...)\n    depending on the platform. The default `Selector` class uses the most\n    efficient implementation on the current platform.\n    ")
(NEWLINE)
(PUNCT "@")
(ID "abstractmethod")
(NEWLINE)
(KEYWORD def)
(ID "register")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Register a file object.\n\n        Parameters:\n        fileobj -- file object or file descriptor\n        events  -- events to monitor (bitwise mask of EVENT_READ|EVENT_WRITE)\n        data    -- attached data\n\n        Returns:\n        SelectorKey instance\n\n        Raises:\n        ValueError if events is invalid\n        KeyError if fileobj is already registered\n        OSError if fileobj is closed or otherwise is unacceptable to\n                the underlying system call (if a system call is made)\n\n        Note:\n        OSError may or may not be raised\n        ")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "abstractmethod")
(NEWLINE)
(KEYWORD def)
(ID "unregister")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Unregister a file object.\n\n        Parameters:\n        fileobj -- file object or file descriptor\n\n        Returns:\n        SelectorKey instance\n\n        Raises:\n        KeyError if fileobj is not registered\n\n        Note:\n        If fileobj is registered but has since been closed this does\n        *not* raise OSError (even if the wrapped syscall does)\n        ")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "modify")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Change a registered file object monitored events or attached data.\n\n        Parameters:\n        fileobj -- file object or file descriptor\n        events  -- events to monitor (bitwise mask of EVENT_READ|EVENT_WRITE)\n        data    -- attached data\n\n        Returns:\n        SelectorKey instance\n\n        Raises:\n        Anything that unregister() or register() raises\n        ")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "unregister")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "fileobj")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "abstractmethod")
(NEWLINE)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Perform the actual selection, until some monitored file objects are\n        ready or a timeout expires.\n\n        Parameters:\n        timeout -- if timeout > 0, this specifies the maximum wait time, in\n                   seconds\n                   if timeout <= 0, the select() call won't block, and will\n                   report the currently ready file objects\n                   if timeout is None, select() will block until a monitored\n                   file object becomes ready\n\n        Returns:\n        list of (key, events) for ready file objects\n        `events` is a bitwise mask of EVENT_READ|EVENT_WRITE\n        ")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Close the selector.\n\n        This must be called to make sure that any underlying resource is freed.\n        ")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_key")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the key associated to a registered file object.\n\n        Returns:\n        SelectorKey for this file object\n        ")
(NEWLINE)
(ID "mapping")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_map")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "mapping")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "mapping")
(PUNCT "[")
(ID "fileobj")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(LIT "{!r} is not registered")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(PUNCT ")")
(KEYWORD from)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(PUNCT "@")
(ID "abstractmethod")
(NEWLINE)
(KEYWORD def)
(ID "get_map")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a mapping of file objects to selector keys.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__enter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__exit__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_BaseSelectorImpl")
(PUNCT "(")
(ID "BaseSelector")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Base selector implementation.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_fd_to_key")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_map")
(PUNCT "=")
(ID "_SelectorMapping")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_fileobj_lookup")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a file descriptor from a file object.\n\n        This wraps _fileobj_to_fd() to do an exhaustive search in case\n        the object is invalid but we still have it in our map.  This\n        is used by unregister() so we can unregister an object that\n        was previously registered even if it is closed.  It is also\n        used by _SelectorMapping.\n        ")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_fileobj_to_fd")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_fd_to_key")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "key")
(PUNCT ".")
(ID "fileobj")
(KEYWORD is)
(ID "fileobj")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "key")
(PUNCT ".")
(ID "fd")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "register")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(KEYWORD not)
(ID "events")
(PUNCT ")")
(KEYWORD or)
(PUNCT "(")
(ID "events")
(PUNCT "&")
(PUNCT "~")
(PUNCT "(")
(ID "EVENT_READ")
(PUNCT "|")
(ID "EVENT_WRITE")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Invalid events: {!r}")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "events")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "key")
(PUNCT "=")
(ID "SelectorKey")
(PUNCT "(")
(ID "fileobj")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_fileobj_lookup")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "key")
(PUNCT ".")
(ID "fd")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_fd_to_key")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(LIT "{!r} (FD {}) is already registered")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "fileobj")
(PUNCT ",")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_fd_to_key")
(PUNCT "[")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT "]")
(PUNCT "=")
(ID "key")
(NEWLINE)
(KEYWORD return)
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "unregister")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_fd_to_key")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_fileobj_lookup")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(LIT "{!r} is not registered")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(PUNCT ")")
(KEYWORD from)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "modify")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_fd_to_key")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_fileobj_lookup")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(LIT "{!r} is not registered")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(PUNCT ")")
(KEYWORD from)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "events")
(PUNCT "!=")
(ID "key")
(PUNCT ".")
(ID "events")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "unregister")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(NEWLINE)
(ID "key")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "fileobj")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "data")
(PUNCT "!=")
(ID "key")
(PUNCT ".")
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "key")
(PUNCT ".")
(ID "_replace")
(PUNCT "(")
(ID "data")
(PUNCT "=")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_fd_to_key")
(PUNCT "[")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT "]")
(PUNCT "=")
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_fd_to_key")
(PUNCT ".")
(ID "clear")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_map")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_map")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_map")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_key_from_fd")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fd")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the key associated to a given file descriptor.\n\n        Parameters:\n        fd -- file descriptor\n\n        Returns:\n        corresponding key, or None if not found\n        ")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_fd_to_key")
(PUNCT "[")
(ID "fd")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "SelectSelector")
(PUNCT "(")
(ID "_BaseSelectorImpl")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Select-based selector.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_readers")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_writers")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "register")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "fileobj")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "events")
(PUNCT "&")
(ID "EVENT_READ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_readers")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "events")
(PUNCT "&")
(ID "EVENT_WRITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_writers")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "unregister")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "unregister")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_readers")
(PUNCT ".")
(ID "discard")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_writers")
(PUNCT ".")
(ID "discard")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "_select")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "r")
(PUNCT ",")
(ID "w")
(PUNCT ",")
(ID "_")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "r")
(PUNCT ",")
(ID "w")
(PUNCT ",")
(ID "x")
(PUNCT "=")
(ID "select")
(PUNCT ".")
(ID "select")
(PUNCT "(")
(ID "r")
(PUNCT ",")
(ID "w")
(PUNCT ",")
(ID "w")
(PUNCT ",")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "r")
(PUNCT ",")
(ID "w")
(PUNCT "+")
(ID "x")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_select")
(PUNCT "=")
(ID "select")
(PUNCT ".")
(ID "select")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(KEYWORD if)
(ID "timeout")
(KEYWORD is)
(KEYWORD None)
(KEYWORD else)
(ID "max")
(PUNCT "(")
(ID "timeout")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "ready")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "r")
(PUNCT ",")
(ID "w")
(PUNCT ",")
(ID "_")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_select")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_readers")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_writers")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "InterruptedError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "ready")
(NEWLINE)
(DEDENT)
(ID "r")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "r")
(PUNCT ")")
(NEWLINE)
(ID "w")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "w")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "fd")
(KEYWORD in)
(ID "r")
(PUNCT "|")
(ID "w")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "events")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "fd")
(KEYWORD in)
(ID "r")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "events")
(PUNCT "|=")
(ID "EVENT_READ")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "fd")
(KEYWORD in)
(ID "w")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "events")
(PUNCT "|=")
(ID "EVENT_WRITE")
(NEWLINE)
(DEDENT)
(ID "key")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_key_from_fd")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "key")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ready")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "events")
(PUNCT "&")
(ID "key")
(PUNCT ".")
(ID "events")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "ready")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "select")
(PUNCT ",")
(LIT "poll")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD class)
(ID "PollSelector")
(PUNCT "(")
(ID "_BaseSelectorImpl")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Poll-based selector.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_poll")
(PUNCT "=")
(ID "select")
(PUNCT ".")
(ID "poll")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "register")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "fileobj")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "poll_events")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "events")
(PUNCT "&")
(ID "EVENT_READ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "poll_events")
(PUNCT "|=")
(ID "select")
(PUNCT ".")
(ID "POLLIN")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "events")
(PUNCT "&")
(ID "EVENT_WRITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "poll_events")
(PUNCT "|=")
(ID "select")
(PUNCT ".")
(ID "POLLOUT")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_poll")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT ",")
(ID "poll_events")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "unregister")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "unregister")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_poll")
(PUNCT ".")
(ID "unregister")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "timeout")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "timeout")
(PUNCT "<=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "timeout")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "timeout")
(PUNCT "=")
(ID "math")
(PUNCT ".")
(ID "ceil")
(PUNCT "(")
(ID "timeout")
(PUNCT "*")
(LIT 1000.0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "ready")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd_event_list")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_poll")
(PUNCT ".")
(ID "poll")
(PUNCT "(")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "InterruptedError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "ready")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "fd")
(PUNCT ",")
(ID "event")
(KEYWORD in)
(ID "fd_event_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "events")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "event")
(PUNCT "&")
(PUNCT "~")
(ID "select")
(PUNCT ".")
(ID "POLLIN")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "events")
(PUNCT "|=")
(ID "EVENT_WRITE")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "event")
(PUNCT "&")
(PUNCT "~")
(ID "select")
(PUNCT ".")
(ID "POLLOUT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "events")
(PUNCT "|=")
(ID "EVENT_READ")
(NEWLINE)
(DEDENT)
(ID "key")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_key_from_fd")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "key")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ready")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "events")
(PUNCT "&")
(ID "key")
(PUNCT ".")
(ID "events")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "ready")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "select")
(PUNCT ",")
(LIT "epoll")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD class)
(ID "EpollSelector")
(PUNCT "(")
(ID "_BaseSelectorImpl")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Epoll-based selector.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_epoll")
(PUNCT "=")
(ID "select")
(PUNCT ".")
(ID "epoll")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "fileno")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_epoll")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "register")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "fileobj")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "epoll_events")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "events")
(PUNCT "&")
(ID "EVENT_READ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "epoll_events")
(PUNCT "|=")
(ID "select")
(PUNCT ".")
(ID "EPOLLIN")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "events")
(PUNCT "&")
(ID "EVENT_WRITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "epoll_events")
(PUNCT "|=")
(ID "select")
(PUNCT ".")
(ID "EPOLLOUT")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_epoll")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT ",")
(ID "epoll_events")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "unregister")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "unregister")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_epoll")
(PUNCT ".")
(ID "unregister")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "timeout")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "timeout")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "timeout")
(PUNCT "<=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "timeout")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "timeout")
(PUNCT "=")
(ID "math")
(PUNCT ".")
(ID "ceil")
(PUNCT "(")
(ID "timeout")
(PUNCT "*")
(LIT 1000.0)
(PUNCT ")")
(PUNCT "*")
(LIT 0.001)
(NEWLINE)
(DEDENT)
(ID "max_ev")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_fd_to_key")
(PUNCT ")")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "ready")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd_event_list")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_epoll")
(PUNCT ".")
(ID "poll")
(PUNCT "(")
(ID "timeout")
(PUNCT ",")
(ID "max_ev")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "InterruptedError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "ready")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "fd")
(PUNCT ",")
(ID "event")
(KEYWORD in)
(ID "fd_event_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "events")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "event")
(PUNCT "&")
(PUNCT "~")
(ID "select")
(PUNCT ".")
(ID "EPOLLIN")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "events")
(PUNCT "|=")
(ID "EVENT_WRITE")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "event")
(PUNCT "&")
(PUNCT "~")
(ID "select")
(PUNCT ".")
(ID "EPOLLOUT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "events")
(PUNCT "|=")
(ID "EVENT_READ")
(NEWLINE)
(DEDENT)
(ID "key")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_key_from_fd")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "key")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ready")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "events")
(PUNCT "&")
(ID "key")
(PUNCT ".")
(ID "events")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "ready")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_epoll")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "select")
(PUNCT ",")
(LIT "kqueue")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD class)
(ID "KqueueSelector")
(PUNCT "(")
(ID "_BaseSelectorImpl")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Kqueue-based selector.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_kqueue")
(PUNCT "=")
(ID "select")
(PUNCT ".")
(ID "kqueue")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "fileno")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_kqueue")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "register")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "fileobj")
(PUNCT ",")
(ID "events")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "events")
(PUNCT "&")
(ID "EVENT_READ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kev")
(PUNCT "=")
(ID "select")
(PUNCT ".")
(ID "kevent")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT ",")
(ID "select")
(PUNCT ".")
(ID "KQ_FILTER_READ")
(PUNCT ",")
(ID "select")
(PUNCT ".")
(ID "KQ_EV_ADD")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_kqueue")
(PUNCT ".")
(ID "control")
(PUNCT "(")
(PUNCT "[")
(ID "kev")
(PUNCT "]")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "events")
(PUNCT "&")
(ID "EVENT_WRITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kev")
(PUNCT "=")
(ID "select")
(PUNCT ".")
(ID "kevent")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT ",")
(ID "select")
(PUNCT ".")
(ID "KQ_FILTER_WRITE")
(PUNCT ",")
(ID "select")
(PUNCT ".")
(ID "KQ_EV_ADD")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_kqueue")
(PUNCT ".")
(ID "control")
(PUNCT "(")
(PUNCT "[")
(ID "kev")
(PUNCT "]")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "unregister")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fileobj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "unregister")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "key")
(PUNCT ".")
(ID "events")
(PUNCT "&")
(ID "EVENT_READ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kev")
(PUNCT "=")
(ID "select")
(PUNCT ".")
(ID "kevent")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT ",")
(ID "select")
(PUNCT ".")
(ID "KQ_FILTER_READ")
(PUNCT ",")
(ID "select")
(PUNCT ".")
(ID "KQ_EV_DELETE")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_kqueue")
(PUNCT ".")
(ID "control")
(PUNCT "(")
(PUNCT "[")
(ID "kev")
(PUNCT "]")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "key")
(PUNCT ".")
(ID "events")
(PUNCT "&")
(ID "EVENT_WRITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kev")
(PUNCT "=")
(ID "select")
(PUNCT ".")
(ID "kevent")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "fd")
(PUNCT ",")
(ID "select")
(PUNCT ".")
(ID "KQ_FILTER_WRITE")
(PUNCT ",")
(ID "select")
(PUNCT ".")
(ID "KQ_EV_DELETE")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_kqueue")
(PUNCT ".")
(ID "control")
(PUNCT "(")
(PUNCT "[")
(ID "kev")
(PUNCT "]")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(KEYWORD if)
(ID "timeout")
(KEYWORD is)
(KEYWORD None)
(KEYWORD else)
(ID "max")
(PUNCT "(")
(ID "timeout")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "max_ev")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_fd_to_key")
(PUNCT ")")
(NEWLINE)
(ID "ready")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kev_list")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_kqueue")
(PUNCT ".")
(ID "control")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(ID "max_ev")
(PUNCT ",")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "InterruptedError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "ready")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "kev")
(KEYWORD in)
(ID "kev_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "kev")
(PUNCT ".")
(ID "ident")
(NEWLINE)
(ID "flag")
(PUNCT "=")
(ID "kev")
(PUNCT ".")
(ID "filter")
(NEWLINE)
(ID "events")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "flag")
(PUNCT "==")
(ID "select")
(PUNCT ".")
(ID "KQ_FILTER_READ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "events")
(PUNCT "|=")
(ID "EVENT_READ")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "flag")
(PUNCT "==")
(ID "select")
(PUNCT ".")
(ID "KQ_FILTER_WRITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "events")
(PUNCT "|=")
(ID "EVENT_WRITE")
(NEWLINE)
(DEDENT)
(ID "key")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_key_from_fd")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "key")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ready")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "events")
(PUNCT "&")
(ID "key")
(PUNCT ".")
(ID "events")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "ready")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_kqueue")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(LIT "KqueueSelector")
(KEYWORD in)
(ID "globals")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "DefaultSelector")
(PUNCT "=")
(ID "KqueueSelector")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(LIT "EpollSelector")
(KEYWORD in)
(ID "globals")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "DefaultSelector")
(PUNCT "=")
(ID "EpollSelector")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(LIT "PollSelector")
(KEYWORD in)
(ID "globals")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "DefaultSelector")
(PUNCT "=")
(ID "PollSelector")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "DefaultSelector")
(PUNCT "=")
(ID "SelectSelector")
(NEWLINE)
(DEDENT)
(ENDMARKER)
