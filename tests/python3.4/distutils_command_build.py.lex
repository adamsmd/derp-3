(LIT "distutils.command.build\n\nImplements the Distutils 'build' command.")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(PUNCT ",")
(ID "os")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "core")
(KEYWORD import)
(ID "Command")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "errors")
(KEYWORD import)
(ID "DistutilsOptionError")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "util")
(KEYWORD import)
(ID "get_platform")
(NEWLINE)
(KEYWORD def)
(ID "show_compilers")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "ccompiler")
(KEYWORD import)
(ID "show_compilers")
(NEWLINE)
(ID "show_compilers")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "build")
(PUNCT "(")
(ID "Command")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "description")
(PUNCT "=")
(LIT "build everything needed to install")
(NEWLINE)
(ID "user_options")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(LIT "build-base=")
(PUNCT ",")
(LIT "b")
(PUNCT ",")
(LIT "base directory for build library")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build-purelib=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "build directory for platform-neutral distributions")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build-platlib=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "build directory for platform-specific distributions")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build-lib=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "build directory for all distribution (defaults to either ")
(PUNCT "+")
(LIT "build-purelib or build-platlib")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build-scripts=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "build directory for scripts")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build-temp=")
(PUNCT ",")
(LIT "t")
(PUNCT ",")
(LIT "temporary build directory")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "plat-name=")
(PUNCT ",")
(LIT "p")
(PUNCT ",")
(LIT "platform name to build for, if supported ")
(LIT "(default: %s)")
(PUNCT "%")
(ID "get_platform")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "compiler=")
(PUNCT ",")
(LIT "c")
(PUNCT ",")
(LIT "specify the compiler type")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "debug")
(PUNCT ",")
(LIT "g")
(PUNCT ",")
(LIT "compile extensions and libraries with debugging information")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "force")
(PUNCT ",")
(LIT "f")
(PUNCT ",")
(LIT "forcibly build everything (ignore file timestamps)")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "executable=")
(PUNCT ",")
(LIT "e")
(PUNCT ",")
(LIT "specify final destination interpreter path (build.py)")
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(ID "boolean_options")
(PUNCT "=")
(PUNCT "[")
(LIT "debug")
(PUNCT ",")
(LIT "force")
(PUNCT "]")
(NEWLINE)
(ID "help_options")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(LIT "help-compiler")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "list available compilers")
(PUNCT ",")
(ID "show_compilers")
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "initialize_options")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "build_base")
(PUNCT "=")
(LIT "build")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "build_purelib")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "build_platlib")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "build_lib")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "build_temp")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "build_scripts")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "compiler")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "plat_name")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "force")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "executable")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "finalize_options")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "plat_name")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "plat_name")
(PUNCT "=")
(ID "get_platform")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "name")
(PUNCT "!=")
(LIT "nt")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsOptionError")
(PUNCT "(")
(LIT "--plat-name only supported on Windows (try ")
(LIT "using './configure --help' on your platform)")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "plat_specifier")
(PUNCT "=")
(LIT ".%s-%s")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "plat_name")
(PUNCT ",")
(ID "sys")
(PUNCT ".")
(ID "version")
(PUNCT "[")
(LIT 0)
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "sys")
(PUNCT ",")
(LIT "gettotalrefcount")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "plat_specifier")
(PUNCT "+=")
(LIT "-pydebug")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "build_purelib")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "build_purelib")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "build_base")
(PUNCT ",")
(LIT "lib")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "build_platlib")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "build_platlib")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "build_base")
(PUNCT ",")
(LIT "lib")
(PUNCT "+")
(ID "plat_specifier")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "build_lib")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "ext_modules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "build_lib")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "build_platlib")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "build_lib")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "build_purelib")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "build_temp")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "build_temp")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "build_base")
(PUNCT ",")
(LIT "temp")
(PUNCT "+")
(ID "plat_specifier")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "build_scripts")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "build_scripts")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "build_base")
(PUNCT ",")
(LIT "scripts-")
(PUNCT "+")
(ID "sys")
(PUNCT ".")
(ID "version")
(PUNCT "[")
(LIT 0)
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "executable")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "executable")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normpath")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "executable")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "run")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "cmd_name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "get_sub_commands")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "run_command")
(PUNCT "(")
(ID "cmd_name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "has_pure_modules")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "has_pure_modules")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "has_c_libraries")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "has_c_libraries")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "has_ext_modules")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "has_ext_modules")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "has_scripts")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "has_scripts")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "sub_commands")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(LIT "build_py")
(PUNCT ",")
(ID "has_pure_modules")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build_clib")
(PUNCT ",")
(ID "has_c_libraries")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build_ext")
(PUNCT ",")
(ID "has_ext_modules")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build_scripts")
(PUNCT ",")
(ID "has_scripts")
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ENDMARKER)
