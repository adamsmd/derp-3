(LIT "Class for printing reports on profiled python code.")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "time")
(NEWLINE)
(KEYWORD import)
(ID "marshal")
(NEWLINE)
(KEYWORD import)
(ID "re")
(NEWLINE)
(KEYWORD from)
(ID "functools")
(KEYWORD import)
(ID "cmp_to_key")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "Stats")
(PUNCT "]")
(NEWLINE)
(KEYWORD class)
(ID "Stats")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "This class is used for creating reports from data generated by the\n    Profile class.  It is a \"friend\" of that class, and imports data either\n    by direct access to members of Profile class, or by reading in a dictionary\n    that was emitted (via marshal) from the Profile class.\n\n    The big change from the previous Profiler (in terms of raw functionality)\n    is that an \"add()\" method has been provided to combine Stats from\n    several distinct profile runs.  Both the constructor and the add()\n    method now take arbitrarily many file names as arguments.\n\n    All the print methods now take an argument that indicates how many lines\n    to print.  If the arg is a floating point number between 0 and 1.0, then\n    it is taken as a decimal percentage of the available lines to be printed\n    (e.g., .1 means print 10% of all available lines).  If it is an integer,\n    it is taken to mean the number of lines of data that you wish to have\n    printed.\n\n    The sort_stats() method now processes some additional options (i.e., in\n    addition to the old -1, 0, 1, or 2).  It takes an arbitrary number of\n    quoted strings to select the sort order.  For example sort_stats('time',\n    'name') sorts on the major key of 'internal function time', and on the\n    minor key of 'the name of the function'.  Look at the two tables in\n    sort_stats() and get_sort_arg_defs(self) for more examples.\n\n    All methods return self, so you can string together commands like:\n        Stats('foo', 'goo').strip_dirs().sort_stats('calls').                            print_stats(5).print_callers(5)\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(ID "stream")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT "=")
(ID "stream")
(KEYWORD or)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "arg")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "arg")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "args")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "init")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "init")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "all_callees")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "files")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fcn_list")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "total_tt")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "total_calls")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "prim_calls")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "max_name_len")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "top_level")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "sort_arg_dict")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "load_stats")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "get_top_level_stats")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Invalid timing data %s")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "files")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "files")
(KEYWORD else)
(LIT "")
(PUNCT ")")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "load_stats")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "arg")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "arg")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "arg")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT "=")
(ID "marshal")
(PUNCT ".")
(ID "load")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "file_stats")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(ID "arg")
(PUNCT "=")
(ID "time")
(PUNCT ".")
(ID "ctime")
(PUNCT "(")
(ID "file_stats")
(PUNCT ".")
(ID "st_mtime")
(PUNCT ")")
(PUNCT "+")
(LIT "    ")
(PUNCT "+")
(ID "arg")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "files")
(PUNCT "=")
(PUNCT "[")
(ID "arg")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "hasattr")
(PUNCT "(")
(ID "arg")
(PUNCT ",")
(LIT "create_stats")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "arg")
(PUNCT ".")
(ID "create_stats")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT "=")
(ID "arg")
(PUNCT ".")
(ID "stats")
(NEWLINE)
(ID "arg")
(PUNCT ".")
(ID "stats")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "Cannot create or construct a %r object from %r")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_top_level_stats")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "func")
(PUNCT ",")
(PUNCT "(")
(ID "cc")
(PUNCT ",")
(ID "nc")
(PUNCT ",")
(ID "tt")
(PUNCT ",")
(ID "ct")
(PUNCT ",")
(ID "callers")
(PUNCT ")")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "total_calls")
(PUNCT "+=")
(ID "nc")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "prim_calls")
(PUNCT "+=")
(ID "cc")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "total_tt")
(PUNCT "+=")
(ID "tt")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(LIT "jprofile")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(LIT "profiler")
(PUNCT ")")
(KEYWORD in)
(ID "callers")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "top_level")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "func_std_string")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(PUNCT ")")
(PUNCT ">")
(ID "self")
(PUNCT ".")
(ID "max_name_len")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "max_name_len")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "func_std_string")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "add")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "arg_list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "arg_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "item")
(KEYWORD in)
(ID "reversed")
(PUNCT "(")
(ID "arg_list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "type")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT "!=")
(ID "type")
(PUNCT "(")
(ID "item")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "item")
(PUNCT "=")
(ID "Stats")
(PUNCT "(")
(ID "item")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "files")
(PUNCT "+=")
(ID "item")
(PUNCT ".")
(ID "files")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "total_calls")
(PUNCT "+=")
(ID "item")
(PUNCT ".")
(ID "total_calls")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "prim_calls")
(PUNCT "+=")
(ID "item")
(PUNCT ".")
(ID "prim_calls")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "total_tt")
(PUNCT "+=")
(ID "item")
(PUNCT ".")
(ID "total_tt")
(NEWLINE)
(KEYWORD for)
(ID "func")
(KEYWORD in)
(ID "item")
(PUNCT ".")
(ID "top_level")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "top_level")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "max_name_len")
(PUNCT "<")
(ID "item")
(PUNCT ".")
(ID "max_name_len")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "max_name_len")
(PUNCT "=")
(ID "item")
(PUNCT ".")
(ID "max_name_len")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "fcn_list")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD for)
(ID "func")
(PUNCT ",")
(ID "stat")
(KEYWORD in)
(ID "item")
(PUNCT ".")
(ID "stats")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "func")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "old_func_stat")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "old_func_stat")
(PUNCT "=")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(PUNCT "=")
(ID "add_func_stats")
(PUNCT "(")
(ID "old_func_stat")
(PUNCT ",")
(ID "stat")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dump_stats")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Write the profile data to a file we know how to load back.")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(LIT "wb")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "marshal")
(PUNCT ".")
(ID "dump")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "sort_arg_dict_default")
(PUNCT "=")
(PUNCT "{")
(LIT "calls")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(LIT "call count")
(PUNCT ")")
(PUNCT ",")
(LIT "ncalls")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(LIT "call count")
(PUNCT ")")
(PUNCT ",")
(LIT "cumtime")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(LIT 3)
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(LIT "cumulative time")
(PUNCT ")")
(PUNCT ",")
(LIT "cumulative")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(LIT 3)
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(LIT "cumulative time")
(PUNCT ")")
(PUNCT ",")
(LIT "file")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(LIT "file name")
(PUNCT ")")
(PUNCT ",")
(LIT "filename")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(LIT "file name")
(PUNCT ")")
(PUNCT ",")
(LIT "line")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(LIT 5)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(LIT "line number")
(PUNCT ")")
(PUNCT ",")
(LIT "module")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(LIT "file name")
(PUNCT ")")
(PUNCT ",")
(LIT "name")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(LIT 6)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(LIT "function name")
(PUNCT ")")
(PUNCT ",")
(LIT "nfl")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(LIT 6)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT 5)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(LIT "name/file/line")
(PUNCT ")")
(PUNCT ",")
(LIT "pcalls")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(LIT "primitive call count")
(PUNCT ")")
(PUNCT ",")
(LIT "stdname")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(LIT 7)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(LIT "standard name")
(PUNCT ")")
(PUNCT ",")
(LIT "time")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(LIT "internal time")
(PUNCT ")")
(PUNCT ",")
(LIT "tottime")
(PUNCT ":")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(LIT "internal time")
(PUNCT ")")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "get_sort_arg_defs")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Expand all abbreviations that are unique.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "sort_arg_dict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "sort_arg_dict")
(PUNCT "=")
(ID "dict")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "bad_list")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "word")
(PUNCT ",")
(ID "tup")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "sort_arg_dict_default")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fragment")
(PUNCT "=")
(ID "word")
(NEWLINE)
(KEYWORD while)
(ID "fragment")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "fragment")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "fragment")
(KEYWORD in)
(ID "dict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bad_list")
(PUNCT "[")
(ID "fragment")
(PUNCT "]")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "dict")
(PUNCT "[")
(ID "fragment")
(PUNCT "]")
(PUNCT "=")
(ID "tup")
(NEWLINE)
(ID "fragment")
(PUNCT "=")
(ID "fragment")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "word")
(KEYWORD in)
(ID "bad_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "dict")
(PUNCT "[")
(ID "word")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "sort_arg_dict")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "sort_stats")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "field")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "field")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "fcn_list")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "field")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(KEYWORD and)
(ID "isinstance")
(PUNCT "(")
(ID "field")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "field")
(PUNCT "=")
(PUNCT "[")
(PUNCT "{")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(LIT "stdname")
(PUNCT ",")
(LIT 0)
(PUNCT ":")
(LIT "calls")
(PUNCT ",")
(LIT 1)
(PUNCT ":")
(LIT "time")
(PUNCT ",")
(LIT 2)
(PUNCT ":")
(LIT "cumulative")
(PUNCT "}")
(PUNCT "[")
(ID "field")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "]")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "sort_arg_defs")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_sort_arg_defs")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "sort_tuple")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "sort_type")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "connector")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD for)
(ID "word")
(KEYWORD in)
(ID "field")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sort_tuple")
(PUNCT "=")
(ID "sort_tuple")
(PUNCT "+")
(ID "sort_arg_defs")
(PUNCT "[")
(ID "word")
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "sort_type")
(PUNCT "+=")
(ID "connector")
(PUNCT "+")
(ID "sort_arg_defs")
(PUNCT "[")
(ID "word")
(PUNCT "]")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "connector")
(PUNCT "=")
(LIT ", ")
(NEWLINE)
(DEDENT)
(ID "stats_list")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "func")
(PUNCT ",")
(PUNCT "(")
(ID "cc")
(PUNCT ",")
(ID "nc")
(PUNCT ",")
(ID "tt")
(PUNCT ",")
(ID "ct")
(PUNCT ",")
(ID "callers")
(PUNCT ")")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stats_list")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "cc")
(PUNCT ",")
(ID "nc")
(PUNCT ",")
(ID "tt")
(PUNCT ",")
(ID "ct")
(PUNCT ")")
(PUNCT "+")
(ID "func")
(PUNCT "+")
(PUNCT "(")
(ID "func_std_string")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(PUNCT ",")
(ID "func")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "stats_list")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(ID "key")
(PUNCT "=")
(ID "cmp_to_key")
(PUNCT "(")
(ID "TupleComp")
(PUNCT "(")
(ID "sort_tuple")
(PUNCT ")")
(PUNCT ".")
(ID "compare")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fcn_list")
(PUNCT "=")
(ID "fcn_list")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "tuple")
(KEYWORD in)
(ID "stats_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fcn_list")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "tuple")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "reverse_order")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "fcn_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "fcn_list")
(PUNCT ".")
(ID "reverse")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "strip_dirs")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "oldstats")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stats")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT "=")
(ID "newstats")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "max_name_len")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD for)
(ID "func")
(PUNCT ",")
(PUNCT "(")
(ID "cc")
(PUNCT ",")
(ID "nc")
(PUNCT ",")
(ID "tt")
(PUNCT ",")
(ID "ct")
(PUNCT ",")
(ID "callers")
(PUNCT ")")
(KEYWORD in)
(ID "oldstats")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "newfunc")
(PUNCT "=")
(ID "func_strip_path")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "func_std_string")
(PUNCT "(")
(ID "newfunc")
(PUNCT ")")
(PUNCT ")")
(PUNCT ">")
(ID "max_name_len")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "max_name_len")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "func_std_string")
(PUNCT "(")
(ID "newfunc")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "newcallers")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "func2")
(PUNCT ",")
(ID "caller")
(KEYWORD in)
(ID "callers")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "newcallers")
(PUNCT "[")
(ID "func_strip_path")
(PUNCT "(")
(ID "func2")
(PUNCT ")")
(PUNCT "]")
(PUNCT "=")
(ID "caller")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "newfunc")
(KEYWORD in)
(ID "newstats")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "newstats")
(PUNCT "[")
(ID "newfunc")
(PUNCT "]")
(PUNCT "=")
(ID "add_func_stats")
(PUNCT "(")
(ID "newstats")
(PUNCT "[")
(ID "newfunc")
(PUNCT "]")
(PUNCT ",")
(PUNCT "(")
(ID "cc")
(PUNCT ",")
(ID "nc")
(PUNCT ",")
(ID "tt")
(PUNCT ",")
(ID "ct")
(PUNCT ",")
(ID "newcallers")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "newstats")
(PUNCT "[")
(ID "newfunc")
(PUNCT "]")
(PUNCT "=")
(PUNCT "(")
(ID "cc")
(PUNCT ",")
(ID "nc")
(PUNCT ",")
(ID "tt")
(PUNCT ",")
(ID "ct")
(PUNCT ",")
(ID "newcallers")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "old_top")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "top_level")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "top_level")
(PUNCT "=")
(ID "new_top")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "func")
(KEYWORD in)
(ID "old_top")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_top")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "func_strip_path")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "max_name_len")
(PUNCT "=")
(ID "max_name_len")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fcn_list")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "all_callees")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "calc_callees")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "all_callees")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "all_callees")
(PUNCT "=")
(ID "all_callees")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "func")
(PUNCT ",")
(PUNCT "(")
(ID "cc")
(PUNCT ",")
(ID "nc")
(PUNCT ",")
(ID "tt")
(PUNCT ",")
(ID "ct")
(PUNCT ",")
(ID "callers")
(PUNCT ")")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "func")
(KEYWORD in)
(ID "all_callees")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "all_callees")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "func2")
(PUNCT ",")
(ID "caller")
(KEYWORD in)
(ID "callers")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "func2")
(KEYWORD in)
(ID "all_callees")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "all_callees")
(PUNCT "[")
(ID "func2")
(PUNCT "]")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(ID "all_callees")
(PUNCT "[")
(ID "func2")
(PUNCT "]")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(PUNCT "=")
(ID "caller")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "eval_print_amount")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sel")
(PUNCT ",")
(ID "list")
(PUNCT ",")
(ID "msg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_list")
(PUNCT "=")
(ID "list")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "sel")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rex")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(ID "sel")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "re")
(PUNCT ".")
(ID "error")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "+=")
(LIT "   <Invalid regular expression %r>\n")
(PUNCT "%")
(ID "sel")
(NEWLINE)
(KEYWORD return)
(ID "new_list")
(PUNCT ",")
(ID "msg")
(NEWLINE)
(DEDENT)
(ID "new_list")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "func")
(KEYWORD in)
(ID "list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "rex")
(PUNCT ".")
(ID "search")
(PUNCT "(")
(ID "func_std_string")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_list")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "count")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "list")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "sel")
(PUNCT ",")
(ID "float")
(PUNCT ")")
(KEYWORD and)
(LIT 0.0)
(PUNCT "<=")
(ID "sel")
(PUNCT "<")
(LIT 1.0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "count")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "count")
(PUNCT "*")
(ID "sel")
(PUNCT "+")
(LIT 0.5)
(PUNCT ")")
(NEWLINE)
(ID "new_list")
(PUNCT "=")
(ID "list")
(PUNCT "[")
(PUNCT ":")
(ID "count")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "sel")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(KEYWORD and)
(LIT 0)
(PUNCT "<=")
(ID "sel")
(PUNCT "<")
(ID "count")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "count")
(PUNCT "=")
(ID "sel")
(NEWLINE)
(ID "new_list")
(PUNCT "=")
(ID "list")
(PUNCT "[")
(PUNCT ":")
(ID "count")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "list")
(PUNCT ")")
(PUNCT "!=")
(ID "len")
(PUNCT "(")
(ID "new_list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "+=")
(LIT "   List reduced from %r to %r due to restriction <%r>\n")
(PUNCT "%")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "list")
(PUNCT ")")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "new_list")
(PUNCT ")")
(PUNCT ",")
(ID "sel")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "new_list")
(PUNCT ",")
(ID "msg")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_print_list")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sel_list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "width")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "max_name_len")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "fcn_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stat_list")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "fcn_list")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "msg")
(PUNCT "=")
(LIT "   Ordered by: ")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "sort_type")
(PUNCT "+")
(LIT "\n")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stat_list")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "msg")
(PUNCT "=")
(LIT "   Random listing order was used\n")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "selection")
(KEYWORD in)
(ID "sel_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stat_list")
(PUNCT ",")
(ID "msg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "eval_print_amount")
(PUNCT "(")
(ID "selection")
(PUNCT ",")
(ID "stat_list")
(PUNCT ",")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "count")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "stat_list")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "stat_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 0)
(PUNCT ",")
(ID "stat_list")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(ID "msg")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "count")
(PUNCT "<")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "width")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD for)
(ID "func")
(KEYWORD in)
(ID "stat_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "func_std_string")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(PUNCT ")")
(PUNCT ">")
(ID "width")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "width")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "func_std_string")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "width")
(PUNCT "+")
(LIT 2)
(PUNCT ",")
(ID "stat_list")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "print_stats")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "amount")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "filename")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "files")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "files")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "indent")
(PUNCT "=")
(LIT " ")
(PUNCT "*")
(LIT 8)
(NEWLINE)
(KEYWORD for)
(ID "func")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "top_level")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "indent")
(PUNCT ",")
(ID "func_get_function_name")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(ID "indent")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "total_calls")
(PUNCT ",")
(LIT "function calls")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "total_calls")
(PUNCT "!=")
(ID "self")
(PUNCT ".")
(ID "prim_calls")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "(%d primitive calls)")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "prim_calls")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(LIT "in %.3f seconds")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "total_tt")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "width")
(PUNCT ",")
(ID "list")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_print_list")
(PUNCT "(")
(ID "amount")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "print_title")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "func")
(KEYWORD in)
(ID "list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "print_line")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "print_callees")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "amount")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "width")
(PUNCT ",")
(ID "list")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_print_list")
(PUNCT "(")
(ID "amount")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "calc_callees")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "print_call_heading")
(PUNCT "(")
(ID "width")
(PUNCT ",")
(LIT "called...")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "func")
(KEYWORD in)
(ID "list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "func")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "all_callees")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "print_call_line")
(PUNCT "(")
(ID "width")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "all_callees")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "print_call_line")
(PUNCT "(")
(ID "width")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "print")
(PUNCT "(")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "print_callers")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "amount")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "width")
(PUNCT ",")
(ID "list")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_print_list")
(PUNCT "(")
(ID "amount")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "print_call_heading")
(PUNCT "(")
(ID "width")
(PUNCT ",")
(LIT "was called by...")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "func")
(KEYWORD in)
(ID "list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cc")
(PUNCT ",")
(ID "nc")
(PUNCT ",")
(ID "tt")
(PUNCT ",")
(ID "ct")
(PUNCT ",")
(ID "callers")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "print_call_line")
(PUNCT "(")
(ID "width")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(ID "callers")
(PUNCT ",")
(LIT "<-")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "print_call_heading")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name_size")
(PUNCT ",")
(ID "column_title")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Function ")
(PUNCT ".")
(ID "ljust")
(PUNCT "(")
(ID "name_size")
(PUNCT ")")
(PUNCT "+")
(ID "column_title")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "subheader")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD for)
(ID "cc")
(PUNCT ",")
(ID "nc")
(PUNCT ",")
(ID "tt")
(PUNCT ",")
(ID "ct")
(PUNCT ",")
(ID "callers")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "callers")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "next")
(PUNCT "(")
(ID "iter")
(PUNCT "(")
(ID "callers")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "subheader")
(PUNCT "=")
(ID "isinstance")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "tuple")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "subheader")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT " ")
(PUNCT "*")
(ID "name_size")
(PUNCT "+")
(LIT "    ncalls  tottime  cumtime")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "print_call_line")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name_size")
(PUNCT ",")
(ID "source")
(PUNCT ",")
(ID "call_dict")
(PUNCT ",")
(ID "arrow")
(PUNCT "=")
(LIT "->")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "func_std_string")
(PUNCT "(")
(ID "source")
(PUNCT ")")
(PUNCT ".")
(ID "ljust")
(PUNCT "(")
(ID "name_size")
(PUNCT ")")
(PUNCT "+")
(ID "arrow")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "call_dict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "clist")
(PUNCT "=")
(ID "sorted")
(PUNCT "(")
(ID "call_dict")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "indent")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD for)
(ID "func")
(KEYWORD in)
(ID "clist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "func_std_string")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(NEWLINE)
(ID "value")
(PUNCT "=")
(ID "call_dict")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "tuple")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nc")
(PUNCT ",")
(ID "cc")
(PUNCT ",")
(ID "tt")
(PUNCT ",")
(ID "ct")
(PUNCT "=")
(ID "value")
(NEWLINE)
(KEYWORD if)
(ID "nc")
(PUNCT "!=")
(ID "cc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "substats")
(PUNCT "=")
(LIT "%d/%d")
(PUNCT "%")
(PUNCT "(")
(ID "nc")
(PUNCT ",")
(ID "cc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "substats")
(PUNCT "=")
(LIT "%d")
(PUNCT "%")
(PUNCT "(")
(ID "nc")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "substats")
(PUNCT "=")
(LIT "%s %s %s  %s")
(PUNCT "%")
(PUNCT "(")
(ID "substats")
(PUNCT ".")
(ID "rjust")
(PUNCT "(")
(LIT 7)
(PUNCT "+")
(LIT 2)
(PUNCT "*")
(ID "len")
(PUNCT "(")
(ID "indent")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID "f8")
(PUNCT "(")
(ID "tt")
(PUNCT ")")
(PUNCT ",")
(ID "f8")
(PUNCT "(")
(ID "ct")
(PUNCT ")")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(ID "left_width")
(PUNCT "=")
(ID "name_size")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "substats")
(PUNCT "=")
(LIT "%s(%r) %s")
(PUNCT "%")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "f8")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(PUNCT "[")
(LIT 3)
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "left_width")
(PUNCT "=")
(ID "name_size")
(PUNCT "+")
(LIT 3)
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(ID "indent")
(PUNCT "*")
(ID "left_width")
(PUNCT "+")
(ID "substats")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "indent")
(PUNCT "=")
(LIT " ")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "print_title")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "   ncalls  tottime  percall  cumtime  percall")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "filename:lineno(function)")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "print_line")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "func")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cc")
(PUNCT ",")
(ID "nc")
(PUNCT ",")
(ID "tt")
(PUNCT ",")
(ID "ct")
(PUNCT ",")
(ID "callers")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(NEWLINE)
(ID "c")
(PUNCT "=")
(ID "str")
(PUNCT "(")
(ID "nc")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "nc")
(PUNCT "!=")
(ID "cc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "c")
(PUNCT "+")
(LIT "/")
(PUNCT "+")
(ID "str")
(PUNCT "(")
(ID "cc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(ID "c")
(PUNCT ".")
(ID "rjust")
(PUNCT "(")
(LIT 9)
(PUNCT ")")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "f8")
(PUNCT "(")
(ID "tt")
(PUNCT ")")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "nc")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT " ")
(PUNCT "*")
(LIT 8)
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "f8")
(PUNCT "(")
(ID "tt")
(PUNCT "/")
(ID "nc")
(PUNCT ")")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(ID "f8")
(PUNCT "(")
(ID "ct")
(PUNCT ")")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "cc")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT " ")
(PUNCT "*")
(LIT 8)
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "f8")
(PUNCT "(")
(ID "ct")
(PUNCT "/")
(ID "cc")
(PUNCT ")")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(ID "func_std_string")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "TupleComp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "This class provides a generic function for comparing any two tuples.\n    Each instance records a list of tuple-indices (from most significant\n    to least significant), and sort direction (ascending or decending) for\n    each tuple-index.  The compare functions can then be used as the function\n    argument to the system sort() function when a list of tuples need to be\n    sorted in the instances order.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "comp_select_list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "comp_select_list")
(PUNCT "=")
(ID "comp_select_list")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "compare")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "left")
(PUNCT ",")
(ID "right")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "index")
(PUNCT ",")
(ID "direction")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "comp_select_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "l")
(PUNCT "=")
(ID "left")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(NEWLINE)
(ID "r")
(PUNCT "=")
(ID "right")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "l")
(PUNCT "<")
(ID "r")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "-")
(ID "direction")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "l")
(PUNCT ">")
(ID "r")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "direction")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(LIT 0)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "func_strip_path")
(PUNCT "(")
(ID "func_name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT ",")
(ID "line")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(ID "func_name")
(NEWLINE)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "basename")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(PUNCT ",")
(ID "line")
(PUNCT ",")
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "func_get_function_name")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "func")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "func_std_string")
(PUNCT "(")
(ID "func_name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "func_name")
(PUNCT "[")
(PUNCT ":")
(LIT 2)
(PUNCT "]")
(PUNCT "==")
(PUNCT "(")
(LIT "~")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "func_name")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "name")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "<")
(PUNCT ")")
(KEYWORD and)
(ID "name")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT ">")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "{%s}")
(PUNCT "%")
(ID "name")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "name")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "%s:%d(%s)")
(PUNCT "%")
(ID "func_name")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "add_func_stats")
(PUNCT "(")
(ID "target")
(PUNCT ",")
(ID "source")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Add together all the stats for two profile entries.")
(NEWLINE)
(ID "cc")
(PUNCT ",")
(ID "nc")
(PUNCT ",")
(ID "tt")
(PUNCT ",")
(ID "ct")
(PUNCT ",")
(ID "callers")
(PUNCT "=")
(ID "source")
(NEWLINE)
(ID "t_cc")
(PUNCT ",")
(ID "t_nc")
(PUNCT ",")
(ID "t_tt")
(PUNCT ",")
(ID "t_ct")
(PUNCT ",")
(ID "t_callers")
(PUNCT "=")
(ID "target")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID "cc")
(PUNCT "+")
(ID "t_cc")
(PUNCT ",")
(ID "nc")
(PUNCT "+")
(ID "t_nc")
(PUNCT ",")
(ID "tt")
(PUNCT "+")
(ID "t_tt")
(PUNCT ",")
(ID "ct")
(PUNCT "+")
(ID "t_ct")
(PUNCT ",")
(ID "add_callers")
(PUNCT "(")
(ID "t_callers")
(PUNCT ",")
(ID "callers")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_callers")
(PUNCT "(")
(ID "target")
(PUNCT ",")
(ID "source")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Combine two caller lists in a single list.")
(NEWLINE)
(ID "new_callers")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "func")
(PUNCT ",")
(ID "caller")
(KEYWORD in)
(ID "target")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_callers")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(PUNCT "=")
(ID "caller")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "func")
(PUNCT ",")
(ID "caller")
(KEYWORD in)
(ID "source")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "func")
(KEYWORD in)
(ID "new_callers")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "caller")
(PUNCT ",")
(ID "tuple")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_callers")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(PUNCT "=")
(ID "tuple")
(PUNCT "(")
(PUNCT "[")
(ID "i")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "+")
(ID "i")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "zip")
(PUNCT "(")
(ID "caller")
(PUNCT ",")
(ID "new_callers")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_callers")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(PUNCT "+=")
(ID "caller")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_callers")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(PUNCT "=")
(ID "caller")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "new_callers")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "count_calls")
(PUNCT "(")
(ID "callers")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Sum the caller statistics to get total number of calls received.")
(NEWLINE)
(ID "nc")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD for)
(ID "calls")
(KEYWORD in)
(ID "callers")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nc")
(PUNCT "+=")
(ID "calls")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "nc")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "f8")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "%8.3f")
(PUNCT "%")
(ID "x")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "cmd")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "readline")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "ProfileBrowser")
(PUNCT "(")
(ID "cmd")
(PUNCT ".")
(ID "Cmd")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "profile")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cmd")
(PUNCT ".")
(ID "Cmd")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "prompt")
(PUNCT "=")
(LIT "% ")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdout")
(NEWLINE)
(KEYWORD if)
(ID "profile")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "do_read")
(PUNCT "(")
(ID "profile")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "generic")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fn")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(ID "line")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "processed")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "term")
(KEYWORD in)
(ID "args")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "processed")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "int")
(PUNCT "(")
(ID "term")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "frac")
(PUNCT "=")
(ID "float")
(PUNCT "(")
(ID "term")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "frac")
(PUNCT ">")
(LIT 1)
(KEYWORD or)
(ID "frac")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Fraction argument must be in [0, 1]")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "processed")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "frac")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(ID "processed")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "term")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ",")
(ID "fn")
(PUNCT ")")
(PUNCT "(")
(PUNCT "*")
(ID "processed")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "No statistics object is loaded.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "generic_help")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Arguments may be:")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "* An integer maximum number of entries to print.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "* A decimal fractional number between 0 and 1, controlling")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "  what fraction of selected entries to print.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "* A regular expression; only entries with function names")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "  that match it are printed.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "do_add")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "No statistics object is loaded.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "help_add")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Add profile info from given file to current statistics object.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "do_callees")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "generic")
(PUNCT "(")
(LIT "print_callees")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "help_callees")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Print callees statistics from the current stat object.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "generic_help")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "do_callers")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "generic")
(PUNCT "(")
(LIT "print_callers")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "help_callers")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Print callers statistics from the current stat object.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "generic_help")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "do_EOF")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "help_EOF")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Leave the profile brower.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "do_quit")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "help_quit")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Leave the profile brower.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "do_read")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT "=")
(ID "Stats")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "err")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "err")
(PUNCT ".")
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "err")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "err")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT "+")
(LIT ":")
(PUNCT ",")
(ID "err")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "prompt")
(PUNCT "=")
(ID "line")
(PUNCT "+")
(LIT "% ")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "prompt")
(PUNCT ")")
(PUNCT ">")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "prompt")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "do_read")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "No statistics object is current -- cannot reload.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "help_read")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Read in profile data from a specified file.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Without argument, reload the current file.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "do_reverse")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ".")
(ID "reverse_order")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "No statistics object is loaded.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "help_reverse")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Reverse the sort order of the profiling report.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "do_sort")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "No statistics object is loaded.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "abbrevs")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ".")
(ID "get_sort_arg_defs")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(KEYWORD and)
(ID "all")
(PUNCT "(")
(PUNCT "(")
(ID "x")
(KEYWORD in)
(ID "abbrevs")
(PUNCT ")")
(KEYWORD for)
(ID "x")
(KEYWORD in)
(ID "line")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ".")
(ID "sort_stats")
(PUNCT "(")
(PUNCT "*")
(ID "line")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Valid sort keys (unique prefixes are accepted):")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(KEYWORD in)
(ID "Stats")
(PUNCT ".")
(ID "sort_arg_dict_default")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "%s -- %s")
(PUNCT "%")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "help_sort")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Sort profile data according to specified keys.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "(Typing `sort' without arguments lists valid keys.)")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "complete_sort")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(ID "a")
(KEYWORD for)
(ID "a")
(KEYWORD in)
(ID "Stats")
(PUNCT ".")
(ID "sort_arg_dict_default")
(KEYWORD if)
(ID "a")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "do_stats")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "generic")
(PUNCT "(")
(LIT "print_stats")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "help_stats")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Print statistics from the current stat object.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "generic_help")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "do_strip")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ".")
(ID "strip_dirs")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "No statistics object is loaded.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "help_strip")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Strip leading path information from filenames in the report.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "help_help")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Show help for a given command.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "postcmd")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "stop")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "stop")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "stop")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT ")")
(PUNCT ">")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "initprofile")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "initprofile")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "browser")
(PUNCT "=")
(ID "ProfileBrowser")
(PUNCT "(")
(ID "initprofile")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "profile")
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "browser")
(PUNCT ".")
(ID "do_add")
(PUNCT "(")
(ID "profile")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(LIT "Welcome to the profile statistics browser.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "browser")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(ID "browser")
(PUNCT ".")
(ID "cmdloop")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Goodbye.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "browser")
(PUNCT ".")
(ID "stream")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyboardInterrupt")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
