(LIT "Registration facilities for DOM. This module should not be used\ndirectly. Instead, the functions getDOMImplementation and\nregisterDOMImplementation should be imported from xml.dom.")
(NEWLINE)
(ID "well_known_implementations")
(PUNCT "=")
(PUNCT "{")
(LIT "minidom")
(PUNCT ":")
(LIT "xml.dom.minidom")
(PUNCT ",")
(LIT "4DOM")
(PUNCT ":")
(LIT "xml.dom.DOMImplementation")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(ID "registered")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "registerDOMImplementation")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "factory")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "registerDOMImplementation(name, factory)\n\n    Register the factory function with the name. The factory function\n    should return an object which implements the DOMImplementation\n    interface. The factory function can either return the same object,\n    or a new one (e.g. if that implementation supports some\n    customization).")
(NEWLINE)
(ID "registered")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "factory")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_good_enough")
(PUNCT "(")
(ID "dom")
(PUNCT ",")
(ID "features")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "_good_enough(dom, features) -> Return 1 if the dom offers the features")
(NEWLINE)
(KEYWORD for)
(ID "f")
(PUNCT ",")
(ID "v")
(KEYWORD in)
(ID "features")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "dom")
(PUNCT ".")
(ID "hasFeature")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "v")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 0)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getDOMImplementation")
(PUNCT "(")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "features")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "getDOMImplementation(name = None, features = ()) -> DOM implementation.\n\n    Return a suitable DOM implementation. The name is either\n    well-known, the module name of a DOM implementation, or None. If\n    it is not None, imports the corresponding module and returns\n    DOMImplementation object if the import succeeds.\n\n    If name is not given, consider the available implementations to\n    find one with the required feature set. If no implementation can\n    be found, raise an ImportError. The features list must be a sequence\n    of (feature, version) pairs which are passed to hasFeature.")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(ID "creator")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "mod")
(PUNCT "=")
(ID "well_known_implementations")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "mod")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mod")
(PUNCT "=")
(ID "__import__")
(PUNCT "(")
(ID "mod")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "[")
(LIT "getDOMImplementation")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "mod")
(PUNCT ".")
(ID "getDOMImplementation")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "registered")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(LIT "PYTHON_DOM")
(KEYWORD in)
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "getDOMImplementation")
(PUNCT "(")
(ID "name")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT "[")
(LIT "PYTHON_DOM")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "features")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "features")
(PUNCT "=")
(ID "_parse_feature_string")
(PUNCT "(")
(ID "features")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "creator")
(KEYWORD in)
(ID "registered")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dom")
(PUNCT "=")
(ID "creator")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "_good_enough")
(PUNCT "(")
(ID "dom")
(PUNCT ",")
(ID "features")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "dom")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "creator")
(KEYWORD in)
(ID "well_known_implementations")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dom")
(PUNCT "=")
(ID "getDOMImplementation")
(PUNCT "(")
(ID "name")
(PUNCT "=")
(ID "creator")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "_good_enough")
(PUNCT "(")
(ID "dom")
(PUNCT ",")
(ID "features")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "dom")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD raise)
(ID "ImportError")
(PUNCT "(")
(LIT "no suitable DOM implementation found")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_parse_feature_string")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "features")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "parts")
(PUNCT "=")
(ID "s")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "i")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "length")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "parts")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "i")
(PUNCT "<")
(ID "length")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "feature")
(PUNCT "=")
(ID "parts")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "feature")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(LIT "0123456789")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "bad feature name: %r")
(PUNCT "%")
(PUNCT "(")
(ID "feature")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "version")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "i")
(PUNCT "<")
(ID "length")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "v")
(PUNCT "=")
(ID "parts")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "v")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(LIT "0123456789")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "version")
(PUNCT "=")
(ID "v")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "features")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "feature")
(PUNCT ",")
(ID "version")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "tuple")
(PUNCT "(")
(ID "features")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
