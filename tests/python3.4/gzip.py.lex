(LIT "Functions that read and write gzipped files.\n\nThe user of the file doesn't have to worry about the compression,\nbut random access is not allowed.")
(NEWLINE)
(KEYWORD import)
(ID "struct")
(PUNCT ",")
(ID "sys")
(PUNCT ",")
(ID "time")
(PUNCT ",")
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "zlib")
(NEWLINE)
(KEYWORD import)
(ID "builtins")
(NEWLINE)
(KEYWORD import)
(ID "io")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "GzipFile")
(PUNCT ",")
(LIT "open")
(PUNCT ",")
(LIT "compress")
(PUNCT ",")
(LIT "decompress")
(PUNCT "]")
(NEWLINE)
(ID "FTEXT")
(PUNCT ",")
(ID "FHCRC")
(PUNCT ",")
(ID "FEXTRA")
(PUNCT ",")
(ID "FNAME")
(PUNCT ",")
(ID "FCOMMENT")
(PUNCT "=")
(LIT 1)
(PUNCT ",")
(LIT 2)
(PUNCT ",")
(LIT 4)
(PUNCT ",")
(LIT 8)
(PUNCT ",")
(LIT 16)
(NEWLINE)
(ID "READ")
(PUNCT ",")
(ID "WRITE")
(PUNCT "=")
(LIT 1)
(PUNCT ",")
(LIT 2)
(NEWLINE)
(KEYWORD def)
(ID "open")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "mode")
(PUNCT "=")
(LIT "rb")
(PUNCT ",")
(ID "compresslevel")
(PUNCT "=")
(LIT 9)
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "errors")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "newline")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Open a gzip-compressed file in binary or text mode.\n\n    The filename argument can be an actual filename (a str or bytes object), or\n    an existing file object to read from or write to.\n\n    The mode argument can be \"r\", \"rb\", \"w\", \"wb\", \"x\", \"xb\", \"a\" or \"ab\" for\n    binary mode, or \"rt\", \"wt\", \"xt\" or \"at\" for text mode. The default mode is\n    \"rb\", and the default compresslevel is 9.\n\n    For binary mode, this function is equivalent to the GzipFile constructor:\n    GzipFile(filename, mode, compresslevel). In this case, the encoding, errors\n    and newline arguments must not be provided.\n\n    For text mode, a GzipFile object is created, and wrapped in an\n    io.TextIOWrapper instance with the specified encoding, error handling\n    behavior, and line ending(s).\n\n    ")
(NEWLINE)
(KEYWORD if)
(LIT "t")
(KEYWORD in)
(ID "mode")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "b")
(KEYWORD in)
(ID "mode")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Invalid mode: %r")
(PUNCT "%")
(PUNCT "(")
(ID "mode")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "encoding")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Argument 'encoding' not supported in binary mode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "errors")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Argument 'errors' not supported in binary mode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "newline")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Argument 'newline' not supported in binary mode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "gz_mode")
(PUNCT "=")
(ID "mode")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "t")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "bytes")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "binary_file")
(PUNCT "=")
(ID "GzipFile")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "gz_mode")
(PUNCT ",")
(ID "compresslevel")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "hasattr")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(LIT "read")
(PUNCT ")")
(KEYWORD or)
(ID "hasattr")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(LIT "write")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "binary_file")
(PUNCT "=")
(ID "GzipFile")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(ID "gz_mode")
(PUNCT ",")
(ID "compresslevel")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "filename must be a str or bytes object, or a file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "t")
(KEYWORD in)
(ID "mode")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "io")
(PUNCT ".")
(ID "TextIOWrapper")
(PUNCT "(")
(ID "binary_file")
(PUNCT ",")
(ID "encoding")
(PUNCT ",")
(ID "errors")
(PUNCT ",")
(ID "newline")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "binary_file")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "write32u")
(PUNCT "(")
(ID "output")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "struct")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(LIT "<L")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "_PaddedFile")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Minimal read-only file object that prepends a string to the contents\n    of an actual file. Shouldn't be used outside of gzip.py, as it lacks\n    essential functionality.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ",")
(ID "prepend")
(PUNCT "=")
(LIT #"")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT "=")
(ID "prepend")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_length")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "prepend")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT "=")
(ID "f")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "read")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "size")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_read")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "size")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "+")
(ID "size")
(PUNCT "<=")
(ID "self")
(PUNCT ".")
(ID "_length")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "read")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_read")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "+=")
(ID "size")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT "[")
(ID "read")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "read")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_read")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT "[")
(ID "read")
(PUNCT ":")
(PUNCT "]")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "size")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_length")
(PUNCT "+")
(ID "read")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "prepend")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "prepend")
(PUNCT "=")
(LIT #"")
(PUNCT ",")
(ID "readprevious")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_read")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT "=")
(ID "prepend")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "readprevious")
(KEYWORD and)
(ID "len")
(PUNCT "(")
(ID "prepend")
(PUNCT ")")
(PUNCT "<=")
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "-=")
(ID "len")
(PUNCT "(")
(ID "prepend")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT ":")
(PUNCT "]")
(PUNCT "+")
(ID "prepend")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_length")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "unused")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_read")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT #"")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "seek")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "offset")
(PUNCT ",")
(ID "whence")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "whence")
(PUNCT "==")
(LIT 1)
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_read")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT 0)
(PUNCT "<=")
(ID "offset")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "<=")
(ID "self")
(PUNCT ".")
(ID "_length")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "+=")
(ID "offset")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "offset")
(PUNCT "+=")
(ID "self")
(PUNCT ".")
(ID "_length")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_read")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "offset")
(PUNCT ",")
(ID "whence")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getattr__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "GzipFile")
(PUNCT "(")
(ID "io")
(PUNCT ".")
(ID "BufferedIOBase")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "The GzipFile class simulates most of the methods of a file object with\n    the exception of the readinto() and truncate() methods.\n\n    This class only supports opening files in binary mode. If you need to open a\n    compressed file in text mode, use the gzip.open() function.\n\n    ")
(NEWLINE)
(ID "myfileobj")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "max_read_chunk")
(PUNCT "=")
(LIT 10)
(PUNCT "*")
(LIT 1024)
(PUNCT "*")
(LIT 1024)
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mode")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "compresslevel")
(PUNCT "=")
(LIT 9)
(PUNCT ",")
(ID "fileobj")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mtime")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Constructor for the GzipFile class.\n\n        At least one of fileobj and filename must be given a\n        non-trivial value.\n\n        The new class instance is based on fileobj, which can be a regular\n        file, an io.BytesIO object, or any other object which simulates a file.\n        It defaults to None, in which case filename is opened to provide\n        a file object.\n\n        When fileobj is not None, the filename argument is only used to be\n        included in the gzip file header, which may includes the original\n        filename of the uncompressed file.  It defaults to the filename of\n        fileobj, if discernible; otherwise, it defaults to the empty string,\n        and in this case the original filename is not included in the header.\n\n        The mode argument can be any of 'r', 'rb', 'a', 'ab', 'w', 'wb', 'x', or\n        'xb' depending on whether the file will be read or written.  The default\n        is the mode of fileobj if discernible; otherwise, the default is 'rb'.\n        A mode of 'r' is equivalent to one of 'rb', and similarly for 'w' and\n        'wb', 'a' and 'ab', and 'x' and 'xb'.\n\n        The compresslevel argument is an integer from 0 to 9 controlling the\n        level of compression; 1 is fastest and produces the least compression,\n        and 9 is slowest and produces the most compression. 0 is no compression\n        at all. The default is 9.\n\n        The mtime argument is an optional numeric timestamp to be written\n        to the stream when compressing.  All gzip compressed streams\n        are required to contain a timestamp.  If omitted or None, the\n        current time is used.  This module ignores the timestamp when\n        decompressing; however, some programs, such as gunzip, make use\n        of it.  The format of the timestamp is the same as that of the\n        return value of time.time() and of the st_mtime member of the\n        object returned by os.stat().\n\n        ")
(NEWLINE)
(KEYWORD if)
(ID "mode")
(KEYWORD and)
(PUNCT "(")
(LIT "t")
(KEYWORD in)
(ID "mode")
(KEYWORD or)
(LIT "U")
(KEYWORD in)
(ID "mode")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Invalid mode: {!r}")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "mode")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "mode")
(KEYWORD and)
(LIT "b")
(KEYWORD not)
(KEYWORD in)
(ID "mode")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mode")
(PUNCT "+=")
(LIT "b")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "fileobj")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fileobj")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "myfileobj")
(PUNCT "=")
(ID "builtins")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "mode")
(KEYWORD or)
(LIT "rb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "filename")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "fileobj")
(PUNCT ",")
(LIT "name")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "bytes")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "mode")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mode")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "fileobj")
(PUNCT ",")
(LIT "mode")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "mode")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "r")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "=")
(ID "READ")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_new_member")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "extrabuf")
(PUNCT "=")
(LIT #"")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "extrastart")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "name")
(PUNCT "=")
(ID "filename")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "min_readsize")
(PUNCT "=")
(LIT 100)
(NEWLINE)
(ID "fileobj")
(PUNCT "=")
(ID "_PaddedFile")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "mode")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(PUNCT "(")
(LIT "w")
(PUNCT ",")
(LIT "a")
(PUNCT ",")
(LIT "x")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "=")
(ID "WRITE")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_init_write")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "compress")
(PUNCT "=")
(ID "zlib")
(PUNCT ".")
(ID "compressobj")
(PUNCT "(")
(ID "compresslevel")
(PUNCT ",")
(ID "zlib")
(PUNCT ".")
(ID "DEFLATED")
(PUNCT ",")
(PUNCT "-")
(ID "zlib")
(PUNCT ".")
(ID "MAX_WBITS")
(PUNCT ",")
(ID "zlib")
(PUNCT ".")
(ID "DEF_MEM_LEVEL")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Invalid mode: {!r}")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "mode")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT "=")
(ID "fileobj")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "mtime")
(PUNCT "=")
(ID "mtime")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "==")
(ID "WRITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_write_gzip_header")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "filename")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "warnings")
(NEWLINE)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "use the name attribute")
(PUNCT ",")
(ID "DeprecationWarning")
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "==")
(ID "WRITE")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "name")
(PUNCT "[")
(PUNCT "-")
(LIT 3)
(PUNCT ":")
(PUNCT "]")
(PUNCT "!=")
(LIT ".gz")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "name")
(PUNCT "+")
(LIT ".gz")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fileobj")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "fileobj")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "fileobj")
(PUNCT ",")
(ID "_PaddedFile")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fileobj")
(PUNCT "=")
(ID "fileobj")
(PUNCT ".")
(ID "file")
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(ID "repr")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "<gzip ")
(PUNCT "+")
(ID "s")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "+")
(LIT " ")
(PUNCT "+")
(ID "hex")
(PUNCT "(")
(ID "id")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ")")
(PUNCT "+")
(LIT ">")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_check_closed")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Raises a ValueError if the underlying file object has been closed.\n\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "closed")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "I/O operation on closed file.")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_init_write")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "name")
(PUNCT "=")
(ID "filename")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "crc")
(PUNCT "=")
(ID "zlib")
(PUNCT ".")
(ID "crc32")
(PUNCT "(")
(LIT #"")
(PUNCT ")")
(PUNCT "&")
(LIT 4294967295)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "size")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "writebuf")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "bufsize")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_write_gzip_header")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"\37\213")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"\b")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fname")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "basename")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "fname")
(PUNCT ",")
(ID "bytes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fname")
(PUNCT "=")
(ID "fname")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "latin-1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "fname")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT #".gz")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fname")
(PUNCT "=")
(ID "fname")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 3)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "UnicodeEncodeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fname")
(PUNCT "=")
(LIT #"")
(NEWLINE)
(DEDENT)
(ID "flags")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "fname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "=")
(ID "FNAME")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "chr")
(PUNCT "(")
(ID "flags")
(PUNCT ")")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "latin-1")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "mtime")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "mtime")
(NEWLINE)
(KEYWORD if)
(ID "mtime")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mtime")
(PUNCT "=")
(ID "time")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "write32u")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ",")
(ID "int")
(PUNCT "(")
(ID "mtime")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"\2")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"\377")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "fname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "fname")
(PUNCT "+")
(LIT #"\0")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_init_read")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "crc")
(PUNCT "=")
(ID "zlib")
(PUNCT ".")
(ID "crc32")
(PUNCT "(")
(LIT #"")
(PUNCT ")")
(PUNCT "&")
(LIT 4294967295)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "size")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_read_exact")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT "<")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "b")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "n")
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "b")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "EOFError")
(PUNCT "(")
(LIT "Compressed file ended before the ")
(LIT "end-of-stream marker was reached")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "data")
(PUNCT "+=")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "data")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_read_gzip_header")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "magic")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "magic")
(PUNCT "==")
(LIT #"")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "magic")
(PUNCT "!=")
(LIT #"\37\213")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT "Not a gzipped file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "method")
(PUNCT ",")
(ID "flag")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "mtime")
(PUNCT "=")
(ID "struct")
(PUNCT ".")
(ID "unpack")
(PUNCT "(")
(LIT "<BBIxx")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_read_exact")
(PUNCT "(")
(LIT 8)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "method")
(PUNCT "!=")
(LIT 8)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT "Unknown compression method")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "flag")
(PUNCT "&")
(ID "FEXTRA")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "extra_len")
(PUNCT ",")
(PUNCT "=")
(ID "struct")
(PUNCT ".")
(ID "unpack")
(PUNCT "(")
(LIT "<H")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_read_exact")
(PUNCT "(")
(LIT 2)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_read_exact")
(PUNCT "(")
(ID "extra_len")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "flag")
(PUNCT "&")
(ID "FNAME")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "s")
(KEYWORD or)
(ID "s")
(PUNCT "==")
(LIT #"\0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "flag")
(PUNCT "&")
(ID "FCOMMENT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "s")
(KEYWORD or)
(ID "s")
(PUNCT "==")
(LIT #"\0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "flag")
(PUNCT "&")
(ID "FHCRC")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_read_exact")
(PUNCT "(")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "unused")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "unused")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "unused")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "uncompress")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "decompress")
(PUNCT ".")
(ID "decompress")
(PUNCT "(")
(ID "unused")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_add_read_data")
(PUNCT "(")
(ID "uncompress")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "write")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_check_closed")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "!=")
(ID "WRITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "errno")
(NEWLINE)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(ID "errno")
(PUNCT ".")
(ID "EBADF")
(PUNCT ",")
(LIT "write() on read-only GzipFile object")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "write() on closed GzipFile object")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(ID "memoryview")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "data")
(PUNCT ".")
(ID "tobytes")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "size")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "size")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "crc")
(PUNCT "=")
(ID "zlib")
(PUNCT ".")
(ID "crc32")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "crc")
(PUNCT ")")
(PUNCT "&")
(LIT 4294967295)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "compress")
(PUNCT ".")
(ID "compress")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "+=")
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "read")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "size")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_check_closed")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "!=")
(ID "READ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "errno")
(NEWLINE)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(ID "errno")
(PUNCT ".")
(ID "EBADF")
(PUNCT ",")
(LIT "read() on write-only GzipFile object")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT "<=")
(LIT 0)
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT #"")
(NEWLINE)
(DEDENT)
(ID "readsize")
(PUNCT "=")
(LIT 1024)
(NEWLINE)
(KEYWORD if)
(ID "size")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "(")
(ID "readsize")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "readsize")
(PUNCT "=")
(ID "min")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "max_read_chunk")
(PUNCT ",")
(ID "readsize")
(PUNCT "*")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "size")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "extrasize")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(ID "size")
(PUNCT ">")
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "(")
(ID "readsize")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "size")
(PUNCT ">")
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "size")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "extrasize")
(NEWLINE)
(DEDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "readsize")
(PUNCT "=")
(ID "min")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "max_read_chunk")
(PUNCT ",")
(ID "readsize")
(PUNCT "*")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "offset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "extrastart")
(NEWLINE)
(ID "chunk")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "extrabuf")
(PUNCT "[")
(ID "offset")
(PUNCT ":")
(ID "offset")
(PUNCT "+")
(ID "size")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT "-")
(ID "size")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "+=")
(ID "size")
(NEWLINE)
(KEYWORD return)
(ID "chunk")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "read1")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "size")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_check_closed")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "!=")
(ID "READ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "errno")
(NEWLINE)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(ID "errno")
(PUNCT ".")
(ID "EBADF")
(PUNCT ",")
(LIT "read1() on write-only GzipFile object")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT "<=")
(LIT 0)
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT #"")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT "<=")
(LIT 0)
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "size")
(PUNCT "<")
(LIT 0)
(KEYWORD or)
(ID "size")
(PUNCT ">")
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "size")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "extrasize")
(NEWLINE)
(DEDENT)
(ID "offset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "extrastart")
(NEWLINE)
(ID "chunk")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "extrabuf")
(PUNCT "[")
(ID "offset")
(PUNCT ":")
(ID "offset")
(PUNCT "+")
(ID "size")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT "-=")
(ID "size")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "+=")
(ID "size")
(NEWLINE)
(KEYWORD return)
(ID "chunk")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "peek")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "!=")
(ID "READ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "errno")
(NEWLINE)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(ID "errno")
(PUNCT ".")
(ID "EBADF")
(PUNCT ",")
(LIT "peek() on write-only GzipFile object")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "n")
(PUNCT "<")
(LIT 100)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(LIT 100)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT #"")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT "==")
(LIT 0)
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "(")
(ID "max")
(PUNCT "(")
(ID "n")
(PUNCT ",")
(LIT 1024)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "offset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "extrastart")
(NEWLINE)
(ID "remaining")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "extrasize")
(NEWLINE)
(KEYWORD assert)
(ID "remaining")
(PUNCT "==")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "extrabuf")
(PUNCT ")")
(PUNCT "-")
(ID "offset")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "extrabuf")
(PUNCT "[")
(ID "offset")
(PUNCT ":")
(ID "offset")
(PUNCT "+")
(ID "n")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_unread")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "buf")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "buf")
(PUNCT ")")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "extrasize")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "-=")
(ID "len")
(PUNCT "(")
(ID "buf")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_read")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "size")
(PUNCT "=")
(LIT 1024)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_new_member")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_init_read")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_read_gzip_header")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "decompress")
(PUNCT "=")
(ID "zlib")
(PUNCT ".")
(ID "decompressobj")
(PUNCT "(")
(PUNCT "-")
(ID "zlib")
(PUNCT ".")
(ID "MAX_WBITS")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_new_member")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(ID "buf")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "size")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "buf")
(PUNCT "==")
(LIT #"")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "uncompress")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "decompress")
(PUNCT ".")
(ID "flush")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "prepend")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "decompress")
(PUNCT ".")
(ID "unused_data")
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_read_eof")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_add_read_data")
(PUNCT "(")
(ID "uncompress")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(ID "uncompress")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "decompress")
(PUNCT ".")
(ID "decompress")
(PUNCT "(")
(ID "buf")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_add_read_data")
(PUNCT "(")
(ID "uncompress")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "decompress")
(PUNCT ".")
(ID "unused_data")
(PUNCT "!=")
(LIT #"")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "prepend")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "decompress")
(PUNCT ".")
(ID "unused_data")
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_read_eof")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_new_member")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_add_read_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "crc")
(PUNCT "=")
(ID "zlib")
(PUNCT ".")
(ID "crc32")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "crc")
(PUNCT ")")
(PUNCT "&")
(LIT 4294967295)
(NEWLINE)
(ID "offset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "extrastart")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "extrabuf")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "extrabuf")
(PUNCT "[")
(ID "offset")
(PUNCT ":")
(PUNCT "]")
(PUNCT "+")
(ID "data")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "extrastart")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "offset")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "size")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "size")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_read_eof")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "crc32")
(PUNCT ",")
(ID "isize")
(PUNCT "=")
(ID "struct")
(PUNCT ".")
(ID "unpack")
(PUNCT "(")
(LIT "<II")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_read_exact")
(PUNCT "(")
(LIT 8)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "crc32")
(PUNCT "!=")
(ID "self")
(PUNCT ".")
(ID "crc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT "CRC check failed %s != %s")
(PUNCT "%")
(PUNCT "(")
(ID "hex")
(PUNCT "(")
(ID "crc32")
(PUNCT ")")
(PUNCT ",")
(ID "hex")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "crc")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isize")
(PUNCT "!=")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "size")
(PUNCT "&")
(LIT 4294967295)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT "Incorrect length of data produced")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "c")
(PUNCT "=")
(LIT #"\0")
(NEWLINE)
(KEYWORD while)
(ID "c")
(PUNCT "==")
(LIT #"\0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "c")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "prepend")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "closed")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(KEYWORD is)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "==")
(ID "WRITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "compress")
(PUNCT ".")
(ID "flush")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "write32u")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "crc")
(PUNCT ")")
(NEWLINE)
(ID "write32u")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "size")
(PUNCT "&")
(LIT 4294967295)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "==")
(ID "READ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "myfileobj")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "myfileobj")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "myfileobj")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "flush")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "zlib_mode")
(PUNCT "=")
(ID "zlib")
(PUNCT ".")
(ID "Z_SYNC_FLUSH")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_check_closed")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "==")
(ID "WRITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "compress")
(PUNCT ".")
(ID "flush")
(PUNCT "(")
(ID "zlib_mode")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "flush")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "fileno")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Invoke the underlying file object's fileno() method.\n\n        This will raise AttributeError if the underlying file object\n        doesn't support fileno().\n        ")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "rewind")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the uncompressed stream file position indicator to the\n        beginning of the file")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "!=")
(ID "READ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT "Can't rewind in write mode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "fileobj")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_new_member")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "extrabuf")
(PUNCT "=")
(LIT #"")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "extrastart")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "readable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "==")
(ID "READ")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "writable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "==")
(ID "WRITE")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "seekable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "seek")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "offset")
(PUNCT ",")
(ID "whence")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "whence")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "whence")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "offset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "+")
(ID "offset")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Seek from end not supported")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "==")
(ID "WRITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "offset")
(PUNCT "<")
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT "Negative seek in write mode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "count")
(PUNCT "=")
(ID "offset")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "offset")
(NEWLINE)
(ID "chunk")
(PUNCT "=")
(ID "bytes")
(PUNCT "(")
(LIT 1024)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "count")
(PUNCT "//")
(LIT 1024)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "bytes")
(PUNCT "(")
(ID "count")
(PUNCT "%")
(LIT 1024)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "mode")
(PUNCT "==")
(ID "READ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "offset")
(PUNCT "<")
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "rewind")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "count")
(PUNCT "=")
(ID "offset")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "offset")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "count")
(PUNCT "//")
(LIT 1024)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 1024)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "count")
(PUNCT "%")
(LIT 1024)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "offset")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "readline")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "size")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "size")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "offset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "extrastart")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "extrabuf")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT #"\n")
(PUNCT ",")
(ID "offset")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "i")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "extrasize")
(PUNCT "-=")
(ID "i")
(PUNCT "-")
(ID "offset")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "+=")
(ID "i")
(PUNCT "-")
(ID "offset")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "extrabuf")
(PUNCT "[")
(ID "offset")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "size")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "maxsize")
(NEWLINE)
(ID "readsize")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "min_readsize")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "readsize")
(PUNCT "=")
(ID "size")
(NEWLINE)
(DEDENT)
(ID "bufs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(ID "size")
(PUNCT "!=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "readsize")
(PUNCT ")")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "c")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT #"\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID "size")
(PUNCT "<=")
(ID "i")
(PUNCT ")")
(KEYWORD or)
(PUNCT "(")
(ID "i")
(PUNCT "==")
(PUNCT "-")
(LIT 1)
(KEYWORD and)
(ID "len")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(PUNCT ">")
(ID "size")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "size")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "i")
(PUNCT ">=")
(LIT 0)
(KEYWORD or)
(ID "c")
(PUNCT "==")
(LIT #"")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bufs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "c")
(PUNCT "[")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_unread")
(PUNCT "(")
(ID "c")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "bufs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(NEWLINE)
(ID "size")
(PUNCT "=")
(ID "size")
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(NEWLINE)
(ID "readsize")
(PUNCT "=")
(ID "min")
(PUNCT "(")
(ID "size")
(PUNCT ",")
(ID "readsize")
(PUNCT "*")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "readsize")
(PUNCT ">")
(ID "self")
(PUNCT ".")
(ID "min_readsize")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "min_readsize")
(PUNCT "=")
(ID "min")
(PUNCT "(")
(ID "readsize")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "min_readsize")
(PUNCT "*")
(LIT 2)
(PUNCT ",")
(LIT 512)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT #"")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "bufs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "compress")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(ID "compresslevel")
(PUNCT "=")
(LIT 9)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Compress data in one shot and return the compressed string.\n    Optional argument is the compression level, in range of 0-9.\n    ")
(NEWLINE)
(ID "buf")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD with)
(ID "GzipFile")
(PUNCT "(")
(ID "fileobj")
(PUNCT "=")
(ID "buf")
(PUNCT ",")
(ID "mode")
(PUNCT "=")
(LIT "wb")
(PUNCT ",")
(ID "compresslevel")
(PUNCT "=")
(ID "compresslevel")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "buf")
(PUNCT ".")
(ID "getvalue")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "decompress")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Decompress a gzip compressed string in one shot.\n    Return the decompressed string.\n    ")
(NEWLINE)
(KEYWORD with)
(ID "GzipFile")
(PUNCT "(")
(ID "fileobj")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "f")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_test")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "decompress")
(PUNCT "=")
(ID "args")
(KEYWORD and)
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(LIT "-d")
(NEWLINE)
(KEYWORD if)
(ID "decompress")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "args")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(PUNCT "[")
(LIT "-")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "arg")
(KEYWORD in)
(ID "args")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "decompress")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "arg")
(PUNCT "==")
(LIT "-")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "GzipFile")
(PUNCT "(")
(ID "filename")
(PUNCT "=")
(LIT "")
(PUNCT ",")
(ID "mode")
(PUNCT "=")
(LIT "rb")
(PUNCT ",")
(ID "fileobj")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ".")
(ID "buffer")
(PUNCT ")")
(NEWLINE)
(ID "g")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "buffer")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "arg")
(PUNCT "[")
(PUNCT "-")
(LIT 3)
(PUNCT ":")
(PUNCT "]")
(PUNCT "!=")
(LIT ".gz")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "filename doesn't end in .gz:")
(PUNCT ",")
(ID "repr")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "f")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "arg")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(NEWLINE)
(ID "g")
(PUNCT "=")
(ID "builtins")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "arg")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 3)
(PUNCT "]")
(PUNCT ",")
(LIT "wb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "arg")
(PUNCT "==")
(LIT "-")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ".")
(ID "buffer")
(NEWLINE)
(ID "g")
(PUNCT "=")
(ID "GzipFile")
(PUNCT "(")
(ID "filename")
(PUNCT "=")
(LIT "")
(PUNCT ",")
(ID "mode")
(PUNCT "=")
(LIT "wb")
(PUNCT ",")
(ID "fileobj")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "buffer")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "builtins")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "arg")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(NEWLINE)
(ID "g")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "arg")
(PUNCT "+")
(LIT ".gz")
(PUNCT ",")
(LIT "wb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "chunk")
(PUNCT "=")
(ID "f")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 1024)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "chunk")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "g")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "g")
(KEYWORD is)
(KEYWORD not)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "g")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "f")
(KEYWORD is)
(KEYWORD not)
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ".")
(ID "buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_test")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
