(LIT "Calendar printing functions\n\nNote when comparing these calendars to the ones printed by cal(1): By\ndefault, these calendars have Monday as the first day of the week, and\nSunday as the last (the European convention). Use setfirstweekday() to\nset the first day of the week (0=Monday, 6=Sunday).")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "datetime")
(NEWLINE)
(KEYWORD import)
(ID "locale")
(KEYWORD as)
(ID "_locale")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "IllegalMonthError")
(PUNCT ",")
(LIT "IllegalWeekdayError")
(PUNCT ",")
(LIT "setfirstweekday")
(PUNCT ",")
(LIT "firstweekday")
(PUNCT ",")
(LIT "isleap")
(PUNCT ",")
(LIT "leapdays")
(PUNCT ",")
(LIT "weekday")
(PUNCT ",")
(LIT "monthrange")
(PUNCT ",")
(LIT "monthcalendar")
(PUNCT ",")
(LIT "prmonth")
(PUNCT ",")
(LIT "month")
(PUNCT ",")
(LIT "prcal")
(PUNCT ",")
(LIT "calendar")
(PUNCT ",")
(LIT "timegm")
(PUNCT ",")
(LIT "month_name")
(PUNCT ",")
(LIT "month_abbr")
(PUNCT ",")
(LIT "day_name")
(PUNCT ",")
(LIT "day_abbr")
(PUNCT "]")
(NEWLINE)
(ID "error")
(PUNCT "=")
(ID "ValueError")
(NEWLINE)
(KEYWORD class)
(ID "IllegalMonthError")
(PUNCT "(")
(ID "ValueError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "month")
(PUNCT "=")
(ID "month")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__str__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "bad month number %r; must be 1-12")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "month")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "IllegalWeekdayError")
(PUNCT "(")
(ID "ValueError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "weekday")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "weekday")
(PUNCT "=")
(ID "weekday")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__str__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "bad weekday number %r; must be 0 (Monday) to 6 (Sunday)")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "weekday")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "January")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "February")
(PUNCT "=")
(LIT 2)
(NEWLINE)
(ID "mdays")
(PUNCT "=")
(PUNCT "[")
(LIT 0)
(PUNCT ",")
(LIT 31)
(PUNCT ",")
(LIT 28)
(PUNCT ",")
(LIT 31)
(PUNCT ",")
(LIT 30)
(PUNCT ",")
(LIT 31)
(PUNCT ",")
(LIT 30)
(PUNCT ",")
(LIT 31)
(PUNCT ",")
(LIT 31)
(PUNCT ",")
(LIT 30)
(PUNCT ",")
(LIT 31)
(PUNCT ",")
(LIT 30)
(PUNCT ",")
(LIT 31)
(PUNCT "]")
(NEWLINE)
(KEYWORD class)
(ID "_localized_month")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_months")
(PUNCT "=")
(PUNCT "[")
(ID "datetime")
(PUNCT ".")
(ID "date")
(PUNCT "(")
(LIT 2001)
(PUNCT ",")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ".")
(ID "strftime")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 12)
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(ID "_months")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(KEYWORD lambda)
(ID "x")
(PUNCT ":")
(LIT "")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "format")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "format")
(PUNCT "=")
(ID "format")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "funcs")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_months")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "slice")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(ID "f")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "format")
(PUNCT ")")
(KEYWORD for)
(ID "f")
(KEYWORD in)
(ID "funcs")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "funcs")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "format")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__len__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 13)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_localized_day")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_days")
(PUNCT "=")
(PUNCT "[")
(ID "datetime")
(PUNCT ".")
(ID "date")
(PUNCT "(")
(LIT 2001)
(PUNCT ",")
(LIT 1)
(PUNCT ",")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT ".")
(ID "strftime")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 7)
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "format")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "format")
(PUNCT "=")
(ID "format")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "funcs")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "slice")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(ID "f")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "format")
(PUNCT ")")
(KEYWORD for)
(ID "f")
(KEYWORD in)
(ID "funcs")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "funcs")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "format")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__len__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 7)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "day_name")
(PUNCT "=")
(ID "_localized_day")
(PUNCT "(")
(LIT "%A")
(PUNCT ")")
(NEWLINE)
(ID "day_abbr")
(PUNCT "=")
(ID "_localized_day")
(PUNCT "(")
(LIT "%a")
(PUNCT ")")
(NEWLINE)
(ID "month_name")
(PUNCT "=")
(ID "_localized_month")
(PUNCT "(")
(LIT "%B")
(PUNCT ")")
(NEWLINE)
(ID "month_abbr")
(PUNCT "=")
(ID "_localized_month")
(PUNCT "(")
(LIT "%b")
(PUNCT ")")
(NEWLINE)
(PUNCT "(")
(ID "MONDAY")
(PUNCT ",")
(ID "TUESDAY")
(PUNCT ",")
(ID "WEDNESDAY")
(PUNCT ",")
(ID "THURSDAY")
(PUNCT ",")
(ID "FRIDAY")
(PUNCT ",")
(ID "SATURDAY")
(PUNCT ",")
(ID "SUNDAY")
(PUNCT ")")
(PUNCT "=")
(ID "range")
(PUNCT "(")
(LIT 7)
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "isleap")
(PUNCT "(")
(ID "year")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return True for leap years, False for non-leap years.")
(NEWLINE)
(KEYWORD return)
(ID "year")
(PUNCT "%")
(LIT 4)
(PUNCT "==")
(LIT 0)
(KEYWORD and)
(PUNCT "(")
(ID "year")
(PUNCT "%")
(LIT 100)
(PUNCT "!=")
(LIT 0)
(KEYWORD or)
(ID "year")
(PUNCT "%")
(LIT 400)
(PUNCT "==")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "leapdays")
(PUNCT "(")
(ID "y1")
(PUNCT ",")
(ID "y2")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return number of leap years in range [y1, y2).\n       Assume y1 <= y2.")
(NEWLINE)
(ID "y1")
(PUNCT "-=")
(LIT 1)
(NEWLINE)
(ID "y2")
(PUNCT "-=")
(LIT 1)
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID "y2")
(PUNCT "//")
(LIT 4)
(PUNCT "-")
(ID "y1")
(PUNCT "//")
(LIT 4)
(PUNCT ")")
(PUNCT "-")
(PUNCT "(")
(ID "y2")
(PUNCT "//")
(LIT 100)
(PUNCT "-")
(ID "y1")
(PUNCT "//")
(LIT 100)
(PUNCT ")")
(PUNCT "+")
(PUNCT "(")
(ID "y2")
(PUNCT "//")
(LIT 400)
(PUNCT "-")
(ID "y1")
(PUNCT "//")
(LIT 400)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "weekday")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(ID "day")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return weekday (0-6 ~ Mon-Sun) for year (1970-...), month (1-12),\n       day (1-31).")
(NEWLINE)
(KEYWORD return)
(ID "datetime")
(PUNCT ".")
(ID "date")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(ID "day")
(PUNCT ")")
(PUNCT ".")
(ID "weekday")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "monthrange")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return weekday (0-6 ~ Mon-Sun) and number of days (28-31) for\n       year, month.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(LIT 1)
(PUNCT "<=")
(ID "month")
(PUNCT "<=")
(LIT 12)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "IllegalMonthError")
(PUNCT "(")
(ID "month")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "day1")
(PUNCT "=")
(ID "weekday")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "ndays")
(PUNCT "=")
(ID "mdays")
(PUNCT "[")
(ID "month")
(PUNCT "]")
(PUNCT "+")
(PUNCT "(")
(ID "month")
(PUNCT "==")
(ID "February")
(KEYWORD and)
(ID "isleap")
(PUNCT "(")
(ID "year")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "day1")
(PUNCT ",")
(ID "ndays")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "Calendar")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Base calendar class. This class doesn't do any formatting. It simply\n    provides data to subclasses.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "firstweekday")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "firstweekday")
(PUNCT "=")
(ID "firstweekday")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getfirstweekday")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_firstweekday")
(PUNCT "%")
(LIT 7)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setfirstweekday")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "firstweekday")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_firstweekday")
(PUNCT "=")
(ID "firstweekday")
(NEWLINE)
(DEDENT)
(ID "firstweekday")
(PUNCT "=")
(ID "property")
(PUNCT "(")
(ID "getfirstweekday")
(PUNCT ",")
(ID "setfirstweekday")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "iterweekdays")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a iterator for one week of weekday numbers starting with the\n        configured first one.\n        ")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "firstweekday")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "firstweekday")
(PUNCT "+")
(LIT 7)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "i")
(PUNCT "%")
(LIT 7)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "itermonthdates")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return an iterator for one month. The iterator will yield datetime.date\n        values and will always iterate through complete weeks, so it will yield\n        dates outside the specified month.\n        ")
(NEWLINE)
(ID "date")
(PUNCT "=")
(ID "datetime")
(PUNCT ".")
(ID "date")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "days")
(PUNCT "=")
(PUNCT "(")
(ID "date")
(PUNCT ".")
(ID "weekday")
(PUNCT "(")
(PUNCT ")")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "firstweekday")
(PUNCT ")")
(PUNCT "%")
(LIT 7)
(NEWLINE)
(ID "date")
(PUNCT "-=")
(ID "datetime")
(PUNCT ".")
(ID "timedelta")
(PUNCT "(")
(ID "days")
(PUNCT "=")
(ID "days")
(PUNCT ")")
(NEWLINE)
(ID "oneday")
(PUNCT "=")
(ID "datetime")
(PUNCT ".")
(ID "timedelta")
(PUNCT "(")
(ID "days")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "date")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "date")
(PUNCT "+=")
(ID "oneday")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OverflowError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "date")
(PUNCT ".")
(ID "month")
(PUNCT "!=")
(ID "month")
(KEYWORD and)
(ID "date")
(PUNCT ".")
(ID "weekday")
(PUNCT "(")
(PUNCT ")")
(PUNCT "==")
(ID "self")
(PUNCT ".")
(ID "firstweekday")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "itermonthdays2")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Like itermonthdates(), but will yield (day number, weekday number)\n        tuples. For days outside the specified month the day number is 0.\n        ")
(NEWLINE)
(KEYWORD for)
(ID "date")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "itermonthdates")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "date")
(PUNCT ".")
(ID "month")
(PUNCT "!=")
(ID "month")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "date")
(PUNCT ".")
(ID "weekday")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(PUNCT "(")
(ID "date")
(PUNCT ".")
(ID "day")
(PUNCT ",")
(ID "date")
(PUNCT ".")
(ID "weekday")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "itermonthdays")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Like itermonthdates(), but will yield day numbers. For days outside\n        the specified month the day number is 0.\n        ")
(NEWLINE)
(KEYWORD for)
(ID "date")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "itermonthdates")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "date")
(PUNCT ".")
(ID "month")
(PUNCT "!=")
(ID "month")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "date")
(PUNCT ".")
(ID "day")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "monthdatescalendar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a matrix (list of lists) representing a month's calendar.\n        Each row represents a week; week entries are datetime.date values.\n        ")
(NEWLINE)
(ID "dates")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "itermonthdates")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(ID "dates")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 7)
(PUNCT "]")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "dates")
(PUNCT ")")
(PUNCT ",")
(LIT 7)
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "monthdays2calendar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a matrix representing a month's calendar.\n        Each row represents a week; week entries are\n        (day number, weekday number) tuples. Day numbers outside this month\n        are zero.\n        ")
(NEWLINE)
(ID "days")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "itermonthdays2")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(ID "days")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 7)
(PUNCT "]")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "days")
(PUNCT ")")
(PUNCT ",")
(LIT 7)
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "monthdayscalendar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a matrix representing a month's calendar.\n        Each row represents a week; days outside this month are zero.\n        ")
(NEWLINE)
(ID "days")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "itermonthdays")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(ID "days")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 7)
(PUNCT "]")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "days")
(PUNCT ")")
(PUNCT ",")
(LIT 7)
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "yeardatescalendar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "year")
(PUNCT ",")
(ID "width")
(PUNCT "=")
(LIT 3)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return the data for the specified year ready for formatting. The return\n        value is a list of month rows. Each month row contains up to width months.\n        Each month contains between 4 and 6 weeks and each week contains 1-7\n        days. Days are datetime.date objects.\n        ")
(NEWLINE)
(ID "months")
(PUNCT "=")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "monthdatescalendar")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "January")
(PUNCT ",")
(ID "January")
(PUNCT "+")
(LIT 12)
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(ID "months")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(ID "width")
(PUNCT "]")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "months")
(PUNCT ")")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "yeardays2calendar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "year")
(PUNCT ",")
(ID "width")
(PUNCT "=")
(LIT 3)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return the data for the specified year ready for formatting (similar to\n        yeardatescalendar()). Entries in the week lists are\n        (day number, weekday number) tuples. Day numbers outside this month are\n        zero.\n        ")
(NEWLINE)
(ID "months")
(PUNCT "=")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "monthdays2calendar")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "January")
(PUNCT ",")
(ID "January")
(PUNCT "+")
(LIT 12)
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(ID "months")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(ID "width")
(PUNCT "]")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "months")
(PUNCT ")")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "yeardayscalendar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "year")
(PUNCT ",")
(ID "width")
(PUNCT "=")
(LIT 3)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return the data for the specified year ready for formatting (similar to\n        yeardatescalendar()). Entries in the week lists are day numbers.\n        Day numbers outside this month are zero.\n        ")
(NEWLINE)
(ID "months")
(PUNCT "=")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "monthdayscalendar")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "January")
(PUNCT ",")
(ID "January")
(PUNCT "+")
(LIT 12)
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(ID "months")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(ID "width")
(PUNCT "]")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "months")
(PUNCT ")")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "TextCalendar")
(PUNCT "(")
(ID "Calendar")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Subclass of Calendar that outputs a calendar as a simple plain text\n    similar to the UNIX program cal.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "prweek")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "theweek")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Print a single week (no newline).\n        ")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "formatweek")
(PUNCT "(")
(ID "theweek")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatday")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "day")
(PUNCT ",")
(ID "weekday")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Returns a formatted day.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "day")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "%2i")
(PUNCT "%")
(ID "day")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "s")
(PUNCT ".")
(ID "center")
(PUNCT "(")
(ID "width")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatweek")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "theweek")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Returns a single week in a string (no newline).\n        ")
(NEWLINE)
(KEYWORD return)
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "formatday")
(PUNCT "(")
(ID "d")
(PUNCT ",")
(ID "wd")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(KEYWORD for)
(PUNCT "(")
(ID "d")
(PUNCT ",")
(ID "wd")
(PUNCT ")")
(KEYWORD in)
(ID "theweek")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatweekday")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "day")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Returns a formatted week day name.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "width")
(PUNCT ">=")
(LIT 9)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT "=")
(ID "day_name")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT "=")
(ID "day_abbr")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "names")
(PUNCT "[")
(ID "day")
(PUNCT "]")
(PUNCT "[")
(PUNCT ":")
(ID "width")
(PUNCT "]")
(PUNCT ".")
(ID "center")
(PUNCT "(")
(ID "width")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatweekheader")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a header for a week.\n        ")
(NEWLINE)
(KEYWORD return)
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "formatweekday")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "iterweekdays")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatmonthname")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "theyear")
(PUNCT ",")
(ID "themonth")
(PUNCT ",")
(ID "width")
(PUNCT ",")
(ID "withyear")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a formatted month name.\n        ")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "month_name")
(PUNCT "[")
(ID "themonth")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "withyear")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "%s %r")
(PUNCT "%")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "theyear")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "s")
(PUNCT ".")
(ID "center")
(PUNCT "(")
(ID "width")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "prmonth")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "theyear")
(PUNCT ",")
(ID "themonth")
(PUNCT ",")
(ID "w")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "l")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Print a month's calendar.\n        ")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "formatmonth")
(PUNCT "(")
(ID "theyear")
(PUNCT ",")
(ID "themonth")
(PUNCT ",")
(ID "w")
(PUNCT ",")
(ID "l")
(PUNCT ")")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatmonth")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "theyear")
(PUNCT ",")
(ID "themonth")
(PUNCT ",")
(ID "w")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "l")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a month's calendar string (multi-line).\n        ")
(NEWLINE)
(ID "w")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(ID "w")
(PUNCT ")")
(NEWLINE)
(ID "l")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(ID "l")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "formatmonthname")
(PUNCT "(")
(ID "theyear")
(PUNCT ",")
(ID "themonth")
(PUNCT ",")
(LIT 7)
(PUNCT "*")
(PUNCT "(")
(ID "w")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "+=")
(LIT "\n")
(PUNCT "*")
(ID "l")
(NEWLINE)
(ID "s")
(PUNCT "+=")
(ID "self")
(PUNCT ".")
(ID "formatweekheader")
(PUNCT "(")
(ID "w")
(PUNCT ")")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "+=")
(LIT "\n")
(PUNCT "*")
(ID "l")
(NEWLINE)
(KEYWORD for)
(ID "week")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "monthdays2calendar")
(PUNCT "(")
(ID "theyear")
(PUNCT ",")
(ID "themonth")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "+=")
(ID "self")
(PUNCT ".")
(ID "formatweek")
(PUNCT "(")
(ID "week")
(PUNCT ",")
(ID "w")
(PUNCT ")")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "+=")
(LIT "\n")
(PUNCT "*")
(ID "l")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatyear")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "theyear")
(PUNCT ",")
(ID "w")
(PUNCT "=")
(LIT 2)
(PUNCT ",")
(ID "l")
(PUNCT "=")
(LIT 1)
(PUNCT ",")
(ID "c")
(PUNCT "=")
(LIT 6)
(PUNCT ",")
(ID "m")
(PUNCT "=")
(LIT 3)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Returns a year's calendar as a multi-line string.\n        ")
(NEWLINE)
(ID "w")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(ID "w")
(PUNCT ")")
(NEWLINE)
(ID "l")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(ID "l")
(PUNCT ")")
(NEWLINE)
(ID "c")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(ID "c")
(PUNCT ")")
(NEWLINE)
(ID "colwidth")
(PUNCT "=")
(PUNCT "(")
(ID "w")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT "*")
(LIT 7)
(PUNCT "-")
(LIT 1)
(NEWLINE)
(ID "v")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "a")
(PUNCT "=")
(ID "v")
(PUNCT ".")
(ID "append")
(NEWLINE)
(ID "a")
(PUNCT "(")
(ID "repr")
(PUNCT "(")
(ID "theyear")
(PUNCT ")")
(PUNCT ".")
(ID "center")
(PUNCT "(")
(ID "colwidth")
(PUNCT "*")
(ID "m")
(PUNCT "+")
(ID "c")
(PUNCT "*")
(PUNCT "(")
(ID "m")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "\n")
(PUNCT "*")
(ID "l")
(PUNCT ")")
(NEWLINE)
(ID "header")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "formatweekheader")
(PUNCT "(")
(ID "w")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "row")
(PUNCT ")")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "yeardays2calendar")
(PUNCT "(")
(ID "theyear")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "months")
(PUNCT "=")
(ID "range")
(PUNCT "(")
(ID "m")
(PUNCT "*")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ",")
(ID "min")
(PUNCT "(")
(ID "m")
(PUNCT "*")
(PUNCT "(")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(PUNCT ",")
(LIT 13)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "\n")
(PUNCT "*")
(ID "l")
(PUNCT ")")
(NEWLINE)
(ID "names")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "formatmonthname")
(PUNCT "(")
(ID "theyear")
(PUNCT ",")
(ID "k")
(PUNCT ",")
(ID "colwidth")
(PUNCT ",")
(KEYWORD False)
(PUNCT ")")
(KEYWORD for)
(ID "k")
(KEYWORD in)
(ID "months")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(ID "formatstring")
(PUNCT "(")
(ID "names")
(PUNCT ",")
(ID "colwidth")
(PUNCT ",")
(ID "c")
(PUNCT ")")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "\n")
(PUNCT "*")
(ID "l")
(PUNCT ")")
(NEWLINE)
(ID "headers")
(PUNCT "=")
(PUNCT "(")
(ID "header")
(KEYWORD for)
(ID "k")
(KEYWORD in)
(ID "months")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(ID "formatstring")
(PUNCT "(")
(ID "headers")
(PUNCT ",")
(ID "colwidth")
(PUNCT ",")
(ID "c")
(PUNCT ")")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "\n")
(PUNCT "*")
(ID "l")
(PUNCT ")")
(NEWLINE)
(ID "height")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "cal")
(PUNCT ")")
(KEYWORD for)
(ID "cal")
(KEYWORD in)
(ID "row")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "j")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "height")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "weeks")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "cal")
(KEYWORD in)
(ID "row")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "j")
(PUNCT ">=")
(ID "len")
(PUNCT "(")
(ID "cal")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "weeks")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "weeks")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "formatweek")
(PUNCT "(")
(ID "cal")
(PUNCT "[")
(ID "j")
(PUNCT "]")
(PUNCT ",")
(ID "w")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "a")
(PUNCT "(")
(ID "formatstring")
(PUNCT "(")
(ID "weeks")
(PUNCT ",")
(ID "colwidth")
(PUNCT ",")
(ID "c")
(PUNCT ")")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "\n")
(PUNCT "*")
(ID "l")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "v")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "pryear")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "theyear")
(PUNCT ",")
(ID "w")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "l")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "c")
(PUNCT "=")
(LIT 6)
(PUNCT ",")
(ID "m")
(PUNCT "=")
(LIT 3)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Print a year's calendar.")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "formatyear")
(PUNCT "(")
(ID "theyear")
(PUNCT ",")
(ID "w")
(PUNCT ",")
(ID "l")
(PUNCT ",")
(ID "c")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "HTMLCalendar")
(PUNCT "(")
(ID "Calendar")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    This calendar returns complete HTML pages.\n    ")
(NEWLINE)
(ID "cssclasses")
(PUNCT "=")
(PUNCT "[")
(LIT "mon")
(PUNCT ",")
(LIT "tue")
(PUNCT ",")
(LIT "wed")
(PUNCT ",")
(LIT "thu")
(PUNCT ",")
(LIT "fri")
(PUNCT ",")
(LIT "sat")
(PUNCT ",")
(LIT "sun")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "formatday")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "day")
(PUNCT ",")
(ID "weekday")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a day as a table cell.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "day")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<td class=\"noday\">&nbsp;</td>")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<td class=\"%s\">%d</td>")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "cssclasses")
(PUNCT "[")
(ID "weekday")
(PUNCT "]")
(PUNCT ",")
(ID "day")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "formatweek")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "theweek")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a complete week as a table row.\n        ")
(NEWLINE)
(ID "s")
(PUNCT "=")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "formatday")
(PUNCT "(")
(ID "d")
(PUNCT ",")
(ID "wd")
(PUNCT ")")
(KEYWORD for)
(PUNCT "(")
(ID "d")
(PUNCT ",")
(ID "wd")
(PUNCT ")")
(KEYWORD in)
(ID "theweek")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "<tr>%s</tr>")
(PUNCT "%")
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatweekday")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "day")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a weekday name as a table header.\n        ")
(NEWLINE)
(KEYWORD return)
(LIT "<th class=\"%s\">%s</th>")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "cssclasses")
(PUNCT "[")
(ID "day")
(PUNCT "]")
(PUNCT ",")
(ID "day_abbr")
(PUNCT "[")
(ID "day")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatweekheader")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a header for a week as a table row.\n        ")
(NEWLINE)
(ID "s")
(PUNCT "=")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "formatweekday")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "iterweekdays")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "<tr>%s</tr>")
(PUNCT "%")
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatmonthname")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "theyear")
(PUNCT ",")
(ID "themonth")
(PUNCT ",")
(ID "withyear")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a month name as a table row.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "withyear")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "%s %s")
(PUNCT "%")
(PUNCT "(")
(ID "month_name")
(PUNCT "[")
(ID "themonth")
(PUNCT "]")
(PUNCT ",")
(ID "theyear")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "%s")
(PUNCT "%")
(ID "month_name")
(PUNCT "[")
(ID "themonth")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "<tr><th colspan=\"7\" class=\"month\">%s</th></tr>")
(PUNCT "%")
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatmonth")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "theyear")
(PUNCT ",")
(ID "themonth")
(PUNCT ",")
(ID "withyear")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a formatted month as a table.\n        ")
(NEWLINE)
(ID "v")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "a")
(PUNCT "=")
(ID "v")
(PUNCT ".")
(ID "append")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"month\">")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "formatmonthname")
(PUNCT "(")
(ID "theyear")
(PUNCT ",")
(ID "themonth")
(PUNCT ",")
(ID "withyear")
(PUNCT "=")
(ID "withyear")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "formatweekheader")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "week")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "monthdays2calendar")
(PUNCT "(")
(ID "theyear")
(PUNCT ",")
(ID "themonth")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "a")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "formatweek")
(PUNCT "(")
(ID "week")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "a")
(PUNCT "(")
(LIT "</table>")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "v")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatyear")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "theyear")
(PUNCT ",")
(ID "width")
(PUNCT "=")
(LIT 3)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a formatted year as a table of tables.\n        ")
(NEWLINE)
(ID "v")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "a")
(PUNCT "=")
(ID "v")
(PUNCT ".")
(ID "append")
(NEWLINE)
(ID "width")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(ID "width")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"year\">")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "<tr><th colspan=\"%d\" class=\"year\">%s</th></tr>")
(PUNCT "%")
(PUNCT "(")
(ID "width")
(PUNCT ",")
(ID "theyear")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "January")
(PUNCT ",")
(ID "January")
(PUNCT "+")
(LIT 12)
(PUNCT ",")
(ID "width")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "months")
(PUNCT "=")
(ID "range")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "min")
(PUNCT "(")
(ID "i")
(PUNCT "+")
(ID "width")
(PUNCT ",")
(LIT 13)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "<tr>")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "m")
(KEYWORD in)
(ID "months")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "a")
(PUNCT "(")
(LIT "<td>")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "formatmonth")
(PUNCT "(")
(ID "theyear")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "withyear")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "</td>")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "a")
(PUNCT "(")
(LIT "</tr>")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "a")
(PUNCT "(")
(LIT "</table>")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "v")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatyearpage")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "theyear")
(PUNCT ",")
(ID "width")
(PUNCT "=")
(LIT 3)
(PUNCT ",")
(ID "css")
(PUNCT "=")
(LIT "calendar.css")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a formatted year as a complete HTML page.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "encoding")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "encoding")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "getdefaultencoding")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "v")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "a")
(PUNCT "=")
(ID "v")
(PUNCT ".")
(ID "append")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "<?xml version=\"1.0\" encoding=\"%s\"?>\n")
(PUNCT "%")
(ID "encoding")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "<html>\n")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "<head>\n")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=%s\" />\n")
(PUNCT "%")
(ID "encoding")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "css")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "a")
(PUNCT "(")
(LIT "<link rel=\"stylesheet\" type=\"text/css\" href=\"%s\" />\n")
(PUNCT "%")
(ID "css")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "a")
(PUNCT "(")
(LIT "<title>Calendar for %d</title>\n")
(PUNCT "%")
(ID "theyear")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "</head>\n")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "<body>\n")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "formatyear")
(PUNCT "(")
(ID "theyear")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "</body>\n")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "(")
(LIT "</html>\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "v")
(PUNCT ")")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(ID "encoding")
(PUNCT ",")
(LIT "xmlcharrefreplace")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "different_locale")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "locale")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "locale")
(PUNCT "=")
(ID "locale")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__enter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "oldlocale")
(PUNCT "=")
(ID "_locale")
(PUNCT ".")
(ID "getlocale")
(PUNCT "(")
(ID "_locale")
(PUNCT ".")
(ID "LC_TIME")
(PUNCT ")")
(NEWLINE)
(ID "_locale")
(PUNCT ".")
(ID "setlocale")
(PUNCT "(")
(ID "_locale")
(PUNCT ".")
(ID "LC_TIME")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "locale")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__exit__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_locale")
(PUNCT ".")
(ID "setlocale")
(PUNCT "(")
(ID "_locale")
(PUNCT ".")
(ID "LC_TIME")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "oldlocale")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "LocaleTextCalendar")
(PUNCT "(")
(ID "TextCalendar")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    This class can be passed a locale name in the constructor and will return\n    month and weekday names in the specified locale. If this locale includes\n    an encoding all strings containing month and weekday names will be returned\n    as unicode.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "firstweekday")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "locale")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TextCalendar")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "firstweekday")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "locale")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "locale")
(PUNCT "=")
(ID "_locale")
(PUNCT ".")
(ID "getdefaultlocale")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "locale")
(PUNCT "=")
(ID "locale")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatweekday")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "day")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "different_locale")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "locale")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "width")
(PUNCT ">=")
(LIT 9)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT "=")
(ID "day_name")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT "=")
(ID "day_abbr")
(NEWLINE)
(DEDENT)
(ID "name")
(PUNCT "=")
(ID "names")
(PUNCT "[")
(ID "day")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "name")
(PUNCT "[")
(PUNCT ":")
(ID "width")
(PUNCT "]")
(PUNCT ".")
(ID "center")
(PUNCT "(")
(ID "width")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "formatmonthname")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "theyear")
(PUNCT ",")
(ID "themonth")
(PUNCT ",")
(ID "width")
(PUNCT ",")
(ID "withyear")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "different_locale")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "locale")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "month_name")
(PUNCT "[")
(ID "themonth")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "withyear")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "%s %r")
(PUNCT "%")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "theyear")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "s")
(PUNCT ".")
(ID "center")
(PUNCT "(")
(ID "width")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "LocaleHTMLCalendar")
(PUNCT "(")
(ID "HTMLCalendar")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    This class can be passed a locale name in the constructor and will return\n    month and weekday names in the specified locale. If this locale includes\n    an encoding all strings containing month and weekday names will be returned\n    as unicode.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "firstweekday")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "locale")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "HTMLCalendar")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "firstweekday")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "locale")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "locale")
(PUNCT "=")
(ID "_locale")
(PUNCT ".")
(ID "getdefaultlocale")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "locale")
(PUNCT "=")
(ID "locale")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatweekday")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "day")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "different_locale")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "locale")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "day_abbr")
(PUNCT "[")
(ID "day")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(LIT "<th class=\"%s\">%s</th>")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "cssclasses")
(PUNCT "[")
(ID "day")
(PUNCT "]")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "formatmonthname")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "theyear")
(PUNCT ",")
(ID "themonth")
(PUNCT ",")
(ID "withyear")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "different_locale")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "locale")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "month_name")
(PUNCT "[")
(ID "themonth")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "withyear")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "%s %s")
(PUNCT "%")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "theyear")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "<tr><th colspan=\"7\" class=\"month\">%s</th></tr>")
(PUNCT "%")
(ID "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "c")
(PUNCT "=")
(ID "TextCalendar")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "firstweekday")
(PUNCT "=")
(ID "c")
(PUNCT ".")
(ID "getfirstweekday")
(NEWLINE)
(KEYWORD def)
(ID "setfirstweekday")
(PUNCT "(")
(ID "firstweekday")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "MONDAY")
(PUNCT "<=")
(ID "firstweekday")
(PUNCT "<=")
(ID "SUNDAY")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "IllegalWeekdayError")
(PUNCT "(")
(ID "firstweekday")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "c")
(PUNCT ".")
(ID "firstweekday")
(PUNCT "=")
(ID "firstweekday")
(NEWLINE)
(DEDENT)
(ID "monthcalendar")
(PUNCT "=")
(ID "c")
(PUNCT ".")
(ID "monthdayscalendar")
(NEWLINE)
(ID "prweek")
(PUNCT "=")
(ID "c")
(PUNCT ".")
(ID "prweek")
(NEWLINE)
(ID "week")
(PUNCT "=")
(ID "c")
(PUNCT ".")
(ID "formatweek")
(NEWLINE)
(ID "weekheader")
(PUNCT "=")
(ID "c")
(PUNCT ".")
(ID "formatweekheader")
(NEWLINE)
(ID "prmonth")
(PUNCT "=")
(ID "c")
(PUNCT ".")
(ID "prmonth")
(NEWLINE)
(ID "month")
(PUNCT "=")
(ID "c")
(PUNCT ".")
(ID "formatmonth")
(NEWLINE)
(ID "calendar")
(PUNCT "=")
(ID "c")
(PUNCT ".")
(ID "formatyear")
(NEWLINE)
(ID "prcal")
(PUNCT "=")
(ID "c")
(PUNCT ".")
(ID "pryear")
(NEWLINE)
(ID "_colwidth")
(PUNCT "=")
(LIT 7)
(PUNCT "*")
(LIT 3)
(PUNCT "-")
(LIT 1)
(NEWLINE)
(ID "_spacing")
(PUNCT "=")
(LIT 6)
(NEWLINE)
(KEYWORD def)
(ID "format")
(PUNCT "(")
(ID "cols")
(PUNCT ",")
(ID "colwidth")
(PUNCT "=")
(ID "_colwidth")
(PUNCT ",")
(ID "spacing")
(PUNCT "=")
(ID "_spacing")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Prints multi-column formatting for year calendars")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "formatstring")
(PUNCT "(")
(ID "cols")
(PUNCT ",")
(ID "colwidth")
(PUNCT ",")
(ID "spacing")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatstring")
(PUNCT "(")
(ID "cols")
(PUNCT ",")
(ID "colwidth")
(PUNCT "=")
(ID "_colwidth")
(PUNCT ",")
(ID "spacing")
(PUNCT "=")
(ID "_spacing")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns a string formatted from n strings, centered within n columns.")
(NEWLINE)
(ID "spacing")
(PUNCT "*=")
(LIT " ")
(NEWLINE)
(KEYWORD return)
(ID "spacing")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "c")
(PUNCT ".")
(ID "center")
(PUNCT "(")
(ID "colwidth")
(PUNCT ")")
(KEYWORD for)
(ID "c")
(KEYWORD in)
(ID "cols")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "EPOCH")
(PUNCT "=")
(LIT 1970)
(NEWLINE)
(ID "_EPOCH_ORD")
(PUNCT "=")
(ID "datetime")
(PUNCT ".")
(ID "date")
(PUNCT "(")
(ID "EPOCH")
(PUNCT ",")
(LIT 1)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ".")
(ID "toordinal")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "timegm")
(PUNCT "(")
(ID "tuple")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Unrelated but handy function to calculate Unix timestamp from GMT.")
(NEWLINE)
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(ID "day")
(PUNCT ",")
(ID "hour")
(PUNCT ",")
(ID "minute")
(PUNCT ",")
(ID "second")
(PUNCT "=")
(ID "tuple")
(PUNCT "[")
(PUNCT ":")
(LIT 6)
(PUNCT "]")
(NEWLINE)
(ID "days")
(PUNCT "=")
(ID "datetime")
(PUNCT ".")
(ID "date")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ".")
(ID "toordinal")
(PUNCT "(")
(PUNCT ")")
(PUNCT "-")
(ID "_EPOCH_ORD")
(PUNCT "+")
(ID "day")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(ID "hours")
(PUNCT "=")
(ID "days")
(PUNCT "*")
(LIT 24)
(PUNCT "+")
(ID "hour")
(NEWLINE)
(ID "minutes")
(PUNCT "=")
(ID "hours")
(PUNCT "*")
(LIT 60)
(PUNCT "+")
(ID "minute")
(NEWLINE)
(ID "seconds")
(PUNCT "=")
(ID "minutes")
(PUNCT "*")
(LIT 60)
(PUNCT "+")
(ID "second")
(NEWLINE)
(KEYWORD return)
(ID "seconds")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "main")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "optparse")
(NEWLINE)
(ID "parser")
(PUNCT "=")
(ID "optparse")
(PUNCT ".")
(ID "OptionParser")
(PUNCT "(")
(ID "usage")
(PUNCT "=")
(LIT "usage: %prog [options] [year [month]]")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_option")
(PUNCT "(")
(LIT "-w")
(PUNCT ",")
(LIT "--width")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "width")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(LIT "int")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(LIT 2)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "width of date column (default 2, text only)")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_option")
(PUNCT "(")
(LIT "-l")
(PUNCT ",")
(LIT "--lines")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "lines")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(LIT "int")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(LIT 1)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "number of lines for each week (default 1, text only)")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_option")
(PUNCT "(")
(LIT "-s")
(PUNCT ",")
(LIT "--spacing")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "spacing")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(LIT "int")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(LIT 6)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "spacing between months (default 6, text only)")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_option")
(PUNCT "(")
(LIT "-m")
(PUNCT ",")
(LIT "--months")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "months")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(LIT "int")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(LIT 3)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "months per row (default 3, text only)")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_option")
(PUNCT "(")
(LIT "-c")
(PUNCT ",")
(LIT "--css")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "css")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(LIT "calendar.css")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "CSS to use for page (html only)")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_option")
(PUNCT "(")
(LIT "-L")
(PUNCT ",")
(LIT "--locale")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "locale")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "locale to be used from month and weekday names")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_option")
(PUNCT "(")
(LIT "-e")
(PUNCT ",")
(LIT "--encoding")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "encoding")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "Encoding to use for output.")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_option")
(PUNCT "(")
(LIT "-t")
(PUNCT ",")
(LIT "--type")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "type")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(LIT "text")
(PUNCT ",")
(ID "choices")
(PUNCT "=")
(PUNCT "(")
(LIT "text")
(PUNCT ",")
(LIT "html")
(PUNCT ")")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "output type (text or html)")
(PUNCT ")")
(NEWLINE)
(PUNCT "(")
(ID "options")
(PUNCT ",")
(ID "args")
(PUNCT ")")
(PUNCT "=")
(ID "parser")
(PUNCT ".")
(ID "parse_args")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "options")
(PUNCT ".")
(ID "locale")
(KEYWORD and)
(KEYWORD not)
(ID "options")
(PUNCT ".")
(ID "encoding")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(LIT "if --locale is specified --encoding is required")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "locale")
(PUNCT "=")
(ID "options")
(PUNCT ".")
(ID "locale")
(PUNCT ",")
(ID "options")
(PUNCT ".")
(ID "encoding")
(NEWLINE)
(KEYWORD if)
(ID "options")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(LIT "html")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "options")
(PUNCT ".")
(ID "locale")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cal")
(PUNCT "=")
(ID "LocaleHTMLCalendar")
(PUNCT "(")
(ID "locale")
(PUNCT "=")
(ID "locale")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cal")
(PUNCT "=")
(ID "HTMLCalendar")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "encoding")
(PUNCT "=")
(ID "options")
(PUNCT ".")
(ID "encoding")
(NEWLINE)
(KEYWORD if)
(ID "encoding")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "encoding")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "getdefaultencoding")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "optdict")
(PUNCT "=")
(ID "dict")
(PUNCT "(")
(ID "encoding")
(PUNCT "=")
(ID "encoding")
(PUNCT ",")
(ID "css")
(PUNCT "=")
(ID "options")
(PUNCT ".")
(ID "css")
(PUNCT ")")
(NEWLINE)
(ID "write")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "buffer")
(PUNCT ".")
(ID "write")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "write")
(PUNCT "(")
(ID "cal")
(PUNCT ".")
(ID "formatyearpage")
(PUNCT "(")
(ID "datetime")
(PUNCT ".")
(ID "date")
(PUNCT ".")
(ID "today")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "year")
(PUNCT ",")
(PUNCT "**")
(ID "optdict")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT "==")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "write")
(PUNCT "(")
(ID "cal")
(PUNCT ".")
(ID "formatyearpage")
(PUNCT "(")
(ID "int")
(PUNCT "(")
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(PUNCT "**")
(ID "optdict")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(LIT "incorrect number of arguments")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "options")
(PUNCT ".")
(ID "locale")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cal")
(PUNCT "=")
(ID "LocaleTextCalendar")
(PUNCT "(")
(ID "locale")
(PUNCT "=")
(ID "locale")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cal")
(PUNCT "=")
(ID "TextCalendar")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "optdict")
(PUNCT "=")
(ID "dict")
(PUNCT "(")
(ID "w")
(PUNCT "=")
(ID "options")
(PUNCT ".")
(ID "width")
(PUNCT ",")
(ID "l")
(PUNCT "=")
(ID "options")
(PUNCT ".")
(ID "lines")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT "!=")
(LIT 3)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "optdict")
(PUNCT "[")
(LIT "c")
(PUNCT "]")
(PUNCT "=")
(ID "options")
(PUNCT ".")
(ID "spacing")
(NEWLINE)
(ID "optdict")
(PUNCT "[")
(LIT "m")
(PUNCT "]")
(PUNCT "=")
(ID "options")
(PUNCT ".")
(ID "months")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "cal")
(PUNCT ".")
(ID "formatyear")
(PUNCT "(")
(ID "datetime")
(PUNCT ".")
(ID "date")
(PUNCT ".")
(ID "today")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "year")
(PUNCT ",")
(PUNCT "**")
(ID "optdict")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT "==")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "cal")
(PUNCT ".")
(ID "formatyear")
(PUNCT "(")
(ID "int")
(PUNCT "(")
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(PUNCT "**")
(ID "optdict")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT "==")
(LIT 3)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "cal")
(PUNCT ".")
(ID "formatmonth")
(PUNCT "(")
(ID "int")
(PUNCT "(")
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(ID "int")
(PUNCT "(")
(ID "args")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(PUNCT "**")
(ID "optdict")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(LIT "incorrect number of arguments")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "write")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "write")
(NEWLINE)
(KEYWORD if)
(ID "options")
(PUNCT ".")
(ID "encoding")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(ID "options")
(PUNCT ".")
(ID "encoding")
(PUNCT ")")
(NEWLINE)
(ID "write")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "buffer")
(PUNCT ".")
(ID "write")
(NEWLINE)
(DEDENT)
(ID "write")
(PUNCT "(")
(ID "result")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "main")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
