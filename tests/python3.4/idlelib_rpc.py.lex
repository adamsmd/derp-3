(LIT "RPC Implemention, originally written for the Python Idle IDE\n\nFor security reasons, GvR requested that Idle's Python execution server process\nconnect to the Idle process, which listens for the connection.  Since Idle has\nonly one client per server, this was not a limitation.\n\n   +---------------------------------+ +-------------+\n   | socketserver.BaseRequestHandler | | SocketIO    |\n   +---------------------------------+ +-------------+\n                   ^                   | register()  |\n                   |                   | unregister()|\n                   |                   +-------------+\n                   |                      ^  ^\n                   |                      |  |\n                   | + -------------------+  |\n                   | |                       |\n   +-------------------------+        +-----------------+\n   | RPCHandler              |        | RPCClient       |\n   | [attribute of RPCServer]|        |                 |\n   +-------------------------+        +-----------------+\n\nThe RPCServer handler class is expected to provide register/unregister methods.\nRPCHandler inherits the mix-in class SocketIO, which provides these methods.\n\nSee the Idle run.main() docstring for further information on how this was\naccomplished in Idle.\n\n")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "io")
(NEWLINE)
(KEYWORD import)
(ID "socket")
(NEWLINE)
(KEYWORD import)
(ID "select")
(NEWLINE)
(KEYWORD import)
(ID "socketserver")
(NEWLINE)
(KEYWORD import)
(ID "struct")
(NEWLINE)
(KEYWORD import)
(ID "pickle")
(NEWLINE)
(KEYWORD import)
(ID "threading")
(NEWLINE)
(KEYWORD import)
(ID "queue")
(NEWLINE)
(KEYWORD import)
(ID "traceback")
(NEWLINE)
(KEYWORD import)
(ID "copyreg")
(NEWLINE)
(KEYWORD import)
(ID "types")
(NEWLINE)
(KEYWORD import)
(ID "marshal")
(NEWLINE)
(KEYWORD import)
(ID "builtins")
(NEWLINE)
(KEYWORD def)
(ID "unpickle_code")
(PUNCT "(")
(ID "ms")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "co")
(PUNCT "=")
(ID "marshal")
(PUNCT ".")
(ID "loads")
(PUNCT "(")
(ID "ms")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "co")
(PUNCT ",")
(ID "types")
(PUNCT ".")
(ID "CodeType")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "co")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "pickle_code")
(PUNCT "(")
(ID "co")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "co")
(PUNCT ",")
(ID "types")
(PUNCT ".")
(ID "CodeType")
(PUNCT ")")
(NEWLINE)
(ID "ms")
(PUNCT "=")
(ID "marshal")
(PUNCT ".")
(ID "dumps")
(PUNCT "(")
(ID "co")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "unpickle_code")
(PUNCT ",")
(PUNCT "(")
(ID "ms")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dumps")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "protocol")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "p")
(PUNCT "=")
(ID "CodePickler")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "protocol")
(PUNCT ")")
(NEWLINE)
(ID "p")
(PUNCT ".")
(ID "dump")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "f")
(PUNCT ".")
(ID "getvalue")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "CodePickler")
(PUNCT "(")
(ID "pickle")
(PUNCT ".")
(ID "Pickler")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dispatch_table")
(PUNCT "=")
(PUNCT "{")
(ID "types")
(PUNCT ".")
(ID "CodeType")
(PUNCT ":")
(ID "pickle_code")
(PUNCT "}")
(NEWLINE)
(ID "dispatch_table")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "copyreg")
(PUNCT ".")
(ID "dispatch_table")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "BUFSIZE")
(PUNCT "=")
(LIT 8)
(PUNCT "*")
(LIT 1024)
(NEWLINE)
(ID "LOCALHOST")
(PUNCT "=")
(LIT "127.0.0.1")
(NEWLINE)
(KEYWORD class)
(ID "RPCServer")
(PUNCT "(")
(ID "socketserver")
(PUNCT ".")
(ID "TCPServer")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "addr")
(PUNCT ",")
(ID "handlerclass")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "handlerclass")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "handlerclass")
(PUNCT "=")
(ID "RPCHandler")
(NEWLINE)
(DEDENT)
(ID "socketserver")
(PUNCT ".")
(ID "TCPServer")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "addr")
(PUNCT ",")
(ID "handlerclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "server_bind")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Override TCPServer method, no bind() phase for connecting entity")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "server_activate")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Override TCPServer method, connect() instead of listen()\n\n        Due to the reversed connection, self.server_address is actually the\n        address of the Idle Client to which we are connecting.\n\n        ")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ".")
(ID "connect")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "server_address")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_request")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Override TCPServer method, return already connected socket")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "server_address")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_error")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "request")
(PUNCT ",")
(ID "client_address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Override TCPServer method\n\n        Error message goes to __stderr__.  No error message if exiting\n        normally or socket raised EOF.  Other exceptions not handled in\n        server code will cause os._exit.\n\n        ")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "SystemExit")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "erf")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "\n")
(PUNCT "+")
(LIT "-")
(PUNCT "*")
(LIT 40)
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Unhandled server exception!")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Thread: %s")
(PUNCT "%")
(ID "threading")
(PUNCT ".")
(ID "current_thread")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "name")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Client Address: ")
(PUNCT ",")
(ID "client_address")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Request: ")
(PUNCT ",")
(ID "repr")
(PUNCT "(")
(ID "request")
(PUNCT ")")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "traceback")
(PUNCT ".")
(ID "print_exc")
(PUNCT "(")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "\n*** Unrecoverable, server exiting!")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "-")
(PUNCT "*")
(LIT 40)
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "_exit")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "objecttable")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "request_queue")
(PUNCT "=")
(ID "queue")
(PUNCT ".")
(ID "Queue")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "response_queue")
(PUNCT "=")
(ID "queue")
(PUNCT ".")
(ID "Queue")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "SocketIO")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nextseq")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "objtable")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "debugging")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "sockthread")
(PUNCT "=")
(ID "threading")
(PUNCT ".")
(ID "current_thread")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "debugging")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debugging")
(PUNCT "=")
(ID "debugging")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "sock")
(PUNCT "=")
(ID "sock")
(NEWLINE)
(KEYWORD if)
(ID "objtable")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "objtable")
(PUNCT "=")
(ID "objecttable")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "objtable")
(PUNCT "=")
(ID "objtable")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "responses")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "cvars")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sock")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "sock")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "sock")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "sock")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sock")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "exithook")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "override for specific exit action")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "_exit")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "debug")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "debugging")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "location")
(PUNCT "+")
(LIT " ")
(PUNCT "+")
(ID "str")
(PUNCT "(")
(ID "threading")
(PUNCT ".")
(ID "current_thread")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "a")
(KEYWORD in)
(ID "args")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "+")
(LIT " ")
(PUNCT "+")
(ID "str")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "register")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "oid")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "objtable")
(PUNCT "[")
(ID "oid")
(PUNCT "]")
(PUNCT "=")
(ID "object")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "unregister")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "oid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "objtable")
(PUNCT "[")
(ID "oid")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "localcall")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "seq")
(PUNCT ",")
(ID "request")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "localcall:")
(PUNCT ",")
(ID "request")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "how")
(PUNCT ",")
(PUNCT "(")
(ID "oid")
(PUNCT ",")
(ID "methodname")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT ")")
(PUNCT "=")
(ID "request")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(LIT "ERROR")
(PUNCT ",")
(LIT "Bad request format")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "oid")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "objtable")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(LIT "ERROR")
(PUNCT ",")
(LIT "Unknown object id: %r")
(PUNCT "%")
(PUNCT "(")
(ID "oid")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "obj")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "objtable")
(PUNCT "[")
(ID "oid")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "methodname")
(PUNCT "==")
(LIT "__methods__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "methods")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "_getmethods")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "methods")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(LIT "OK")
(PUNCT ",")
(ID "methods")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "methodname")
(PUNCT "==")
(LIT "__attributes__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "attributes")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "_getattributes")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "attributes")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(LIT "OK")
(PUNCT ",")
(ID "attributes")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "methodname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(LIT "ERROR")
(PUNCT ",")
(LIT "Unsupported method name: %r")
(PUNCT "%")
(PUNCT "(")
(ID "methodname")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "method")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "methodname")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "how")
(PUNCT "==")
(LIT "CALL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ret")
(PUNCT "=")
(ID "method")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "ret")
(PUNCT ",")
(ID "RemoteObject")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ret")
(PUNCT "=")
(ID "remoteref")
(PUNCT "(")
(ID "ret")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(PUNCT "(")
(LIT "OK")
(PUNCT ",")
(ID "ret")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "how")
(PUNCT "==")
(LIT "QUEUE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "request_queue")
(PUNCT ".")
(ID "put")
(PUNCT "(")
(PUNCT "(")
(ID "seq")
(PUNCT ",")
(PUNCT "(")
(ID "method")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(LIT "QUEUED")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(LIT "ERROR")
(PUNCT ",")
(LIT "Unsupported message type: %s")
(PUNCT "%")
(ID "how")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "SystemExit")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyboardInterrupt")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "ex")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(LIT "CALLEXC")
(PUNCT ",")
(ID "ex")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(LIT "*** Internal Error: rpc.py:SocketIO.localcall()\n\n")
(LIT " Object: %s \n Method: %s \n Args: %s\n")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "msg")
(PUNCT "%")
(PUNCT "(")
(ID "oid")
(PUNCT ",")
(ID "method")
(PUNCT ",")
(ID "args")
(PUNCT ")")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(PUNCT ")")
(NEWLINE)
(ID "traceback")
(PUNCT ".")
(ID "print_exc")
(PUNCT "(")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(LIT "EXCEPTION")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "oid")
(PUNCT ",")
(ID "methodname")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "remotecall:asynccall: ")
(PUNCT ",")
(ID "oid")
(PUNCT ",")
(ID "methodname")
(PUNCT ")")
(NEWLINE)
(ID "seq")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "asynccall")
(PUNCT "(")
(ID "oid")
(PUNCT ",")
(ID "methodname")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "asyncreturn")
(PUNCT "(")
(ID "seq")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "remotequeue")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "oid")
(PUNCT ",")
(ID "methodname")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "remotequeue:asyncqueue: ")
(PUNCT ",")
(ID "oid")
(PUNCT ",")
(ID "methodname")
(PUNCT ")")
(NEWLINE)
(ID "seq")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "asyncqueue")
(PUNCT "(")
(ID "oid")
(PUNCT ",")
(ID "methodname")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "asyncreturn")
(PUNCT "(")
(ID "seq")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "asynccall")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "oid")
(PUNCT ",")
(ID "methodname")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "request")
(PUNCT "=")
(PUNCT "(")
(LIT "CALL")
(PUNCT ",")
(PUNCT "(")
(ID "oid")
(PUNCT ",")
(ID "methodname")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "seq")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "newseq")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "threading")
(PUNCT ".")
(ID "current_thread")
(PUNCT "(")
(PUNCT ")")
(PUNCT "!=")
(ID "self")
(PUNCT ".")
(ID "sockthread")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cvar")
(PUNCT "=")
(ID "threading")
(PUNCT ".")
(ID "Condition")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "cvars")
(PUNCT "[")
(ID "seq")
(PUNCT "]")
(PUNCT "=")
(ID "cvar")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(PUNCT "(")
(LIT "asynccall:%d:")
(PUNCT "%")
(ID "seq")
(PUNCT ")")
(PUNCT ",")
(ID "oid")
(PUNCT ",")
(ID "methodname")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "putmessage")
(PUNCT "(")
(PUNCT "(")
(ID "seq")
(PUNCT ",")
(ID "request")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "seq")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "asyncqueue")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "oid")
(PUNCT ",")
(ID "methodname")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "request")
(PUNCT "=")
(PUNCT "(")
(LIT "QUEUE")
(PUNCT ",")
(PUNCT "(")
(ID "oid")
(PUNCT ",")
(ID "methodname")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "seq")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "newseq")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "threading")
(PUNCT ".")
(ID "current_thread")
(PUNCT "(")
(PUNCT ")")
(PUNCT "!=")
(ID "self")
(PUNCT ".")
(ID "sockthread")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cvar")
(PUNCT "=")
(ID "threading")
(PUNCT ".")
(ID "Condition")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "cvars")
(PUNCT "[")
(ID "seq")
(PUNCT "]")
(PUNCT "=")
(ID "cvar")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(PUNCT "(")
(LIT "asyncqueue:%d:")
(PUNCT "%")
(ID "seq")
(PUNCT ")")
(PUNCT ",")
(ID "oid")
(PUNCT ",")
(ID "methodname")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "putmessage")
(PUNCT "(")
(PUNCT "(")
(ID "seq")
(PUNCT ",")
(ID "request")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "seq")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "asyncreturn")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "seq")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "asyncreturn:%d:call getresponse(): ")
(PUNCT "%")
(ID "seq")
(PUNCT ")")
(NEWLINE)
(ID "response")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getresponse")
(PUNCT "(")
(ID "seq")
(PUNCT ",")
(ID "wait")
(PUNCT "=")
(LIT 0.05)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(PUNCT "(")
(LIT "asyncreturn:%d:response: ")
(PUNCT "%")
(ID "seq")
(PUNCT ")")
(PUNCT ",")
(ID "response")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "decoderesponse")
(PUNCT "(")
(ID "response")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "decoderesponse")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "response")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "how")
(PUNCT ",")
(ID "what")
(PUNCT "=")
(ID "response")
(NEWLINE)
(KEYWORD if)
(ID "how")
(PUNCT "==")
(LIT "OK")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "what")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "how")
(PUNCT "==")
(LIT "QUEUED")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "how")
(PUNCT "==")
(LIT "EXCEPTION")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "decoderesponse: EXCEPTION")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "how")
(PUNCT "==")
(LIT "EOF")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "decoderesponse: EOF")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "decode_interrupthook")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "how")
(PUNCT "==")
(LIT "ERROR")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "decoderesponse: Internal ERROR:")
(PUNCT ",")
(ID "what")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(ID "what")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "how")
(PUNCT "==")
(LIT "CALLEXC")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "decoderesponse: Call Exception:")
(PUNCT ",")
(ID "what")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "what")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "SystemError")
(PUNCT "(")
(ID "how")
(PUNCT ",")
(ID "what")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "decode_interrupthook")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "")
(NEWLINE)
(KEYWORD raise)
(ID "EOFError")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "mainloop")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Listen on socket until I/O not ready or EOF\n\n        pollresponse() will loop looking for seq number None, which\n        never comes, and exit on EOFError.\n\n        ")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "getresponse")
(PUNCT "(")
(ID "myseq")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "wait")
(PUNCT "=")
(LIT 0.05)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "EOFError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "mainloop:return")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "getresponse")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "myseq")
(PUNCT ",")
(ID "wait")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "response")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_getresponse")
(PUNCT "(")
(ID "myseq")
(PUNCT ",")
(ID "wait")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "response")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "how")
(PUNCT ",")
(ID "what")
(PUNCT "=")
(ID "response")
(NEWLINE)
(KEYWORD if)
(ID "how")
(PUNCT "==")
(LIT "OK")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "response")
(PUNCT "=")
(ID "how")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_proxify")
(PUNCT "(")
(ID "what")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "response")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_proxify")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "RemoteProxy")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "RPCProxy")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "obj")
(PUNCT ".")
(ID "oid")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "map")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_proxify")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "obj")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_getresponse")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "myseq")
(PUNCT ",")
(ID "wait")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "_getresponse:myseq:")
(PUNCT ",")
(ID "myseq")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "threading")
(PUNCT ".")
(ID "current_thread")
(PUNCT "(")
(PUNCT ")")
(KEYWORD is)
(ID "self")
(PUNCT ".")
(ID "sockthread")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "response")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "pollresponse")
(PUNCT "(")
(ID "myseq")
(PUNCT ",")
(ID "wait")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "response")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "response")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cvar")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "cvars")
(PUNCT "[")
(ID "myseq")
(PUNCT "]")
(NEWLINE)
(ID "cvar")
(PUNCT ".")
(ID "acquire")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "myseq")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "responses")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cvar")
(PUNCT ".")
(ID "wait")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "response")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "responses")
(PUNCT "[")
(ID "myseq")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "_getresponse:%s: thread woke up: response: %s")
(PUNCT "%")
(PUNCT "(")
(ID "myseq")
(PUNCT ",")
(ID "response")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "responses")
(PUNCT "[")
(ID "myseq")
(PUNCT "]")
(NEWLINE)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "cvars")
(PUNCT "[")
(ID "myseq")
(PUNCT "]")
(NEWLINE)
(ID "cvar")
(PUNCT ".")
(ID "release")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "response")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "newseq")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "nextseq")
(PUNCT "=")
(ID "seq")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "nextseq")
(PUNCT "+")
(LIT 2)
(NEWLINE)
(KEYWORD return)
(ID "seq")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "putmessage")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "putmessage:%d:")
(PUNCT "%")
(ID "message")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "dumps")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "pickle")
(PUNCT ".")
(ID "PicklingError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Cannot pickle:")
(PUNCT ",")
(ID "repr")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(ID "struct")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(LIT "<i")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ")")
(PUNCT "+")
(ID "s")
(NEWLINE)
(KEYWORD while)
(ID "len")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "r")
(PUNCT ",")
(ID "w")
(PUNCT ",")
(ID "x")
(PUNCT "=")
(ID "select")
(PUNCT ".")
(ID "select")
(PUNCT "(")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "sock")
(PUNCT "]")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "n")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "sock")
(PUNCT ".")
(ID "send")
(PUNCT "(")
(ID "s")
(PUNCT "[")
(PUNCT ":")
(ID "BUFSIZE")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "AttributeError")
(PUNCT ",")
(ID "TypeError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT "socket no longer exists")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "[")
(ID "n")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "buff")
(PUNCT "=")
(LIT #"")
(NEWLINE)
(ID "bufneed")
(PUNCT "=")
(LIT 4)
(NEWLINE)
(ID "bufstate")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD def)
(ID "pollpacket")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "wait")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_stage0")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "buff")
(PUNCT ")")
(PUNCT "<")
(ID "self")
(PUNCT ".")
(ID "bufneed")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "r")
(PUNCT ",")
(ID "w")
(PUNCT ",")
(ID "x")
(PUNCT "=")
(ID "select")
(PUNCT ".")
(ID "select")
(PUNCT "(")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "sock")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(ID "wait")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "r")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "sock")
(PUNCT ".")
(ID "recv")
(PUNCT "(")
(ID "BUFSIZE")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "EOFError")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "EOFError")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "buff")
(PUNCT "+=")
(ID "s")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_stage0")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_stage1")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_stage0")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "bufstate")
(PUNCT "==")
(LIT 0)
(KEYWORD and)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "buff")
(PUNCT ")")
(PUNCT ">=")
(LIT 4)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "buff")
(PUNCT "[")
(PUNCT ":")
(LIT 4)
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "buff")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "buff")
(PUNCT "[")
(LIT 4)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "bufneed")
(PUNCT "=")
(ID "struct")
(PUNCT ".")
(ID "unpack")
(PUNCT "(")
(LIT "<i")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "bufstate")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_stage1")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "bufstate")
(PUNCT "==")
(LIT 1)
(KEYWORD and)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "buff")
(PUNCT ")")
(PUNCT ">=")
(ID "self")
(PUNCT ".")
(ID "bufneed")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "packet")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "buff")
(PUNCT "[")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "bufneed")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "buff")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "buff")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "bufneed")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "bufneed")
(PUNCT "=")
(LIT 4)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "bufstate")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD return)
(ID "packet")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "pollmessage")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "wait")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "packet")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "pollpacket")
(PUNCT "(")
(ID "wait")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "packet")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT "=")
(ID "pickle")
(PUNCT ".")
(ID "loads")
(PUNCT "(")
(ID "packet")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "pickle")
(PUNCT ".")
(ID "UnpicklingError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "-----------------------")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "cannot unpickle packet:")
(PUNCT ",")
(ID "repr")
(PUNCT "(")
(ID "packet")
(PUNCT ")")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(PUNCT ")")
(NEWLINE)
(ID "traceback")
(PUNCT ".")
(ID "print_stack")
(PUNCT "(")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "-----------------------")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "message")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "pollresponse")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "myseq")
(PUNCT ",")
(ID "wait")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Handle messages received on the socket.\n\n        Some messages received may be asynchronous 'call' or 'queue' requests,\n        and some may be responses for other threads.\n\n        'call' requests are passed to self.localcall() with the expectation of\n        immediate execution, during which time the socket is not serviced.\n\n        'queue' requests are used for tasks (which may block or hang) to be\n        processed in a different thread.  These requests are fed into\n        request_queue by self.localcall().  Responses to queued requests are\n        taken from response_queue and sent across the link with the associated\n        sequence numbers.  Messages in the queues are (sequence_number,\n        request/response) tuples and code using this module removing messages\n        from the request_queue is responsible for returning the correct\n        sequence number in the response_queue.\n\n        pollresponse() will loop until a response message with the myseq\n        sequence number is received, and will save other responses in\n        self.responses and notify the owning thread.\n\n        ")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "qmsg")
(PUNCT "=")
(ID "response_queue")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "queue")
(PUNCT ".")
(ID "Empty")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "seq")
(PUNCT ",")
(ID "response")
(PUNCT "=")
(ID "qmsg")
(NEWLINE)
(ID "message")
(PUNCT "=")
(PUNCT "(")
(ID "seq")
(PUNCT ",")
(PUNCT "(")
(LIT "OK")
(PUNCT ",")
(ID "response")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "putmessage")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "pollmessage")
(PUNCT "(")
(ID "wait")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "message")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "EOFError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_EOF")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "seq")
(PUNCT ",")
(ID "resq")
(PUNCT "=")
(ID "message")
(NEWLINE)
(ID "how")
(PUNCT "=")
(ID "resq")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "pollresponse:%d:myseq:%s")
(PUNCT "%")
(PUNCT "(")
(ID "seq")
(PUNCT ",")
(ID "myseq")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "how")
(KEYWORD in)
(PUNCT "(")
(LIT "CALL")
(PUNCT ",")
(LIT "QUEUE")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "pollresponse:%d:localcall:call:")
(PUNCT "%")
(ID "seq")
(PUNCT ")")
(NEWLINE)
(ID "response")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "localcall")
(PUNCT "(")
(ID "seq")
(PUNCT ",")
(ID "resq")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "pollresponse:%d:localcall:response:%s")
(PUNCT "%")
(PUNCT "(")
(ID "seq")
(PUNCT ",")
(ID "response")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "how")
(PUNCT "==")
(LIT "CALL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "putmessage")
(PUNCT "(")
(PUNCT "(")
(ID "seq")
(PUNCT ",")
(ID "response")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "how")
(PUNCT "==")
(LIT "QUEUE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "seq")
(PUNCT "==")
(ID "myseq")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "resq")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cv")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "cvars")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "seq")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "cv")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cv")
(PUNCT ".")
(ID "acquire")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "responses")
(PUNCT "[")
(ID "seq")
(PUNCT "]")
(PUNCT "=")
(ID "resq")
(NEWLINE)
(ID "cv")
(PUNCT ".")
(ID "notify")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "cv")
(PUNCT ".")
(ID "release")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "handle_EOF")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "action taken upon link being closed by peer")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "EOFhook")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "handle_EOF")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "cvars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cv")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "cvars")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(ID "cv")
(PUNCT ".")
(ID "acquire")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "responses")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(PUNCT "(")
(LIT "EOF")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "cv")
(PUNCT ".")
(ID "notify")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "cv")
(PUNCT ".")
(ID "release")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "exithook")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "EOFhook")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Classes using rpc client/server can override to augment EOF action")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "RemoteObject")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "remoteref")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "oid")
(PUNCT "=")
(ID "id")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(ID "objecttable")
(PUNCT "[")
(ID "oid")
(PUNCT "]")
(PUNCT "=")
(ID "obj")
(NEWLINE)
(KEYWORD return)
(ID "RemoteProxy")
(PUNCT "(")
(ID "oid")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "RemoteProxy")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "oid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "oid")
(PUNCT "=")
(ID "oid")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "RPCHandler")
(PUNCT "(")
(ID "socketserver")
(PUNCT ".")
(ID "BaseRequestHandler")
(PUNCT ",")
(ID "SocketIO")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "debugging")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "location")
(PUNCT "=")
(LIT "#S")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "addr")
(PUNCT ",")
(ID "svr")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "svr")
(PUNCT ".")
(ID "current_handler")
(PUNCT "=")
(ID "self")
(NEWLINE)
(ID "SocketIO")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ")")
(NEWLINE)
(ID "socketserver")
(PUNCT ".")
(ID "BaseRequestHandler")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "addr")
(PUNCT ",")
(ID "svr")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "handle() method required by socketserver")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "mainloop")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_remote_proxy")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "oid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "RPCProxy")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "oid")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "RPCClient")
(PUNCT "(")
(ID "SocketIO")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "debugging")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "location")
(PUNCT "=")
(LIT "#C")
(NEWLINE)
(ID "nextseq")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "address")
(PUNCT ",")
(ID "family")
(PUNCT "=")
(ID "socket")
(PUNCT ".")
(ID "AF_INET")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(ID "socket")
(PUNCT ".")
(ID "SOCK_STREAM")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "listening_sock")
(PUNCT "=")
(ID "socket")
(PUNCT ".")
(ID "socket")
(PUNCT "(")
(ID "family")
(PUNCT ",")
(ID "type")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "listening_sock")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "listening_sock")
(PUNCT ".")
(ID "listen")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "accept")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "working_sock")
(PUNCT ",")
(ID "address")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "listening_sock")
(PUNCT ".")
(ID "accept")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "debugging")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "****** Connection request from ")
(PUNCT ",")
(ID "address")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "address")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(ID "LOCALHOST")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "SocketIO")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "working_sock")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "** Invalid host: ")
(PUNCT ",")
(ID "address")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "OSError")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_remote_proxy")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "oid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "RPCProxy")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "oid")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "RPCProxy")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "__methods")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "__attributes")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sockio")
(PUNCT ",")
(ID "oid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "sockio")
(PUNCT "=")
(ID "sockio")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "oid")
(PUNCT "=")
(ID "oid")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getattr__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "__methods")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "__getmethods")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "__methods")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "MethodProxy")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "sockio")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "oid")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "__attributes")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "__getattributes")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "__attributes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "sockio")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "oid")
(PUNCT ",")
(LIT "__getattribute__")
(PUNCT ",")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "value")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "AttributeError")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__getattributes")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "__attributes")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "sockio")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "oid")
(PUNCT ",")
(LIT "__attributes__")
(PUNCT ",")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getmethods")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "__methods")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "sockio")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "oid")
(PUNCT ",")
(LIT "__methods__")
(PUNCT ",")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_getmethods")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "methods")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "dir")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "attr")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "callable")
(PUNCT "(")
(ID "attr")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "methods")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "type")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "super")
(KEYWORD in)
(ID "obj")
(PUNCT ".")
(ID "__bases__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_getmethods")
(PUNCT "(")
(ID "super")
(PUNCT ",")
(ID "methods")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_getattributes")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "attributes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "dir")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "attr")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "callable")
(PUNCT "(")
(ID "attr")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "attributes")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "MethodProxy")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sockio")
(PUNCT ",")
(ID "oid")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "sockio")
(PUNCT "=")
(ID "sockio")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "oid")
(PUNCT "=")
(ID "oid")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "name")
(PUNCT "=")
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "sockio")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "oid")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "name")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "value")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "displayhook")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Override standard display hook to use non-locale encoding")
(NEWLINE)
(KEYWORD if)
(ID "value")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "builtins")
(PUNCT ".")
(ID "_")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "text")
(PUNCT "=")
(ID "repr")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "UnicodeEncodeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "encoding")
(PUNCT "=")
(LIT "ascii")
(NEWLINE)
(ID "bytes")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(ID "encoding")
(PUNCT ",")
(LIT "backslashreplace")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT "=")
(ID "bytes")
(PUNCT ".")
(ID "decode")
(PUNCT "(")
(ID "encoding")
(PUNCT ",")
(LIT "strict")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "builtins")
(PUNCT ".")
(ID "_")
(PUNCT "=")
(ID "value")
(NEWLINE)
(DEDENT)
(ENDMARKER)
