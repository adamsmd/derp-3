(LIT "Fixer for function definitions with tuple parameters.\n\ndef func(((a, b), c), d):\n    ...\n\n    ->\n\ndef func(x, d):\n    ((a, b), c) = x\n    ...\n\nIt will also support lambdas:\n\n    lambda (x, y): x + y -> lambda t: t[0] + t[1]\n\n    # The parens are a syntax error in Python 3\n    lambda (x): x + y -> lambda x: x + y\n")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(KEYWORD import)
(ID "pytree")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(ID "pgen2")
(KEYWORD import)
(ID "token")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(KEYWORD import)
(ID "fixer_base")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(ID "fixer_util")
(KEYWORD import)
(ID "Assign")
(PUNCT ",")
(ID "Name")
(PUNCT ",")
(ID "Newline")
(PUNCT ",")
(ID "Number")
(PUNCT ",")
(ID "Subscript")
(PUNCT ",")
(ID "syms")
(NEWLINE)
(KEYWORD def)
(ID "is_docstring")
(PUNCT "(")
(ID "stmt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "isinstance")
(PUNCT "(")
(ID "stmt")
(PUNCT ",")
(ID "pytree")
(PUNCT ".")
(ID "Node")
(PUNCT ")")
(KEYWORD and)
(ID "stmt")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "token")
(PUNCT ".")
(ID "STRING")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "FixTupleParams")
(PUNCT "(")
(ID "fixer_base")
(PUNCT ".")
(ID "BaseFix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "run_order")
(PUNCT "=")
(LIT 4)
(NEWLINE)
(ID "BM_compatible")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "PATTERN")
(PUNCT "=")
(LIT "\n              funcdef< 'def' any parameters< '(' args=any ')' >\n                       ['->' any] ':' suite=any+ >\n              |\n              lambda=\n              lambdef< 'lambda' args=vfpdef< '(' inner=any ')' >\n                       ':' body=any\n              >\n              ")
(NEWLINE)
(KEYWORD def)
(ID "transform")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "lambda")
(KEYWORD in)
(ID "results")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "transform_lambda")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "new_lines")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "suite")
(PUNCT "=")
(ID "results")
(PUNCT "[")
(LIT "suite")
(PUNCT "]")
(NEWLINE)
(ID "args")
(PUNCT "=")
(ID "results")
(PUNCT "[")
(LIT "args")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "suite")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "token")
(PUNCT ".")
(ID "INDENT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "start")
(PUNCT "=")
(LIT 2)
(NEWLINE)
(ID "indent")
(PUNCT "=")
(ID "suite")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "value")
(NEWLINE)
(ID "end")
(PUNCT "=")
(ID "Newline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "start")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "indent")
(PUNCT "=")
(LIT "; ")
(NEWLINE)
(ID "end")
(PUNCT "=")
(ID "pytree")
(PUNCT ".")
(ID "Leaf")
(PUNCT "(")
(ID "token")
(PUNCT ".")
(ID "INDENT")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_tuple")
(PUNCT "(")
(ID "tuple_arg")
(PUNCT ",")
(ID "add_prefix")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(ID "Name")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "new_name")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "arg")
(PUNCT "=")
(ID "tuple_arg")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "arg")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "stmt")
(PUNCT "=")
(ID "Assign")
(PUNCT "(")
(ID "arg")
(PUNCT ",")
(ID "n")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "add_prefix")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(LIT " ")
(NEWLINE)
(DEDENT)
(ID "tuple_arg")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(NEWLINE)
(ID "new_lines")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "pytree")
(PUNCT ".")
(ID "Node")
(PUNCT "(")
(ID "syms")
(PUNCT ".")
(ID "simple_stmt")
(PUNCT ",")
(PUNCT "[")
(ID "stmt")
(PUNCT ",")
(ID "end")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "args")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "syms")
(PUNCT ".")
(ID "tfpdef")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "handle_tuple")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "args")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "syms")
(PUNCT ".")
(ID "typedargslist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "arg")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "args")
(PUNCT ".")
(ID "children")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "arg")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "syms")
(PUNCT ".")
(ID "tfpdef")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "handle_tuple")
(PUNCT "(")
(ID "arg")
(PUNCT ",")
(ID "add_prefix")
(PUNCT "=")
(PUNCT "(")
(ID "i")
(PUNCT ">")
(LIT 0)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "new_lines")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "line")
(KEYWORD in)
(ID "new_lines")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT ".")
(ID "parent")
(PUNCT "=")
(ID "suite")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "after")
(PUNCT "=")
(ID "start")
(NEWLINE)
(KEYWORD if)
(ID "start")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_lines")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(LIT " ")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "is_docstring")
(PUNCT "(")
(ID "suite")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(ID "start")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_lines")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(ID "indent")
(NEWLINE)
(ID "after")
(PUNCT "=")
(ID "start")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "line")
(KEYWORD in)
(ID "new_lines")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT ".")
(ID "parent")
(PUNCT "=")
(ID "suite")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "suite")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(ID "after")
(PUNCT ":")
(ID "after")
(PUNCT "]")
(PUNCT "=")
(ID "new_lines")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "after")
(PUNCT "+")
(LIT 1)
(PUNCT ",")
(ID "after")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "new_lines")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "suite")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(ID "indent")
(NEWLINE)
(DEDENT)
(ID "suite")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "changed")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "transform_lambda")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(ID "results")
(PUNCT "[")
(LIT "args")
(PUNCT "]")
(NEWLINE)
(ID "body")
(PUNCT "=")
(ID "results")
(PUNCT "[")
(LIT "body")
(PUNCT "]")
(NEWLINE)
(ID "inner")
(PUNCT "=")
(ID "simplify_args")
(PUNCT "(")
(ID "results")
(PUNCT "[")
(LIT "inner")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "inner")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "token")
(PUNCT ".")
(ID "NAME")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "inner")
(PUNCT "=")
(ID "inner")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "inner")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(LIT " ")
(NEWLINE)
(ID "args")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "inner")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "params")
(PUNCT "=")
(ID "find_params")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(NEWLINE)
(ID "to_index")
(PUNCT "=")
(ID "map_to_index")
(PUNCT "(")
(ID "params")
(PUNCT ")")
(NEWLINE)
(ID "tup_name")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "new_name")
(PUNCT "(")
(ID "tuple_name")
(PUNCT "(")
(ID "params")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "new_param")
(PUNCT "=")
(ID "Name")
(PUNCT "(")
(ID "tup_name")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(ID "args")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "new_param")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "n")
(KEYWORD in)
(ID "body")
(PUNCT ".")
(ID "post_order")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "n")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "token")
(PUNCT ".")
(ID "NAME")
(KEYWORD and)
(ID "n")
(PUNCT ".")
(ID "value")
(KEYWORD in)
(ID "to_index")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subscripts")
(PUNCT "=")
(PUNCT "[")
(ID "c")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID "c")
(KEYWORD in)
(ID "to_index")
(PUNCT "[")
(ID "n")
(PUNCT ".")
(ID "value")
(PUNCT "]")
(PUNCT "]")
(NEWLINE)
(ID "new")
(PUNCT "=")
(ID "pytree")
(PUNCT ".")
(ID "Node")
(PUNCT "(")
(ID "syms")
(PUNCT ".")
(ID "power")
(PUNCT ",")
(PUNCT "[")
(ID "new_param")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(PUNCT "+")
(ID "subscripts")
(PUNCT ")")
(NEWLINE)
(ID "new")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(ID "n")
(PUNCT ".")
(ID "prefix")
(NEWLINE)
(ID "n")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "new")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "simplify_args")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "node")
(PUNCT ".")
(ID "type")
(KEYWORD in)
(PUNCT "(")
(ID "syms")
(PUNCT ".")
(ID "vfplist")
(PUNCT ",")
(ID "token")
(PUNCT ".")
(ID "NAME")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "node")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "node")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "syms")
(PUNCT ".")
(ID "vfpdef")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(ID "node")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "syms")
(PUNCT ".")
(ID "vfpdef")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "node")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "node")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "Received unexpected node %s")
(PUNCT "%")
(ID "node")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "find_params")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "node")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "syms")
(PUNCT ".")
(ID "vfpdef")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "find_params")
(PUNCT "(")
(ID "node")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "node")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "token")
(PUNCT ".")
(ID "NAME")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "node")
(PUNCT ".")
(ID "value")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(PUNCT "[")
(ID "find_params")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(KEYWORD for)
(ID "c")
(KEYWORD in)
(ID "node")
(PUNCT ".")
(ID "children")
(KEYWORD if)
(ID "c")
(PUNCT ".")
(ID "type")
(PUNCT "!=")
(ID "token")
(PUNCT ".")
(ID "COMMA")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "map_to_index")
(PUNCT "(")
(ID "param_list")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(ID "d")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "d")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "d")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "obj")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "param_list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "trailer")
(PUNCT "=")
(PUNCT "[")
(ID "Subscript")
(PUNCT "(")
(ID "Number")
(PUNCT "(")
(ID "str")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "map_to_index")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "trailer")
(PUNCT ",")
(ID "d")
(PUNCT "=")
(ID "d")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "d")
(PUNCT "[")
(ID "obj")
(PUNCT "]")
(PUNCT "=")
(ID "prefix")
(PUNCT "+")
(ID "trailer")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "d")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tuple_name")
(PUNCT "(")
(ID "param_list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "l")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "obj")
(KEYWORD in)
(ID "param_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "l")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "tuple_name")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "l")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(LIT "_")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "l")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
