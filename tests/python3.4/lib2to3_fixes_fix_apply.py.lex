(LIT "Fixer for apply().\n\nThis converts apply(func, v, k) into (func)(*v, **k).")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(KEYWORD import)
(ID "pytree")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(ID "pgen2")
(KEYWORD import)
(ID "token")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(KEYWORD import)
(ID "fixer_base")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(ID "fixer_util")
(KEYWORD import)
(ID "Call")
(PUNCT ",")
(ID "Comma")
(PUNCT ",")
(ID "parenthesize")
(NEWLINE)
(KEYWORD class)
(ID "FixApply")
(PUNCT "(")
(ID "fixer_base")
(PUNCT ".")
(ID "BaseFix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "BM_compatible")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "PATTERN")
(PUNCT "=")
(LIT "\n    power< 'apply'\n        trailer<\n            '('\n            arglist<\n                (not argument<NAME '=' any>) func=any ','\n                (not argument<NAME '=' any>) args=any [','\n                (not argument<NAME '=' any>) kwds=any] [',']\n            >\n            ')'\n        >\n    >\n    ")
(NEWLINE)
(KEYWORD def)
(ID "transform")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "syms")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "syms")
(NEWLINE)
(KEYWORD assert)
(ID "results")
(NEWLINE)
(ID "func")
(PUNCT "=")
(ID "results")
(PUNCT "[")
(LIT "func")
(PUNCT "]")
(NEWLINE)
(ID "args")
(PUNCT "=")
(ID "results")
(PUNCT "[")
(LIT "args")
(PUNCT "]")
(NEWLINE)
(ID "kwds")
(PUNCT "=")
(ID "results")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "kwds")
(PUNCT ")")
(NEWLINE)
(ID "prefix")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "prefix")
(NEWLINE)
(ID "func")
(PUNCT "=")
(ID "func")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID "func")
(PUNCT ".")
(ID "type")
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(ID "token")
(PUNCT ".")
(ID "NAME")
(PUNCT ",")
(ID "syms")
(PUNCT ".")
(ID "atom")
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID "func")
(PUNCT ".")
(ID "type")
(PUNCT "!=")
(ID "syms")
(PUNCT ".")
(ID "power")
(KEYWORD or)
(ID "func")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(PUNCT "-")
(LIT 2)
(PUNCT "]")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "token")
(PUNCT ".")
(ID "DOUBLESTAR")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "func")
(PUNCT "=")
(ID "parenthesize")
(PUNCT "(")
(ID "func")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "func")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "args")
(PUNCT "=")
(ID "args")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "args")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD if)
(ID "kwds")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kwds")
(PUNCT "=")
(ID "kwds")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "kwds")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "l_newargs")
(PUNCT "=")
(PUNCT "[")
(ID "pytree")
(PUNCT ".")
(ID "Leaf")
(PUNCT "(")
(ID "token")
(PUNCT ".")
(ID "STAR")
(PUNCT ",")
(LIT "*")
(PUNCT ")")
(PUNCT ",")
(ID "args")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "kwds")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "l_newargs")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(PUNCT "[")
(ID "Comma")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "pytree")
(PUNCT ".")
(ID "Leaf")
(PUNCT "(")
(ID "token")
(PUNCT ".")
(ID "DOUBLESTAR")
(PUNCT ",")
(LIT "**")
(PUNCT ")")
(PUNCT ",")
(ID "kwds")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "l_newargs")
(PUNCT "[")
(PUNCT "-")
(LIT 2)
(PUNCT "]")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(LIT " ")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "Call")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "l_newargs")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(ID "prefix")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
