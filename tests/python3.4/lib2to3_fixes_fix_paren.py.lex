(LIT "Fixer that addes parentheses where they are required\n\nThis converts ``[x for x in 1, 2]`` to ``[x for x in (1, 2)]``.")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(KEYWORD import)
(ID "fixer_base")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(ID "fixer_util")
(KEYWORD import)
(ID "LParen")
(PUNCT ",")
(ID "RParen")
(NEWLINE)
(KEYWORD class)
(ID "FixParen")
(PUNCT "(")
(ID "fixer_base")
(PUNCT ".")
(ID "BaseFix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "BM_compatible")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "PATTERN")
(PUNCT "=")
(LIT "\n        atom< ('[' | '(')\n            (listmaker< any\n                comp_for<\n                    'for' NAME 'in'\n                    target=testlist_safe< any (',' any)+ [',']\n                     >\n                    [any]\n                >\n            >\n            |\n            testlist_gexp< any\n                comp_for<\n                    'for' NAME 'in'\n                    target=testlist_safe< any (',' any)+ [',']\n                     >\n                    [any]\n                >\n            >)\n        (']' | ')') >\n    ")
(NEWLINE)
(KEYWORD def)
(ID "transform")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "target")
(PUNCT "=")
(ID "results")
(PUNCT "[")
(LIT "target")
(PUNCT "]")
(NEWLINE)
(ID "lparen")
(PUNCT "=")
(ID "LParen")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "lparen")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(ID "target")
(PUNCT ".")
(ID "prefix")
(NEWLINE)
(ID "target")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "target")
(PUNCT ".")
(ID "insert_child")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "lparen")
(PUNCT ")")
(NEWLINE)
(ID "target")
(PUNCT ".")
(ID "append_child")
(PUNCT "(")
(ID "RParen")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
