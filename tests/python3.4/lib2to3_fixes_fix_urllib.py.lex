(LIT "Fix changes imports of urllib which are now incompatible.\n   This is rather similar to fix_imports, but because of the more\n   complex nature of the fixing for urllib, it has its own fixer.\n")
(NEWLINE)
(KEYWORD from)
(ID "lib2to3")
(PUNCT ".")
(ID "fixes")
(PUNCT ".")
(ID "fix_imports")
(KEYWORD import)
(ID "alternates")
(PUNCT ",")
(ID "FixImports")
(NEWLINE)
(KEYWORD from)
(ID "lib2to3")
(KEYWORD import)
(ID "fixer_base")
(NEWLINE)
(KEYWORD from)
(ID "lib2to3")
(PUNCT ".")
(ID "fixer_util")
(KEYWORD import)
(PUNCT "(")
(ID "Name")
(PUNCT ",")
(ID "Comma")
(PUNCT ",")
(ID "FromImport")
(PUNCT ",")
(ID "Newline")
(PUNCT ",")
(ID "find_indentation")
(PUNCT ",")
(ID "Node")
(PUNCT ",")
(ID "syms")
(PUNCT ")")
(NEWLINE)
(ID "MAPPING")
(PUNCT "=")
(PUNCT "{")
(LIT "urllib")
(PUNCT ":")
(PUNCT "[")
(PUNCT "(")
(LIT "urllib.request")
(PUNCT ",")
(PUNCT "[")
(LIT "URLopener")
(PUNCT ",")
(LIT "FancyURLopener")
(PUNCT ",")
(LIT "urlretrieve")
(PUNCT ",")
(LIT "_urlopener")
(PUNCT ",")
(LIT "urlopen")
(PUNCT ",")
(LIT "urlcleanup")
(PUNCT ",")
(LIT "pathname2url")
(PUNCT ",")
(LIT "url2pathname")
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "urllib.parse")
(PUNCT ",")
(PUNCT "[")
(LIT "quote")
(PUNCT ",")
(LIT "quote_plus")
(PUNCT ",")
(LIT "unquote")
(PUNCT ",")
(LIT "unquote_plus")
(PUNCT ",")
(LIT "urlencode")
(PUNCT ",")
(LIT "splitattr")
(PUNCT ",")
(LIT "splithost")
(PUNCT ",")
(LIT "splitnport")
(PUNCT ",")
(LIT "splitpasswd")
(PUNCT ",")
(LIT "splitport")
(PUNCT ",")
(LIT "splitquery")
(PUNCT ",")
(LIT "splittag")
(PUNCT ",")
(LIT "splittype")
(PUNCT ",")
(LIT "splituser")
(PUNCT ",")
(LIT "splitvalue")
(PUNCT ",")
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "urllib.error")
(PUNCT ",")
(PUNCT "[")
(LIT "ContentTooShortError")
(PUNCT "]")
(PUNCT ")")
(PUNCT "]")
(PUNCT ",")
(LIT "urllib2")
(PUNCT ":")
(PUNCT "[")
(PUNCT "(")
(LIT "urllib.request")
(PUNCT ",")
(PUNCT "[")
(LIT "urlopen")
(PUNCT ",")
(LIT "install_opener")
(PUNCT ",")
(LIT "build_opener")
(PUNCT ",")
(LIT "Request")
(PUNCT ",")
(LIT "OpenerDirector")
(PUNCT ",")
(LIT "BaseHandler")
(PUNCT ",")
(LIT "HTTPDefaultErrorHandler")
(PUNCT ",")
(LIT "HTTPRedirectHandler")
(PUNCT ",")
(LIT "HTTPCookieProcessor")
(PUNCT ",")
(LIT "ProxyHandler")
(PUNCT ",")
(LIT "HTTPPasswordMgr")
(PUNCT ",")
(LIT "HTTPPasswordMgrWithDefaultRealm")
(PUNCT ",")
(LIT "AbstractBasicAuthHandler")
(PUNCT ",")
(LIT "HTTPBasicAuthHandler")
(PUNCT ",")
(LIT "ProxyBasicAuthHandler")
(PUNCT ",")
(LIT "AbstractDigestAuthHandler")
(PUNCT ",")
(LIT "HTTPDigestAuthHandler")
(PUNCT ",")
(LIT "ProxyDigestAuthHandler")
(PUNCT ",")
(LIT "HTTPHandler")
(PUNCT ",")
(LIT "HTTPSHandler")
(PUNCT ",")
(LIT "FileHandler")
(PUNCT ",")
(LIT "FTPHandler")
(PUNCT ",")
(LIT "CacheFTPHandler")
(PUNCT ",")
(LIT "UnknownHandler")
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "urllib.error")
(PUNCT ",")
(PUNCT "[")
(LIT "URLError")
(PUNCT ",")
(LIT "HTTPError")
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(PUNCT "}")
(NEWLINE)
(ID "MAPPING")
(PUNCT "[")
(LIT "urllib2")
(PUNCT "]")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "MAPPING")
(PUNCT "[")
(LIT "urllib")
(PUNCT "]")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "build_pattern")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bare")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "old_module")
(PUNCT ",")
(ID "changes")
(KEYWORD in)
(ID "MAPPING")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "change")
(KEYWORD in)
(ID "changes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_module")
(PUNCT ",")
(ID "members")
(PUNCT "=")
(ID "change")
(NEWLINE)
(ID "members")
(PUNCT "=")
(ID "alternates")
(PUNCT "(")
(ID "members")
(PUNCT ")")
(NEWLINE)
(KEYWORD yield)
(LIT "import_name< 'import' (module=%r\n                                  | dotted_as_names< any* module=%r any* >) >\n                  ")
(PUNCT "%")
(PUNCT "(")
(ID "old_module")
(PUNCT ",")
(ID "old_module")
(PUNCT ")")
(NEWLINE)
(KEYWORD yield)
(LIT "import_from< 'from' mod_member=%r 'import'\n                       ( member=%s | import_as_name< member=%s 'as' any > |\n                         import_as_names< members=any*  >) >\n                  ")
(PUNCT "%")
(PUNCT "(")
(ID "old_module")
(PUNCT ",")
(ID "members")
(PUNCT ",")
(ID "members")
(PUNCT ")")
(NEWLINE)
(KEYWORD yield)
(LIT "import_from< 'from' module_star=%r 'import' star='*' >\n                  ")
(PUNCT "%")
(ID "old_module")
(NEWLINE)
(KEYWORD yield)
(LIT "import_name< 'import'\n                                  dotted_as_name< module_as=%r 'as' any > >\n                  ")
(PUNCT "%")
(ID "old_module")
(NEWLINE)
(KEYWORD yield)
(LIT "power< bare_with_attr=%r trailer< '.' member=%s > any* >\n                  ")
(PUNCT "%")
(PUNCT "(")
(ID "old_module")
(PUNCT ",")
(ID "members")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "FixUrllib")
(PUNCT "(")
(ID "FixImports")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "build_pattern")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "|")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "build_pattern")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "transform_import")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Transform for the basic import case. Replaces the old\n           import name with a comma separated list of its\n           replacements.\n        ")
(NEWLINE)
(ID "import_mod")
(PUNCT "=")
(ID "results")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "module")
(PUNCT ")")
(NEWLINE)
(ID "pref")
(PUNCT "=")
(ID "import_mod")
(PUNCT ".")
(ID "prefix")
(NEWLINE)
(ID "names")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "MAPPING")
(PUNCT "[")
(ID "import_mod")
(PUNCT ".")
(ID "value")
(PUNCT "]")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(PUNCT "[")
(ID "Name")
(PUNCT "(")
(ID "name")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(ID "pref")
(PUNCT ")")
(PUNCT ",")
(ID "Comma")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "names")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "Name")
(PUNCT "(")
(ID "MAPPING")
(PUNCT "[")
(ID "import_mod")
(PUNCT ".")
(ID "value")
(PUNCT "]")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(ID "pref")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "import_mod")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "names")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "transform_member")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Transform for imports of specific module elements. Replaces\n           the module to be imported from with the appropriate new\n           module.\n        ")
(NEWLINE)
(ID "mod_member")
(PUNCT "=")
(ID "results")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "mod_member")
(PUNCT ")")
(NEWLINE)
(ID "pref")
(PUNCT "=")
(ID "mod_member")
(PUNCT ".")
(ID "prefix")
(NEWLINE)
(ID "member")
(PUNCT "=")
(ID "results")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "member")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "member")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "member")
(PUNCT ",")
(ID "list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "member")
(PUNCT "=")
(ID "member")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "new_name")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD for)
(ID "change")
(KEYWORD in)
(ID "MAPPING")
(PUNCT "[")
(ID "mod_member")
(PUNCT ".")
(ID "value")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "member")
(PUNCT ".")
(ID "value")
(KEYWORD in)
(ID "change")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_name")
(PUNCT "=")
(ID "change")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "new_name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mod_member")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "Name")
(PUNCT "(")
(ID "new_name")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(ID "pref")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "cannot_convert")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(LIT "This is an invalid module element")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modules")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "mod_dict")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "members")
(PUNCT "=")
(ID "results")
(PUNCT "[")
(LIT "members")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "member")
(KEYWORD in)
(ID "members")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "member")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "syms")
(PUNCT ".")
(ID "import_as_name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "as_name")
(PUNCT "=")
(ID "member")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(PUNCT ".")
(ID "value")
(NEWLINE)
(ID "member_name")
(PUNCT "=")
(ID "member")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "value")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "member_name")
(PUNCT "=")
(ID "member")
(PUNCT ".")
(ID "value")
(NEWLINE)
(ID "as_name")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "member_name")
(PUNCT "!=")
(LIT ",")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "change")
(KEYWORD in)
(ID "MAPPING")
(PUNCT "[")
(ID "mod_member")
(PUNCT ".")
(ID "value")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "member_name")
(KEYWORD in)
(ID "change")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "change")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD not)
(KEYWORD in)
(ID "mod_dict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modules")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "change")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "mod_dict")
(PUNCT ".")
(ID "setdefault")
(PUNCT "(")
(ID "change")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "member")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "new_nodes")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "indentation")
(PUNCT "=")
(ID "find_indentation")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(NEWLINE)
(ID "first")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID "handle_name")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "prefix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "syms")
(PUNCT ".")
(ID "import_as_name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kids")
(PUNCT "=")
(PUNCT "[")
(ID "Name")
(PUNCT "(")
(ID "name")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "value")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(ID "prefix")
(PUNCT ")")
(PUNCT ",")
(ID "name")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "name")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(ID "Node")
(PUNCT "(")
(ID "syms")
(PUNCT ".")
(ID "import_as_name")
(PUNCT ",")
(ID "kids")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(PUNCT "[")
(ID "Name")
(PUNCT "(")
(ID "name")
(PUNCT ".")
(ID "value")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(ID "prefix")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "module")
(KEYWORD in)
(ID "modules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "elts")
(PUNCT "=")
(ID "mod_dict")
(PUNCT "[")
(ID "module")
(PUNCT "]")
(NEWLINE)
(ID "names")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "elt")
(KEYWORD in)
(ID "elts")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "handle_name")
(PUNCT "(")
(ID "elt")
(PUNCT ",")
(ID "pref")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "names")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "Comma")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "names")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "handle_name")
(PUNCT "(")
(ID "elts")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ",")
(ID "pref")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "new")
(PUNCT "=")
(ID "FromImport")
(PUNCT "(")
(ID "module")
(PUNCT ",")
(ID "names")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "first")
(KEYWORD or)
(ID "node")
(PUNCT ".")
(ID "parent")
(PUNCT ".")
(ID "prefix")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(ID "indentation")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(ID "indentation")
(NEWLINE)
(DEDENT)
(ID "new_nodes")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "new")
(PUNCT ")")
(NEWLINE)
(ID "first")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "new_nodes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nodes")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "new_node")
(KEYWORD in)
(ID "new_nodes")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nodes")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(PUNCT "[")
(ID "new_node")
(PUNCT ",")
(ID "Newline")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "nodes")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "new_nodes")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "node")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "nodes")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "cannot_convert")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(LIT "All module elements are invalid")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "transform_dot")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Transform for calls to module members in code.")
(NEWLINE)
(ID "module_dot")
(PUNCT "=")
(ID "results")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "bare_with_attr")
(PUNCT ")")
(NEWLINE)
(ID "member")
(PUNCT "=")
(ID "results")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "member")
(PUNCT ")")
(NEWLINE)
(ID "new_name")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "member")
(PUNCT ",")
(ID "list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "member")
(PUNCT "=")
(ID "member")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "change")
(KEYWORD in)
(ID "MAPPING")
(PUNCT "[")
(ID "module_dot")
(PUNCT ".")
(ID "value")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "member")
(PUNCT ".")
(ID "value")
(KEYWORD in)
(ID "change")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_name")
(PUNCT "=")
(ID "change")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "new_name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "module_dot")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "Name")
(PUNCT "(")
(ID "new_name")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(ID "module_dot")
(PUNCT ".")
(ID "prefix")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "cannot_convert")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(LIT "This is an invalid module element")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "transform")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "results")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "module")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "transform_import")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "results")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "mod_member")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "transform_member")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "results")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "bare_with_attr")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "transform_dot")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "results")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "module_star")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "cannot_convert")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(LIT "Cannot handle star imports.")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "results")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "module_as")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "cannot_convert")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(LIT "This module is now multiple modules")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ENDMARKER)
