(LIT "Generic output formatting.\n\nFormatter objects transform an abstract flow of formatting events into\nspecific output events on writer objects. Formatters manage several stack\nstructures to allow various properties of a writer object to be changed and\nrestored; writers need not be able to handle relative changes nor any sort\nof ``change back'' operation. Specific writer properties which may be\ncontrolled via formatter objects are horizontal alignment, font, and left\nmargin indentations. A mechanism is provided which supports providing\narbitrary, non-exclusive style settings to a writer as well. Additional\ninterfaces facilitate formatting events which are not reversible, such as\nparagraph separation.\n\nWriter objects encapsulate device interfaces. Abstract devices, such as\nfile formats, are supported as well as physical devices. The provided\nimplementations all work with abstract devices. The interface makes\navailable mechanisms for setting the properties which formatter objects\nmanage and inserting data into the output.\n")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "warnings")
(NEWLINE)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "the formatter module is deprecated and will be removed in ")
(LIT "Python 3.6")
(PUNCT ",")
(ID "PendingDeprecationWarning")
(PUNCT ")")
(NEWLINE)
(ID "AS_IS")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD class)
(ID "NullFormatter")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "A formatter which does nothing.\n\n    If the writer parameter is omitted, a NullWriter instance is created.\n    No methods of the writer are called by NullFormatter instances.\n\n    Implementations should inherit from this class if implementing a writer\n    interface but don't need to inherit any implementation.\n\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "writer")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "writer")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "writer")
(PUNCT "=")
(ID "NullWriter")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT "=")
(ID "writer")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "end_paragraph")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "blankline")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "add_line_break")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "add_hor_rule")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "add_label_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "format")
(PUNCT ",")
(ID "counter")
(PUNCT ",")
(ID "blankline")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "add_flowing_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "add_literal_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "flush_softspace")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "push_alignment")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "align")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "pop_alignment")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "push_font")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "pop_font")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "push_margin")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "margin")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "pop_margin")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "set_spacing")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "spacing")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "push_style")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "styles")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "pop_style")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "n")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "assert_line_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "flag")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "AbstractFormatter")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "The standard formatter.\n\n    This implementation has demonstrated wide applicability to many writers,\n    and may be used directly in most circumstances.  It has been used to\n    implement a full-featured World Wide Web browser.\n\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "writer")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT "=")
(ID "writer")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "align")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "align_stack")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "font_stack")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "margin_stack")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "spacing")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "style_stack")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "nospace")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "para_end")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "parskip")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "hard_break")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "have_label")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "end_paragraph")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "blankline")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "hard_break")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_line_break")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "have_label")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "parskip")
(PUNCT "<")
(ID "blankline")
(KEYWORD and)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "have_label")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_paragraph")
(PUNCT "(")
(ID "blankline")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "parskip")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "parskip")
(PUNCT "=")
(ID "blankline")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "have_label")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "hard_break")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "nospace")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "para_end")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_line_break")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "hard_break")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "para_end")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_line_break")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "have_label")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "parskip")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "hard_break")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "nospace")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_hor_rule")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "hard_break")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_line_break")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_hor_rule")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "hard_break")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "nospace")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "have_label")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "para_end")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "parskip")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_label_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "format")
(PUNCT ",")
(ID "counter")
(PUNCT ",")
(ID "blankline")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "have_label")
(KEYWORD or)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "hard_break")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_line_break")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "para_end")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_paragraph")
(PUNCT "(")
(PUNCT "(")
(ID "blankline")
(KEYWORD and)
(LIT 1)
(PUNCT ")")
(KEYWORD or)
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "format")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_label_data")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "format_counter")
(PUNCT "(")
(ID "format")
(PUNCT ",")
(ID "counter")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_label_data")
(PUNCT "(")
(ID "format")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "nospace")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "have_label")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "hard_break")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "para_end")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "parskip")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "format_counter")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "format")
(PUNCT ",")
(ID "counter")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "label")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD for)
(ID "c")
(KEYWORD in)
(ID "format")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "c")
(PUNCT "==")
(LIT "1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "label")
(PUNCT "=")
(ID "label")
(PUNCT "+")
(PUNCT "(")
(LIT "%d")
(PUNCT "%")
(ID "counter")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(KEYWORD in)
(LIT "aA")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "counter")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "label")
(PUNCT "=")
(ID "label")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "format_letter")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(ID "counter")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "c")
(KEYWORD in)
(LIT "iI")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "counter")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "label")
(PUNCT "=")
(ID "label")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "format_roman")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(ID "counter")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "label")
(PUNCT "=")
(ID "label")
(PUNCT "+")
(ID "c")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "label")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "format_letter")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "case")
(PUNCT ",")
(ID "counter")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "label")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD while)
(ID "counter")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "counter")
(PUNCT ",")
(ID "x")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "counter")
(PUNCT "-")
(LIT 1)
(PUNCT ",")
(LIT 26)
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "chr")
(PUNCT "(")
(ID "ord")
(PUNCT "(")
(ID "case")
(PUNCT ")")
(PUNCT "+")
(ID "x")
(PUNCT ")")
(NEWLINE)
(ID "label")
(PUNCT "=")
(ID "s")
(PUNCT "+")
(ID "label")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "label")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "format_roman")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "case")
(PUNCT ",")
(ID "counter")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ones")
(PUNCT "=")
(PUNCT "[")
(LIT "i")
(PUNCT ",")
(LIT "x")
(PUNCT ",")
(LIT "c")
(PUNCT ",")
(LIT "m")
(PUNCT "]")
(NEWLINE)
(ID "fives")
(PUNCT "=")
(PUNCT "[")
(LIT "v")
(PUNCT ",")
(LIT "l")
(PUNCT ",")
(LIT "d")
(PUNCT "]")
(NEWLINE)
(ID "label")
(PUNCT ",")
(ID "index")
(PUNCT "=")
(LIT "")
(PUNCT ",")
(LIT 0)
(NEWLINE)
(KEYWORD while)
(ID "counter")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "counter")
(PUNCT ",")
(ID "x")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "counter")
(PUNCT ",")
(LIT 10)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "x")
(PUNCT "==")
(LIT 9)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "label")
(PUNCT "=")
(ID "ones")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(PUNCT "+")
(ID "ones")
(PUNCT "[")
(ID "index")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(PUNCT "+")
(ID "label")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "x")
(PUNCT "==")
(LIT 4)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "label")
(PUNCT "=")
(ID "ones")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(PUNCT "+")
(ID "fives")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(PUNCT "+")
(ID "label")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "x")
(PUNCT ">=")
(LIT 5)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "fives")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(NEWLINE)
(ID "x")
(PUNCT "=")
(ID "x")
(PUNCT "-")
(LIT 5)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "+")
(ID "ones")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(PUNCT "*")
(ID "x")
(NEWLINE)
(ID "label")
(PUNCT "=")
(ID "s")
(PUNCT "+")
(ID "label")
(NEWLINE)
(DEDENT)
(ID "index")
(PUNCT "=")
(ID "index")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "case")
(PUNCT "==")
(LIT "I")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "label")
(PUNCT ".")
(ID "upper")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "label")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_flowing_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(KEYWORD return)
(NEWLINE)
(ID "prespace")
(PUNCT "=")
(ID "data")
(PUNCT "[")
(PUNCT ":")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "isspace")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "postspace")
(PUNCT "=")
(ID "data")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ".")
(ID "isspace")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "data")
(PUNCT "=")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "data")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "nospace")
(KEYWORD and)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "prespace")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "nospace")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "parskip")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "nospace")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(LIT " ")
(PUNCT "+")
(ID "data")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "hard_break")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "nospace")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "para_end")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "parskip")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "have_label")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT "=")
(ID "postspace")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_flowing_data")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_literal_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(KEYWORD return)
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_flowing_data")
(PUNCT "(")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "hard_break")
(PUNCT "=")
(ID "data")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(LIT "\n")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "nospace")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "para_end")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "parskip")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "have_label")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_literal_data")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "flush_softspace")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "hard_break")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "para_end")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "parskip")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "have_label")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "nospace")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_flowing_data")
(PUNCT "(")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "push_alignment")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "align")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "align")
(KEYWORD and)
(ID "align")
(PUNCT "!=")
(ID "self")
(PUNCT ".")
(ID "align")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "new_alignment")
(PUNCT "(")
(ID "align")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "align")
(PUNCT "=")
(ID "align")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "align_stack")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "align")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "align_stack")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "align")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "pop_alignment")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "align_stack")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "align_stack")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "align_stack")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "align")
(PUNCT "=")
(ID "align")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "align_stack")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "new_alignment")
(PUNCT "(")
(ID "align")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "align")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "new_alignment")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "push_font")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "font")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "size")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "b")
(PUNCT ",")
(ID "tt")
(PUNCT "=")
(ID "font")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "hard_break")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "para_end")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "nospace")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_flowing_data")
(PUNCT "(")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "font_stack")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "csize")
(PUNCT ",")
(ID "ci")
(PUNCT ",")
(ID "cb")
(PUNCT ",")
(ID "ctt")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "font_stack")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "size")
(KEYWORD is)
(ID "AS_IS")
(PUNCT ":")
(ID "size")
(PUNCT "=")
(ID "csize")
(NEWLINE)
(KEYWORD if)
(ID "i")
(KEYWORD is)
(ID "AS_IS")
(PUNCT ":")
(ID "i")
(PUNCT "=")
(ID "ci")
(NEWLINE)
(KEYWORD if)
(ID "b")
(KEYWORD is)
(ID "AS_IS")
(PUNCT ":")
(ID "b")
(PUNCT "=")
(ID "cb")
(NEWLINE)
(KEYWORD if)
(ID "tt")
(KEYWORD is)
(ID "AS_IS")
(PUNCT ":")
(ID "tt")
(PUNCT "=")
(ID "ctt")
(NEWLINE)
(DEDENT)
(ID "font")
(PUNCT "=")
(PUNCT "(")
(ID "size")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "b")
(PUNCT ",")
(ID "tt")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "font_stack")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "font")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "new_font")
(PUNCT "(")
(ID "font")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "pop_font")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "font_stack")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "font_stack")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "font_stack")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "font")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "font_stack")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "font")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "new_font")
(PUNCT "(")
(ID "font")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "push_margin")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "margin")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "margin_stack")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "margin")
(PUNCT ")")
(NEWLINE)
(ID "fstack")
(PUNCT "=")
(PUNCT "[")
(ID "m")
(KEYWORD for)
(ID "m")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "margin_stack")
(KEYWORD if)
(ID "m")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "margin")
(KEYWORD and)
(ID "fstack")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "margin")
(PUNCT "=")
(ID "fstack")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "new_margin")
(PUNCT "(")
(ID "margin")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "fstack")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "pop_margin")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "margin_stack")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "margin_stack")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "fstack")
(PUNCT "=")
(PUNCT "[")
(ID "m")
(KEYWORD for)
(ID "m")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "margin_stack")
(KEYWORD if)
(ID "m")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "fstack")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "margin")
(PUNCT "=")
(ID "fstack")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "margin")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "new_margin")
(PUNCT "(")
(ID "margin")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "fstack")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_spacing")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "spacing")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "spacing")
(PUNCT "=")
(ID "spacing")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "new_spacing")
(PUNCT "(")
(ID "spacing")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "push_style")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "styles")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "hard_break")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "para_end")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "softspace")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "nospace")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "send_flowing_data")
(PUNCT "(")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "style")
(KEYWORD in)
(ID "styles")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "style_stack")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "style")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "new_styles")
(PUNCT "(")
(ID "tuple")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "style_stack")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "pop_style")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "n")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "style_stack")
(PUNCT "[")
(PUNCT "-")
(ID "n")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "writer")
(PUNCT ".")
(ID "new_styles")
(PUNCT "(")
(ID "tuple")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "style_stack")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "assert_line_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "flag")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "nospace")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "hard_break")
(PUNCT "=")
(KEYWORD not)
(ID "flag")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "para_end")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "parskip")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "have_label")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "NullWriter")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Minimal writer interface to use in testing & inheritance.\n\n    A writer which only provides the interface definition; no actions are\n    taken on any methods.  This should be the base class for all writers\n    which do not need to inherit any implementation methods.\n\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "flush")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "new_alignment")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "align")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "new_font")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "font")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "new_margin")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "margin")
(PUNCT ",")
(ID "level")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "new_spacing")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "spacing")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "new_styles")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "styles")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "send_paragraph")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "blankline")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "send_line_break")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "send_hor_rule")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "send_label_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "send_flowing_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD def)
(ID "send_literal_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "AbstractWriter")
(PUNCT "(")
(ID "NullWriter")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "A writer which can be used in debugging formatters, but not much else.\n\n    Each method simply announces itself by printing its name and\n    arguments on standard output.\n\n    ")
(NEWLINE)
(KEYWORD def)
(ID "new_alignment")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "align")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "new_alignment(%r)")
(PUNCT "%")
(PUNCT "(")
(ID "align")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "new_font")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "font")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "new_font(%r)")
(PUNCT "%")
(PUNCT "(")
(ID "font")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "new_margin")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "margin")
(PUNCT ",")
(ID "level")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "new_margin(%r, %d)")
(PUNCT "%")
(PUNCT "(")
(ID "margin")
(PUNCT ",")
(ID "level")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "new_spacing")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "spacing")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "new_spacing(%r)")
(PUNCT "%")
(PUNCT "(")
(ID "spacing")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "new_styles")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "styles")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "new_styles(%r)")
(PUNCT "%")
(PUNCT "(")
(ID "styles")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send_paragraph")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "blankline")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "send_paragraph(%r)")
(PUNCT "%")
(PUNCT "(")
(ID "blankline")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send_line_break")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "send_line_break()")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send_hor_rule")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "send_hor_rule()")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send_label_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "send_label_data(%r)")
(PUNCT "%")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send_flowing_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "send_flowing_data(%r)")
(PUNCT "%")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send_literal_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "send_literal_data(%r)")
(PUNCT "%")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "DumbWriter")
(PUNCT "(")
(ID "NullWriter")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Simple writer class which writes output on the file object passed in\n    as the file parameter or, if file is omitted, on standard output.  The\n    output is simply word-wrapped to the number of columns specified by\n    the maxcol parameter.  This class is suitable for reflowing a sequence\n    of paragraphs.\n\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "maxcol")
(PUNCT "=")
(LIT 72)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT "=")
(ID "file")
(KEYWORD or)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "maxcol")
(PUNCT "=")
(ID "maxcol")
(NEWLINE)
(ID "NullWriter")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "reset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "col")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "atbreak")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send_paragraph")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "blankline")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\n")
(PUNCT "*")
(ID "blankline")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "col")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "atbreak")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send_line_break")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "col")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "atbreak")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send_hor_rule")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "-")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "maxcol")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "col")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "atbreak")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send_literal_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "data")
(PUNCT ".")
(ID "rfind")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "i")
(PUNCT ">=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "col")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "data")
(PUNCT "=")
(ID "data")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "data")
(PUNCT "=")
(ID "data")
(PUNCT ".")
(ID "expandtabs")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "col")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "col")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "atbreak")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send_flowing_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(KEYWORD return)
(NEWLINE)
(ID "atbreak")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "atbreak")
(KEYWORD or)
(ID "data")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "isspace")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "col")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "col")
(NEWLINE)
(ID "maxcol")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "maxcol")
(NEWLINE)
(ID "write")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ".")
(ID "write")
(NEWLINE)
(KEYWORD for)
(ID "word")
(KEYWORD in)
(ID "data")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "atbreak")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "col")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "word")
(PUNCT ")")
(PUNCT ">=")
(ID "maxcol")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "write")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "col")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "write")
(PUNCT "(")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(ID "col")
(PUNCT "=")
(ID "col")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "write")
(PUNCT "(")
(ID "word")
(PUNCT ")")
(NEWLINE)
(ID "col")
(PUNCT "=")
(ID "col")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "word")
(PUNCT ")")
(NEWLINE)
(ID "atbreak")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "col")
(PUNCT "=")
(ID "col")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "atbreak")
(PUNCT "=")
(ID "data")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "isspace")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "test")
(PUNCT "(")
(ID "file")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "w")
(PUNCT "=")
(ID "DumbWriter")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "f")
(PUNCT "=")
(ID "AbstractFormatter")
(PUNCT "(")
(ID "w")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "file")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fp")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fp")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fp")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdin")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "line")
(KEYWORD in)
(ID "fp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "line")
(PUNCT "==")
(LIT "\n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "end_paragraph")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "add_flowing_data")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "fp")
(KEYWORD is)
(KEYWORD not)
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fp")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "f")
(PUNCT ".")
(ID "end_paragraph")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "test")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
