(LIT "\nConvert use of sys.exitfunc to use the atexit module.\n")
(NEWLINE)
(KEYWORD from)
(ID "lib2to3")
(KEYWORD import)
(ID "pytree")
(PUNCT ",")
(ID "fixer_base")
(NEWLINE)
(KEYWORD from)
(ID "lib2to3")
(PUNCT ".")
(ID "fixer_util")
(KEYWORD import)
(ID "Name")
(PUNCT ",")
(ID "Attr")
(PUNCT ",")
(ID "Call")
(PUNCT ",")
(ID "Comma")
(PUNCT ",")
(ID "Newline")
(PUNCT ",")
(ID "syms")
(NEWLINE)
(KEYWORD class)
(ID "FixExitfunc")
(PUNCT "(")
(ID "fixer_base")
(PUNCT ".")
(ID "BaseFix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "keep_line_order")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "BM_compatible")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "PATTERN")
(PUNCT "=")
(LIT "\n              (\n                  sys_import=import_name<'import'\n                      ('sys'\n                      |\n                      dotted_as_names< (any ',')* 'sys' (',' any)* >\n                      )\n                  >\n              |\n                  expr_stmt<\n                      power< 'sys' trailer< '.' 'exitfunc' > >\n                  '=' func=any >\n              )\n              ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "FixExitfunc")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "start_tree")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "tree")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "FixExitfunc")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "start_tree")
(PUNCT "(")
(ID "tree")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "sys_import")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "transform")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "sys_import")
(KEYWORD in)
(ID "results")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "sys_import")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "sys_import")
(PUNCT "=")
(ID "results")
(PUNCT "[")
(LIT "sys_import")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "func")
(PUNCT "=")
(ID "results")
(PUNCT "[")
(LIT "func")
(PUNCT "]")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "func")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "register")
(PUNCT "=")
(ID "pytree")
(PUNCT ".")
(ID "Node")
(PUNCT "(")
(ID "syms")
(PUNCT ".")
(ID "power")
(PUNCT ",")
(ID "Attr")
(PUNCT "(")
(ID "Name")
(PUNCT "(")
(LIT "atexit")
(PUNCT ")")
(PUNCT ",")
(ID "Name")
(PUNCT "(")
(LIT "register")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "call")
(PUNCT "=")
(ID "Call")
(PUNCT "(")
(ID "register")
(PUNCT ",")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(PUNCT ",")
(ID "node")
(PUNCT ".")
(ID "prefix")
(PUNCT ")")
(NEWLINE)
(ID "node")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "call")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "sys_import")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "warning")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(LIT "Can't find sys import; Please add an atexit ")
(LIT "import at the top of your file.")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "names")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "sys_import")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "names")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "syms")
(PUNCT ".")
(ID "dotted_as_names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT ".")
(ID "append_child")
(PUNCT "(")
(ID "Comma")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "names")
(PUNCT ".")
(ID "append_child")
(PUNCT "(")
(ID "Name")
(PUNCT "(")
(LIT "atexit")
(PUNCT ",")
(LIT " ")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "containing_stmt")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "sys_import")
(PUNCT ".")
(ID "parent")
(NEWLINE)
(ID "position")
(PUNCT "=")
(ID "containing_stmt")
(PUNCT ".")
(ID "children")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "sys_import")
(PUNCT ")")
(NEWLINE)
(ID "stmt_container")
(PUNCT "=")
(ID "containing_stmt")
(PUNCT ".")
(ID "parent")
(NEWLINE)
(ID "new_import")
(PUNCT "=")
(ID "pytree")
(PUNCT ".")
(ID "Node")
(PUNCT "(")
(ID "syms")
(PUNCT ".")
(ID "import_name")
(PUNCT ",")
(PUNCT "[")
(ID "Name")
(PUNCT "(")
(LIT "import")
(PUNCT ")")
(PUNCT ",")
(ID "Name")
(PUNCT "(")
(LIT "atexit")
(PUNCT ",")
(LIT " ")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "new")
(PUNCT "=")
(ID "pytree")
(PUNCT ".")
(ID "Node")
(PUNCT "(")
(ID "syms")
(PUNCT ".")
(ID "simple_stmt")
(PUNCT ",")
(PUNCT "[")
(ID "new_import")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "containing_stmt")
(PUNCT ".")
(ID "insert_child")
(PUNCT "(")
(ID "position")
(PUNCT "+")
(LIT 1)
(PUNCT ",")
(ID "Newline")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "containing_stmt")
(PUNCT ".")
(ID "insert_child")
(PUNCT "(")
(ID "position")
(PUNCT "+")
(LIT 2)
(PUNCT ",")
(ID "new")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ENDMARKER)
