(LIT "Generate Python documentation in HTML or text for interactive use.\n\nAt the Python interactive prompt, calling help(thing) on a Python object\ndocuments the object, and calling help() starts up an interactive\nhelp session.\n\nOr, at the shell command line outside of Python:\n\nRun \"pydoc <name>\" to show documentation on something.  <name> may be\nthe name of a function, module, package, or a dotted reference to a\nclass or function within a module or module in a package.  If the\nargument contains a path segment delimiter (e.g. slash on Unix,\nbackslash on Windows) it is treated as the path to a Python source file.\n\nRun \"pydoc -k <keyword>\" to search for a keyword in the synopsis lines\nof all available modules.\n\nRun \"pydoc -p <port>\" to start an HTTP server on the given port on the\nlocal machine.  Port number 0 can be used to get an arbitrary unused port.\n\nRun \"pydoc -b\" to start an HTTP server on an arbitrary unused port and\nopen a Web browser to interactively browse documentation.  The -p option\ncan be used with the -b option to explicitly specify the server port.\n\nRun \"pydoc -w <name>\" to write out the HTML documentation for a module\nto a file named \"<name>.html\".\n\nModule docs for core modules are assumed to be in\n\n    /usr/share/doc/pythonX.Y/html/library\n\nif the pythonX.Y-doc package is installed or in\n\n    http://docs.python.org/X.Y/library/\n\nThis can be overridden by setting the PYTHONDOCS environment variable\nto a different URL or to a local directory containing the Library\nReference Manual pages.\n")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "help")
(PUNCT "]")
(NEWLINE)
(ID "__author__")
(PUNCT "=")
(LIT "Ka-Ping Yee <ping@lfw.org>")
(NEWLINE)
(ID "__date__")
(PUNCT "=")
(LIT "26 February 2001")
(NEWLINE)
(ID "__credits__")
(PUNCT "=")
(LIT "Guido van Rossum, for an excellent programming language.\nTommy Burnette, the original creator of manpy.\nPaul Prescod, for all his work on onlinehelp.\nRichard Chamberlain, for the first implementation of textdoc.\n")
(NEWLINE)
(KEYWORD import)
(ID "builtins")
(NEWLINE)
(KEYWORD import)
(ID "importlib")
(PUNCT ".")
(ID "_bootstrap")
(NEWLINE)
(KEYWORD import)
(ID "importlib")
(PUNCT ".")
(ID "machinery")
(NEWLINE)
(KEYWORD import)
(ID "importlib")
(PUNCT ".")
(ID "util")
(NEWLINE)
(KEYWORD import)
(ID "inspect")
(NEWLINE)
(KEYWORD import)
(ID "io")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "pkgutil")
(NEWLINE)
(KEYWORD import)
(ID "platform")
(NEWLINE)
(KEYWORD import)
(ID "re")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "time")
(NEWLINE)
(KEYWORD import)
(ID "tokenize")
(NEWLINE)
(KEYWORD import)
(ID "urllib")
(PUNCT ".")
(ID "parse")
(NEWLINE)
(KEYWORD import)
(ID "warnings")
(NEWLINE)
(KEYWORD from)
(ID "collections")
(KEYWORD import)
(ID "deque")
(NEWLINE)
(KEYWORD from)
(ID "reprlib")
(KEYWORD import)
(ID "Repr")
(NEWLINE)
(KEYWORD from)
(ID "traceback")
(KEYWORD import)
(ID "format_exception_only")
(NEWLINE)
(KEYWORD def)
(ID "pathdirs")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Convert sys.path into a list of absolute, existing, unique paths.")
(NEWLINE)
(ID "dirs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "normdirs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "dir")
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "path")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dir")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "abspath")
(PUNCT "(")
(ID "dir")
(KEYWORD or)
(LIT ".")
(PUNCT ")")
(NEWLINE)
(ID "normdir")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normcase")
(PUNCT "(")
(ID "dir")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "normdir")
(KEYWORD not)
(KEYWORD in)
(ID "normdirs")
(KEYWORD and)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isdir")
(PUNCT "(")
(ID "dir")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dirs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "dir")
(PUNCT ")")
(NEWLINE)
(ID "normdirs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "normdir")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "dirs")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getdoc")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Get the doc string or comments for an object.")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "inspect")
(PUNCT ".")
(ID "getdoc")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "getcomments")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "result")
(KEYWORD and)
(ID "re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "^ *\n")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(ID "result")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(KEYWORD or)
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "splitdoc")
(PUNCT "(")
(ID "doc")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Split a doc string into a synopsis line (if any) and the rest.")
(NEWLINE)
(ID "lines")
(PUNCT "=")
(ID "doc")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "lines")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "lines")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "len")
(PUNCT "(")
(ID "lines")
(PUNCT ")")
(PUNCT ">=")
(LIT 2)
(KEYWORD and)
(KEYWORD not)
(ID "lines")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "lines")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(LIT "\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "lines")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "")
(PUNCT ",")
(LIT "\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "lines")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "classname")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "modname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Get a class name and qualify it with a module name if necessary.")
(NEWLINE)
(ID "name")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(KEYWORD if)
(ID "object")
(PUNCT ".")
(ID "__module__")
(PUNCT "!=")
(ID "modname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__module__")
(PUNCT "+")
(LIT ".")
(PUNCT "+")
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "isdata")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Check if an object is of a type that probably means it's data.")
(NEWLINE)
(KEYWORD return)
(KEYWORD not)
(PUNCT "(")
(ID "inspect")
(PUNCT ".")
(ID "ismodule")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "isclass")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "isroutine")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "isframe")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "istraceback")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "iscode")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "replace")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(PUNCT "*")
(ID "pairs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Do a series of global replacements on a string.")
(NEWLINE)
(KEYWORD while)
(ID "pairs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "pairs")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "text")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "pairs")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "pairs")
(PUNCT "=")
(ID "pairs")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "text")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "cram")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(ID "maxlen")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Omit part of a string if needed to make it fit in a maximum length.")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(PUNCT ">")
(ID "maxlen")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pre")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(PUNCT "(")
(ID "maxlen")
(PUNCT "-")
(LIT 3)
(PUNCT ")")
(PUNCT "//")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(ID "post")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "maxlen")
(PUNCT "-")
(LIT 3)
(PUNCT "-")
(ID "pre")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "text")
(PUNCT "[")
(PUNCT ":")
(ID "pre")
(PUNCT "]")
(PUNCT "+")
(LIT "...")
(PUNCT "+")
(ID "text")
(PUNCT "[")
(ID "len")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(PUNCT "-")
(ID "post")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "text")
(NEWLINE)
(DEDENT)
(ID "_re_stripid")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT " at 0x[0-9a-f]{6,16}(>+)$")
(PUNCT ",")
(ID "re")
(PUNCT ".")
(ID "IGNORECASE")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "stripid")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Remove the hexadecimal id from a Python object representation.")
(NEWLINE)
(KEYWORD return)
(ID "_re_stripid")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "\\1")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_is_some_method")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "inspect")
(PUNCT ".")
(ID "isfunction")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "ismethod")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "isbuiltin")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "ismethoddescriptor")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_is_bound_method")
(PUNCT "(")
(ID "fn")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Returns True if fn is a bound method, regardless of whether\n    fn was implemented in Python or in C.\n    ")
(NEWLINE)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "ismethod")
(PUNCT "(")
(ID "fn")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "isbuiltin")
(PUNCT "(")
(ID "fn")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "fn")
(PUNCT ",")
(LIT "__self__")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD not)
(PUNCT "(")
(ID "inspect")
(PUNCT ".")
(ID "ismodule")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(KEYWORD or)
(PUNCT "(")
(ID "self")
(KEYWORD is)
(KEYWORD None)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "allmethods")
(PUNCT "(")
(ID "cl")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "methods")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "inspect")
(PUNCT ".")
(ID "getmembers")
(PUNCT "(")
(ID "cl")
(PUNCT ",")
(ID "_is_some_method")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "methods")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "base")
(KEYWORD in)
(ID "cl")
(PUNCT ".")
(ID "__bases__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "methods")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "allmethods")
(PUNCT "(")
(ID "base")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "methods")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "methods")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "cl")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "methods")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_split_list")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "predicate")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Split sequence s via predicate, and return pair ([true], [false]).\n\n    The return value is a 2-tuple of lists,\n        ([x for x in s if predicate(x)],\n         [x for x in s if not predicate(x)])\n    ")
(NEWLINE)
(ID "yes")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "no")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "x")
(KEYWORD in)
(ID "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "predicate")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "yes")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "no")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "yes")
(PUNCT ",")
(ID "no")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "visiblename")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "all")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "obj")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Decide whether to show documentation on a variable.")
(NEWLINE)
(KEYWORD if)
(ID "name")
(KEYWORD in)
(PUNCT "{")
(LIT "__author__")
(PUNCT ",")
(LIT "__builtins__")
(PUNCT ",")
(LIT "__cached__")
(PUNCT ",")
(LIT "__credits__")
(PUNCT ",")
(LIT "__date__")
(PUNCT ",")
(LIT "__doc__")
(PUNCT ",")
(LIT "__file__")
(PUNCT ",")
(LIT "__spec__")
(PUNCT ",")
(LIT "__loader__")
(PUNCT ",")
(LIT "__module__")
(PUNCT ",")
(LIT "__name__")
(PUNCT ",")
(LIT "__package__")
(PUNCT ",")
(LIT "__path__")
(PUNCT ",")
(LIT "__qualname__")
(PUNCT ",")
(LIT "__slots__")
(PUNCT ",")
(LIT "__version__")
(PUNCT "}")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "name")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "__")
(PUNCT ")")
(KEYWORD and)
(ID "name")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT "__")
(PUNCT ")")
(PUNCT ":")
(KEYWORD return)
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "name")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "_")
(PUNCT ")")
(KEYWORD and)
(ID "hasattr")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(LIT "_fields")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "all")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "name")
(KEYWORD in)
(ID "all")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD not)
(ID "name")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "_")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "classify_class_attrs")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Wrap inspect.classify_class_attrs, with fixup for data descriptors.")
(NEWLINE)
(ID "results")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "kind")
(PUNCT ",")
(ID "cls")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(KEYWORD in)
(ID "inspect")
(PUNCT ".")
(ID "classify_class_attrs")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "isdatadescriptor")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kind")
(PUNCT "=")
(LIT "data descriptor")
(NEWLINE)
(DEDENT)
(ID "results")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "kind")
(PUNCT ",")
(ID "cls")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "results")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ispackage")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Guess whether a path refers to a package directory.")
(NEWLINE)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isdir")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "ext")
(KEYWORD in)
(PUNCT "(")
(LIT ".py")
(PUNCT ",")
(LIT ".pyc")
(PUNCT ",")
(LIT ".pyo")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isfile")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(LIT "__init__")
(PUNCT "+")
(ID "ext")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "source_synopsis")
(PUNCT "(")
(ID "file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "line")
(PUNCT "[")
(PUNCT ":")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "#")
(KEYWORD or)
(KEYWORD not)
(ID "line")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT "[")
(PUNCT ":")
(LIT 4)
(PUNCT "]")
(PUNCT "==")
(LIT "r\"\"\"")
(PUNCT ":")
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT "[")
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(PUNCT "==")
(LIT "\"\"\"")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(LIT 3)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(LIT "\\")
(PUNCT ":")
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(KEYWORD not)
(ID "line")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "line")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "\"\"\"")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(ID "result")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "synopsis")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "cache")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Get the one-line summary out of a module file.")
(NEWLINE)
(ID "mtime")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(PUNCT ".")
(ID "st_mtime")
(NEWLINE)
(ID "lastupdate")
(PUNCT ",")
(ID "result")
(PUNCT "=")
(ID "cache")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "lastupdate")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID "lastupdate")
(PUNCT "<")
(ID "mtime")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "filename")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(ID "tuple")
(PUNCT "(")
(ID "importlib")
(PUNCT ".")
(ID "machinery")
(PUNCT ".")
(ID "BYTECODE_SUFFIXES")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "loader_cls")
(PUNCT "=")
(ID "importlib")
(PUNCT ".")
(ID "machinery")
(PUNCT ".")
(ID "SourcelessFileLoader")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "filename")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(ID "tuple")
(PUNCT "(")
(ID "importlib")
(PUNCT ".")
(ID "machinery")
(PUNCT ".")
(ID "EXTENSION_SUFFIXES")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "loader_cls")
(PUNCT "=")
(ID "importlib")
(PUNCT ".")
(ID "machinery")
(PUNCT ".")
(ID "ExtensionFileLoader")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "loader_cls")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "loader_cls")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "file")
(PUNCT "=")
(ID "tokenize")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD with)
(ID "file")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "source_synopsis")
(PUNCT "(")
(ID "file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "loader")
(PUNCT "=")
(ID "loader_cls")
(PUNCT "(")
(LIT "__temp__")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(ID "spec")
(PUNCT "=")
(ID "importlib")
(PUNCT ".")
(ID "util")
(PUNCT ".")
(ID "spec_from_file_location")
(PUNCT "(")
(LIT "__temp__")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "loader")
(PUNCT "=")
(ID "loader")
(PUNCT ")")
(NEWLINE)
(ID "_spec")
(PUNCT "=")
(ID "importlib")
(PUNCT ".")
(ID "_bootstrap")
(PUNCT ".")
(ID "_SpecMethods")
(PUNCT "(")
(ID "spec")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "module")
(PUNCT "=")
(ID "_spec")
(PUNCT ".")
(ID "load")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD del)
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(LIT "__temp__")
(PUNCT "]")
(NEWLINE)
(ID "result")
(PUNCT "=")
(PUNCT "(")
(ID "module")
(PUNCT ".")
(ID "__doc__")
(KEYWORD or)
(LIT "")
(PUNCT ")")
(PUNCT ".")
(ID "splitlines")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "cache")
(PUNCT "[")
(ID "filename")
(PUNCT "]")
(PUNCT "=")
(PUNCT "(")
(ID "mtime")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "ErrorDuringImport")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Errors that occurred while trying to import something to document it.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "exc_info")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "filename")
(PUNCT "=")
(ID "filename")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "exc")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "value")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "tb")
(PUNCT "=")
(ID "exc_info")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__str__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "exc")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "exc")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(KEYWORD return)
(LIT "problem in %s - %s: %s")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "filename")
(PUNCT ",")
(ID "exc")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "importfile")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Import a Python source file or compiled file given its path.")
(NEWLINE)
(ID "magic")
(PUNCT "=")
(ID "importlib")
(PUNCT ".")
(ID "util")
(PUNCT ".")
(ID "MAGIC_NUMBER")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(KEYWORD as)
(ID "file")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "is_bytecode")
(PUNCT "=")
(ID "magic")
(PUNCT "==")
(ID "file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "magic")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "filename")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "basename")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(ID "name")
(PUNCT ",")
(ID "ext")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "splitext")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "is_bytecode")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "loader")
(PUNCT "=")
(ID "importlib")
(PUNCT ".")
(ID "_bootstrap")
(PUNCT ".")
(ID "SourcelessFileLoader")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "loader")
(PUNCT "=")
(ID "importlib")
(PUNCT ".")
(ID "_bootstrap")
(PUNCT ".")
(ID "SourceFileLoader")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "spec")
(PUNCT "=")
(ID "importlib")
(PUNCT ".")
(ID "util")
(PUNCT ".")
(ID "spec_from_file_location")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "loader")
(PUNCT "=")
(ID "loader")
(PUNCT ")")
(NEWLINE)
(ID "_spec")
(PUNCT "=")
(ID "importlib")
(PUNCT ".")
(ID "_bootstrap")
(PUNCT ".")
(ID "_SpecMethods")
(PUNCT "(")
(ID "spec")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_spec")
(PUNCT ".")
(ID "load")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ErrorDuringImport")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "sys")
(PUNCT ".")
(ID "exc_info")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "safeimport")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "forceload")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "cache")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Import a module; handle errors; return None if the module isn't found.\n\n    If the module *is* found but an exception occurs, it's wrapped in an\n    ErrorDuringImport exception and reraised.  Unlike __import__, if a\n    package path is specified, the module at the end of the path is returned,\n    not the package at the beginning.  If the optional 'forceload' argument\n    is 1, we reload the module from disk (unless it's a dynamic extension).")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "forceload")
(KEYWORD and)
(ID "path")
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "path")
(KEYWORD not)
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "builtin_module_names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subs")
(PUNCT "=")
(PUNCT "[")
(ID "m")
(KEYWORD for)
(ID "m")
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "modules")
(KEYWORD if)
(ID "m")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(ID "path")
(PUNCT "+")
(LIT ".")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "key")
(KEYWORD in)
(PUNCT "[")
(ID "path")
(PUNCT "]")
(PUNCT "+")
(ID "subs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cache")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(KEYWORD del)
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "module")
(PUNCT "=")
(ID "__import__")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(PUNCT "(")
(ID "exc")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "tb")
(PUNCT ")")
(PUNCT "=")
(ID "info")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "exc_info")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "path")
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ErrorDuringImport")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(ID "path")
(PUNCT "]")
(PUNCT ".")
(ID "__file__")
(PUNCT ",")
(ID "info")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "exc")
(KEYWORD is)
(ID "SyntaxError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ErrorDuringImport")
(PUNCT "(")
(ID "value")
(PUNCT ".")
(ID "filename")
(PUNCT ",")
(ID "info")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "exc")
(KEYWORD is)
(ID "ImportError")
(KEYWORD and)
(ID "value")
(PUNCT ".")
(ID "name")
(PUNCT "==")
(ID "path")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ErrorDuringImport")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "sys")
(PUNCT ".")
(ID "exc_info")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "part")
(KEYWORD in)
(ID "path")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(ID "module")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "module")
(PUNCT ",")
(ID "part")
(PUNCT ")")
(NEWLINE)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "module")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "Doc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "PYTHONDOCS")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "PYTHONDOCS")
(PUNCT ",")
(LIT "http://docs.python.org/%d.%d/library")
(PUNCT "%")
(ID "sys")
(PUNCT ".")
(ID "version_info")
(PUNCT "[")
(PUNCT ":")
(LIT 2)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "document")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Generate documentation for an object.")
(NEWLINE)
(ID "args")
(PUNCT "=")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT "+")
(ID "args")
(NEWLINE)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "isgetsetdescriptor")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "docdata")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "ismemberdescriptor")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "docdata")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "ismodule")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "docmodule")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "isclass")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "docclass")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "isroutine")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "docroutine")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "property")
(PUNCT ")")
(PUNCT ":")
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "docproperty")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "docother")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "fail")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Raise an exception for unimplemented types.")
(NEWLINE)
(ID "message")
(PUNCT "=")
(LIT "don't know how to document object%s of type %s")
(PUNCT "%")
(PUNCT "(")
(ID "name")
(KEYWORD and)
(LIT " ")
(PUNCT "+")
(ID "repr")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ",")
(ID "type")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "docmodule")
(PUNCT "=")
(ID "docclass")
(PUNCT "=")
(ID "docroutine")
(PUNCT "=")
(ID "docother")
(PUNCT "=")
(ID "docproperty")
(PUNCT "=")
(ID "docdata")
(PUNCT "=")
(ID "fail")
(NEWLINE)
(KEYWORD def)
(ID "getdocloc")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the location of module docs or None")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "file")
(PUNCT "=")
(ID "inspect")
(PUNCT ".")
(ID "getabsfile")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "file")
(PUNCT "=")
(LIT "(built-in)")
(NEWLINE)
(DEDENT)
(ID "docloc")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "PYTHONDOCS")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "PYTHONDOCS")
(PUNCT ")")
(NEWLINE)
(ID "basedir")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "base_exec_prefix")
(PUNCT ",")
(LIT "lib")
(PUNCT ",")
(LIT "python%d.%d")
(PUNCT "%")
(ID "sys")
(PUNCT ".")
(ID "version_info")
(PUNCT "[")
(PUNCT ":")
(LIT 2)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID "isinstance")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "type")
(PUNCT "(")
(ID "os")
(PUNCT ")")
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__name__")
(KEYWORD in)
(PUNCT "(")
(LIT "errno")
(PUNCT ",")
(LIT "exceptions")
(PUNCT ",")
(LIT "gc")
(PUNCT ",")
(LIT "imp")
(PUNCT ",")
(LIT "marshal")
(PUNCT ",")
(LIT "posix")
(PUNCT ",")
(LIT "signal")
(PUNCT ",")
(LIT "sys")
(PUNCT ",")
(LIT "_thread")
(PUNCT ",")
(LIT "zipimport")
(PUNCT ")")
(KEYWORD or)
(PUNCT "(")
(ID "file")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(ID "basedir")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID "file")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "basedir")
(PUNCT ",")
(LIT "dist-packages")
(PUNCT ")")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID "file")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "basedir")
(PUNCT ",")
(LIT "site-packages")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(KEYWORD and)
(ID "object")
(PUNCT ".")
(ID "__name__")
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(LIT "xml.etree")
(PUNCT ",")
(LIT "test.pydoc_mod")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "docloc")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "http://")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "docloc")
(PUNCT "=")
(LIT "%s/%s")
(PUNCT "%")
(PUNCT "(")
(ID "docloc")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(LIT "/")
(PUNCT ")")
(PUNCT ",")
(ID "object")
(PUNCT ".")
(ID "__name__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "docloc")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "docloc")
(PUNCT ",")
(ID "object")
(PUNCT ".")
(ID "__name__")
(PUNCT "+")
(LIT ".html")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "docloc")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "docloc")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "HTMLRepr")
(PUNCT "(")
(ID "Repr")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Class for safely making an HTML representation of a Python object.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "Repr")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "maxlist")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "maxtuple")
(PUNCT "=")
(LIT 20)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "maxdict")
(PUNCT "=")
(LIT 10)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "maxstring")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "maxother")
(PUNCT "=")
(LIT 100)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "escape")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "replace")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(LIT "&")
(PUNCT ",")
(LIT "&amp;")
(PUNCT ",")
(LIT "<")
(PUNCT ",")
(LIT "&lt;")
(PUNCT ",")
(LIT ">")
(PUNCT ",")
(LIT "&gt;")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "repr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "Repr")
(PUNCT ".")
(ID "repr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "repr1")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "level")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ",")
(LIT "__name__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "methodname")
(PUNCT "=")
(LIT "repr_")
(PUNCT "+")
(LIT "_")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "methodname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "methodname")
(PUNCT ")")
(PUNCT "(")
(ID "x")
(PUNCT ",")
(ID "level")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "escape")
(PUNCT "(")
(ID "cram")
(PUNCT "(")
(ID "stripid")
(PUNCT "(")
(ID "repr")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "maxother")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "repr_string")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "level")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "test")
(PUNCT "=")
(ID "cram")
(PUNCT "(")
(ID "x")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "maxstring")
(PUNCT ")")
(NEWLINE)
(ID "testrepr")
(PUNCT "=")
(ID "repr")
(PUNCT "(")
(ID "test")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "\\")
(KEYWORD in)
(ID "test")
(KEYWORD and)
(LIT "\\")
(KEYWORD not)
(KEYWORD in)
(ID "replace")
(PUNCT "(")
(ID "testrepr")
(PUNCT ",")
(LIT "\\\\")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "r")
(PUNCT "+")
(ID "testrepr")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "escape")
(PUNCT "(")
(ID "test")
(PUNCT ")")
(PUNCT "+")
(ID "testrepr")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "((\\\\[\\\\abfnrtv\\'\"]|\\\\[0-9]..|\\\\x..|\\\\u....)+)")
(PUNCT ",")
(LIT "<font color=\"#c040c0\">\\1</font>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "escape")
(PUNCT "(")
(ID "testrepr")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "repr_str")
(PUNCT "=")
(ID "repr_string")
(NEWLINE)
(KEYWORD def)
(ID "repr_instance")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "level")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "escape")
(PUNCT "(")
(ID "cram")
(PUNCT "(")
(ID "stripid")
(PUNCT "(")
(ID "repr")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "maxstring")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "escape")
(PUNCT "(")
(LIT "<%s instance>")
(PUNCT "%")
(ID "x")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "repr_unicode")
(PUNCT "=")
(ID "repr_string")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "HTMLDoc")
(PUNCT "(")
(ID "Doc")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Formatter class for HTML documentation.")
(NEWLINE)
(ID "_repr_instance")
(PUNCT "=")
(ID "HTMLRepr")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "repr")
(PUNCT "=")
(ID "_repr_instance")
(PUNCT ".")
(ID "repr")
(NEWLINE)
(ID "escape")
(PUNCT "=")
(ID "_repr_instance")
(PUNCT ".")
(ID "escape")
(NEWLINE)
(KEYWORD def)
(ID "page")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "title")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format an HTML page.")
(NEWLINE)
(KEYWORD return)
(LIT "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html><head><title>Python: %s</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n</head><body bgcolor=\"#f0f0f8\">\n%s\n</body></html>")
(PUNCT "%")
(PUNCT "(")
(ID "title")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "heading")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "title")
(PUNCT ",")
(ID "fgcol")
(PUNCT ",")
(ID "bgcol")
(PUNCT ",")
(ID "extras")
(PUNCT "=")
(LIT "")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format a page heading.")
(NEWLINE)
(KEYWORD return)
(LIT "\n<table width=\"100%%\" cellspacing=0 cellpadding=2 border=0 summary=\"heading\">\n<tr bgcolor=\"%s\">\n<td valign=bottom>&nbsp;<br>\n<font color=\"%s\" face=\"helvetica, arial\">&nbsp;<br>%s</font></td\n><td align=right valign=bottom\n><font color=\"%s\" face=\"helvetica, arial\">%s</font></td></tr></table>\n    ")
(PUNCT "%")
(PUNCT "(")
(ID "bgcol")
(PUNCT ",")
(ID "fgcol")
(PUNCT ",")
(ID "title")
(PUNCT ",")
(ID "fgcol")
(PUNCT ",")
(ID "extras")
(KEYWORD or)
(LIT "&nbsp;")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "section")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "title")
(PUNCT ",")
(ID "fgcol")
(PUNCT ",")
(ID "bgcol")
(PUNCT ",")
(ID "contents")
(PUNCT ",")
(ID "width")
(PUNCT "=")
(LIT 6)
(PUNCT ",")
(ID "prelude")
(PUNCT "=")
(LIT "")
(PUNCT ",")
(ID "marginalia")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "gap")
(PUNCT "=")
(LIT "&nbsp;")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format a section with a heading.")
(NEWLINE)
(KEYWORD if)
(ID "marginalia")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "marginalia")
(PUNCT "=")
(LIT "<tt>")
(PUNCT "+")
(LIT "&nbsp;")
(PUNCT "*")
(ID "width")
(PUNCT "+")
(LIT "</tt>")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(LIT "<p>\n<table width=\"100%%\" cellspacing=0 cellpadding=2 border=0 summary=\"section\">\n<tr bgcolor=\"%s\">\n<td colspan=3 valign=bottom>&nbsp;<br>\n<font color=\"%s\" face=\"helvetica, arial\">%s</font></td></tr>\n    ")
(PUNCT "%")
(PUNCT "(")
(ID "bgcol")
(PUNCT ",")
(ID "fgcol")
(PUNCT ",")
(ID "title")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "prelude")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(LIT "\n<tr bgcolor=\"%s\"><td rowspan=2>%s</td>\n<td colspan=2>%s</td></tr>\n<tr><td>%s</td>")
(PUNCT "%")
(PUNCT "(")
(ID "bgcol")
(PUNCT ",")
(ID "marginalia")
(PUNCT ",")
(ID "prelude")
(PUNCT ",")
(ID "gap")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(LIT "\n<tr><td bgcolor=\"%s\">%s</td><td>%s</td>")
(PUNCT "%")
(PUNCT "(")
(ID "bgcol")
(PUNCT ",")
(ID "marginalia")
(PUNCT ",")
(ID "gap")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(PUNCT "+")
(LIT "\n<td width=\"100%%\">%s</td></tr></table>")
(PUNCT "%")
(ID "contents")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "bigsection")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "title")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format a section with a big heading.")
(NEWLINE)
(ID "title")
(PUNCT "=")
(LIT "<big><strong>%s</strong></big>")
(PUNCT "%")
(ID "title")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(ID "title")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "preformat")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format literal preformatted text.")
(NEWLINE)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "escape")
(PUNCT "(")
(ID "text")
(PUNCT ".")
(ID "expandtabs")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "replace")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(LIT "\n\n")
(PUNCT ",")
(LIT "\n \n")
(PUNCT ",")
(LIT "\n\n")
(PUNCT ",")
(LIT "\n \n")
(PUNCT ",")
(LIT " ")
(PUNCT ",")
(LIT "&nbsp;")
(PUNCT ",")
(LIT "\n")
(PUNCT ",")
(LIT "<br>\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "multicolumn")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "list")
(PUNCT ",")
(ID "format")
(PUNCT ",")
(ID "cols")
(PUNCT "=")
(LIT 4)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format a list of items into a multi-column list.")
(NEWLINE)
(ID "result")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "rows")
(PUNCT "=")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "list")
(PUNCT ")")
(PUNCT "+")
(ID "cols")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT "//")
(ID "cols")
(NEWLINE)
(KEYWORD for)
(ID "col")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "cols")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(LIT "<td width=\"%d%%\" valign=top>")
(PUNCT "%")
(PUNCT "(")
(LIT 100)
(PUNCT "//")
(ID "cols")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "rows")
(PUNCT "*")
(ID "col")
(PUNCT ",")
(ID "rows")
(PUNCT "*")
(ID "col")
(PUNCT "+")
(ID "rows")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "i")
(PUNCT "<")
(ID "len")
(PUNCT "(")
(ID "list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "format")
(PUNCT "(")
(ID "list")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ")")
(PUNCT "+")
(LIT "<br>\n")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(LIT "</td>")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "<table width=\"100%%\" summary=\"list\"><tr>%s</tr></table>")
(PUNCT "%")
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "grey")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(PUNCT ":")
(KEYWORD return)
(LIT "<font color=\"#909090\">%s</font>")
(PUNCT "%")
(ID "text")
(NEWLINE)
(KEYWORD def)
(ID "namelink")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(PUNCT "*")
(ID "dicts")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Make a link for an identifier, given name-to-URL mappings.")
(NEWLINE)
(KEYWORD for)
(ID "dict")
(KEYWORD in)
(ID "dicts")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(KEYWORD in)
(ID "dict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<a href=\"%s\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "dict")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "classlink")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "modname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Make a link for a class.")
(NEWLINE)
(ID "name")
(PUNCT ",")
(ID "module")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__module__")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "module")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(KEYWORD and)
(ID "getattr")
(PUNCT "(")
(ID "module")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(KEYWORD is)
(ID "object")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<a href=\"%s.html#%s\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "module")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "classname")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "modname")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "classname")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "modname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "modulelink")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Make a link for a module.")
(NEWLINE)
(KEYWORD return)
(LIT "<a href=\"%s.html\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "object")
(PUNCT ".")
(ID "__name__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "modpkglink")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "modpkginfo")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Make a link for a module or package to display in an index.")
(NEWLINE)
(ID "name")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "ispackage")
(PUNCT ",")
(ID "shadowed")
(PUNCT "=")
(ID "modpkginfo")
(NEWLINE)
(KEYWORD if)
(ID "shadowed")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "grey")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "path")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "url")
(PUNCT "=")
(LIT "%s.%s.html")
(PUNCT "%")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "url")
(PUNCT "=")
(LIT "%s.html")
(PUNCT "%")
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "ispackage")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(LIT "<strong>%s</strong>&nbsp;(package)")
(PUNCT "%")
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "<a href=\"%s\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "url")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "filelink")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "url")
(PUNCT ",")
(ID "path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Make a link to source file.")
(NEWLINE)
(KEYWORD return)
(LIT "<a href=\"file:%s\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "url")
(PUNCT ",")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "markup")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(ID "escape")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "funcs")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(ID "classes")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(ID "methods")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Mark up some plain text, given a context of symbols to look for.\n        Each context dictionary maps object names to anchor names.")
(NEWLINE)
(ID "escape")
(PUNCT "=")
(ID "escape")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "escape")
(NEWLINE)
(ID "results")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "here")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "pattern")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "\\b((http|ftp)://\\S+[\\w/]|")
(LIT "RFC[- ]?(\\d+)|")
(LIT "PEP[- ]?(\\d+)|")
(LIT "(self\\.)?(\\w+))")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "match")
(PUNCT "=")
(ID "pattern")
(PUNCT ".")
(ID "search")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(ID "here")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "match")
(PUNCT ":")
(KEYWORD break)
(NEWLINE)
(ID "start")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "span")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "results")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "escape")
(PUNCT "(")
(ID "text")
(PUNCT "[")
(ID "here")
(PUNCT ":")
(ID "start")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "all")
(PUNCT ",")
(ID "scheme")
(PUNCT ",")
(ID "rfc")
(PUNCT ",")
(ID "pep")
(PUNCT ",")
(ID "selfdot")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "groups")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "scheme")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "url")
(PUNCT "=")
(ID "escape")
(PUNCT "(")
(ID "all")
(PUNCT ")")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "\"")
(PUNCT ",")
(LIT "&quot;")
(PUNCT ")")
(NEWLINE)
(ID "results")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "<a href=\"%s\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "url")
(PUNCT ",")
(ID "url")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "rfc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "url")
(PUNCT "=")
(LIT "http://www.rfc-editor.org/rfc/rfc%d.txt")
(PUNCT "%")
(ID "int")
(PUNCT "(")
(ID "rfc")
(PUNCT ")")
(NEWLINE)
(ID "results")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "<a href=\"%s\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "url")
(PUNCT ",")
(ID "escape")
(PUNCT "(")
(ID "all")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "pep")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "url")
(PUNCT "=")
(LIT "http://www.python.org/dev/peps/pep-%04d/")
(PUNCT "%")
(ID "int")
(PUNCT "(")
(ID "pep")
(PUNCT ")")
(NEWLINE)
(ID "results")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "<a href=\"%s\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "url")
(PUNCT ",")
(ID "escape")
(PUNCT "(")
(ID "all")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "selfdot")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "text")
(PUNCT "[")
(ID "end")
(PUNCT ":")
(ID "end")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "(")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "results")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "self.")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "namelink")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "methods")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "results")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "self.<strong>%s</strong>")
(PUNCT "%")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "text")
(PUNCT "[")
(ID "end")
(PUNCT ":")
(ID "end")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "(")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "results")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "namelink")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "methods")
(PUNCT ",")
(ID "funcs")
(PUNCT ",")
(ID "classes")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "results")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "namelink")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "classes")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "here")
(PUNCT "=")
(ID "end")
(NEWLINE)
(DEDENT)
(ID "results")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "escape")
(PUNCT "(")
(ID "text")
(PUNCT "[")
(ID "here")
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "results")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formattree")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "tree")
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Produce HTML for a class tree as given by inspect.getclasstree().")
(NEWLINE)
(ID "result")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "tree")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "type")
(PUNCT "(")
(ID "entry")
(PUNCT ")")
(KEYWORD is)
(ID "type")
(PUNCT "(")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT ",")
(ID "bases")
(PUNCT "=")
(ID "entry")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(LIT "<dt><font face=\"helvetica, arial\">")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "classlink")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(ID "modname")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "bases")
(KEYWORD and)
(ID "bases")
(PUNCT "!=")
(PUNCT "(")
(ID "parent")
(PUNCT ",")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parents")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "base")
(KEYWORD in)
(ID "bases")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parents")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "classlink")
(PUNCT "(")
(ID "base")
(PUNCT ",")
(ID "modname")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(LIT "(")
(PUNCT "+")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "parents")
(PUNCT ")")
(PUNCT "+")
(LIT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(LIT "\n</font></dt>")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "type")
(PUNCT "(")
(ID "entry")
(PUNCT ")")
(KEYWORD is)
(ID "type")
(PUNCT "(")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(LIT "<dd>\n%s</dd>\n")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "formattree")
(PUNCT "(")
(ID "entry")
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(ID "c")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(LIT "<dl>\n%s</dl>\n")
(PUNCT "%")
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "docmodule")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mod")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "*")
(ID "ignored")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Produce HTML documentation for a module object.")
(NEWLINE)
(ID "name")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "all")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__all__")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "all")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "parts")
(PUNCT "=")
(ID "name")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(ID "links")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "parts")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "links")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "<a href=\"%s.html\"><font color=\"#ffffff\">%s</font></a>")
(PUNCT "%")
(PUNCT "(")
(LIT ".")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "parts")
(PUNCT "[")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(ID "parts")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "linkedname")
(PUNCT "=")
(LIT ".")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "links")
(PUNCT "+")
(ID "parts")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "head")
(PUNCT "=")
(LIT "<big><big><strong>%s</strong></big></big>")
(PUNCT "%")
(ID "linkedname")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "path")
(PUNCT "=")
(ID "inspect")
(PUNCT ".")
(ID "getabsfile")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(ID "url")
(PUNCT "=")
(ID "urllib")
(PUNCT ".")
(ID "parse")
(PUNCT ".")
(ID "quote")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(ID "filelink")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "filelink")
(PUNCT "(")
(ID "url")
(PUNCT ",")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filelink")
(PUNCT "=")
(LIT "(built-in)")
(NEWLINE)
(DEDENT)
(ID "info")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(LIT "__version__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "version")
(PUNCT "=")
(ID "str")
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__version__")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "version")
(PUNCT "[")
(PUNCT ":")
(LIT 11)
(PUNCT "]")
(PUNCT "==")
(LIT "$")
(PUNCT "+")
(LIT "Revision: ")
(KEYWORD and)
(ID "version")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(LIT "$")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "version")
(PUNCT "=")
(ID "version")
(PUNCT "[")
(LIT 11)
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "info")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "version %s")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "escape")
(PUNCT "(")
(ID "version")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(LIT "__date__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "escape")
(PUNCT "(")
(ID "str")
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__date__")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "info")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "head")
(PUNCT "=")
(ID "head")
(PUNCT "+")
(LIT " (%s)")
(PUNCT "%")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "info")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "docloc")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getdocloc")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "docloc")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "docloc")
(PUNCT "=")
(LIT "<br><a href=\"%(docloc)s\">Module Reference</a>")
(PUNCT "%")
(ID "locals")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "docloc")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "heading")
(PUNCT "(")
(ID "head")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#7799ee")
(PUNCT ",")
(LIT "<a href=\".\">index</a><br>")
(PUNCT "+")
(ID "filelink")
(PUNCT "+")
(ID "docloc")
(PUNCT ")")
(NEWLINE)
(ID "modules")
(PUNCT "=")
(ID "inspect")
(PUNCT ".")
(ID "getmembers")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "inspect")
(PUNCT ".")
(ID "ismodule")
(PUNCT ")")
(NEWLINE)
(ID "classes")
(PUNCT ",")
(ID "cdict")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "inspect")
(PUNCT ".")
(ID "getmembers")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "inspect")
(PUNCT ".")
(ID "isclass")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "all")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD or)
(PUNCT "(")
(ID "inspect")
(PUNCT ".")
(ID "getmodule")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(KEYWORD or)
(ID "object")
(PUNCT ")")
(KEYWORD is)
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "visiblename")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "all")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "classes")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "cdict")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "cdict")
(PUNCT "[")
(ID "value")
(PUNCT "]")
(PUNCT "=")
(LIT "#")
(PUNCT "+")
(ID "key")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "classes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "base")
(KEYWORD in)
(ID "value")
(PUNCT ".")
(ID "__bases__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT ",")
(ID "modname")
(PUNCT "=")
(ID "base")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "base")
(PUNCT ".")
(ID "__module__")
(NEWLINE)
(ID "module")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "modname")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "modname")
(PUNCT "!=")
(ID "name")
(KEYWORD and)
(ID "module")
(KEYWORD and)
(ID "hasattr")
(PUNCT "(")
(ID "module")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "getattr")
(PUNCT "(")
(ID "module")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(KEYWORD is)
(ID "base")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "key")
(KEYWORD in)
(ID "cdict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cdict")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "cdict")
(PUNCT "[")
(ID "base")
(PUNCT "]")
(PUNCT "=")
(ID "modname")
(PUNCT "+")
(LIT ".html#")
(PUNCT "+")
(ID "key")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "funcs")
(PUNCT ",")
(ID "fdict")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "inspect")
(PUNCT ".")
(ID "getmembers")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "inspect")
(PUNCT ".")
(ID "isroutine")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "all")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "isbuiltin")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "getmodule")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(KEYWORD is)
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "visiblename")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "all")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "funcs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "fdict")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(LIT "#-")
(PUNCT "+")
(ID "key")
(NEWLINE)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "isfunction")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(ID "fdict")
(PUNCT "[")
(ID "value")
(PUNCT "]")
(PUNCT "=")
(ID "fdict")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "data")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "inspect")
(PUNCT ".")
(ID "getmembers")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "isdata")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "visiblename")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "all")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "doc")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "markup")
(PUNCT "(")
(ID "getdoc")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "preformat")
(PUNCT ",")
(ID "fdict")
(PUNCT ",")
(ID "cdict")
(PUNCT ")")
(NEWLINE)
(ID "doc")
(PUNCT "=")
(ID "doc")
(KEYWORD and)
(LIT "<tt>%s</tt>")
(PUNCT "%")
(ID "doc")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(LIT "<p>%s</p>\n")
(PUNCT "%")
(ID "doc")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(LIT "__path__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modpkgs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "importer")
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(ID "ispkg")
(KEYWORD in)
(ID "pkgutil")
(PUNCT ".")
(ID "iter_modules")
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__path__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modpkgs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "modname")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "ispkg")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "modpkgs")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "multicolumn")
(PUNCT "(")
(ID "modpkgs")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "modpkglink")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(LIT "Package Contents")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#aa55cc")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "modules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "contents")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "multicolumn")
(PUNCT "(")
(ID "modules")
(PUNCT ",")
(KEYWORD lambda)
(ID "t")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "modulelink")
(PUNCT "(")
(ID "t")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(LIT "Modules")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#aa55cc")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "classes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "classlist")
(PUNCT "=")
(PUNCT "[")
(ID "value")
(KEYWORD for)
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(KEYWORD in)
(ID "classes")
(PUNCT "]")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "formattree")
(PUNCT "(")
(ID "inspect")
(PUNCT ".")
(ID "getclasstree")
(PUNCT "(")
(ID "classlist")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "classes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "contents")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "fdict")
(PUNCT ",")
(ID "cdict")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(LIT "Classes")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#ee77aa")
(PUNCT ",")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "contents")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "funcs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "contents")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "funcs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "contents")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "fdict")
(PUNCT ",")
(ID "cdict")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(LIT "Functions")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#eeaa77")
(PUNCT ",")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "contents")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "contents")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "contents")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(LIT "Data")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#55aa55")
(PUNCT ",")
(LIT "<br>\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "contents")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(LIT "__author__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "contents")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "markup")
(PUNCT "(")
(ID "str")
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__author__")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "preformat")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(LIT "Author")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#7799ee")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(LIT "__credits__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "contents")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "markup")
(PUNCT "(")
(ID "str")
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__credits__")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "preformat")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(LIT "Credits")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#7799ee")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "docclass")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mod")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "funcs")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(ID "classes")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "*")
(ID "ignored")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Produce HTML documentation for a class object.")
(NEWLINE)
(ID "realname")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(ID "name")
(PUNCT "=")
(ID "name")
(KEYWORD or)
(ID "realname")
(NEWLINE)
(ID "bases")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__bases__")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "push")
(PUNCT "=")
(ID "contents")
(PUNCT ".")
(ID "append")
(NEWLINE)
(KEYWORD class)
(ID "HorizontalRule")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "needone")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "maybe")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "needone")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(LIT "<hr>\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "needone")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "hr")
(PUNCT "=")
(ID "HorizontalRule")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "mro")
(PUNCT "=")
(ID "deque")
(PUNCT "(")
(ID "inspect")
(PUNCT ".")
(ID "getmro")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "mro")
(PUNCT ")")
(PUNCT ">")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hr")
(PUNCT ".")
(ID "maybe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "push")
(PUNCT "(")
(LIT "<dl><dt>Method resolution order:</dt>\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "base")
(KEYWORD in)
(ID "mro")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(LIT "<dd>%s</dd>\n")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "classlink")
(PUNCT "(")
(ID "base")
(PUNCT ",")
(ID "object")
(PUNCT ".")
(ID "__module__")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "push")
(PUNCT "(")
(LIT "</dl>\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "spill")
(PUNCT "(")
(ID "msg")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(ID "predicate")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ok")
(PUNCT ",")
(ID "attrs")
(PUNCT "=")
(ID "_split_list")
(PUNCT "(")
(ID "attrs")
(PUNCT ",")
(ID "predicate")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "ok")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hr")
(PUNCT ".")
(ID "maybe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "push")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "kind")
(PUNCT ",")
(ID "homecls")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "ok")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_docdescriptor")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "mod")
(PUNCT ",")
(ID "funcs")
(PUNCT ",")
(ID "classes")
(PUNCT ",")
(ID "mdict")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "push")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "attrs")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "spilldescriptors")
(PUNCT "(")
(ID "msg")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(ID "predicate")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ok")
(PUNCT ",")
(ID "attrs")
(PUNCT "=")
(ID "_split_list")
(PUNCT "(")
(ID "attrs")
(PUNCT ",")
(ID "predicate")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "ok")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hr")
(PUNCT ".")
(ID "maybe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "push")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "kind")
(PUNCT ",")
(ID "homecls")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "ok")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_docdescriptor")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "attrs")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "spilldata")
(PUNCT "(")
(ID "msg")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(ID "predicate")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ok")
(PUNCT ",")
(ID "attrs")
(PUNCT "=")
(ID "_split_list")
(PUNCT "(")
(ID "attrs")
(PUNCT ",")
(ID "predicate")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "ok")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hr")
(PUNCT ".")
(ID "maybe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "push")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "kind")
(PUNCT ",")
(ID "homecls")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "ok")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "base")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "docother")
(PUNCT "(")
(ID "getattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "callable")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "isdatadescriptor")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "doc")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(LIT "__doc__")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "doc")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "doc")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(LIT "<dl><dt>%s</dl>\n")
(PUNCT "%")
(ID "base")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "doc")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "markup")
(PUNCT "(")
(ID "getdoc")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "preformat")
(PUNCT ",")
(ID "funcs")
(PUNCT ",")
(ID "classes")
(PUNCT ",")
(ID "mdict")
(PUNCT ")")
(NEWLINE)
(ID "doc")
(PUNCT "=")
(LIT "<dd><tt>%s</tt>")
(PUNCT "%")
(ID "doc")
(NEWLINE)
(ID "push")
(PUNCT "(")
(LIT "<dl><dt>%s%s</dl>\n")
(PUNCT "%")
(PUNCT "(")
(ID "base")
(PUNCT ",")
(ID "doc")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "push")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "attrs")
(NEWLINE)
(DEDENT)
(ID "attrs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "kind")
(PUNCT ",")
(ID "cls")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "kind")
(PUNCT ",")
(ID "cls")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "classify_class_attrs")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(KEYWORD if)
(ID "visiblename")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "obj")
(PUNCT "=")
(ID "object")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(ID "mdict")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "kind")
(PUNCT ",")
(ID "homecls")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "attrs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mdict")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "anchor")
(PUNCT "=")
(LIT "#")
(PUNCT "+")
(ID "name")
(PUNCT "+")
(LIT "-")
(PUNCT "+")
(ID "key")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mdict")
(PUNCT "[")
(ID "value")
(PUNCT "]")
(PUNCT "=")
(ID "anchor")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD while)
(ID "attrs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "mro")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "thisclass")
(PUNCT "=")
(ID "mro")
(PUNCT ".")
(ID "popleft")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "thisclass")
(PUNCT "=")
(ID "attrs")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "attrs")
(PUNCT ",")
(ID "inherited")
(PUNCT "=")
(ID "_split_list")
(PUNCT "(")
(ID "attrs")
(PUNCT ",")
(KEYWORD lambda)
(ID "t")
(PUNCT ":")
(ID "t")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(KEYWORD is)
(ID "thisclass")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "thisclass")
(KEYWORD is)
(ID "builtins")
(PUNCT ".")
(ID "object")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "attrs")
(PUNCT "=")
(ID "inherited")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "thisclass")
(KEYWORD is)
(ID "object")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tag")
(PUNCT "=")
(LIT "defined here")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tag")
(PUNCT "=")
(LIT "inherited from %s")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "classlink")
(PUNCT "(")
(ID "thisclass")
(PUNCT ",")
(ID "object")
(PUNCT ".")
(ID "__module__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "tag")
(PUNCT "+=")
(LIT ":<br>\n")
(NEWLINE)
(ID "attrs")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(ID "key")
(PUNCT "=")
(KEYWORD lambda)
(ID "t")
(PUNCT ":")
(ID "t")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "attrs")
(PUNCT "=")
(ID "spill")
(PUNCT "(")
(LIT "Methods %s")
(PUNCT "%")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(KEYWORD lambda)
(ID "t")
(PUNCT ":")
(ID "t")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "method")
(PUNCT ")")
(NEWLINE)
(ID "attrs")
(PUNCT "=")
(ID "spill")
(PUNCT "(")
(LIT "Class methods %s")
(PUNCT "%")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(KEYWORD lambda)
(ID "t")
(PUNCT ":")
(ID "t")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "class method")
(PUNCT ")")
(NEWLINE)
(ID "attrs")
(PUNCT "=")
(ID "spill")
(PUNCT "(")
(LIT "Static methods %s")
(PUNCT "%")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(KEYWORD lambda)
(ID "t")
(PUNCT ":")
(ID "t")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "static method")
(PUNCT ")")
(NEWLINE)
(ID "attrs")
(PUNCT "=")
(ID "spilldescriptors")
(PUNCT "(")
(LIT "Data descriptors %s")
(PUNCT "%")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(KEYWORD lambda)
(ID "t")
(PUNCT ":")
(ID "t")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "data descriptor")
(PUNCT ")")
(NEWLINE)
(ID "attrs")
(PUNCT "=")
(ID "spilldata")
(PUNCT "(")
(LIT "Data and other attributes %s")
(PUNCT "%")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(KEYWORD lambda)
(ID "t")
(PUNCT ":")
(ID "t")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "data")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "attrs")
(PUNCT "==")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "attrs")
(PUNCT "=")
(ID "inherited")
(NEWLINE)
(DEDENT)
(ID "contents")
(PUNCT "=")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "name")
(PUNCT "==")
(ID "realname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(LIT "<a name=\"%s\">class <strong>%s</strong></a>")
(PUNCT "%")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "realname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(LIT "<strong>%s</strong> = <a name=\"%s\">class %s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "realname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "bases")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parents")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "base")
(KEYWORD in)
(ID "bases")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parents")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "classlink")
(PUNCT "(")
(ID "base")
(PUNCT ",")
(ID "object")
(PUNCT ".")
(ID "__module__")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "title")
(PUNCT "=")
(ID "title")
(PUNCT "+")
(LIT "(%s)")
(PUNCT "%")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "parents")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "doc")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "markup")
(PUNCT "(")
(ID "getdoc")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "preformat")
(PUNCT ",")
(ID "funcs")
(PUNCT ",")
(ID "classes")
(PUNCT ",")
(ID "mdict")
(PUNCT ")")
(NEWLINE)
(ID "doc")
(PUNCT "=")
(ID "doc")
(KEYWORD and)
(LIT "<tt>%s<br>&nbsp;</tt>")
(PUNCT "%")
(ID "doc")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(ID "title")
(PUNCT ",")
(LIT "#000000")
(PUNCT ",")
(LIT "#ffc8d8")
(PUNCT ",")
(ID "contents")
(PUNCT ",")
(LIT 3)
(PUNCT ",")
(ID "doc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatvalue")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format an argument default value as text.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "grey")
(PUNCT "(")
(LIT "=")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "repr")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "docroutine")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mod")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "funcs")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(ID "classes")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(ID "methods")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(ID "cl")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Produce HTML documentation for a function or method object.")
(NEWLINE)
(ID "realname")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(ID "name")
(PUNCT "=")
(ID "name")
(KEYWORD or)
(ID "realname")
(NEWLINE)
(ID "anchor")
(PUNCT "=")
(PUNCT "(")
(ID "cl")
(KEYWORD and)
(ID "cl")
(PUNCT ".")
(ID "__name__")
(KEYWORD or)
(LIT "")
(PUNCT ")")
(PUNCT "+")
(LIT "-")
(PUNCT "+")
(ID "name")
(NEWLINE)
(ID "note")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "skipdocs")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "_is_bound_method")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "imclass")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__self__")
(PUNCT ".")
(ID "__class__")
(NEWLINE)
(KEYWORD if)
(ID "cl")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "imclass")
(KEYWORD is)
(KEYWORD not)
(ID "cl")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "note")
(PUNCT "=")
(LIT " from ")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "classlink")
(PUNCT "(")
(ID "imclass")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "object")
(PUNCT ".")
(ID "__self__")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "note")
(PUNCT "=")
(LIT " method of %s instance")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "classlink")
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__self__")
(PUNCT ".")
(ID "__class__")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "note")
(PUNCT "=")
(LIT " unbound %s method")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "classlink")
(PUNCT "(")
(ID "imclass")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "name")
(PUNCT "==")
(ID "realname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(LIT "<a name=\"%s\"><strong>%s</strong></a>")
(PUNCT "%")
(PUNCT "(")
(ID "anchor")
(PUNCT ",")
(ID "realname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "cl")
(KEYWORD and)
(ID "realname")
(KEYWORD in)
(ID "cl")
(PUNCT ".")
(ID "__dict__")
(KEYWORD and)
(ID "cl")
(PUNCT ".")
(ID "__dict__")
(PUNCT "[")
(ID "realname")
(PUNCT "]")
(KEYWORD is)
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "reallink")
(PUNCT "=")
(LIT "<a href=\"#%s\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "cl")
(PUNCT ".")
(ID "__name__")
(PUNCT "+")
(LIT "-")
(PUNCT "+")
(ID "realname")
(PUNCT ",")
(ID "realname")
(PUNCT ")")
(NEWLINE)
(ID "skipdocs")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "reallink")
(PUNCT "=")
(ID "realname")
(NEWLINE)
(DEDENT)
(ID "title")
(PUNCT "=")
(LIT "<a name=\"%s\"><strong>%s</strong></a> = %s")
(PUNCT "%")
(PUNCT "(")
(ID "anchor")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "reallink")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "argspec")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "isroutine")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "signature")
(PUNCT "=")
(ID "inspect")
(PUNCT ".")
(ID "signature")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "ValueError")
(PUNCT ",")
(ID "TypeError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "signature")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "signature")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "argspec")
(PUNCT "=")
(ID "str")
(PUNCT "(")
(ID "signature")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "realname")
(PUNCT "==")
(LIT "<lambda>")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(LIT "<strong>%s</strong> <em>lambda</em> ")
(PUNCT "%")
(ID "name")
(NEWLINE)
(ID "argspec")
(PUNCT "=")
(ID "argspec")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "argspec")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "argspec")
(PUNCT "=")
(LIT "(...)")
(NEWLINE)
(DEDENT)
(ID "decl")
(PUNCT "=")
(ID "title")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "escape")
(PUNCT "(")
(ID "argspec")
(PUNCT ")")
(PUNCT "+")
(PUNCT "(")
(ID "note")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "grey")
(PUNCT "(")
(LIT "<font face=\"helvetica, arial\">%s</font>")
(PUNCT "%")
(ID "note")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "skipdocs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<dl><dt>%s</dt></dl>\n")
(PUNCT "%")
(ID "decl")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "doc")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "markup")
(PUNCT "(")
(ID "getdoc")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "preformat")
(PUNCT ",")
(ID "funcs")
(PUNCT ",")
(ID "classes")
(PUNCT ",")
(ID "methods")
(PUNCT ")")
(NEWLINE)
(ID "doc")
(PUNCT "=")
(ID "doc")
(KEYWORD and)
(LIT "<dd><tt>%s</tt></dd>")
(PUNCT "%")
(ID "doc")
(NEWLINE)
(KEYWORD return)
(LIT "<dl><dt>%s</dt>%s</dl>\n")
(PUNCT "%")
(PUNCT "(")
(ID "decl")
(PUNCT ",")
(ID "doc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_docdescriptor")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "results")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "push")
(PUNCT "=")
(ID "results")
(PUNCT ".")
(ID "append")
(NEWLINE)
(KEYWORD if)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(LIT "<dl><dt><strong>%s</strong></dt>\n")
(PUNCT "%")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "value")
(PUNCT ".")
(ID "__doc__")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "doc")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "markup")
(PUNCT "(")
(ID "getdoc")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "preformat")
(PUNCT ")")
(NEWLINE)
(ID "push")
(PUNCT "(")
(LIT "<dd><tt>%s</tt></dd>\n")
(PUNCT "%")
(ID "doc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "push")
(PUNCT "(")
(LIT "</dl>\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "results")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "docproperty")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mod")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cl")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Produce html documentation for a property.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_docdescriptor")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "docother")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mod")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "*")
(ID "ignored")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Produce HTML documentation for a data object.")
(NEWLINE)
(ID "lhs")
(PUNCT "=")
(ID "name")
(KEYWORD and)
(LIT "<strong>%s</strong> = ")
(PUNCT "%")
(ID "name")
(KEYWORD or)
(LIT "")
(NEWLINE)
(KEYWORD return)
(ID "lhs")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "repr")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "docdata")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mod")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cl")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Produce html documentation for a data descriptor.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_docdescriptor")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "index")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dir")
(PUNCT ",")
(ID "shadowed")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Generate an HTML index for a directory of modules.")
(NEWLINE)
(ID "modpkgs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "shadowed")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(ID "shadowed")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "importer")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "ispkg")
(KEYWORD in)
(ID "pkgutil")
(PUNCT ".")
(ID "iter_modules")
(PUNCT "(")
(PUNCT "[")
(ID "dir")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "any")
(PUNCT "(")
(PUNCT "(")
(LIT 55296)
(PUNCT "<=")
(ID "ord")
(PUNCT "(")
(ID "ch")
(PUNCT ")")
(PUNCT "<=")
(LIT 57343)
(PUNCT ")")
(KEYWORD for)
(ID "ch")
(KEYWORD in)
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "modpkgs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(ID "ispkg")
(PUNCT ",")
(ID "name")
(KEYWORD in)
(ID "shadowed")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "shadowed")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "modpkgs")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "multicolumn")
(PUNCT "(")
(ID "modpkgs")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "modpkglink")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(ID "dir")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#ee77aa")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "TextRepr")
(PUNCT "(")
(ID "Repr")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Class for safely making a text representation of a Python object.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "Repr")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "maxlist")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "maxtuple")
(PUNCT "=")
(LIT 20)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "maxdict")
(PUNCT "=")
(LIT 10)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "maxstring")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "maxother")
(PUNCT "=")
(LIT 100)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "repr1")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "level")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ",")
(LIT "__name__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "methodname")
(PUNCT "=")
(LIT "repr_")
(PUNCT "+")
(LIT "_")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "methodname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "methodname")
(PUNCT ")")
(PUNCT "(")
(ID "x")
(PUNCT ",")
(ID "level")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "cram")
(PUNCT "(")
(ID "stripid")
(PUNCT "(")
(ID "repr")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "maxother")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "repr_string")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "level")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "test")
(PUNCT "=")
(ID "cram")
(PUNCT "(")
(ID "x")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "maxstring")
(PUNCT ")")
(NEWLINE)
(ID "testrepr")
(PUNCT "=")
(ID "repr")
(PUNCT "(")
(ID "test")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "\\")
(KEYWORD in)
(ID "test")
(KEYWORD and)
(LIT "\\")
(KEYWORD not)
(KEYWORD in)
(ID "replace")
(PUNCT "(")
(ID "testrepr")
(PUNCT ",")
(LIT "\\\\")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "r")
(PUNCT "+")
(ID "testrepr")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "+")
(ID "test")
(PUNCT "+")
(ID "testrepr")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "testrepr")
(NEWLINE)
(DEDENT)
(ID "repr_str")
(PUNCT "=")
(ID "repr_string")
(NEWLINE)
(KEYWORD def)
(ID "repr_instance")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "level")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "cram")
(PUNCT "(")
(ID "stripid")
(PUNCT "(")
(ID "repr")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "maxstring")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<%s instance>")
(PUNCT "%")
(ID "x")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "TextDoc")
(PUNCT "(")
(ID "Doc")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Formatter class for text documentation.")
(NEWLINE)
(ID "_repr_instance")
(PUNCT "=")
(ID "TextRepr")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "repr")
(PUNCT "=")
(ID "_repr_instance")
(PUNCT ".")
(ID "repr")
(NEWLINE)
(KEYWORD def)
(ID "bold")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format a string in bold by overstriking.")
(NEWLINE)
(KEYWORD return)
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "ch")
(PUNCT "+")
(LIT "\b")
(PUNCT "+")
(ID "ch")
(KEYWORD for)
(ID "ch")
(KEYWORD in)
(ID "text")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "indent")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(LIT "    ")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Indent text by prepending a given prefix to each line.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "text")
(PUNCT ":")
(KEYWORD return)
(LIT "")
(NEWLINE)
(ID "lines")
(PUNCT "=")
(PUNCT "[")
(ID "prefix")
(PUNCT "+")
(ID "line")
(KEYWORD for)
(ID "line")
(KEYWORD in)
(ID "text")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "lines")
(PUNCT ":")
(ID "lines")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "=")
(ID "lines")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "lines")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "section")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "title")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format a section with a given heading.")
(NEWLINE)
(ID "clean_contents")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "indent")
(PUNCT "(")
(ID "contents")
(PUNCT ")")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "bold")
(PUNCT "(")
(ID "title")
(PUNCT ")")
(PUNCT "+")
(LIT "\n")
(PUNCT "+")
(ID "clean_contents")
(PUNCT "+")
(LIT "\n\n")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formattree")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "tree")
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(LIT "")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Render in text a class tree as returned by inspect.getclasstree().")
(NEWLINE)
(ID "result")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "tree")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "type")
(PUNCT "(")
(ID "entry")
(PUNCT ")")
(KEYWORD is)
(ID "type")
(PUNCT "(")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT ",")
(ID "bases")
(PUNCT "=")
(ID "entry")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "prefix")
(PUNCT "+")
(ID "classname")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(ID "modname")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "bases")
(KEYWORD and)
(ID "bases")
(PUNCT "!=")
(PUNCT "(")
(ID "parent")
(PUNCT ",")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parents")
(PUNCT "=")
(PUNCT "(")
(ID "classname")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(ID "modname")
(PUNCT ")")
(KEYWORD for)
(ID "c")
(KEYWORD in)
(ID "bases")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(LIT "(%s)")
(PUNCT "%")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "parents")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(LIT "\n")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "type")
(PUNCT "(")
(ID "entry")
(PUNCT ")")
(KEYWORD is)
(ID "type")
(PUNCT "(")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "formattree")
(PUNCT "(")
(ID "entry")
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(ID "c")
(PUNCT ",")
(ID "prefix")
(PUNCT "+")
(LIT "    ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "docmodule")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mod")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Produce text documentation for a given module object.")
(NEWLINE)
(ID "name")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(ID "synop")
(PUNCT ",")
(ID "desc")
(PUNCT "=")
(ID "splitdoc")
(PUNCT "(")
(ID "getdoc")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(LIT "NAME")
(PUNCT ",")
(ID "name")
(PUNCT "+")
(PUNCT "(")
(ID "synop")
(KEYWORD and)
(LIT " - ")
(PUNCT "+")
(ID "synop")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "all")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(LIT "__all__")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "docloc")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getdocloc")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "docloc")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(LIT "MODULE REFERENCE")
(PUNCT ",")
(ID "docloc")
(PUNCT "+")
(LIT "\n\nThe following documentation is automatically generated from the Python\nsource files.  It may be incomplete, incorrect or include features that\nare considered implementation detail and may vary between Python\nimplementations.  When in doubt, consult the module reference at the\nlocation listed above.\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "desc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(LIT "DESCRIPTION")
(PUNCT ",")
(ID "desc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "classes")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "inspect")
(PUNCT ".")
(ID "getmembers")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "inspect")
(PUNCT ".")
(ID "isclass")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "all")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD or)
(PUNCT "(")
(ID "inspect")
(PUNCT ".")
(ID "getmodule")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(KEYWORD or)
(ID "object")
(PUNCT ")")
(KEYWORD is)
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "visiblename")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "all")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "classes")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "funcs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "inspect")
(PUNCT ".")
(ID "getmembers")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "inspect")
(PUNCT ".")
(ID "isroutine")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "all")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "isbuiltin")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "getmodule")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(KEYWORD is)
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "visiblename")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "all")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "funcs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "data")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "inspect")
(PUNCT ".")
(ID "getmembers")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "isdata")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "visiblename")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "all")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "modpkgs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "modpkgs_names")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(LIT "__path__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "importer")
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(ID "ispkg")
(KEYWORD in)
(ID "pkgutil")
(PUNCT ".")
(ID "iter_modules")
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__path__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modpkgs_names")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "modname")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "ispkg")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modpkgs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "modname")
(PUNCT "+")
(LIT " (package)")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modpkgs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "modname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "modpkgs")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(LIT "PACKAGE CONTENTS")
(PUNCT ",")
(LIT "\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "modpkgs")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "submodules")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "inspect")
(PUNCT ".")
(ID "getmembers")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "inspect")
(PUNCT ".")
(ID "ismodule")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "value")
(PUNCT ".")
(ID "__name__")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(ID "name")
(PUNCT "+")
(LIT ".")
(PUNCT ")")
(KEYWORD and)
(ID "key")
(KEYWORD not)
(KEYWORD in)
(ID "modpkgs_names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "submodules")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "submodules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "submodules")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(LIT "SUBMODULES")
(PUNCT ",")
(LIT "\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "submodules")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "classes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "classlist")
(PUNCT "=")
(PUNCT "[")
(ID "value")
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "classes")
(PUNCT "]")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "formattree")
(PUNCT "(")
(ID "inspect")
(PUNCT ".")
(ID "getclasstree")
(PUNCT "(")
(ID "classlist")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "classes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "contents")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(LIT "CLASSES")
(PUNCT ",")
(LIT "\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "contents")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "funcs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "contents")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "funcs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "contents")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(LIT "FUNCTIONS")
(PUNCT ",")
(LIT "\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "contents")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "contents")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "contents")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "docother")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "maxlen")
(PUNCT "=")
(LIT 70)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(LIT "DATA")
(PUNCT ",")
(LIT "\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "contents")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(LIT "__version__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "version")
(PUNCT "=")
(ID "str")
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__version__")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "version")
(PUNCT "[")
(PUNCT ":")
(LIT 11)
(PUNCT "]")
(PUNCT "==")
(LIT "$")
(PUNCT "+")
(LIT "Revision: ")
(KEYWORD and)
(ID "version")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(LIT "$")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "version")
(PUNCT "=")
(ID "version")
(PUNCT "[")
(LIT 11)
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(LIT "VERSION")
(PUNCT ",")
(ID "version")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(LIT "__date__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(LIT "DATE")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__date__")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(LIT "__author__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(LIT "AUTHOR")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__author__")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(LIT "__credits__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(LIT "CREDITS")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__credits__")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "file")
(PUNCT "=")
(ID "inspect")
(PUNCT ".")
(ID "getabsfile")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "file")
(PUNCT "=")
(LIT "(built-in)")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(LIT "FILE")
(PUNCT ",")
(ID "file")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "docclass")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mod")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "*")
(ID "ignored")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Produce text documentation for a given class object.")
(NEWLINE)
(ID "realname")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(ID "name")
(PUNCT "=")
(ID "name")
(KEYWORD or)
(ID "realname")
(NEWLINE)
(ID "bases")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__bases__")
(NEWLINE)
(KEYWORD def)
(ID "makename")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(ID "m")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__module__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "classname")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "name")
(PUNCT "==")
(ID "realname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(LIT "class ")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "bold")
(PUNCT "(")
(ID "realname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "bold")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT "+")
(LIT " = class ")
(PUNCT "+")
(ID "realname")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "bases")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parents")
(PUNCT "=")
(ID "map")
(PUNCT "(")
(ID "makename")
(PUNCT ",")
(ID "bases")
(PUNCT ")")
(NEWLINE)
(ID "title")
(PUNCT "=")
(ID "title")
(PUNCT "+")
(LIT "(%s)")
(PUNCT "%")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "parents")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "doc")
(PUNCT "=")
(ID "getdoc")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(ID "doc")
(KEYWORD and)
(PUNCT "[")
(ID "doc")
(PUNCT "+")
(LIT "\n")
(PUNCT "]")
(KEYWORD or)
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "push")
(PUNCT "=")
(ID "contents")
(PUNCT ".")
(ID "append")
(NEWLINE)
(ID "mro")
(PUNCT "=")
(ID "deque")
(PUNCT "(")
(ID "inspect")
(PUNCT ".")
(ID "getmro")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "mro")
(PUNCT ")")
(PUNCT ">")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(LIT "Method resolution order:")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "base")
(KEYWORD in)
(ID "mro")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(LIT "    ")
(PUNCT "+")
(ID "makename")
(PUNCT "(")
(ID "base")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "push")
(PUNCT "(")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "HorizontalRule")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "needone")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "maybe")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "needone")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(LIT "-")
(PUNCT "*")
(LIT 70)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "needone")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "hr")
(PUNCT "=")
(ID "HorizontalRule")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "spill")
(PUNCT "(")
(ID "msg")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(ID "predicate")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ok")
(PUNCT ",")
(ID "attrs")
(PUNCT "=")
(ID "_split_list")
(PUNCT "(")
(ID "attrs")
(PUNCT ",")
(ID "predicate")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "ok")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hr")
(PUNCT ".")
(ID "maybe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "push")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "kind")
(PUNCT ",")
(ID "homecls")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "ok")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_docdescriptor")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "mod")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "attrs")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "spilldescriptors")
(PUNCT "(")
(ID "msg")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(ID "predicate")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ok")
(PUNCT ",")
(ID "attrs")
(PUNCT "=")
(ID "_split_list")
(PUNCT "(")
(ID "attrs")
(PUNCT ",")
(ID "predicate")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "ok")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hr")
(PUNCT ".")
(ID "maybe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "push")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "kind")
(PUNCT ",")
(ID "homecls")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "ok")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_docdescriptor")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "attrs")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "spilldata")
(PUNCT "(")
(ID "msg")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(ID "predicate")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ok")
(PUNCT ",")
(ID "attrs")
(PUNCT "=")
(ID "_split_list")
(PUNCT "(")
(ID "attrs")
(PUNCT ",")
(ID "predicate")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "ok")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hr")
(PUNCT ".")
(ID "maybe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "push")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "kind")
(PUNCT ",")
(ID "homecls")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "ok")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "callable")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "isdatadescriptor")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "doc")
(PUNCT "=")
(ID "getdoc")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "doc")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "homecls")
(PUNCT ".")
(ID "__dict__")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "push")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "docother")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "mod")
(PUNCT ",")
(ID "maxlen")
(PUNCT "=")
(LIT 70)
(PUNCT ",")
(ID "doc")
(PUNCT "=")
(ID "doc")
(PUNCT ")")
(PUNCT "+")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "attrs")
(NEWLINE)
(DEDENT)
(ID "attrs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "kind")
(PUNCT ",")
(ID "cls")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "kind")
(PUNCT ",")
(ID "cls")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "classify_class_attrs")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(KEYWORD if)
(ID "visiblename")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "obj")
(PUNCT "=")
(ID "object")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(ID "attrs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "mro")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "thisclass")
(PUNCT "=")
(ID "mro")
(PUNCT ".")
(ID "popleft")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "thisclass")
(PUNCT "=")
(ID "attrs")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "attrs")
(PUNCT ",")
(ID "inherited")
(PUNCT "=")
(ID "_split_list")
(PUNCT "(")
(ID "attrs")
(PUNCT ",")
(KEYWORD lambda)
(ID "t")
(PUNCT ":")
(ID "t")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(KEYWORD is)
(ID "thisclass")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "thisclass")
(KEYWORD is)
(ID "builtins")
(PUNCT ".")
(ID "object")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "attrs")
(PUNCT "=")
(ID "inherited")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "thisclass")
(KEYWORD is)
(ID "object")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tag")
(PUNCT "=")
(LIT "defined here")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tag")
(PUNCT "=")
(LIT "inherited from %s")
(PUNCT "%")
(ID "classname")
(PUNCT "(")
(ID "thisclass")
(PUNCT ",")
(ID "object")
(PUNCT ".")
(ID "__module__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "attrs")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "attrs")
(PUNCT "=")
(ID "spill")
(PUNCT "(")
(LIT "Methods %s:\n")
(PUNCT "%")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(KEYWORD lambda)
(ID "t")
(PUNCT ":")
(ID "t")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "method")
(PUNCT ")")
(NEWLINE)
(ID "attrs")
(PUNCT "=")
(ID "spill")
(PUNCT "(")
(LIT "Class methods %s:\n")
(PUNCT "%")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(KEYWORD lambda)
(ID "t")
(PUNCT ":")
(ID "t")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "class method")
(PUNCT ")")
(NEWLINE)
(ID "attrs")
(PUNCT "=")
(ID "spill")
(PUNCT "(")
(LIT "Static methods %s:\n")
(PUNCT "%")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(KEYWORD lambda)
(ID "t")
(PUNCT ":")
(ID "t")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "static method")
(PUNCT ")")
(NEWLINE)
(ID "attrs")
(PUNCT "=")
(ID "spilldescriptors")
(PUNCT "(")
(LIT "Data descriptors %s:\n")
(PUNCT "%")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(KEYWORD lambda)
(ID "t")
(PUNCT ":")
(ID "t")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "data descriptor")
(PUNCT ")")
(NEWLINE)
(ID "attrs")
(PUNCT "=")
(ID "spilldata")
(PUNCT "(")
(LIT "Data and other attributes %s:\n")
(PUNCT "%")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ",")
(KEYWORD lambda)
(ID "t")
(PUNCT ":")
(ID "t")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "data")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "attrs")
(PUNCT "==")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "attrs")
(PUNCT "=")
(ID "inherited")
(NEWLINE)
(DEDENT)
(ID "contents")
(PUNCT "=")
(LIT "\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "contents")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "title")
(PUNCT "+")
(LIT "\n")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "title")
(PUNCT "+")
(LIT "\n")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "indent")
(PUNCT "(")
(ID "contents")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(LIT " |  ")
(PUNCT ")")
(PUNCT "+")
(LIT "\n")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "formatvalue")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format an argument default value as text.")
(NEWLINE)
(KEYWORD return)
(LIT "=")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "repr")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "docroutine")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mod")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cl")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Produce text documentation for a function or method object.")
(NEWLINE)
(ID "realname")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(ID "name")
(PUNCT "=")
(ID "name")
(KEYWORD or)
(ID "realname")
(NEWLINE)
(ID "note")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "skipdocs")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "_is_bound_method")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "imclass")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__self__")
(PUNCT ".")
(ID "__class__")
(NEWLINE)
(KEYWORD if)
(ID "cl")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "imclass")
(KEYWORD is)
(KEYWORD not)
(ID "cl")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "note")
(PUNCT "=")
(LIT " from ")
(PUNCT "+")
(ID "classname")
(PUNCT "(")
(ID "imclass")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "object")
(PUNCT ".")
(ID "__self__")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "note")
(PUNCT "=")
(LIT " method of %s instance")
(PUNCT "%")
(ID "classname")
(PUNCT "(")
(ID "object")
(PUNCT ".")
(ID "__self__")
(PUNCT ".")
(ID "__class__")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "note")
(PUNCT "=")
(LIT " unbound %s method")
(PUNCT "%")
(ID "classname")
(PUNCT "(")
(ID "imclass")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "name")
(PUNCT "==")
(ID "realname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "bold")
(PUNCT "(")
(ID "realname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "cl")
(KEYWORD and)
(ID "realname")
(KEYWORD in)
(ID "cl")
(PUNCT ".")
(ID "__dict__")
(KEYWORD and)
(ID "cl")
(PUNCT ".")
(ID "__dict__")
(PUNCT "[")
(ID "realname")
(PUNCT "]")
(KEYWORD is)
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "skipdocs")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "title")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "bold")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT "+")
(LIT " = ")
(PUNCT "+")
(ID "realname")
(NEWLINE)
(DEDENT)
(ID "argspec")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "isroutine")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "signature")
(PUNCT "=")
(ID "inspect")
(PUNCT ".")
(ID "signature")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "ValueError")
(PUNCT ",")
(ID "TypeError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "signature")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "signature")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "argspec")
(PUNCT "=")
(ID "str")
(PUNCT "(")
(ID "signature")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "realname")
(PUNCT "==")
(LIT "<lambda>")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "bold")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT "+")
(LIT " lambda ")
(NEWLINE)
(ID "argspec")
(PUNCT "=")
(ID "argspec")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "argspec")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "argspec")
(PUNCT "=")
(LIT "(...)")
(NEWLINE)
(DEDENT)
(ID "decl")
(PUNCT "=")
(ID "title")
(PUNCT "+")
(ID "argspec")
(PUNCT "+")
(ID "note")
(NEWLINE)
(KEYWORD if)
(ID "skipdocs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "decl")
(PUNCT "+")
(LIT "\n")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "doc")
(PUNCT "=")
(ID "getdoc")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(KEYWORD or)
(LIT "")
(NEWLINE)
(KEYWORD return)
(ID "decl")
(PUNCT "+")
(LIT "\n")
(PUNCT "+")
(PUNCT "(")
(ID "doc")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "indent")
(PUNCT "(")
(ID "doc")
(PUNCT ")")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(PUNCT "+")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_docdescriptor")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "results")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "push")
(PUNCT "=")
(ID "results")
(PUNCT ".")
(ID "append")
(NEWLINE)
(KEYWORD if)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "bold")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "push")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "doc")
(PUNCT "=")
(ID "getdoc")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(KEYWORD or)
(LIT "")
(NEWLINE)
(KEYWORD if)
(ID "doc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "indent")
(PUNCT "(")
(ID "doc")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "push")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "results")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "docproperty")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mod")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cl")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Produce text documentation for a property.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_docdescriptor")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "docdata")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mod")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cl")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Produce text documentation for a data descriptor.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_docdescriptor")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "mod")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "docother")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mod")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "maxlen")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "doc")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Produce text documentation for a data object.")
(NEWLINE)
(ID "repr")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "repr")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "maxlen")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(PUNCT "(")
(ID "name")
(KEYWORD and)
(ID "name")
(PUNCT "+")
(LIT " = ")
(KEYWORD or)
(LIT "")
(PUNCT ")")
(PUNCT "+")
(ID "repr")
(NEWLINE)
(ID "chop")
(PUNCT "=")
(ID "maxlen")
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "chop")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(ID "repr")
(PUNCT "=")
(ID "repr")
(PUNCT "[")
(PUNCT ":")
(ID "chop")
(PUNCT "]")
(PUNCT "+")
(LIT "...")
(NEWLINE)
(DEDENT)
(ID "line")
(PUNCT "=")
(PUNCT "(")
(ID "name")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "bold")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT "+")
(LIT " = ")
(KEYWORD or)
(LIT "")
(PUNCT ")")
(PUNCT "+")
(ID "repr")
(NEWLINE)
(KEYWORD if)
(ID "doc")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "+=")
(LIT "\n")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "indent")
(PUNCT "(")
(ID "str")
(PUNCT "(")
(ID "doc")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "line")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_PlainTextDoc")
(PUNCT "(")
(ID "TextDoc")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Subclass of TextDoc which overrides string styling")
(NEWLINE)
(KEYWORD def)
(ID "bold")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "text")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "pager")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "The first time this is called, determine what kind of pager to use.")
(NEWLINE)
(KEYWORD global)
(ID "pager")
(NEWLINE)
(ID "encoding")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "getfilesystemencoding")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(ID "encoding")
(PUNCT ",")
(LIT "backslashreplace")
(PUNCT ")")
(PUNCT ".")
(ID "decode")
(PUNCT "(")
(ID "encoding")
(PUNCT ")")
(NEWLINE)
(ID "pager")
(PUNCT "=")
(ID "getpager")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "pager")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getpager")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Decide what method to use for paging through text.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ",")
(LIT "isatty")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "plainpager")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ",")
(LIT "isatty")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "plainpager")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ".")
(ID "isatty")
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(KEYWORD not)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "isatty")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "plainpager")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "PAGER")
(KEYWORD in)
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD lambda)
(ID "text")
(PUNCT ":")
(ID "tempfilepager")
(PUNCT "(")
(ID "plain")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT "[")
(LIT "PAGER")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "TERM")
(PUNCT ")")
(KEYWORD in)
(PUNCT "(")
(LIT "dumb")
(PUNCT ",")
(LIT "emacs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD lambda)
(ID "text")
(PUNCT ":")
(ID "pipepager")
(PUNCT "(")
(ID "plain")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT "[")
(LIT "PAGER")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD lambda)
(ID "text")
(PUNCT ":")
(ID "pipepager")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT "[")
(LIT "PAGER")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "TERM")
(PUNCT ")")
(KEYWORD in)
(PUNCT "(")
(LIT "dumb")
(PUNCT ",")
(LIT "emacs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "plainpager")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD lambda)
(ID "text")
(PUNCT ":")
(ID "tempfilepager")
(PUNCT "(")
(ID "plain")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(PUNCT ",")
(LIT "more <")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "os")
(PUNCT ",")
(LIT "system")
(PUNCT ")")
(KEYWORD and)
(ID "os")
(PUNCT ".")
(ID "system")
(PUNCT "(")
(LIT "(less) 2>/dev/null")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD lambda)
(ID "text")
(PUNCT ":")
(ID "pipepager")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(LIT "less")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD import)
(ID "tempfile")
(NEWLINE)
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT "=")
(ID "tempfile")
(PUNCT ".")
(ID "mkstemp")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "os")
(PUNCT ",")
(LIT "system")
(PUNCT ")")
(KEYWORD and)
(ID "os")
(PUNCT ".")
(ID "system")
(PUNCT "(")
(LIT "more \"%s\"")
(PUNCT "%")
(ID "filename")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD lambda)
(ID "text")
(PUNCT ":")
(ID "pipepager")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(LIT "more")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "ttypager")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "unlink")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "plain")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Remove boldface formatting from text.")
(NEWLINE)
(KEYWORD return)
(ID "re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT ".\b")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "pipepager")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(ID "cmd")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Page through text by feeding it to another program.")
(NEWLINE)
(ID "pipe")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "popen")
(PUNCT "(")
(ID "cmd")
(PUNCT ",")
(LIT "w")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pipe")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(NEWLINE)
(ID "pipe")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "tempfilepager")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(ID "cmd")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Page through text by invoking a program on a temporary file.")
(NEWLINE)
(KEYWORD import)
(ID "tempfile")
(NEWLINE)
(ID "filename")
(PUNCT "=")
(ID "tempfile")
(PUNCT ".")
(ID "mktemp")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(LIT "w")
(PUNCT ")")
(KEYWORD as)
(ID "file")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "system")
(PUNCT "(")
(ID "cmd")
(PUNCT "+")
(LIT " \"")
(PUNCT "+")
(ID "filename")
(PUNCT "+")
(LIT "\"")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "unlink")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "ttypager")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Page through text on a text terminal.")
(NEWLINE)
(ID "lines")
(PUNCT "=")
(ID "plain")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "tty")
(NEWLINE)
(ID "fd")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "old")
(PUNCT "=")
(ID "tty")
(PUNCT ".")
(ID "tcgetattr")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(ID "tty")
(PUNCT ".")
(ID "setcbreak")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(ID "getchar")
(PUNCT "=")
(KEYWORD lambda)
(PUNCT ":")
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "ImportError")
(PUNCT ",")
(ID "AttributeError")
(PUNCT ",")
(ID "io")
(PUNCT ".")
(ID "UnsupportedOperation")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tty")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "getchar")
(PUNCT "=")
(KEYWORD lambda)
(PUNCT ":")
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "[")
(PUNCT ":")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "h")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "LINES")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "h")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "h")
(PUNCT "<=")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "h")
(PUNCT "=")
(LIT 25)
(NEWLINE)
(DEDENT)
(ID "r")
(PUNCT "=")
(ID "inc")
(PUNCT "=")
(ID "h")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "lines")
(PUNCT "[")
(PUNCT ":")
(ID "inc")
(PUNCT "]")
(PUNCT ")")
(PUNCT "+")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "lines")
(PUNCT "[")
(ID "r")
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "-- more --")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "flush")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "c")
(PUNCT "=")
(ID "getchar")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "c")
(KEYWORD in)
(PUNCT "(")
(LIT "q")
(PUNCT ",")
(LIT "Q")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\r          \r")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(KEYWORD in)
(PUNCT "(")
(LIT "\r")
(PUNCT ",")
(LIT "\n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\r          \r")
(PUNCT "+")
(ID "lines")
(PUNCT "[")
(ID "r")
(PUNCT "]")
(PUNCT "+")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "r")
(PUNCT "=")
(ID "r")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "c")
(KEYWORD in)
(PUNCT "(")
(LIT "b")
(PUNCT ",")
(LIT "B")
(PUNCT ",")
(LIT "\e")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "r")
(PUNCT "=")
(ID "r")
(PUNCT "-")
(ID "inc")
(PUNCT "-")
(ID "inc")
(NEWLINE)
(KEYWORD if)
(ID "r")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(ID "r")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\n")
(PUNCT "+")
(LIT "\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "lines")
(PUNCT "[")
(ID "r")
(PUNCT ":")
(ID "r")
(PUNCT "+")
(ID "inc")
(PUNCT "]")
(PUNCT ")")
(PUNCT "+")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "r")
(PUNCT "=")
(ID "r")
(PUNCT "+")
(ID "inc")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "tty")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tty")
(PUNCT ".")
(ID "tcsetattr")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "tty")
(PUNCT ".")
(ID "TCSAFLUSH")
(PUNCT ",")
(ID "old")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "plainpager")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Simply print unformatted text.  This is the ultimate fallback.")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "plain")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "describe")
(PUNCT "(")
(ID "thing")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Produce a short description of the given thing.")
(NEWLINE)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "ismodule")
(PUNCT "(")
(ID "thing")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "thing")
(PUNCT ".")
(ID "__name__")
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "builtin_module_names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "built-in module ")
(PUNCT "+")
(ID "thing")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "thing")
(PUNCT ",")
(LIT "__path__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "package ")
(PUNCT "+")
(ID "thing")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "module ")
(PUNCT "+")
(ID "thing")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "isbuiltin")
(PUNCT "(")
(ID "thing")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "built-in function ")
(PUNCT "+")
(ID "thing")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "isgetsetdescriptor")
(PUNCT "(")
(ID "thing")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "getset descriptor %s.%s.%s")
(PUNCT "%")
(PUNCT "(")
(ID "thing")
(PUNCT ".")
(ID "__objclass__")
(PUNCT ".")
(ID "__module__")
(PUNCT ",")
(ID "thing")
(PUNCT ".")
(ID "__objclass__")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "thing")
(PUNCT ".")
(ID "__name__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "ismemberdescriptor")
(PUNCT "(")
(ID "thing")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "member descriptor %s.%s.%s")
(PUNCT "%")
(PUNCT "(")
(ID "thing")
(PUNCT ".")
(ID "__objclass__")
(PUNCT ".")
(ID "__module__")
(PUNCT ",")
(ID "thing")
(PUNCT ".")
(ID "__objclass__")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "thing")
(PUNCT ".")
(ID "__name__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "isclass")
(PUNCT "(")
(ID "thing")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "class ")
(PUNCT "+")
(ID "thing")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "isfunction")
(PUNCT "(")
(ID "thing")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "function ")
(PUNCT "+")
(ID "thing")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "ismethod")
(PUNCT "(")
(ID "thing")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "method ")
(PUNCT "+")
(ID "thing")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "type")
(PUNCT "(")
(ID "thing")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "locate")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "forceload")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Locate an object by name or dotted path, importing as necessary.")
(NEWLINE)
(ID "parts")
(PUNCT "=")
(PUNCT "[")
(ID "part")
(KEYWORD for)
(ID "part")
(KEYWORD in)
(ID "path")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(KEYWORD if)
(ID "part")
(PUNCT "]")
(NEWLINE)
(ID "module")
(PUNCT ",")
(ID "n")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(LIT 0)
(NEWLINE)
(KEYWORD while)
(ID "n")
(PUNCT "<")
(ID "len")
(PUNCT "(")
(ID "parts")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nextmodule")
(PUNCT "=")
(ID "safeimport")
(PUNCT "(")
(LIT ".")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "parts")
(PUNCT "[")
(PUNCT ":")
(ID "n")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(ID "forceload")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "nextmodule")
(PUNCT ":")
(ID "module")
(PUNCT ",")
(ID "n")
(PUNCT "=")
(ID "nextmodule")
(PUNCT ",")
(ID "n")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD else)
(PUNCT ":")
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "module")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "object")
(PUNCT "=")
(ID "module")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "object")
(PUNCT "=")
(ID "builtins")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "part")
(KEYWORD in)
(ID "parts")
(PUNCT "[")
(ID "n")
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "object")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "part")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "object")
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT "=")
(ID "TextDoc")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "plaintext")
(PUNCT "=")
(ID "_PlainTextDoc")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "html")
(PUNCT "=")
(ID "HTMLDoc")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "resolve")
(PUNCT "(")
(ID "thing")
(PUNCT ",")
(ID "forceload")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Given an object or a path to an object, get the object and its name.")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "thing")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "object")
(PUNCT "=")
(ID "locate")
(PUNCT "(")
(ID "thing")
(PUNCT ",")
(ID "forceload")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "object")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ImportError")
(PUNCT "(")
(LIT "no Python documentation found for %r")
(PUNCT "%")
(ID "thing")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "object")
(PUNCT ",")
(ID "thing")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "thing")
(PUNCT ",")
(LIT "__name__")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "thing")
(PUNCT ",")
(ID "name")
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(KEYWORD else)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "render_doc")
(PUNCT "(")
(ID "thing")
(PUNCT ",")
(ID "title")
(PUNCT "=")
(LIT "Python Library Documentation: %s")
(PUNCT ",")
(ID "forceload")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "renderer")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Render text documentation, given an object or a path to an object.")
(NEWLINE)
(KEYWORD if)
(ID "renderer")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "renderer")
(PUNCT "=")
(ID "text")
(NEWLINE)
(DEDENT)
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(ID "resolve")
(PUNCT "(")
(ID "thing")
(PUNCT ",")
(ID "forceload")
(PUNCT ")")
(NEWLINE)
(ID "desc")
(PUNCT "=")
(ID "describe")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(ID "module")
(PUNCT "=")
(ID "inspect")
(PUNCT ".")
(ID "getmodule")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "name")
(KEYWORD and)
(LIT ".")
(KEYWORD in)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "desc")
(PUNCT "+=")
(LIT " in ")
(PUNCT "+")
(ID "name")
(PUNCT "[")
(PUNCT ":")
(ID "name")
(PUNCT ".")
(ID "rfind")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "module")
(KEYWORD and)
(ID "module")
(KEYWORD is)
(KEYWORD not)
(ID "object")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "desc")
(PUNCT "+=")
(LIT " in module ")
(PUNCT "+")
(ID "module")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID "inspect")
(PUNCT ".")
(ID "ismodule")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "isclass")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "isroutine")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "isgetsetdescriptor")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(KEYWORD or)
(ID "inspect")
(PUNCT ".")
(ID "ismemberdescriptor")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(KEYWORD or)
(ID "isinstance")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "property")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "object")
(PUNCT "=")
(ID "type")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(NEWLINE)
(ID "desc")
(PUNCT "+=")
(LIT " object")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "title")
(PUNCT "%")
(ID "desc")
(PUNCT "+")
(LIT "\n\n")
(PUNCT "+")
(ID "renderer")
(PUNCT ".")
(ID "document")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "doc")
(PUNCT "(")
(ID "thing")
(PUNCT ",")
(ID "title")
(PUNCT "=")
(LIT "Python Library Documentation: %s")
(PUNCT ",")
(ID "forceload")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "output")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Display text documentation, given an object or a path to an object.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "output")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pager")
(PUNCT "(")
(ID "render_doc")
(PUNCT "(")
(ID "thing")
(PUNCT ",")
(ID "title")
(PUNCT ",")
(ID "forceload")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "render_doc")
(PUNCT "(")
(ID "thing")
(PUNCT ",")
(ID "title")
(PUNCT ",")
(ID "forceload")
(PUNCT ",")
(ID "plaintext")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "ImportError")
(PUNCT ",")
(ID "ErrorDuringImport")
(PUNCT ")")
(KEYWORD as)
(ID "value")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "writedoc")
(PUNCT "(")
(ID "thing")
(PUNCT ",")
(ID "forceload")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Write HTML documentation to a file in the current directory.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(ID "resolve")
(PUNCT "(")
(ID "thing")
(PUNCT ",")
(ID "forceload")
(PUNCT ")")
(NEWLINE)
(ID "page")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "page")
(PUNCT "(")
(ID "describe")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ",")
(ID "html")
(PUNCT ".")
(ID "document")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "file")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "name")
(PUNCT "+")
(LIT ".html")
(PUNCT ",")
(LIT "w")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(LIT "utf-8")
(PUNCT ")")
(NEWLINE)
(ID "file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "page")
(PUNCT ")")
(NEWLINE)
(ID "file")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "wrote")
(PUNCT ",")
(ID "name")
(PUNCT "+")
(LIT ".html")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "ImportError")
(PUNCT ",")
(ID "ErrorDuringImport")
(PUNCT ")")
(KEYWORD as)
(ID "value")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "writedocs")
(PUNCT "(")
(ID "dir")
(PUNCT ",")
(ID "pkgpath")
(PUNCT "=")
(LIT "")
(PUNCT ",")
(ID "done")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Write out HTML documentation for all modules in a directory tree.")
(NEWLINE)
(KEYWORD if)
(ID "done")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(ID "done")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "importer")
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(ID "ispkg")
(KEYWORD in)
(ID "pkgutil")
(PUNCT ".")
(ID "walk_packages")
(PUNCT "(")
(PUNCT "[")
(ID "dir")
(PUNCT "]")
(PUNCT ",")
(ID "pkgpath")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "writedoc")
(PUNCT "(")
(ID "modname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "Helper")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "keywords")
(PUNCT "=")
(PUNCT "{")
(LIT "False")
(PUNCT ":")
(LIT "")
(PUNCT ",")
(LIT "None")
(PUNCT ":")
(LIT "")
(PUNCT ",")
(LIT "True")
(PUNCT ":")
(LIT "")
(PUNCT ",")
(LIT "and")
(PUNCT ":")
(LIT "BOOLEAN")
(PUNCT ",")
(LIT "as")
(PUNCT ":")
(LIT "with")
(PUNCT ",")
(LIT "assert")
(PUNCT ":")
(PUNCT "(")
(LIT "assert")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT ",")
(LIT "break")
(PUNCT ":")
(PUNCT "(")
(LIT "break")
(PUNCT ",")
(LIT "while for")
(PUNCT ")")
(PUNCT ",")
(LIT "class")
(PUNCT ":")
(PUNCT "(")
(LIT "class")
(PUNCT ",")
(LIT "CLASSES SPECIALMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "continue")
(PUNCT ":")
(PUNCT "(")
(LIT "continue")
(PUNCT ",")
(LIT "while for")
(PUNCT ")")
(PUNCT ",")
(LIT "def")
(PUNCT ":")
(PUNCT "(")
(LIT "function")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT ",")
(LIT "del")
(PUNCT ":")
(PUNCT "(")
(LIT "del")
(PUNCT ",")
(LIT "BASICMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "elif")
(PUNCT ":")
(LIT "if")
(PUNCT ",")
(LIT "else")
(PUNCT ":")
(PUNCT "(")
(LIT "else")
(PUNCT ",")
(LIT "while for")
(PUNCT ")")
(PUNCT ",")
(LIT "except")
(PUNCT ":")
(LIT "try")
(PUNCT ",")
(LIT "finally")
(PUNCT ":")
(LIT "try")
(PUNCT ",")
(LIT "for")
(PUNCT ":")
(PUNCT "(")
(LIT "for")
(PUNCT ",")
(LIT "break continue while")
(PUNCT ")")
(PUNCT ",")
(LIT "from")
(PUNCT ":")
(LIT "import")
(PUNCT ",")
(LIT "global")
(PUNCT ":")
(PUNCT "(")
(LIT "global")
(PUNCT ",")
(LIT "nonlocal NAMESPACES")
(PUNCT ")")
(PUNCT ",")
(LIT "if")
(PUNCT ":")
(PUNCT "(")
(LIT "if")
(PUNCT ",")
(LIT "TRUTHVALUE")
(PUNCT ")")
(PUNCT ",")
(LIT "import")
(PUNCT ":")
(PUNCT "(")
(LIT "import")
(PUNCT ",")
(LIT "MODULES")
(PUNCT ")")
(PUNCT ",")
(LIT "in")
(PUNCT ":")
(PUNCT "(")
(LIT "in")
(PUNCT ",")
(LIT "SEQUENCEMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "is")
(PUNCT ":")
(LIT "COMPARISON")
(PUNCT ",")
(LIT "lambda")
(PUNCT ":")
(PUNCT "(")
(LIT "lambda")
(PUNCT ",")
(LIT "FUNCTIONS")
(PUNCT ")")
(PUNCT ",")
(LIT "nonlocal")
(PUNCT ":")
(PUNCT "(")
(LIT "nonlocal")
(PUNCT ",")
(LIT "global NAMESPACES")
(PUNCT ")")
(PUNCT ",")
(LIT "not")
(PUNCT ":")
(LIT "BOOLEAN")
(PUNCT ",")
(LIT "or")
(PUNCT ":")
(LIT "BOOLEAN")
(PUNCT ",")
(LIT "pass")
(PUNCT ":")
(PUNCT "(")
(LIT "pass")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT ",")
(LIT "raise")
(PUNCT ":")
(PUNCT "(")
(LIT "raise")
(PUNCT ",")
(LIT "EXCEPTIONS")
(PUNCT ")")
(PUNCT ",")
(LIT "return")
(PUNCT ":")
(PUNCT "(")
(LIT "return")
(PUNCT ",")
(LIT "FUNCTIONS")
(PUNCT ")")
(PUNCT ",")
(LIT "try")
(PUNCT ":")
(PUNCT "(")
(LIT "try")
(PUNCT ",")
(LIT "EXCEPTIONS")
(PUNCT ")")
(PUNCT ",")
(LIT "while")
(PUNCT ":")
(PUNCT "(")
(LIT "while")
(PUNCT ",")
(LIT "break continue if TRUTHVALUE")
(PUNCT ")")
(PUNCT ",")
(LIT "with")
(PUNCT ":")
(PUNCT "(")
(LIT "with")
(PUNCT ",")
(LIT "CONTEXTMANAGERS EXCEPTIONS yield")
(PUNCT ")")
(PUNCT ",")
(LIT "yield")
(PUNCT ":")
(PUNCT "(")
(LIT "yield")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(ID "_symbols_inverse")
(PUNCT "=")
(PUNCT "{")
(LIT "STRINGS")
(PUNCT ":")
(PUNCT "(")
(LIT "'")
(PUNCT ",")
(LIT "'''")
(PUNCT ",")
(LIT "r'")
(PUNCT ",")
(LIT "b'")
(PUNCT ",")
(LIT "\"\"\"")
(PUNCT ",")
(LIT "\"")
(PUNCT ",")
(LIT "r\"")
(PUNCT ",")
(LIT "b\"")
(PUNCT ")")
(PUNCT ",")
(LIT "OPERATORS")
(PUNCT ":")
(PUNCT "(")
(LIT "+")
(PUNCT ",")
(LIT "-")
(PUNCT ",")
(LIT "*")
(PUNCT ",")
(LIT "**")
(PUNCT ",")
(LIT "/")
(PUNCT ",")
(LIT "//")
(PUNCT ",")
(LIT "%")
(PUNCT ",")
(LIT "<<")
(PUNCT ",")
(LIT ">>")
(PUNCT ",")
(LIT "&")
(PUNCT ",")
(LIT "|")
(PUNCT ",")
(LIT "^")
(PUNCT ",")
(LIT "~")
(PUNCT ",")
(LIT "<")
(PUNCT ",")
(LIT ">")
(PUNCT ",")
(LIT "<=")
(PUNCT ",")
(LIT ">=")
(PUNCT ",")
(LIT "==")
(PUNCT ",")
(LIT "!=")
(PUNCT ",")
(LIT "<>")
(PUNCT ")")
(PUNCT ",")
(LIT "COMPARISON")
(PUNCT ":")
(PUNCT "(")
(LIT "<")
(PUNCT ",")
(LIT ">")
(PUNCT ",")
(LIT "<=")
(PUNCT ",")
(LIT ">=")
(PUNCT ",")
(LIT "==")
(PUNCT ",")
(LIT "!=")
(PUNCT ",")
(LIT "<>")
(PUNCT ")")
(PUNCT ",")
(LIT "UNARY")
(PUNCT ":")
(PUNCT "(")
(LIT "-")
(PUNCT ",")
(LIT "~")
(PUNCT ")")
(PUNCT ",")
(LIT "AUGMENTEDASSIGNMENT")
(PUNCT ":")
(PUNCT "(")
(LIT "+=")
(PUNCT ",")
(LIT "-=")
(PUNCT ",")
(LIT "*=")
(PUNCT ",")
(LIT "/=")
(PUNCT ",")
(LIT "%=")
(PUNCT ",")
(LIT "&=")
(PUNCT ",")
(LIT "|=")
(PUNCT ",")
(LIT "^=")
(PUNCT ",")
(LIT "<<=")
(PUNCT ",")
(LIT ">>=")
(PUNCT ",")
(LIT "**=")
(PUNCT ",")
(LIT "//=")
(PUNCT ")")
(PUNCT ",")
(LIT "BITWISE")
(PUNCT ":")
(PUNCT "(")
(LIT "<<")
(PUNCT ",")
(LIT ">>")
(PUNCT ",")
(LIT "&")
(PUNCT ",")
(LIT "|")
(PUNCT ",")
(LIT "^")
(PUNCT ",")
(LIT "~")
(PUNCT ")")
(PUNCT ",")
(LIT "COMPLEX")
(PUNCT ":")
(PUNCT "(")
(LIT "j")
(PUNCT ",")
(LIT "J")
(PUNCT ")")
(PUNCT "}")
(NEWLINE)
(ID "symbols")
(PUNCT "=")
(PUNCT "{")
(LIT "%")
(PUNCT ":")
(LIT "OPERATORS FORMATTING")
(PUNCT ",")
(LIT "**")
(PUNCT ":")
(LIT "POWER")
(PUNCT ",")
(LIT ",")
(PUNCT ":")
(LIT "TUPLES LISTS FUNCTIONS")
(PUNCT ",")
(LIT ".")
(PUNCT ":")
(LIT "ATTRIBUTES FLOAT MODULES OBJECTS")
(PUNCT ",")
(LIT "...")
(PUNCT ":")
(LIT "ELLIPSIS")
(PUNCT ",")
(LIT ":")
(PUNCT ":")
(LIT "SLICINGS DICTIONARYLITERALS")
(PUNCT ",")
(LIT "@")
(PUNCT ":")
(LIT "def class")
(PUNCT ",")
(LIT "\\")
(PUNCT ":")
(LIT "STRINGS")
(PUNCT ",")
(LIT "_")
(PUNCT ":")
(LIT "PRIVATENAMES")
(PUNCT ",")
(LIT "__")
(PUNCT ":")
(LIT "PRIVATENAMES SPECIALMETHODS")
(PUNCT ",")
(LIT "`")
(PUNCT ":")
(LIT "BACKQUOTES")
(PUNCT ",")
(LIT "(")
(PUNCT ":")
(LIT "TUPLES FUNCTIONS CALLS")
(PUNCT ",")
(LIT ")")
(PUNCT ":")
(LIT "TUPLES FUNCTIONS CALLS")
(PUNCT ",")
(LIT "[")
(PUNCT ":")
(LIT "LISTS SUBSCRIPTS SLICINGS")
(PUNCT ",")
(LIT "]")
(PUNCT ":")
(LIT "LISTS SUBSCRIPTS SLICINGS")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "topic")
(PUNCT ",")
(ID "symbols_")
(KEYWORD in)
(ID "_symbols_inverse")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "symbol")
(KEYWORD in)
(ID "symbols_")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "topics")
(PUNCT "=")
(ID "symbols")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "symbol")
(PUNCT ",")
(ID "topic")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "topic")
(KEYWORD not)
(KEYWORD in)
(ID "topics")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "topics")
(PUNCT "=")
(ID "topics")
(PUNCT "+")
(LIT " ")
(PUNCT "+")
(ID "topic")
(NEWLINE)
(DEDENT)
(ID "symbols")
(PUNCT "[")
(ID "symbol")
(PUNCT "]")
(PUNCT "=")
(ID "topics")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "topics")
(PUNCT "=")
(PUNCT "{")
(LIT "TYPES")
(PUNCT ":")
(PUNCT "(")
(LIT "types")
(PUNCT ",")
(LIT "STRINGS UNICODE NUMBERS SEQUENCES MAPPINGS ")
(LIT "FUNCTIONS CLASSES MODULES FILES inspect")
(PUNCT ")")
(PUNCT ",")
(LIT "STRINGS")
(PUNCT ":")
(PUNCT "(")
(LIT "strings")
(PUNCT ",")
(LIT "str UNICODE SEQUENCES STRINGMETHODS ")
(LIT "FORMATTING TYPES")
(PUNCT ")")
(PUNCT ",")
(LIT "STRINGMETHODS")
(PUNCT ":")
(PUNCT "(")
(LIT "string-methods")
(PUNCT ",")
(LIT "STRINGS FORMATTING")
(PUNCT ")")
(PUNCT ",")
(LIT "FORMATTING")
(PUNCT ":")
(PUNCT "(")
(LIT "formatstrings")
(PUNCT ",")
(LIT "OPERATORS")
(PUNCT ")")
(PUNCT ",")
(LIT "UNICODE")
(PUNCT ":")
(PUNCT "(")
(LIT "strings")
(PUNCT ",")
(LIT "encodings unicode SEQUENCES STRINGMETHODS ")
(LIT "FORMATTING TYPES")
(PUNCT ")")
(PUNCT ",")
(LIT "NUMBERS")
(PUNCT ":")
(PUNCT "(")
(LIT "numbers")
(PUNCT ",")
(LIT "INTEGER FLOAT COMPLEX TYPES")
(PUNCT ")")
(PUNCT ",")
(LIT "INTEGER")
(PUNCT ":")
(PUNCT "(")
(LIT "integers")
(PUNCT ",")
(LIT "int range")
(PUNCT ")")
(PUNCT ",")
(LIT "FLOAT")
(PUNCT ":")
(PUNCT "(")
(LIT "floating")
(PUNCT ",")
(LIT "float math")
(PUNCT ")")
(PUNCT ",")
(LIT "COMPLEX")
(PUNCT ":")
(PUNCT "(")
(LIT "imaginary")
(PUNCT ",")
(LIT "complex cmath")
(PUNCT ")")
(PUNCT ",")
(LIT "SEQUENCES")
(PUNCT ":")
(PUNCT "(")
(LIT "typesseq")
(PUNCT ",")
(LIT "STRINGMETHODS FORMATTING range LISTS")
(PUNCT ")")
(PUNCT ",")
(LIT "MAPPINGS")
(PUNCT ":")
(LIT "DICTIONARIES")
(PUNCT ",")
(LIT "FUNCTIONS")
(PUNCT ":")
(PUNCT "(")
(LIT "typesfunctions")
(PUNCT ",")
(LIT "def TYPES")
(PUNCT ")")
(PUNCT ",")
(LIT "METHODS")
(PUNCT ":")
(PUNCT "(")
(LIT "typesmethods")
(PUNCT ",")
(LIT "class def CLASSES TYPES")
(PUNCT ")")
(PUNCT ",")
(LIT "CODEOBJECTS")
(PUNCT ":")
(PUNCT "(")
(LIT "bltin-code-objects")
(PUNCT ",")
(LIT "compile FUNCTIONS TYPES")
(PUNCT ")")
(PUNCT ",")
(LIT "TYPEOBJECTS")
(PUNCT ":")
(PUNCT "(")
(LIT "bltin-type-objects")
(PUNCT ",")
(LIT "types TYPES")
(PUNCT ")")
(PUNCT ",")
(LIT "FRAMEOBJECTS")
(PUNCT ":")
(LIT "TYPES")
(PUNCT ",")
(LIT "TRACEBACKS")
(PUNCT ":")
(LIT "TYPES")
(PUNCT ",")
(LIT "NONE")
(PUNCT ":")
(PUNCT "(")
(LIT "bltin-null-object")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT ",")
(LIT "ELLIPSIS")
(PUNCT ":")
(PUNCT "(")
(LIT "bltin-ellipsis-object")
(PUNCT ",")
(LIT "SLICINGS")
(PUNCT ")")
(PUNCT ",")
(LIT "SPECIALATTRIBUTES")
(PUNCT ":")
(PUNCT "(")
(LIT "specialattrs")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT ",")
(LIT "CLASSES")
(PUNCT ":")
(PUNCT "(")
(LIT "types")
(PUNCT ",")
(LIT "class SPECIALMETHODS PRIVATENAMES")
(PUNCT ")")
(PUNCT ",")
(LIT "MODULES")
(PUNCT ":")
(PUNCT "(")
(LIT "typesmodules")
(PUNCT ",")
(LIT "import")
(PUNCT ")")
(PUNCT ",")
(LIT "PACKAGES")
(PUNCT ":")
(LIT "import")
(PUNCT ",")
(LIT "EXPRESSIONS")
(PUNCT ":")
(PUNCT "(")
(LIT "operator-summary")
(PUNCT ",")
(LIT "lambda or and not in is BOOLEAN ")
(LIT "COMPARISON BITWISE SHIFTING BINARY FORMATTING POWER ")
(LIT "UNARY ATTRIBUTES SUBSCRIPTS SLICINGS CALLS TUPLES ")
(LIT "LISTS DICTIONARIES")
(PUNCT ")")
(PUNCT ",")
(LIT "OPERATORS")
(PUNCT ":")
(LIT "EXPRESSIONS")
(PUNCT ",")
(LIT "PRECEDENCE")
(PUNCT ":")
(LIT "EXPRESSIONS")
(PUNCT ",")
(LIT "OBJECTS")
(PUNCT ":")
(PUNCT "(")
(LIT "objects")
(PUNCT ",")
(LIT "TYPES")
(PUNCT ")")
(PUNCT ",")
(LIT "SPECIALMETHODS")
(PUNCT ":")
(PUNCT "(")
(LIT "specialnames")
(PUNCT ",")
(LIT "BASICMETHODS ATTRIBUTEMETHODS ")
(LIT "CALLABLEMETHODS SEQUENCEMETHODS MAPPINGMETHODS ")
(LIT "NUMBERMETHODS CLASSES")
(PUNCT ")")
(PUNCT ",")
(LIT "BASICMETHODS")
(PUNCT ":")
(PUNCT "(")
(LIT "customization")
(PUNCT ",")
(LIT "hash repr str SPECIALMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "ATTRIBUTEMETHODS")
(PUNCT ":")
(PUNCT "(")
(LIT "attribute-access")
(PUNCT ",")
(LIT "ATTRIBUTES SPECIALMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "CALLABLEMETHODS")
(PUNCT ":")
(PUNCT "(")
(LIT "callable-types")
(PUNCT ",")
(LIT "CALLS SPECIALMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "SEQUENCEMETHODS")
(PUNCT ":")
(PUNCT "(")
(LIT "sequence-types")
(PUNCT ",")
(LIT "SEQUENCES SEQUENCEMETHODS ")
(LIT "SPECIALMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "MAPPINGMETHODS")
(PUNCT ":")
(PUNCT "(")
(LIT "sequence-types")
(PUNCT ",")
(LIT "MAPPINGS SPECIALMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "NUMBERMETHODS")
(PUNCT ":")
(PUNCT "(")
(LIT "numeric-types")
(PUNCT ",")
(LIT "NUMBERS AUGMENTEDASSIGNMENT ")
(LIT "SPECIALMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "EXECUTION")
(PUNCT ":")
(PUNCT "(")
(LIT "execmodel")
(PUNCT ",")
(LIT "NAMESPACES DYNAMICFEATURES EXCEPTIONS")
(PUNCT ")")
(PUNCT ",")
(LIT "NAMESPACES")
(PUNCT ":")
(PUNCT "(")
(LIT "naming")
(PUNCT ",")
(LIT "global nonlocal ASSIGNMENT DELETION DYNAMICFEATURES")
(PUNCT ")")
(PUNCT ",")
(LIT "DYNAMICFEATURES")
(PUNCT ":")
(PUNCT "(")
(LIT "dynamic-features")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT ",")
(LIT "SCOPING")
(PUNCT ":")
(LIT "NAMESPACES")
(PUNCT ",")
(LIT "FRAMES")
(PUNCT ":")
(LIT "NAMESPACES")
(PUNCT ",")
(LIT "EXCEPTIONS")
(PUNCT ":")
(PUNCT "(")
(LIT "exceptions")
(PUNCT ",")
(LIT "try except finally raise")
(PUNCT ")")
(PUNCT ",")
(LIT "CONVERSIONS")
(PUNCT ":")
(PUNCT "(")
(LIT "conversions")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT ",")
(LIT "IDENTIFIERS")
(PUNCT ":")
(PUNCT "(")
(LIT "identifiers")
(PUNCT ",")
(LIT "keywords SPECIALIDENTIFIERS")
(PUNCT ")")
(PUNCT ",")
(LIT "SPECIALIDENTIFIERS")
(PUNCT ":")
(PUNCT "(")
(LIT "id-classes")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT ",")
(LIT "PRIVATENAMES")
(PUNCT ":")
(PUNCT "(")
(LIT "atom-identifiers")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT ",")
(LIT "LITERALS")
(PUNCT ":")
(PUNCT "(")
(LIT "atom-literals")
(PUNCT ",")
(LIT "STRINGS NUMBERS TUPLELITERALS ")
(LIT "LISTLITERALS DICTIONARYLITERALS")
(PUNCT ")")
(PUNCT ",")
(LIT "TUPLES")
(PUNCT ":")
(LIT "SEQUENCES")
(PUNCT ",")
(LIT "TUPLELITERALS")
(PUNCT ":")
(PUNCT "(")
(LIT "exprlists")
(PUNCT ",")
(LIT "TUPLES LITERALS")
(PUNCT ")")
(PUNCT ",")
(LIT "LISTS")
(PUNCT ":")
(PUNCT "(")
(LIT "typesseq-mutable")
(PUNCT ",")
(LIT "LISTLITERALS")
(PUNCT ")")
(PUNCT ",")
(LIT "LISTLITERALS")
(PUNCT ":")
(PUNCT "(")
(LIT "lists")
(PUNCT ",")
(LIT "LISTS LITERALS")
(PUNCT ")")
(PUNCT ",")
(LIT "DICTIONARIES")
(PUNCT ":")
(PUNCT "(")
(LIT "typesmapping")
(PUNCT ",")
(LIT "DICTIONARYLITERALS")
(PUNCT ")")
(PUNCT ",")
(LIT "DICTIONARYLITERALS")
(PUNCT ":")
(PUNCT "(")
(LIT "dict")
(PUNCT ",")
(LIT "DICTIONARIES LITERALS")
(PUNCT ")")
(PUNCT ",")
(LIT "ATTRIBUTES")
(PUNCT ":")
(PUNCT "(")
(LIT "attribute-references")
(PUNCT ",")
(LIT "getattr hasattr setattr ATTRIBUTEMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "SUBSCRIPTS")
(PUNCT ":")
(PUNCT "(")
(LIT "subscriptions")
(PUNCT ",")
(LIT "SEQUENCEMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "SLICINGS")
(PUNCT ":")
(PUNCT "(")
(LIT "slicings")
(PUNCT ",")
(LIT "SEQUENCEMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "CALLS")
(PUNCT ":")
(PUNCT "(")
(LIT "calls")
(PUNCT ",")
(LIT "EXPRESSIONS")
(PUNCT ")")
(PUNCT ",")
(LIT "POWER")
(PUNCT ":")
(PUNCT "(")
(LIT "power")
(PUNCT ",")
(LIT "EXPRESSIONS")
(PUNCT ")")
(PUNCT ",")
(LIT "UNARY")
(PUNCT ":")
(PUNCT "(")
(LIT "unary")
(PUNCT ",")
(LIT "EXPRESSIONS")
(PUNCT ")")
(PUNCT ",")
(LIT "BINARY")
(PUNCT ":")
(PUNCT "(")
(LIT "binary")
(PUNCT ",")
(LIT "EXPRESSIONS")
(PUNCT ")")
(PUNCT ",")
(LIT "SHIFTING")
(PUNCT ":")
(PUNCT "(")
(LIT "shifting")
(PUNCT ",")
(LIT "EXPRESSIONS")
(PUNCT ")")
(PUNCT ",")
(LIT "BITWISE")
(PUNCT ":")
(PUNCT "(")
(LIT "bitwise")
(PUNCT ",")
(LIT "EXPRESSIONS")
(PUNCT ")")
(PUNCT ",")
(LIT "COMPARISON")
(PUNCT ":")
(PUNCT "(")
(LIT "comparisons")
(PUNCT ",")
(LIT "EXPRESSIONS BASICMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "BOOLEAN")
(PUNCT ":")
(PUNCT "(")
(LIT "booleans")
(PUNCT ",")
(LIT "EXPRESSIONS TRUTHVALUE")
(PUNCT ")")
(PUNCT ",")
(LIT "ASSERTION")
(PUNCT ":")
(LIT "assert")
(PUNCT ",")
(LIT "ASSIGNMENT")
(PUNCT ":")
(PUNCT "(")
(LIT "assignment")
(PUNCT ",")
(LIT "AUGMENTEDASSIGNMENT")
(PUNCT ")")
(PUNCT ",")
(LIT "AUGMENTEDASSIGNMENT")
(PUNCT ":")
(PUNCT "(")
(LIT "augassign")
(PUNCT ",")
(LIT "NUMBERMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "DELETION")
(PUNCT ":")
(LIT "del")
(PUNCT ",")
(LIT "RETURNING")
(PUNCT ":")
(LIT "return")
(PUNCT ",")
(LIT "IMPORTING")
(PUNCT ":")
(LIT "import")
(PUNCT ",")
(LIT "CONDITIONAL")
(PUNCT ":")
(LIT "if")
(PUNCT ",")
(LIT "LOOPING")
(PUNCT ":")
(PUNCT "(")
(LIT "compound")
(PUNCT ",")
(LIT "for while break continue")
(PUNCT ")")
(PUNCT ",")
(LIT "TRUTHVALUE")
(PUNCT ":")
(PUNCT "(")
(LIT "truth")
(PUNCT ",")
(LIT "if while and or not BASICMETHODS")
(PUNCT ")")
(PUNCT ",")
(LIT "DEBUGGING")
(PUNCT ":")
(PUNCT "(")
(LIT "debugger")
(PUNCT ",")
(LIT "pdb")
(PUNCT ")")
(PUNCT ",")
(LIT "CONTEXTMANAGERS")
(PUNCT ":")
(PUNCT "(")
(LIT "context-managers")
(PUNCT ",")
(LIT "with")
(PUNCT ")")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "input")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "output")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_input")
(PUNCT "=")
(ID "input")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_output")
(PUNCT "=")
(ID "output")
(NEWLINE)
(DEDENT)
(ID "input")
(PUNCT "=")
(ID "property")
(PUNCT "(")
(KEYWORD lambda)
(ID "self")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "_input")
(KEYWORD or)
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ")")
(NEWLINE)
(ID "output")
(PUNCT "=")
(ID "property")
(PUNCT "(")
(KEYWORD lambda)
(ID "self")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "_output")
(KEYWORD or)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "inspect")
(PUNCT ".")
(ID "stack")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "[")
(LIT 3)
(PUNCT "]")
(PUNCT "==")
(LIT "?")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "<pydoc.Helper instance>")
(NEWLINE)
(DEDENT)
(ID "_GoInteractive")
(PUNCT "=")
(ID "object")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "request")
(PUNCT "=")
(ID "_GoInteractive")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "request")
(KEYWORD is)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_GoInteractive")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "help")
(PUNCT "(")
(ID "request")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "intro")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "interact")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\nYou are now leaving help and returning to the Python interpreter.\nIf you want to ask for help on a particular object directly from the\ninterpreter, you can type \"help(object)\".  Executing \"help('string')\"\nhas the same effect as typing a particular string at the help> prompt.\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "interact")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "request")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getline")
(PUNCT "(")
(LIT "help> ")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "request")
(PUNCT ":")
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "KeyboardInterrupt")
(PUNCT ",")
(ID "EOFError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "request")
(PUNCT "=")
(ID "replace")
(PUNCT "(")
(ID "request")
(PUNCT ",")
(LIT "\"")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(LIT "'")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "request")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(KEYWORD in)
(PUNCT "(")
(LIT "q")
(PUNCT ",")
(LIT "quit")
(PUNCT ")")
(PUNCT ":")
(KEYWORD break)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "help")
(PUNCT "(")
(ID "request")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "getline")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "prompt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Read one line, using input() when appropriate.")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "input")
(KEYWORD is)
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "input")
(PUNCT "(")
(ID "prompt")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "prompt")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "flush")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "input")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "help")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "request")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "type")
(PUNCT "(")
(ID "request")
(PUNCT ")")
(KEYWORD is)
(ID "type")
(PUNCT "(")
(LIT "")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "request")
(PUNCT "=")
(ID "request")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "request")
(PUNCT "==")
(LIT "help")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "intro")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD elif)
(ID "request")
(PUNCT "==")
(LIT "keywords")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "listkeywords")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD elif)
(ID "request")
(PUNCT "==")
(LIT "symbols")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "listsymbols")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD elif)
(ID "request")
(PUNCT "==")
(LIT "topics")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "listtopics")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD elif)
(ID "request")
(PUNCT "==")
(LIT "modules")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "listmodules")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD elif)
(ID "request")
(PUNCT "[")
(PUNCT ":")
(LIT 8)
(PUNCT "]")
(PUNCT "==")
(LIT "modules ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "listmodules")
(PUNCT "(")
(ID "request")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "request")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "symbols")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "showsymbol")
(PUNCT "(")
(ID "request")
(PUNCT ")")
(NEWLINE)
(KEYWORD elif)
(ID "request")
(KEYWORD in)
(PUNCT "[")
(LIT "True")
(PUNCT ",")
(LIT "False")
(PUNCT ",")
(LIT "None")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "doc")
(PUNCT "(")
(ID "eval")
(PUNCT "(")
(ID "request")
(PUNCT ")")
(PUNCT ",")
(LIT "Help on %s:")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "request")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "keywords")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "showtopic")
(PUNCT "(")
(ID "request")
(PUNCT ")")
(NEWLINE)
(KEYWORD elif)
(ID "request")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "topics")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "showtopic")
(PUNCT "(")
(ID "request")
(PUNCT ")")
(NEWLINE)
(KEYWORD elif)
(ID "request")
(PUNCT ":")
(ID "doc")
(PUNCT "(")
(ID "request")
(PUNCT ",")
(LIT "Help on %s:")
(PUNCT ",")
(ID "output")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_output")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "request")
(PUNCT ",")
(ID "Helper")
(PUNCT ")")
(PUNCT ":")
(ID "self")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD else)
(PUNCT ":")
(ID "doc")
(PUNCT "(")
(ID "request")
(PUNCT ",")
(LIT "Help on %s:")
(PUNCT ",")
(ID "output")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_output")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "intro")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\nWelcome to Python %s's help utility!\n\nIf this is your first time using Python, you should definitely check out\nthe tutorial on the Internet at http://docs.python.org/%s/tutorial/.\n\nEnter the name of any module, keyword, or topic to get help on writing\nPython programs and using Python modules.  To quit this help utility and\nreturn to the interpreter, just type \"quit\".\n\nTo get a list of available modules, keywords, symbols, or topics, type\n\"modules\", \"keywords\", \"symbols\", or \"topics\".  Each module also comes\nwith a one-line summary of what it does; to list the modules whose name\nor summary contain a given string such as \"spam\", type \"modules spam\".\n")
(PUNCT "%")
(ID "tuple")
(PUNCT "(")
(PUNCT "[")
(ID "sys")
(PUNCT ".")
(ID "version")
(PUNCT "[")
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(PUNCT "]")
(PUNCT "*")
(LIT 2)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "items")
(PUNCT ",")
(ID "columns")
(PUNCT "=")
(LIT 4)
(PUNCT ",")
(ID "width")
(PUNCT "=")
(LIT 80)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "items")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "sorted")
(PUNCT "(")
(ID "items")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "colw")
(PUNCT "=")
(ID "width")
(PUNCT "//")
(ID "columns")
(NEWLINE)
(ID "rows")
(PUNCT "=")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "items")
(PUNCT ")")
(PUNCT "+")
(ID "columns")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT "//")
(ID "columns")
(NEWLINE)
(KEYWORD for)
(ID "row")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "rows")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "col")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "columns")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "col")
(PUNCT "*")
(ID "rows")
(PUNCT "+")
(ID "row")
(NEWLINE)
(KEYWORD if)
(ID "i")
(PUNCT "<")
(ID "len")
(PUNCT "(")
(ID "items")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "items")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "col")
(PUNCT "<")
(ID "columns")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT " ")
(PUNCT "+")
(LIT " ")
(PUNCT "*")
(PUNCT "(")
(ID "colw")
(PUNCT "-")
(LIT 1)
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "items")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "listkeywords")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\nHere is a list of the Python keywords.  Enter any keyword to get more help.\n\n")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "keywords")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "listsymbols")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\nHere is a list of the punctuation symbols which Python assigns special meaning\nto. Enter any symbol to get more help.\n\n")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "symbols")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "listtopics")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\nHere is a list of available topics.  Enter any topic name to get more help.\n\n")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "topics")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "showtopic")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "topic")
(PUNCT ",")
(ID "more_xrefs")
(PUNCT "=")
(LIT "")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "pydoc_data")
(PUNCT ".")
(ID "topics")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\nSorry, topic and keyword documentation is not available because the\nmodule \"pydoc_data.topics\" could not be found.\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "target")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "topics")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "topic")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "keywords")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "topic")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "target")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "no documentation found for %s\n")
(PUNCT "%")
(ID "repr")
(PUNCT "(")
(ID "topic")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "type")
(PUNCT "(")
(ID "target")
(PUNCT ")")
(KEYWORD is)
(ID "type")
(PUNCT "(")
(LIT "")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "showtopic")
(PUNCT "(")
(ID "target")
(PUNCT ",")
(ID "more_xrefs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "label")
(PUNCT ",")
(ID "xrefs")
(PUNCT "=")
(ID "target")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "doc")
(PUNCT "=")
(ID "pydoc_data")
(PUNCT ".")
(ID "topics")
(PUNCT ".")
(ID "topics")
(PUNCT "[")
(ID "label")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "no documentation found for %s\n")
(PUNCT "%")
(ID "repr")
(PUNCT "(")
(ID "topic")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "pager")
(PUNCT "(")
(ID "doc")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(PUNCT "+")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "more_xrefs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "xrefs")
(PUNCT "=")
(PUNCT "(")
(ID "xrefs")
(KEYWORD or)
(LIT "")
(PUNCT ")")
(PUNCT "+")
(LIT " ")
(PUNCT "+")
(ID "more_xrefs")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "xrefs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "textwrap")
(NEWLINE)
(ID "text")
(PUNCT "=")
(LIT "Related help topics: ")
(PUNCT "+")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "xrefs")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT "+")
(LIT "\n")
(NEWLINE)
(ID "wrapped_text")
(PUNCT "=")
(ID "textwrap")
(PUNCT ".")
(ID "wrap")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(LIT 72)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\n%s\n")
(PUNCT "%")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "wrapped_text")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_gettopic")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "topic")
(PUNCT ",")
(ID "more_xrefs")
(PUNCT "=")
(LIT "")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return unbuffered tuple of (topic, xrefs).\n\n        If an error occurs here, the exception is caught and displayed by\n        the url handler.\n\n        This function duplicates the showtopic method but returns its\n        result directly so it can be formatted for display in an html page.\n        ")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "pydoc_data")
(PUNCT ".")
(ID "topics")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(LIT "\nSorry, topic and keyword documentation is not available because the\nmodule \"pydoc_data.topics\" could not be found.\n")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "target")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "topics")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "topic")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "keywords")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "topic")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "target")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "could not find topic")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "target")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_gettopic")
(PUNCT "(")
(ID "target")
(PUNCT ",")
(ID "more_xrefs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "label")
(PUNCT ",")
(ID "xrefs")
(PUNCT "=")
(ID "target")
(NEWLINE)
(ID "doc")
(PUNCT "=")
(ID "pydoc_data")
(PUNCT ".")
(ID "topics")
(PUNCT ".")
(ID "topics")
(PUNCT "[")
(ID "label")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "more_xrefs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "xrefs")
(PUNCT "=")
(PUNCT "(")
(ID "xrefs")
(KEYWORD or)
(LIT "")
(PUNCT ")")
(PUNCT "+")
(LIT " ")
(PUNCT "+")
(ID "more_xrefs")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "doc")
(PUNCT ",")
(ID "xrefs")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "showsymbol")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "symbol")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "target")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "symbols")
(PUNCT "[")
(ID "symbol")
(PUNCT "]")
(NEWLINE)
(ID "topic")
(PUNCT ",")
(ID "_")
(PUNCT ",")
(ID "xrefs")
(PUNCT "=")
(ID "target")
(PUNCT ".")
(ID "partition")
(PUNCT "(")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "showtopic")
(PUNCT "(")
(ID "topic")
(PUNCT ",")
(ID "xrefs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "listmodules")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT "=")
(LIT "")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "key")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\nHere is a list of modules whose name or summary contains '{}'.\nIf there are any, enter a module name to get more help.\n\n")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "apropos")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\nPlease wait a moment while I gather a list of all available modules...\n\n")
(PUNCT ")")
(NEWLINE)
(ID "modules")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "callback")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(ID "desc")
(PUNCT ",")
(ID "modules")
(PUNCT "=")
(ID "modules")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "modname")
(KEYWORD and)
(ID "modname")
(PUNCT "[")
(PUNCT "-")
(LIT 9)
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(LIT ".__init__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modname")
(PUNCT "=")
(ID "modname")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 9)
(PUNCT "]")
(PUNCT "+")
(LIT " (package)")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "modname")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modules")
(PUNCT "[")
(ID "modname")
(PUNCT "]")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "onerror")
(PUNCT "(")
(ID "modname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "callback")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "ModuleScanner")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "run")
(PUNCT "(")
(ID "callback")
(PUNCT ",")
(ID "onerror")
(PUNCT "=")
(ID "onerror")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "list")
(PUNCT "(")
(ID "modules")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "output")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\nEnter any module name to get more help.  Or, type \"modules spam\" to search\nfor modules whose name or summary contain the string \"spam\".\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "help")
(PUNCT "=")
(ID "Helper")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "ModuleScanner")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "An interruptible scanner that searches module synopses.")
(NEWLINE)
(KEYWORD def)
(ID "run")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "callback")
(PUNCT ",")
(ID "key")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "completer")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "onerror")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "key")
(PUNCT ":")
(ID "key")
(PUNCT "=")
(ID "key")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "quit")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "seen")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "modname")
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "builtin_module_names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "modname")
(PUNCT "!=")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "seen")
(PUNCT "[")
(ID "modname")
(PUNCT "]")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "key")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "callback")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "__import__")
(PUNCT "(")
(ID "modname")
(PUNCT ")")
(PUNCT ".")
(ID "__doc__")
(KEYWORD or)
(LIT "")
(NEWLINE)
(ID "desc")
(PUNCT "=")
(ID "name")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "name")
(PUNCT "=")
(ID "modname")
(PUNCT "+")
(LIT " - ")
(PUNCT "+")
(ID "desc")
(NEWLINE)
(KEYWORD if)
(ID "name")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ">=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "callback")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(ID "desc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "importer")
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(ID "ispkg")
(KEYWORD in)
(ID "pkgutil")
(PUNCT ".")
(ID "walk_packages")
(PUNCT "(")
(ID "onerror")
(PUNCT "=")
(ID "onerror")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "quit")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "key")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "callback")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "spec")
(PUNCT "=")
(ID "pkgutil")
(PUNCT ".")
(ID "_get_spec")
(PUNCT "(")
(ID "importer")
(PUNCT ",")
(ID "modname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "SyntaxError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "loader")
(PUNCT "=")
(ID "spec")
(PUNCT ".")
(ID "loader")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "loader")
(PUNCT ",")
(LIT "get_source")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "source")
(PUNCT "=")
(ID "loader")
(PUNCT ".")
(ID "get_source")
(PUNCT "(")
(ID "modname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "onerror")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "onerror")
(PUNCT "(")
(ID "modname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "desc")
(PUNCT "=")
(ID "source_synopsis")
(PUNCT "(")
(ID "io")
(PUNCT ".")
(ID "StringIO")
(PUNCT "(")
(ID "source")
(PUNCT ")")
(PUNCT ")")
(KEYWORD or)
(LIT "")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "loader")
(PUNCT ",")
(LIT "get_filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "path")
(PUNCT "=")
(ID "loader")
(PUNCT ".")
(ID "get_filename")
(PUNCT "(")
(ID "modname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "path")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_spec")
(PUNCT "=")
(ID "importlib")
(PUNCT ".")
(ID "_bootstrap")
(PUNCT ".")
(ID "_SpecMethods")
(PUNCT "(")
(ID "spec")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "module")
(PUNCT "=")
(ID "_spec")
(PUNCT ".")
(ID "load")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "onerror")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "onerror")
(PUNCT "(")
(ID "modname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "desc")
(PUNCT "=")
(PUNCT "(")
(ID "module")
(PUNCT ".")
(ID "__doc__")
(KEYWORD or)
(LIT "")
(PUNCT ")")
(PUNCT ".")
(ID "splitlines")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "path")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "module")
(PUNCT ",")
(LIT "__file__")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "name")
(PUNCT "=")
(ID "modname")
(PUNCT "+")
(LIT " - ")
(PUNCT "+")
(ID "desc")
(NEWLINE)
(KEYWORD if)
(ID "name")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ">=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "callback")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(ID "desc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "completer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "completer")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "apropos")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Print all the one-line module summaries that contain a substring.")
(NEWLINE)
(KEYWORD def)
(ID "callback")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(ID "desc")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "modname")
(PUNCT "[")
(PUNCT "-")
(LIT 9)
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(LIT ".__init__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modname")
(PUNCT "=")
(ID "modname")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 9)
(PUNCT "]")
(PUNCT "+")
(LIT " (package)")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(ID "modname")
(PUNCT ",")
(ID "desc")
(KEYWORD and)
(LIT "- ")
(PUNCT "+")
(ID "desc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "onerror")
(PUNCT "(")
(ID "modname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD with)
(ID "warnings")
(PUNCT ".")
(ID "catch_warnings")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "warnings")
(PUNCT ".")
(ID "filterwarnings")
(PUNCT "(")
(LIT "ignore")
(PUNCT ")")
(NEWLINE)
(ID "ModuleScanner")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "run")
(PUNCT "(")
(ID "callback")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "onerror")
(PUNCT "=")
(ID "onerror")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_start_server")
(PUNCT "(")
(ID "urlhandler")
(PUNCT ",")
(ID "port")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Start an HTTP server thread on a specific port.\n\n    Start an HTML/text server thread, so HTML or text documents can be\n    browsed dynamically and interactively with a Web browser.  Example use:\n\n        >>> import time\n        >>> import pydoc\n\n        Define a URL handler.  To determine what the client is asking\n        for, check the URL and content_type.\n\n        Then get or generate some text or HTML code and return it.\n\n        >>> def my_url_handler(url, content_type):\n        ...     text = 'the URL sent was: (%s, %s)' % (url, content_type)\n        ...     return text\n\n        Start server thread on port 0.\n        If you use port 0, the server will pick a random port number.\n        You can then use serverthread.port to get the port number.\n\n        >>> port = 0\n        >>> serverthread = pydoc._start_server(my_url_handler, port)\n\n        Check that the server is really started.  If it is, open browser\n        and get first page.  Use serverthread.url as the starting page.\n\n        >>> if serverthread.serving:\n        ...    import webbrowser\n\n        The next two lines are commented out so a browser doesn't open if\n        doctest is run on this module.\n\n        #...    webbrowser.open(serverthread.url)\n        #True\n\n        Let the server do its thing. We just need to monitor its status.\n        Use time.sleep so the loop doesn't hog the CPU.\n\n        >>> starttime = time.time()\n        >>> timeout = 1                    #seconds\n\n        This is a short timeout for testing purposes.\n\n        >>> while serverthread.serving:\n        ...     time.sleep(.01)\n        ...     if serverthread.serving and time.time() - starttime > timeout:\n        ...          serverthread.stop()\n        ...          break\n\n        Print any errors that may have occurred.\n\n        >>> print(serverthread.error)\n        None\n   ")
(NEWLINE)
(KEYWORD import)
(ID "http")
(PUNCT ".")
(ID "server")
(NEWLINE)
(KEYWORD import)
(ID "email")
(PUNCT ".")
(ID "message")
(NEWLINE)
(KEYWORD import)
(ID "select")
(NEWLINE)
(KEYWORD import)
(ID "threading")
(NEWLINE)
(KEYWORD class)
(ID "DocHandler")
(PUNCT "(")
(ID "http")
(PUNCT ".")
(ID "server")
(PUNCT ".")
(ID "BaseHTTPRequestHandler")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "do_GET")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Process a request from an HTML browser.\n\n            The URL received is in self.path.\n            Get an HTML page from self.urlhandler and send it.\n            ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT ".css")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "content_type")
(PUNCT "=")
(LIT "text/css")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "content_type")
(PUNCT "=")
(LIT "text/html")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "send_response")
(PUNCT "(")
(LIT 200)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "send_header")
(PUNCT "(")
(LIT "Content-Type")
(PUNCT ",")
(LIT "%s; charset=UTF-8")
(PUNCT "%")
(ID "content_type")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "end_headers")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "wfile")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "urlhandler")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "path")
(PUNCT ",")
(ID "content_type")
(PUNCT ")")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "utf-8")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "log_message")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "DocServer")
(PUNCT "(")
(ID "http")
(PUNCT ".")
(ID "server")
(PUNCT ".")
(ID "HTTPServer")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "port")
(PUNCT ",")
(ID "callback")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "host")
(PUNCT "=")
(LIT "localhost")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "address")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "host")
(PUNCT ",")
(ID "port")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "callback")
(PUNCT "=")
(ID "callback")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "base")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "address")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "handler")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "quit")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "serve_until_quit")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "quit")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rd")
(PUNCT ",")
(ID "wr")
(PUNCT ",")
(ID "ex")
(PUNCT "=")
(ID "select")
(PUNCT ".")
(ID "select")
(PUNCT "(")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "rd")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_request")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "server_close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "server_activate")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "base")
(PUNCT ".")
(ID "server_activate")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "callback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "callback")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ServerThread")
(PUNCT "(")
(ID "threading")
(PUNCT ".")
(ID "Thread")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "urlhandler")
(PUNCT ",")
(ID "port")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "urlhandler")
(PUNCT "=")
(ID "urlhandler")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "port")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "port")
(PUNCT ")")
(NEWLINE)
(ID "threading")
(PUNCT ".")
(ID "Thread")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "serving")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "run")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Start the server.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "DocServer")
(PUNCT ".")
(ID "base")
(PUNCT "=")
(ID "http")
(PUNCT ".")
(ID "server")
(PUNCT ".")
(ID "HTTPServer")
(NEWLINE)
(ID "DocServer")
(PUNCT ".")
(ID "handler")
(PUNCT "=")
(ID "DocHandler")
(NEWLINE)
(ID "DocHandler")
(PUNCT ".")
(ID "MessageClass")
(PUNCT "=")
(ID "email")
(PUNCT ".")
(ID "message")
(PUNCT ".")
(ID "Message")
(NEWLINE)
(ID "DocHandler")
(PUNCT ".")
(ID "urlhandler")
(PUNCT "=")
(ID "staticmethod")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "urlhandler")
(PUNCT ")")
(NEWLINE)
(ID "docsvr")
(PUNCT "=")
(ID "DocServer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "port")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "ready")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "docserver")
(PUNCT "=")
(ID "docsvr")
(NEWLINE)
(ID "docsvr")
(PUNCT ".")
(ID "serve_until_quit")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "=")
(ID "e")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "ready")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "server")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "serving")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "host")
(PUNCT "=")
(ID "server")
(PUNCT ".")
(ID "host")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "port")
(PUNCT "=")
(ID "server")
(PUNCT ".")
(ID "server_port")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "url")
(PUNCT "=")
(LIT "http://%s:%d/")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "host")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "port")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "stop")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Stop the server and this thread nicely")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "docserver")
(PUNCT ".")
(ID "quit")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "serving")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "url")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "thread")
(PUNCT "=")
(ID "ServerThread")
(PUNCT "(")
(ID "urlhandler")
(PUNCT ",")
(ID "port")
(PUNCT ")")
(NEWLINE)
(ID "thread")
(PUNCT ".")
(ID "start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(KEYWORD not)
(ID "thread")
(PUNCT ".")
(ID "error")
(KEYWORD and)
(KEYWORD not)
(ID "thread")
(PUNCT ".")
(ID "serving")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "time")
(PUNCT ".")
(ID "sleep")
(PUNCT "(")
(LIT 0.01)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "thread")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_url_handler")
(PUNCT "(")
(ID "url")
(PUNCT ",")
(ID "content_type")
(PUNCT "=")
(LIT "text/html")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "The pydoc url handler for use with the pydoc server.\n\n    If the content_type is 'text/css', the _pydoc.css style\n    sheet is read and returned if it exits.\n\n    If the content_type is 'text/html', then the result of\n    get_html_page(url) is returned.\n    ")
(NEWLINE)
(KEYWORD class)
(ID "_HTMLDoc")
(PUNCT "(")
(ID "HTMLDoc")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "page")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "title")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format an HTML page.")
(NEWLINE)
(ID "css_path")
(PUNCT "=")
(LIT "pydoc_data/_pydoc.css")
(NEWLINE)
(ID "css_link")
(PUNCT "=")
(PUNCT "(")
(LIT "<link rel=\"stylesheet\" type=\"text/css\" href=\"%s\">")
(PUNCT "%")
(ID "css_path")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html><head><title>Pydoc: %s</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n%s</head><body bgcolor=\"#f0f0f8\">%s<div style=\"clear:both;padding-top:.5em;\">%s</div>\n</body></html>")
(PUNCT "%")
(PUNCT "(")
(ID "title")
(PUNCT ",")
(ID "css_link")
(PUNCT ",")
(ID "html_navbar")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "filelink")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "url")
(PUNCT ",")
(ID "path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<a href=\"getfile?key=%s\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "url")
(PUNCT ",")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "html")
(PUNCT "=")
(ID "_HTMLDoc")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "html_navbar")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "version")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "escape")
(PUNCT "(")
(LIT "%s [%s, %s]")
(PUNCT "%")
(PUNCT "(")
(ID "platform")
(PUNCT ".")
(ID "python_version")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "platform")
(PUNCT ".")
(ID "python_build")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(ID "platform")
(PUNCT ".")
(ID "python_compiler")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "\n            <div style='float:left'>\n                Python %s<br>%s\n            </div>\n            <div style='float:right'>\n                <div style='text-align:center'>\n                  <a href=\"index.html\">Module Index</a>\n                  : <a href=\"topics.html\">Topics</a>\n                  : <a href=\"keywords.html\">Keywords</a>\n                </div>\n                <div>\n                    <form action=\"get\" style='display:inline;'>\n                      <input type=text name=key size=15>\n                      <input type=submit value=\"Get\">\n                    </form>&nbsp;\n                    <form action=\"search\" style='display:inline;'>\n                      <input type=text name=key size=15>\n                      <input type=submit value=\"Search\">\n                    </form>\n                </div>\n            </div>\n            ")
(PUNCT "%")
(PUNCT "(")
(ID "version")
(PUNCT ",")
(ID "html")
(PUNCT ".")
(ID "escape")
(PUNCT "(")
(ID "platform")
(PUNCT ".")
(ID "platform")
(PUNCT "(")
(ID "terse")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "html_index")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Module Index page.")
(NEWLINE)
(KEYWORD def)
(ID "bltinlink")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<a href=\"%s.html\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "heading")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "heading")
(PUNCT "(")
(LIT "<big><big><strong>Index of Modules</strong></big></big>")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#7799ee")
(PUNCT ")")
(NEWLINE)
(ID "names")
(PUNCT "=")
(PUNCT "[")
(ID "name")
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "builtin_module_names")
(KEYWORD if)
(ID "name")
(PUNCT "!=")
(LIT "__main__")
(PUNCT "]")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "multicolumn")
(PUNCT "(")
(ID "names")
(PUNCT ",")
(ID "bltinlink")
(PUNCT ")")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(PUNCT "[")
(ID "heading")
(PUNCT ",")
(LIT "<p>")
(PUNCT "+")
(ID "html")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(LIT "Built-in Modules")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#ee77aa")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(ID "seen")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "dir")
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "path")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "contents")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "html")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(ID "dir")
(PUNCT ",")
(ID "seen")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "contents")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "<p align=right><font color=\"#909090\" face=\"helvetica,")
(LIT "arial\"><strong>pydoc</strong> by Ka-Ping Yee")
(LIT "&lt;ping@lfw.org&gt;</font>")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "Index of Modules")
(PUNCT ",")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "html_search")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Search results page.")
(NEWLINE)
(ID "search_result")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "callback")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "modname")
(PUNCT ",")
(ID "desc")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "modname")
(PUNCT "[")
(PUNCT "-")
(LIT 9)
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(LIT ".__init__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modname")
(PUNCT "=")
(ID "modname")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 9)
(PUNCT "]")
(PUNCT "+")
(LIT " (package)")
(NEWLINE)
(DEDENT)
(ID "search_result")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "modname")
(PUNCT ",")
(ID "desc")
(KEYWORD and)
(LIT "- ")
(PUNCT "+")
(ID "desc")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD with)
(ID "warnings")
(PUNCT ".")
(ID "catch_warnings")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "warnings")
(PUNCT ".")
(ID "filterwarnings")
(PUNCT "(")
(LIT "ignore")
(PUNCT ")")
(NEWLINE)
(ID "ModuleScanner")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "run")
(PUNCT "(")
(ID "callback")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "bltinlink")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<a href=\"%s.html\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "results")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "heading")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "heading")
(PUNCT "(")
(LIT "<big><big><strong>Search Results</strong></big></big>")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#7799ee")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "desc")
(KEYWORD in)
(ID "search_result")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "results")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "bltinlink")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT "+")
(ID "desc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "contents")
(PUNCT "=")
(ID "heading")
(PUNCT "+")
(ID "html")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(LIT "key = %s")
(PUNCT "%")
(ID "key")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#ee77aa")
(PUNCT ",")
(LIT "<br>")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "results")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "Search Results")
(PUNCT ",")
(ID "contents")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "html_getfile")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Get and display a source file listing safely.")
(NEWLINE)
(ID "path")
(PUNCT "=")
(ID "urllib")
(PUNCT ".")
(ID "parse")
(PUNCT ".")
(ID "unquote")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(KEYWORD with)
(ID "tokenize")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(KEYWORD as)
(ID "fp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lines")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "escape")
(PUNCT "(")
(ID "fp")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "body")
(PUNCT "=")
(LIT "<pre>%s</pre>")
(PUNCT "%")
(ID "lines")
(NEWLINE)
(ID "heading")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "heading")
(PUNCT "(")
(LIT "<big><big><strong>File Listing</strong></big></big>")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#7799ee")
(PUNCT ")")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(ID "heading")
(PUNCT "+")
(ID "html")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(LIT "File: %s")
(PUNCT "%")
(ID "path")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#ee77aa")
(PUNCT ",")
(ID "body")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "getfile %s")
(PUNCT "%")
(ID "path")
(PUNCT ",")
(ID "contents")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "html_topics")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Index of topic texts available.")
(NEWLINE)
(KEYWORD def)
(ID "bltinlink")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<a href=\"topic?key=%s\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "heading")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "heading")
(PUNCT "(")
(LIT "<big><big><strong>INDEX</strong></big></big>")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#7799ee")
(PUNCT ")")
(NEWLINE)
(ID "names")
(PUNCT "=")
(ID "sorted")
(PUNCT "(")
(ID "Helper")
(PUNCT ".")
(ID "topics")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "multicolumn")
(PUNCT "(")
(ID "names")
(PUNCT ",")
(ID "bltinlink")
(PUNCT ")")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(ID "heading")
(PUNCT "+")
(ID "html")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(LIT "Topics")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#ee77aa")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "Topics")
(PUNCT ",")
(ID "contents")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "html_keywords")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Index of keywords.")
(NEWLINE)
(ID "heading")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "heading")
(PUNCT "(")
(LIT "<big><big><strong>INDEX</strong></big></big>")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#7799ee")
(PUNCT ")")
(NEWLINE)
(ID "names")
(PUNCT "=")
(ID "sorted")
(PUNCT "(")
(ID "Helper")
(PUNCT ".")
(ID "keywords")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "bltinlink")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<a href=\"topic?key=%s\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "contents")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "multicolumn")
(PUNCT "(")
(ID "names")
(PUNCT ",")
(ID "bltinlink")
(PUNCT ")")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(ID "heading")
(PUNCT "+")
(ID "html")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(LIT "Keywords")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#ee77aa")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "Keywords")
(PUNCT ",")
(ID "contents")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "html_topicpage")
(PUNCT "(")
(ID "topic")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Topic or keyword help page.")
(NEWLINE)
(ID "buf")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "StringIO")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "htmlhelp")
(PUNCT "=")
(ID "Helper")
(PUNCT "(")
(ID "buf")
(PUNCT ",")
(ID "buf")
(PUNCT ")")
(NEWLINE)
(ID "contents")
(PUNCT ",")
(ID "xrefs")
(PUNCT "=")
(ID "htmlhelp")
(PUNCT ".")
(ID "_gettopic")
(PUNCT "(")
(ID "topic")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "topic")
(KEYWORD in)
(ID "htmlhelp")
(PUNCT ".")
(ID "keywords")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(LIT "KEYWORD")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(LIT "TOPIC")
(NEWLINE)
(DEDENT)
(ID "heading")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "heading")
(PUNCT "(")
(LIT "<big><big><strong>%s</strong></big></big>")
(PUNCT "%")
(ID "title")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#7799ee")
(PUNCT ")")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(LIT "<pre>%s</pre>")
(PUNCT "%")
(ID "html")
(PUNCT ".")
(ID "markup")
(PUNCT "(")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(ID "topic")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#ee77aa")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "xrefs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "xrefs")
(PUNCT "=")
(ID "sorted")
(PUNCT "(")
(ID "xrefs")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "bltinlink")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<a href=\"topic?key=%s\">%s</a>")
(PUNCT "%")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "xrefs")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "multicolumn")
(PUNCT "(")
(ID "xrefs")
(PUNCT ",")
(ID "bltinlink")
(PUNCT ")")
(NEWLINE)
(ID "xrefs")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "section")
(PUNCT "(")
(LIT "Related help topics: ")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#ee77aa")
(PUNCT ",")
(ID "xrefs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(PUNCT "(")
(LIT "%s %s")
(PUNCT "%")
(PUNCT "(")
(ID "title")
(PUNCT ",")
(ID "topic")
(PUNCT ")")
(PUNCT ",")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "(")
(ID "heading")
(PUNCT ",")
(ID "contents")
(PUNCT ",")
(ID "xrefs")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "html_getobj")
(PUNCT "(")
(ID "url")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "locate")
(PUNCT "(")
(ID "url")
(PUNCT ",")
(ID "forceload")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "obj")
(KEYWORD is)
(KEYWORD None)
(KEYWORD and)
(ID "url")
(PUNCT "!=")
(LIT "None")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "could not find object")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "title")
(PUNCT "=")
(ID "describe")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(ID "content")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "document")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "url")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "title")
(PUNCT ",")
(ID "content")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "html_error")
(PUNCT "(")
(ID "url")
(PUNCT ",")
(ID "exc")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "heading")
(PUNCT "=")
(ID "html")
(PUNCT ".")
(ID "heading")
(PUNCT "(")
(LIT "<big><big><strong>Error</strong></big></big>")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#7799ee")
(PUNCT ")")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(LIT "<br>")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "html")
(PUNCT ".")
(ID "escape")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(KEYWORD for)
(ID "line")
(KEYWORD in)
(ID "format_exception_only")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(PUNCT ",")
(ID "exc")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "contents")
(PUNCT "=")
(ID "heading")
(PUNCT "+")
(ID "html")
(PUNCT ".")
(ID "bigsection")
(PUNCT "(")
(ID "url")
(PUNCT ",")
(LIT "#ffffff")
(PUNCT ",")
(LIT "#bb0000")
(PUNCT ",")
(ID "contents")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "Error - %s")
(PUNCT "%")
(ID "url")
(PUNCT ",")
(ID "contents")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_html_page")
(PUNCT "(")
(ID "url")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Generate an HTML page for url.")
(NEWLINE)
(ID "complete_url")
(PUNCT "=")
(ID "url")
(NEWLINE)
(KEYWORD if)
(ID "url")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT ".html")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "url")
(PUNCT "=")
(ID "url")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 5)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "url")
(KEYWORD in)
(PUNCT "(")
(LIT "")
(PUNCT ",")
(LIT "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT ",")
(ID "content")
(PUNCT "=")
(ID "html_index")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "url")
(PUNCT "==")
(LIT "topics")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT ",")
(ID "content")
(PUNCT "=")
(ID "html_topics")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "url")
(PUNCT "==")
(LIT "keywords")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT ",")
(ID "content")
(PUNCT "=")
(ID "html_keywords")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(LIT "=")
(KEYWORD in)
(ID "url")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "op")
(PUNCT ",")
(ID "_")
(PUNCT ",")
(ID "url")
(PUNCT "=")
(ID "url")
(PUNCT ".")
(ID "partition")
(PUNCT "(")
(LIT "=")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "op")
(PUNCT "==")
(LIT "search?key")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT ",")
(ID "content")
(PUNCT "=")
(ID "html_search")
(PUNCT "(")
(ID "url")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "op")
(PUNCT "==")
(LIT "getfile?key")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT ",")
(ID "content")
(PUNCT "=")
(ID "html_getfile")
(PUNCT "(")
(ID "url")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "op")
(PUNCT "==")
(LIT "topic?key")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT ",")
(ID "content")
(PUNCT "=")
(ID "html_topicpage")
(PUNCT "(")
(ID "url")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT ",")
(ID "content")
(PUNCT "=")
(ID "html_getobj")
(PUNCT "(")
(ID "url")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "op")
(PUNCT "==")
(LIT "get?key")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "url")
(KEYWORD in)
(PUNCT "(")
(LIT "")
(PUNCT ",")
(LIT "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT ",")
(ID "content")
(PUNCT "=")
(ID "html_index")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT ",")
(ID "content")
(PUNCT "=")
(ID "html_getobj")
(PUNCT "(")
(ID "url")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT ",")
(ID "content")
(PUNCT "=")
(ID "html_topicpage")
(PUNCT "(")
(ID "url")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "bad pydoc url")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT ",")
(ID "content")
(PUNCT "=")
(ID "html_getobj")
(PUNCT "(")
(ID "url")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT ",")
(ID "content")
(PUNCT "=")
(ID "html_error")
(PUNCT "(")
(ID "complete_url")
(PUNCT ",")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "html")
(PUNCT ".")
(ID "page")
(PUNCT "(")
(ID "title")
(PUNCT ",")
(ID "content")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "url")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "/")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "url")
(PUNCT "=")
(ID "url")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "content_type")
(PUNCT "==")
(LIT "text/css")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "path_here")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "dirname")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "realpath")
(PUNCT "(")
(ID "__file__")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "css_path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "path_here")
(PUNCT ",")
(ID "url")
(PUNCT ")")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "css_path")
(PUNCT ")")
(KEYWORD as)
(ID "fp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "fp")
(PUNCT ".")
(ID "readlines")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "content_type")
(PUNCT "==")
(LIT "text/html")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "get_html_page")
(PUNCT "(")
(ID "url")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "unknown content type %r for url %s")
(PUNCT "%")
(PUNCT "(")
(ID "content_type")
(PUNCT ",")
(ID "url")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "browse")
(PUNCT "(")
(ID "port")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(PUNCT "*")
(PUNCT ",")
(ID "open_browser")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Start the enhanced pydoc Web server and open a Web browser.\n\n    Use port '0' to start the server on an arbitrary port.\n    Set open_browser to False to suppress opening a browser.\n    ")
(NEWLINE)
(KEYWORD import)
(ID "webbrowser")
(NEWLINE)
(ID "serverthread")
(PUNCT "=")
(ID "_start_server")
(PUNCT "(")
(ID "_url_handler")
(PUNCT ",")
(ID "port")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "serverthread")
(PUNCT ".")
(ID "error")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "serverthread")
(PUNCT ".")
(ID "error")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "serverthread")
(PUNCT ".")
(ID "serving")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "server_help_msg")
(PUNCT "=")
(LIT "Server commands: [b]rowser, [q]uit")
(NEWLINE)
(KEYWORD if)
(ID "open_browser")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "webbrowser")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "serverthread")
(PUNCT ".")
(ID "url")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Server ready at")
(PUNCT ",")
(ID "serverthread")
(PUNCT ".")
(ID "url")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "server_help_msg")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "serverthread")
(PUNCT ".")
(ID "serving")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cmd")
(PUNCT "=")
(ID "input")
(PUNCT "(")
(LIT "server> ")
(PUNCT ")")
(NEWLINE)
(ID "cmd")
(PUNCT "=")
(ID "cmd")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "cmd")
(PUNCT "==")
(LIT "q")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "cmd")
(PUNCT "==")
(LIT "b")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "webbrowser")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "serverthread")
(PUNCT ".")
(ID "url")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "server_help_msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "KeyboardInterrupt")
(PUNCT ",")
(ID "EOFError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "serverthread")
(PUNCT ".")
(ID "serving")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "serverthread")
(PUNCT ".")
(ID "stop")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Server stopped")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "ispath")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "isinstance")
(PUNCT "(")
(ID "x")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(KEYWORD and)
(ID "x")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "sep")
(PUNCT ")")
(PUNCT ">=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "cli")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Command-line interface (looks at sys.argv to decide what to do).")
(NEWLINE)
(KEYWORD import)
(ID "getopt")
(NEWLINE)
(KEYWORD class)
(ID "BadUsage")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(KEYWORD pass)
(NEWLINE)
(KEYWORD if)
(LIT "")
(KEYWORD not)
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "path")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "scriptdir")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "dirname")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "scriptdir")
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "path")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "scriptdir")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "sys")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "opts")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(ID "getopt")
(PUNCT ".")
(ID "getopt")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT "bk:p:w")
(PUNCT ")")
(NEWLINE)
(ID "writing")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "start_server")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "open_browser")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "port")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD for)
(ID "opt")
(PUNCT ",")
(ID "val")
(KEYWORD in)
(ID "opts")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "opt")
(PUNCT "==")
(LIT "-b")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "start_server")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "open_browser")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "opt")
(PUNCT "==")
(LIT "-k")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "apropos")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "opt")
(PUNCT "==")
(LIT "-p")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "start_server")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "port")
(PUNCT "=")
(ID "val")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "opt")
(PUNCT "==")
(LIT "-w")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "writing")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "start_server")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "port")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "port")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(ID "browse")
(PUNCT "(")
(ID "port")
(PUNCT ",")
(ID "open_browser")
(PUNCT "=")
(ID "open_browser")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "args")
(PUNCT ":")
(KEYWORD raise)
(ID "BadUsage")
(NEWLINE)
(KEYWORD for)
(ID "arg")
(KEYWORD in)
(ID "args")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "ispath")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "file %r does not exist")
(PUNCT "%")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "ispath")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(KEYWORD and)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isfile")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "arg")
(PUNCT "=")
(ID "importfile")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "writing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "ispath")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(KEYWORD and)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isdir")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "writedocs")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "writedoc")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "help")
(PUNCT ".")
(ID "help")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "ErrorDuringImport")
(KEYWORD as)
(ID "value")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "getopt")
(PUNCT ".")
(ID "error")
(PUNCT ",")
(ID "BadUsage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cmd")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "splitext")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "basename")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "pydoc - the Python documentation tool\n\n{cmd} <name> ...\n    Show text documentation on something.  <name> may be the name of a\n    Python keyword, topic, function, module, or package, or a dotted\n    reference to a class or function within a module or module in a\n    package.  If <name> contains a '{sep}', it is used as the path to a\n    Python source file to document. If name is 'keywords', 'topics',\n    or 'modules', a listing of these things is displayed.\n\n{cmd} -k <keyword>\n    Search for a keyword in the synopsis lines of all available modules.\n\n{cmd} -p <port>\n    Start an HTTP server on the given port on the local machine.  Port\n    number 0 can be used to get an arbitrary unused port.\n\n{cmd} -b\n    Start an HTTP server on an arbitrary unused port and open a Web browser\n    to interactively browse documentation.  The -p option can be used with\n    the -b option to explicitly specify the server port.\n\n{cmd} -w <name> ...\n    Write out the HTML documentation for a module to a file in the current\n    directory.  If <name> contains a '{sep}', it is treated as a filename; if\n    it names a directory, documentation is written for all the contents.\n")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "cmd")
(PUNCT "=")
(ID "cmd")
(PUNCT ",")
(ID "sep")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "sep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cli")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
