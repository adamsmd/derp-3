(LIT "distutils.command.clean\n\nImplements the Distutils 'clean' command.")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "core")
(KEYWORD import)
(ID "Command")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "dir_util")
(KEYWORD import)
(ID "remove_tree")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(KEYWORD import)
(ID "log")
(NEWLINE)
(KEYWORD class)
(ID "clean")
(PUNCT "(")
(ID "Command")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "description")
(PUNCT "=")
(LIT "clean up temporary files from 'build' command")
(NEWLINE)
(ID "user_options")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(LIT "build-base=")
(PUNCT ",")
(LIT "b")
(PUNCT ",")
(LIT "base build directory (default: 'build.build-base')")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build-lib=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "build directory for all modules (default: 'build.build-lib')")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build-temp=")
(PUNCT ",")
(LIT "t")
(PUNCT ",")
(LIT "temporary build directory (default: 'build.build-temp')")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build-scripts=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "build directory for scripts (default: 'build.build-scripts')")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "bdist-base=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "temporary directory for built distributions")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "all")
(PUNCT ",")
(LIT "a")
(PUNCT ",")
(LIT "remove all build output, not just temporary by-products")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(ID "boolean_options")
(PUNCT "=")
(PUNCT "[")
(LIT "all")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "initialize_options")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "build_base")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "build_lib")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "build_temp")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "build_scripts")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "bdist_base")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "all")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "finalize_options")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "set_undefined_options")
(PUNCT "(")
(LIT "build")
(PUNCT ",")
(PUNCT "(")
(LIT "build_base")
(PUNCT ",")
(LIT "build_base")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build_lib")
(PUNCT ",")
(LIT "build_lib")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build_scripts")
(PUNCT ",")
(LIT "build_scripts")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build_temp")
(PUNCT ",")
(LIT "build_temp")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "set_undefined_options")
(PUNCT "(")
(LIT "bdist")
(PUNCT ",")
(PUNCT "(")
(LIT "bdist_base")
(PUNCT ",")
(LIT "bdist_base")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "run")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "build_temp")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "remove_tree")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "build_temp")
(PUNCT ",")
(ID "dry_run")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "dry_run")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "log")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "'%s' does not exist -- can't clean it")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "build_temp")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "all")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "directory")
(KEYWORD in)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "build_lib")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "bdist_base")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "build_scripts")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "directory")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "remove_tree")
(PUNCT "(")
(ID "directory")
(PUNCT ",")
(ID "dry_run")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "dry_run")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "log")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "'%s' does not exist -- can't clean it")
(PUNCT ",")
(ID "directory")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "dry_run")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "rmdir")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "build_base")
(PUNCT ")")
(NEWLINE)
(ID "log")
(PUNCT ".")
(ID "info")
(PUNCT "(")
(LIT "removing '%s'")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "build_base")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(ENDMARKER)
