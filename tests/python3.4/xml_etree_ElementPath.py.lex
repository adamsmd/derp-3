(KEYWORD import)
(ID "re")
(NEWLINE)
(ID "xpath_tokenizer_re")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "(")
(LIT "'[^']*'|\"[^\"]*\"|")
(LIT "::|")
(LIT "//?|")
(LIT "\\.\\.|")
(LIT "\\(\\)|")
(LIT "[/.*:\\[\\]\\(\\)@=])|")
(LIT "((?:\\{[^}]+\\})?[^/\\[\\]\\(\\)@=\\s]+)|")
(LIT "\\s+")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "xpath_tokenizer")
(PUNCT "(")
(ID "pattern")
(PUNCT ",")
(ID "namespaces")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "token")
(KEYWORD in)
(ID "xpath_tokenizer_re")
(PUNCT ".")
(ID "findall")
(PUNCT "(")
(ID "pattern")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tag")
(PUNCT "=")
(ID "token")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "tag")
(KEYWORD and)
(ID "tag")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "!=")
(LIT "{")
(KEYWORD and)
(LIT ":")
(KEYWORD in)
(ID "tag")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "prefix")
(PUNCT ",")
(ID "uri")
(PUNCT "=")
(ID "tag")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ":")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "namespaces")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(NEWLINE)
(DEDENT)
(KEYWORD yield)
(ID "token")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(LIT "{%s}%s")
(PUNCT "%")
(PUNCT "(")
(ID "namespaces")
(PUNCT "[")
(ID "prefix")
(PUNCT "]")
(PUNCT ",")
(ID "uri")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "SyntaxError")
(PUNCT "(")
(LIT "prefix %r not found in prefix map")
(PUNCT "%")
(ID "prefix")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "token")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_parent_map")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent_map")
(PUNCT "=")
(ID "context")
(PUNCT ".")
(ID "parent_map")
(NEWLINE)
(KEYWORD if)
(ID "parent_map")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "context")
(PUNCT ".")
(ID "parent_map")
(PUNCT "=")
(ID "parent_map")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "p")
(KEYWORD in)
(ID "context")
(PUNCT ".")
(ID "root")
(PUNCT ".")
(ID "iter")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "e")
(KEYWORD in)
(ID "p")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent_map")
(PUNCT "[")
(ID "e")
(PUNCT "]")
(PUNCT "=")
(ID "p")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "parent_map")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "prepare_child")
(PUNCT "(")
(ID "next")
(PUNCT ",")
(ID "token")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tag")
(PUNCT "=")
(ID "token")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "context")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "elem")
(KEYWORD in)
(ID "result")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "e")
(KEYWORD in)
(ID "elem")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "tag")
(PUNCT "==")
(ID "tag")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "e")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "select")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "prepare_star")
(PUNCT "(")
(ID "next")
(PUNCT ",")
(ID "token")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "context")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "elem")
(KEYWORD in)
(ID "result")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(KEYWORD from)
(ID "elem")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "select")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "prepare_self")
(PUNCT "(")
(ID "next")
(PUNCT ",")
(ID "token")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "context")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(KEYWORD from)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "select")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "prepare_descendant")
(PUNCT "(")
(ID "next")
(PUNCT ",")
(ID "token")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "token")
(PUNCT "=")
(ID "next")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "token")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(LIT "*")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tag")
(PUNCT "=")
(LIT "*")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "token")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tag")
(PUNCT "=")
(ID "token")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "SyntaxError")
(PUNCT "(")
(LIT "invalid descendant")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "context")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "elem")
(KEYWORD in)
(ID "result")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "e")
(KEYWORD in)
(ID "elem")
(PUNCT ".")
(ID "iter")
(PUNCT "(")
(ID "tag")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(KEYWORD is)
(KEYWORD not)
(ID "elem")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "e")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "select")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "prepare_parent")
(PUNCT "(")
(ID "next")
(PUNCT ",")
(ID "token")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "context")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent_map")
(PUNCT "=")
(ID "get_parent_map")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(NEWLINE)
(ID "result_map")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "elem")
(KEYWORD in)
(ID "result")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "elem")
(KEYWORD in)
(ID "parent_map")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent")
(PUNCT "=")
(ID "parent_map")
(PUNCT "[")
(ID "elem")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "parent")
(KEYWORD not)
(KEYWORD in)
(ID "result_map")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result_map")
(PUNCT "[")
(ID "parent")
(PUNCT "]")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD yield)
(ID "parent")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "select")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "prepare_predicate")
(PUNCT "(")
(ID "next")
(PUNCT ",")
(ID "token")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "signature")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "predicate")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "token")
(PUNCT "=")
(ID "next")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "token")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(LIT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "token")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD and)
(ID "token")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "[")
(PUNCT ":")
(LIT 1)
(PUNCT "]")
(KEYWORD in)
(LIT "'\"")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "token")
(PUNCT "=")
(LIT "'")
(PUNCT ",")
(ID "token")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "signature")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "token")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD or)
(LIT "-")
(PUNCT ")")
(NEWLINE)
(ID "predicate")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "token")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "signature")
(PUNCT "=")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "signature")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "signature")
(PUNCT "==")
(LIT "@-")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "predicate")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "context")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "elem")
(KEYWORD in)
(ID "result")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "elem")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "elem")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "select")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "signature")
(PUNCT "==")
(LIT "@-='")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "predicate")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "value")
(PUNCT "=")
(ID "predicate")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "context")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "elem")
(KEYWORD in)
(ID "result")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "elem")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT "==")
(ID "value")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "elem")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "select")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "signature")
(PUNCT "==")
(LIT "-")
(KEYWORD and)
(KEYWORD not)
(ID "re")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(LIT "\\-?\\d+$")
(PUNCT ",")
(ID "predicate")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tag")
(PUNCT "=")
(ID "predicate")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "context")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "elem")
(KEYWORD in)
(ID "result")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "elem")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(ID "tag")
(PUNCT ")")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "elem")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "select")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "signature")
(PUNCT "==")
(LIT "-='")
(KEYWORD and)
(KEYWORD not)
(ID "re")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(LIT "\\-?\\d+$")
(PUNCT ",")
(ID "predicate")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tag")
(PUNCT "=")
(ID "predicate")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "value")
(PUNCT "=")
(ID "predicate")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "context")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "elem")
(KEYWORD in)
(ID "result")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "e")
(KEYWORD in)
(ID "elem")
(PUNCT ".")
(ID "findall")
(PUNCT "(")
(ID "tag")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "e")
(PUNCT ".")
(ID "itertext")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT "==")
(ID "value")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "elem")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "select")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "signature")
(PUNCT "==")
(LIT "-")
(KEYWORD or)
(ID "signature")
(PUNCT "==")
(LIT "-()")
(KEYWORD or)
(ID "signature")
(PUNCT "==")
(LIT "-()-")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "signature")
(PUNCT "==")
(LIT "-")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "index")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "predicate")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "index")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "SyntaxError")
(PUNCT "(")
(LIT "XPath position >= 1 expected")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "predicate")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "!=")
(LIT "last")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "SyntaxError")
(PUNCT "(")
(LIT "unsupported function")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "signature")
(PUNCT "==")
(LIT "-()-")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "index")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "predicate")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "SyntaxError")
(PUNCT "(")
(LIT "unsupported expression")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "index")
(PUNCT ">")
(PUNCT "-")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "SyntaxError")
(PUNCT "(")
(LIT "XPath offset from last() must be negative")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "index")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "context")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent_map")
(PUNCT "=")
(ID "get_parent_map")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "elem")
(KEYWORD in)
(ID "result")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent")
(PUNCT "=")
(ID "parent_map")
(PUNCT "[")
(ID "elem")
(PUNCT "]")
(NEWLINE)
(ID "elems")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "parent")
(PUNCT ".")
(ID "findall")
(PUNCT "(")
(ID "elem")
(PUNCT ".")
(ID "tag")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "elems")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(KEYWORD is)
(ID "elem")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "elem")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "IndexError")
(PUNCT ",")
(ID "KeyError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "select")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "SyntaxError")
(PUNCT "(")
(LIT "invalid predicate")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "ops")
(PUNCT "=")
(PUNCT "{")
(LIT "")
(PUNCT ":")
(ID "prepare_child")
(PUNCT ",")
(LIT "*")
(PUNCT ":")
(ID "prepare_star")
(PUNCT ",")
(LIT ".")
(PUNCT ":")
(ID "prepare_self")
(PUNCT ",")
(LIT "..")
(PUNCT ":")
(ID "prepare_parent")
(PUNCT ",")
(LIT "//")
(PUNCT ":")
(ID "prepare_descendant")
(PUNCT ",")
(LIT "[")
(PUNCT ":")
(ID "prepare_predicate")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(ID "_cache")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD class)
(ID "_SelectorContext")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent_map")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "root")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "root")
(PUNCT "=")
(ID "root")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "iterfind")
(PUNCT "(")
(ID "elem")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "namespaces")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cache_key")
(PUNCT "=")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(KEYWORD None)
(KEYWORD if)
(ID "namespaces")
(KEYWORD is)
(KEYWORD None)
(KEYWORD else)
(ID "tuple")
(PUNCT "(")
(ID "sorted")
(PUNCT "(")
(ID "namespaces")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "path")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(LIT "/")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "path")
(PUNCT "=")
(ID "path")
(PUNCT "+")
(LIT "*")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "selector")
(PUNCT "=")
(ID "_cache")
(PUNCT "[")
(ID "cache_key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "_cache")
(PUNCT ")")
(PUNCT ">")
(LIT 100)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_cache")
(PUNCT ".")
(ID "clear")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "path")
(PUNCT "[")
(PUNCT ":")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "/")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "SyntaxError")
(PUNCT "(")
(LIT "cannot use absolute path on element")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "next")
(PUNCT "=")
(ID "iter")
(PUNCT "(")
(ID "xpath_tokenizer")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "namespaces")
(PUNCT ")")
(PUNCT ")")
(PUNCT ".")
(ID "__next__")
(NEWLINE)
(ID "token")
(PUNCT "=")
(ID "next")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "selector")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "selector")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "ops")
(PUNCT "[")
(ID "token")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "]")
(PUNCT "(")
(ID "next")
(PUNCT ",")
(ID "token")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "StopIteration")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "SyntaxError")
(PUNCT "(")
(LIT "invalid path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "token")
(PUNCT "=")
(ID "next")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "token")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(LIT "/")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "token")
(PUNCT "=")
(ID "next")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "StopIteration")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "_cache")
(PUNCT "[")
(ID "cache_key")
(PUNCT "]")
(PUNCT "=")
(ID "selector")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(PUNCT "[")
(ID "elem")
(PUNCT "]")
(NEWLINE)
(ID "context")
(PUNCT "=")
(ID "_SelectorContext")
(PUNCT "(")
(ID "elem")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "select")
(KEYWORD in)
(ID "selector")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "select")
(PUNCT "(")
(ID "context")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "find")
(PUNCT "(")
(ID "elem")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "namespaces")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "next")
(PUNCT "(")
(ID "iterfind")
(PUNCT "(")
(ID "elem")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "namespaces")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "StopIteration")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "findall")
(PUNCT "(")
(ID "elem")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "namespaces")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "iterfind")
(PUNCT "(")
(ID "elem")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "namespaces")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "findtext")
(PUNCT "(")
(ID "elem")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "namespaces")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "elem")
(PUNCT "=")
(ID "next")
(PUNCT "(")
(ID "iterfind")
(PUNCT "(")
(ID "elem")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "namespaces")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "elem")
(PUNCT ".")
(ID "text")
(KEYWORD or)
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "StopIteration")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "default")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
