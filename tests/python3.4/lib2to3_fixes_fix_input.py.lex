(LIT "Fixer that changes input(...) into eval(input(...)).")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(KEYWORD import)
(ID "fixer_base")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(ID "fixer_util")
(KEYWORD import)
(ID "Call")
(PUNCT ",")
(ID "Name")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(KEYWORD import)
(ID "patcomp")
(NEWLINE)
(ID "context")
(PUNCT "=")
(ID "patcomp")
(PUNCT ".")
(ID "compile_pattern")
(PUNCT "(")
(LIT "power< 'eval' trailer< '(' any ')' > >")
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "FixInput")
(PUNCT "(")
(ID "fixer_base")
(PUNCT ".")
(ID "BaseFix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "BM_compatible")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "PATTERN")
(PUNCT "=")
(LIT "\n              power< 'input' args=trailer< '(' [any] ')' > >\n              ")
(NEWLINE)
(KEYWORD def)
(ID "transform")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "context")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "node")
(PUNCT ".")
(ID "parent")
(PUNCT ".")
(ID "parent")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "new")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "new")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD return)
(ID "Call")
(PUNCT "(")
(ID "Name")
(PUNCT "(")
(LIT "eval")
(PUNCT ")")
(PUNCT ",")
(PUNCT "[")
(ID "new")
(PUNCT "]")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "prefix")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
