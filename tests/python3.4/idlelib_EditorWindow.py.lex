(KEYWORD import)
(ID "importlib")
(NEWLINE)
(KEYWORD import)
(ID "importlib")
(PUNCT ".")
(ID "abc")
(NEWLINE)
(KEYWORD import)
(ID "importlib")
(PUNCT ".")
(ID "util")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "platform")
(NEWLINE)
(KEYWORD import)
(ID "re")
(NEWLINE)
(KEYWORD import)
(ID "string")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD from)
(ID "tkinter")
(KEYWORD import)
(PUNCT "*")
(NEWLINE)
(KEYWORD import)
(ID "tkinter")
(PUNCT ".")
(ID "simpledialog")
(KEYWORD as)
(ID "tkSimpleDialog")
(NEWLINE)
(KEYWORD import)
(ID "tkinter")
(PUNCT ".")
(ID "messagebox")
(KEYWORD as)
(ID "tkMessageBox")
(NEWLINE)
(KEYWORD import)
(ID "traceback")
(NEWLINE)
(KEYWORD import)
(ID "webbrowser")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(PUNCT ".")
(ID "MultiCall")
(KEYWORD import)
(ID "MultiCallCreator")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "idlever")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "WindowList")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "SearchDialog")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "GrepDialog")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "ReplaceDialog")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "PyParse")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(PUNCT ".")
(ID "configHandler")
(KEYWORD import)
(ID "idleConf")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "aboutDialog")
(PUNCT ",")
(ID "textView")
(PUNCT ",")
(ID "configDialog")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "macosxSupport")
(NEWLINE)
(ID "TK_TABWIDTH_DEFAULT")
(PUNCT "=")
(LIT 8)
(NEWLINE)
(ID "_py_version")
(PUNCT "=")
(LIT " (%s)")
(PUNCT "%")
(ID "platform")
(PUNCT ".")
(ID "python_version")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "_sphinx_version")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format sys.version_info to produce the Sphinx version string used to install the chm docs")
(NEWLINE)
(ID "major")
(PUNCT ",")
(ID "minor")
(PUNCT ",")
(ID "micro")
(PUNCT ",")
(ID "level")
(PUNCT ",")
(ID "serial")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "version_info")
(NEWLINE)
(ID "release")
(PUNCT "=")
(LIT "%s%s")
(PUNCT "%")
(PUNCT "(")
(ID "major")
(PUNCT ",")
(ID "minor")
(PUNCT ")")
(NEWLINE)
(ID "release")
(PUNCT "+=")
(LIT "%s")
(PUNCT "%")
(PUNCT "(")
(ID "micro")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "level")
(PUNCT "==")
(LIT "candidate")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "release")
(PUNCT "+=")
(LIT "rc%s")
(PUNCT "%")
(PUNCT "(")
(ID "serial")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "level")
(PUNCT "!=")
(LIT "final")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "release")
(PUNCT "+=")
(LIT "%s%s")
(PUNCT "%")
(PUNCT "(")
(ID "level")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(ID "serial")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "release")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "HelpDialog")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "parent")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "dlg")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "display")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parent")
(PUNCT ",")
(ID "near")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT " Display the help dialog.\n\n            parent - parent widget for the help window\n\n            near - a Toplevel widget (e.g. EditorWindow or PyShell)\n                   to use as a reference for placing the help window\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "dlg")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "show_dialog")
(PUNCT "(")
(ID "parent")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "near")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "nearwindow")
(PUNCT "(")
(ID "near")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "show_dialog")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parent")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "parent")
(PUNCT "=")
(ID "parent")
(NEWLINE)
(ID "fn")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "abspath")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "dirname")
(PUNCT "(")
(ID "__file__")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "help.txt")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "dlg")
(PUNCT "=")
(ID "dlg")
(PUNCT "=")
(ID "textView")
(PUNCT ".")
(ID "view_file")
(PUNCT "(")
(ID "parent")
(PUNCT ",")
(LIT "Help")
(PUNCT ",")
(ID "fn")
(PUNCT ",")
(ID "modal")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID "dlg")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<Destroy>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "destroy")
(PUNCT ",")
(LIT "+")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "nearwindow")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "near")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dlg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "dlg")
(NEWLINE)
(ID "geom")
(PUNCT "=")
(PUNCT "(")
(ID "near")
(PUNCT ".")
(ID "winfo_rootx")
(PUNCT "(")
(PUNCT ")")
(PUNCT "+")
(LIT 10)
(PUNCT ",")
(ID "near")
(PUNCT ".")
(ID "winfo_rooty")
(PUNCT "(")
(PUNCT ")")
(PUNCT "+")
(LIT 10)
(PUNCT ")")
(NEWLINE)
(ID "dlg")
(PUNCT ".")
(ID "withdraw")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "dlg")
(PUNCT ".")
(ID "geometry")
(PUNCT "(")
(LIT "=+%d+%d")
(PUNCT "%")
(ID "geom")
(PUNCT ")")
(NEWLINE)
(ID "dlg")
(PUNCT ".")
(ID "deiconify")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "dlg")
(PUNCT ".")
(ID "lift")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "destroy")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "ev")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "dlg")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "parent")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "helpDialog")
(PUNCT "=")
(ID "HelpDialog")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "_help_dialog")
(PUNCT "(")
(ID "parent")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "helpDialog")
(PUNCT ".")
(ID "show_dialog")
(PUNCT "(")
(ID "parent")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "EditorWindow")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "idlelib")
(PUNCT ".")
(ID "Percolator")
(KEYWORD import)
(ID "Percolator")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(PUNCT ".")
(ID "ColorDelegator")
(KEYWORD import)
(ID "ColorDelegator")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(PUNCT ".")
(ID "UndoDelegator")
(KEYWORD import)
(ID "UndoDelegator")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(PUNCT ".")
(ID "IOBinding")
(KEYWORD import)
(ID "IOBinding")
(PUNCT ",")
(ID "filesystemencoding")
(PUNCT ",")
(ID "encoding")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "Bindings")
(NEWLINE)
(KEYWORD from)
(ID "tkinter")
(KEYWORD import)
(ID "Toplevel")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(PUNCT ".")
(ID "MultiStatusBar")
(KEYWORD import)
(ID "MultiStatusBar")
(NEWLINE)
(ID "help_url")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "flist")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "filename")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "key")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "root")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "EditorWindow")
(PUNCT ".")
(ID "help_url")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dochome")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "base_prefix")
(PUNCT ",")
(LIT "Doc")
(PUNCT ",")
(LIT "index.html")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT ".")
(ID "count")
(PUNCT "(")
(LIT "linux")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pyver")
(PUNCT "=")
(LIT "python-docs-")
(PUNCT "+")
(LIT "%s.%s.%s")
(PUNCT "%")
(ID "sys")
(PUNCT ".")
(ID "version_info")
(PUNCT "[")
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isdir")
(PUNCT "(")
(LIT "/var/www/html/python/")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dochome")
(PUNCT "=")
(LIT "/var/www/html/python/index.html")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "basepath")
(PUNCT "=")
(LIT "/usr/share/doc/")
(NEWLINE)
(ID "dochome")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "basepath")
(PUNCT ",")
(ID "pyver")
(PUNCT ",")
(LIT "Doc")
(PUNCT ",")
(LIT "index.html")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "[")
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(PUNCT "==")
(LIT "win")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "chmfile")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "base_prefix")
(PUNCT ",")
(LIT "Doc")
(PUNCT ",")
(LIT "Python%s.chm")
(PUNCT "%")
(ID "_sphinx_version")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isfile")
(PUNCT "(")
(ID "chmfile")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dochome")
(PUNCT "=")
(ID "chmfile")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "darwin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dochome")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "base_prefix")
(PUNCT ",")
(LIT "Resources/English.lproj/Documentation/index.html")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "dochome")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normpath")
(PUNCT "(")
(ID "dochome")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isfile")
(PUNCT "(")
(ID "dochome")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "EditorWindow")
(PUNCT ".")
(ID "help_url")
(PUNCT "=")
(ID "dochome")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "darwin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "EditorWindow")
(PUNCT ".")
(ID "help_url")
(PUNCT "=")
(LIT "file://")
(PUNCT "+")
(ID "EditorWindow")
(PUNCT ".")
(ID "help_url")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "EditorWindow")
(PUNCT ".")
(ID "help_url")
(PUNCT "=")
(LIT "https://docs.python.org/%d.%d/")
(PUNCT "%")
(ID "sys")
(PUNCT ".")
(ID "version_info")
(PUNCT "[")
(PUNCT ":")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "currentTheme")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "CurrentTheme")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT "=")
(ID "flist")
(NEWLINE)
(ID "root")
(PUNCT "=")
(ID "root")
(KEYWORD or)
(ID "flist")
(PUNCT ".")
(ID "root")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "root")
(PUNCT "=")
(ID "root")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "ps1")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "ps1")
(PUNCT "=")
(LIT ">>> ")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "menubar")
(PUNCT "=")
(ID "Menu")
(PUNCT "(")
(ID "root")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT "=")
(ID "top")
(PUNCT "=")
(ID "WindowList")
(PUNCT ".")
(ID "ListedToplevel")
(PUNCT "(")
(ID "root")
(PUNCT ",")
(ID "menu")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "menubar")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "flist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tkinter_vars")
(PUNCT "=")
(ID "flist")
(PUNCT ".")
(ID "vars")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "instance_dict")
(PUNCT "=")
(ID "flist")
(PUNCT ".")
(ID "inversedict")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tkinter_vars")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "instance_dict")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "recent_files_path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "idleConf")
(PUNCT ".")
(ID "GetUserCfgDir")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(LIT "recent-files.lst")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text_frame")
(PUNCT "=")
(ID "text_frame")
(PUNCT "=")
(ID "Frame")
(PUNCT "(")
(ID "top")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "vbar")
(PUNCT "=")
(ID "vbar")
(PUNCT "=")
(ID "Scrollbar")
(PUNCT "(")
(ID "text_frame")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(LIT "vbar")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "width")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "GetOption")
(PUNCT "(")
(LIT "main")
(PUNCT ",")
(LIT "EditorWindow")
(PUNCT ",")
(LIT "width")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(LIT "int")
(PUNCT ")")
(NEWLINE)
(ID "text_options")
(PUNCT "=")
(PUNCT "{")
(LIT "name")
(PUNCT ":")
(LIT "text")
(PUNCT ",")
(LIT "padx")
(PUNCT ":")
(LIT 5)
(PUNCT ",")
(LIT "wrap")
(PUNCT ":")
(LIT "none")
(PUNCT ",")
(LIT "width")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "width")
(PUNCT ",")
(LIT "height")
(PUNCT ":")
(ID "idleConf")
(PUNCT ".")
(ID "GetOption")
(PUNCT "(")
(LIT "main")
(PUNCT ",")
(LIT "EditorWindow")
(PUNCT ",")
(LIT "height")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(LIT "int")
(PUNCT ")")
(PUNCT "}")
(NEWLINE)
(KEYWORD if)
(ID "TkVersion")
(PUNCT ">=")
(LIT 8.5)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text_options")
(PUNCT "[")
(LIT "tabstyle")
(PUNCT "]")
(PUNCT "=")
(LIT "wordprocessor")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT "=")
(ID "text")
(PUNCT "=")
(ID "MultiCallCreator")
(PUNCT "(")
(ID "Text")
(PUNCT ")")
(PUNCT "(")
(ID "text_frame")
(PUNCT ",")
(PUNCT "**")
(ID "text_options")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "focused_widget")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "createmenubar")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "apply_bindings")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "protocol")
(PUNCT "(")
(LIT "WM_DELETE_WINDOW")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<close-window>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "close_event")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "macosxSupport")
(PUNCT ".")
(ID "isAquaTk")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<close-window>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "close_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<Control-Button-1>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "right_menu_event")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<3>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "right_menu_event")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<cut>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "cut")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<copy>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "copy")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<paste>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "paste")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<center-insert>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "center_insert_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<help>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "help_dialog")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<python-docs>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "python_docs")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<about-idle>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "about_dialog")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<open-config-dialog>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "config_dialog")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<open-config-extensions-dialog>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "config_extensions_dialog")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<open-module>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "open_module")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<do-nothing>>")
(PUNCT ",")
(KEYWORD lambda)
(ID "event")
(PUNCT ":")
(LIT "break")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<select-all>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "select_all")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<remove-selection>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "remove_selection")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<find>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "find_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<find-again>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "find_again_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<find-in-files>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "find_in_files_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<find-selection>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "find_selection_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<replace>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "replace_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<goto-line>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "goto_line_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<smart-backspace>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "smart_backspace_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<newline-and-indent>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "newline_and_indent_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<smart-indent>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "smart_indent_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<indent-region>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "indent_region_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<dedent-region>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "dedent_region_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<comment-region>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "comment_region_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<uncomment-region>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "uncomment_region_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<tabify-region>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "tabify_region_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<untabify-region>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "untabify_region_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<toggle-tabs>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "toggle_tabs_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<change-indentwidth>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "change_indentwidth_event")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<Left>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "move_at_edge_if_selection")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<Right>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "move_at_edge_if_selection")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<del-word-left>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "del_word_left")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<del-word-right>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "del_word_right")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<beginning-of-line>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "home_callback")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "flist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flist")
(PUNCT ".")
(ID "inversedict")
(PUNCT "[")
(ID "self")
(PUNCT "]")
(PUNCT "=")
(ID "key")
(NEWLINE)
(KEYWORD if)
(ID "key")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flist")
(PUNCT ".")
(ID "dict")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<open-new-window>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "new_callback")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<close-all-windows>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT ".")
(ID "close_all_callback")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<open-class-browser>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "open_class_browser")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<open-path-browser>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "open_path_browser")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<open-turtle-demo>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "open_turtle_demo")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "set_status_bar")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "vbar")
(PUNCT "[")
(LIT "command")
(PUNCT "]")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "yview")
(NEWLINE)
(ID "vbar")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(ID "side")
(PUNCT "=")
(ID "RIGHT")
(PUNCT ",")
(ID "fill")
(PUNCT "=")
(ID "Y")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT "[")
(LIT "yscrollcommand")
(PUNCT "]")
(PUNCT "=")
(ID "vbar")
(PUNCT ".")
(ID "set")
(NEWLINE)
(ID "fontWeight")
(PUNCT "=")
(LIT "normal")
(NEWLINE)
(KEYWORD if)
(ID "idleConf")
(PUNCT ".")
(ID "GetOption")
(PUNCT "(")
(LIT "main")
(PUNCT ",")
(LIT "EditorWindow")
(PUNCT ",")
(LIT "font-bold")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(LIT "bool")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fontWeight")
(PUNCT "=")
(LIT "bold")
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "config")
(PUNCT "(")
(ID "font")
(PUNCT "=")
(PUNCT "(")
(ID "idleConf")
(PUNCT ".")
(ID "GetOption")
(PUNCT "(")
(LIT "main")
(PUNCT ",")
(LIT "EditorWindow")
(PUNCT ",")
(LIT "font")
(PUNCT ")")
(PUNCT ",")
(ID "idleConf")
(PUNCT ".")
(ID "GetOption")
(PUNCT "(")
(LIT "main")
(PUNCT ",")
(LIT "EditorWindow")
(PUNCT ",")
(LIT "font-size")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(LIT "int")
(PUNCT ")")
(PUNCT ",")
(ID "fontWeight")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "text_frame")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(ID "side")
(PUNCT "=")
(ID "LEFT")
(PUNCT ",")
(ID "fill")
(PUNCT "=")
(ID "BOTH")
(PUNCT ",")
(ID "expand")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(ID "side")
(PUNCT "=")
(ID "TOP")
(PUNCT ",")
(ID "fill")
(PUNCT "=")
(ID "BOTH")
(PUNCT ",")
(ID "expand")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "focus_set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "usespaces")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "GetOption")
(PUNCT "(")
(LIT "main")
(PUNCT ",")
(LIT "Indent")
(PUNCT ",")
(LIT "use-spaces")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(LIT "bool")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "usetabs")
(PUNCT "=")
(KEYWORD not)
(ID "usespaces")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT "=")
(LIT 8)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "set_notabs_indentwidth")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "context_use_ps1")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "num_context_lines")
(PUNCT "=")
(LIT 50)
(PUNCT ",")
(LIT 500)
(PUNCT ",")
(LIT 5000000)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "per")
(PUNCT "=")
(ID "per")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "Percolator")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "undo")
(PUNCT "=")
(ID "undo")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "UndoDelegator")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "per")
(PUNCT ".")
(ID "insertfilter")
(PUNCT "(")
(ID "undo")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "undo_block_start")
(PUNCT "=")
(ID "undo")
(PUNCT ".")
(ID "undo_block_start")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "undo_block_stop")
(PUNCT "=")
(ID "undo")
(PUNCT ".")
(ID "undo_block_stop")
(NEWLINE)
(ID "undo")
(PUNCT ".")
(ID "set_saved_change_hook")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "saved_change_hook")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT "=")
(ID "io")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "IOBinding")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "io")
(PUNCT ".")
(ID "set_filename_change_hook")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "filename_change_hook")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "good_load")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "set_indentation_params")
(PUNCT "(")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "color")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "filename")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isdir")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "io")
(PUNCT ".")
(ID "loadfile")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "good_load")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "is_py_src")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "ispythonsource")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "set_indentation_params")
(PUNCT "(")
(ID "is_py_src")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "io")
(PUNCT ".")
(ID "set_filename")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "good_load")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "ResetColorizer")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "saved_change_hook")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "update_recent_files_list")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "load_extensions")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "menu")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "menudict")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "windows")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "menu")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "end")
(PUNCT "=")
(ID "menu")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "end")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "end")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "end")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "end")
(PUNCT ">=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "menu")
(PUNCT ".")
(ID "add_separator")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "end")
(PUNCT "=")
(ID "end")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "wmenu_end")
(PUNCT "=")
(ID "end")
(NEWLINE)
(ID "WindowList")
(PUNCT ".")
(ID "register_callback")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "postwindowsmenu")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "askyesno")
(PUNCT "=")
(ID "tkMessageBox")
(PUNCT ".")
(ID "askyesno")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "askinteger")
(PUNCT "=")
(ID "tkSimpleDialog")
(PUNCT ".")
(ID "askinteger")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "showerror")
(PUNCT "=")
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_highlight_workaround")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_highlight_workaround")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "win")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "event_add")
(PUNCT "(")
(LIT "<<Highlight-FocusOut>>")
(PUNCT ",")
(LIT "<FocusOut>")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "event_add")
(PUNCT "(")
(LIT "<<Highlight-FocusIn>>")
(PUNCT ",")
(LIT "<FocusIn>")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "highlight_fix")
(PUNCT "(")
(ID "focus")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sel_range")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "tag_ranges")
(PUNCT "(")
(LIT "sel")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sel_range")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "focus")
(PUNCT "==")
(LIT "out")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "HILITE_CONFIG")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "GetHighlight")
(PUNCT "(")
(ID "idleConf")
(PUNCT ".")
(ID "CurrentTheme")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(LIT "hilite")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "tag_config")
(PUNCT "(")
(LIT "sel_fix")
(PUNCT ",")
(ID "HILITE_CONFIG")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "tag_raise")
(PUNCT "(")
(LIT "sel_fix")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "tag_add")
(PUNCT "(")
(LIT "sel_fix")
(PUNCT ",")
(PUNCT "*")
(ID "sel_range")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "focus")
(PUNCT "==")
(LIT "in")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "tag_remove")
(PUNCT "(")
(LIT "sel_fix")
(PUNCT ",")
(LIT "1.0")
(PUNCT ",")
(LIT "end")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<Highlight-FocusOut>>")
(PUNCT ",")
(KEYWORD lambda)
(ID "ev")
(PUNCT ":")
(ID "highlight_fix")
(PUNCT "(")
(LIT "out")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<Highlight-FocusIn>>")
(PUNCT ",")
(KEYWORD lambda)
(ID "ev")
(PUNCT ":")
(ID "highlight_fix")
(PUNCT "(")
(LIT "in")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_filename_to_unicode")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "convert filename to unicode in order to display it in Tk")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(KEYWORD or)
(KEYWORD not)
(ID "filename")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "filename")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "filename")
(PUNCT ".")
(ID "decode")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "filesystemencoding")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "UnicodeDecodeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "filename")
(PUNCT ".")
(ID "decode")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "encoding")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "UnicodeDecodeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "filename")
(PUNCT ".")
(ID "decode")
(PUNCT "(")
(LIT "iso8859-1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "new_callback")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dirname")
(PUNCT ",")
(ID "basename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT ".")
(ID "defaultfilename")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT ".")
(ID "new")
(PUNCT "(")
(ID "dirname")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "home_callback")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "event")
(PUNCT ".")
(ID "state")
(PUNCT "&")
(LIT 4)
(PUNCT ")")
(PUNCT "!=")
(LIT 0)
(KEYWORD and)
(ID "event")
(PUNCT ".")
(ID "keysym")
(PUNCT "==")
(LIT "Home")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "iomark")
(PUNCT ")")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "compare")
(PUNCT "(")
(LIT "iomark")
(PUNCT ",")
(LIT "<=")
(PUNCT ",")
(LIT "insert lineend")
(PUNCT ")")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "compare")
(PUNCT "(")
(LIT "insert linestart")
(PUNCT ",")
(LIT "<=")
(PUNCT ",")
(LIT "iomark")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "insertpt")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "iomark")
(PUNCT ")")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "insert linestart")
(PUNCT ",")
(LIT "insert lineend")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "insertpt")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "line")
(PUNCT "[")
(ID "insertpt")
(PUNCT "]")
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(LIT " ")
(PUNCT ",")
(LIT "\t")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "insertpt")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "lineat")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "insert")
(PUNCT ")")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "insertpt")
(PUNCT "==")
(ID "lineat")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "insertpt")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(ID "dest")
(PUNCT "=")
(LIT "insert linestart+")
(PUNCT "+")
(ID "str")
(PUNCT "(")
(ID "insertpt")
(PUNCT ")")
(PUNCT "+")
(LIT "c")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID "event")
(PUNCT ".")
(ID "state")
(PUNCT "&")
(LIT 1)
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "tag_remove")
(PUNCT "(")
(LIT "sel")
(PUNCT ",")
(LIT "1.0")
(PUNCT ",")
(LIT "end")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "sel.first")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "mark_set")
(PUNCT "(")
(LIT "my_anchor")
(PUNCT ",")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "compare")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "sel.first")
(PUNCT ")")
(PUNCT ",")
(LIT "<")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "insert")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "mark_set")
(PUNCT "(")
(LIT "my_anchor")
(PUNCT ",")
(LIT "sel.first")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "mark_set")
(PUNCT "(")
(LIT "my_anchor")
(PUNCT ",")
(LIT "sel.last")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "first")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(ID "dest")
(PUNCT ")")
(NEWLINE)
(ID "last")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "my_anchor")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "compare")
(PUNCT "(")
(ID "first")
(PUNCT ",")
(LIT ">")
(PUNCT ",")
(ID "last")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "first")
(PUNCT ",")
(ID "last")
(PUNCT "=")
(ID "last")
(PUNCT ",")
(ID "first")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "tag_remove")
(PUNCT "(")
(LIT "sel")
(PUNCT ",")
(LIT "1.0")
(PUNCT ",")
(LIT "end")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "tag_add")
(PUNCT "(")
(LIT "sel")
(PUNCT ",")
(ID "first")
(PUNCT ",")
(ID "last")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "mark_set")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(ID "dest")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "see")
(PUNCT "(")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_status_bar")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "status_bar")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "MultiStatusBar")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "darwin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "status_bar")
(PUNCT ".")
(ID "set_label")
(PUNCT "(")
(LIT "_padding1")
(PUNCT ",")
(LIT "    ")
(PUNCT ",")
(ID "side")
(PUNCT "=")
(ID "RIGHT")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "status_bar")
(PUNCT ".")
(ID "set_label")
(PUNCT "(")
(LIT "column")
(PUNCT ",")
(LIT "Col: ?")
(PUNCT ",")
(ID "side")
(PUNCT "=")
(ID "RIGHT")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "status_bar")
(PUNCT ".")
(ID "set_label")
(PUNCT "(")
(LIT "line")
(PUNCT ",")
(LIT "Ln: ?")
(PUNCT ",")
(ID "side")
(PUNCT "=")
(ID "RIGHT")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "status_bar")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(ID "side")
(PUNCT "=")
(ID "BOTTOM")
(PUNCT ",")
(ID "fill")
(PUNCT "=")
(ID "X")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<set-line-and-column>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "set_line_and_column")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "event_add")
(PUNCT "(")
(LIT "<<set-line-and-column>>")
(PUNCT ",")
(LIT "<KeyRelease>")
(PUNCT ",")
(LIT "<ButtonRelease>")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "after_idle")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "set_line_and_column")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_line_and_column")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT ",")
(ID "column")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(ID "INSERT")
(PUNCT ")")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "status_bar")
(PUNCT ".")
(ID "set_label")
(PUNCT "(")
(LIT "column")
(PUNCT ",")
(LIT "Col: %s")
(PUNCT "%")
(ID "column")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "status_bar")
(PUNCT ".")
(ID "set_label")
(PUNCT "(")
(LIT "line")
(PUNCT ",")
(LIT "Ln: %s")
(PUNCT "%")
(ID "line")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "menu_specs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(LIT "file")
(PUNCT ",")
(LIT "_File")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "edit")
(PUNCT ",")
(LIT "_Edit")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "format")
(PUNCT ",")
(LIT "F_ormat")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "run")
(PUNCT ",")
(LIT "_Run")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "options")
(PUNCT ",")
(LIT "_Options")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "windows")
(PUNCT ",")
(LIT "_Window")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "help")
(PUNCT ",")
(LIT "_Help")
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "createmenubar")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mbar")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "menubar")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "menudict")
(PUNCT "=")
(ID "menudict")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "label")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "menu_specs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "underline")
(PUNCT ",")
(ID "label")
(PUNCT "=")
(ID "prepstr")
(PUNCT "(")
(ID "label")
(PUNCT ")")
(NEWLINE)
(ID "menudict")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "menu")
(PUNCT "=")
(ID "Menu")
(PUNCT "(")
(ID "mbar")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(ID "name")
(PUNCT ")")
(NEWLINE)
(ID "mbar")
(PUNCT ".")
(ID "add_cascade")
(PUNCT "(")
(ID "label")
(PUNCT "=")
(ID "label")
(PUNCT ",")
(ID "menu")
(PUNCT "=")
(ID "menu")
(PUNCT ",")
(ID "underline")
(PUNCT "=")
(ID "underline")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "macosxSupport")
(PUNCT ".")
(ID "isCarbonTk")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "menudict")
(PUNCT "[")
(LIT "application")
(PUNCT "]")
(PUNCT "=")
(ID "menu")
(PUNCT "=")
(ID "Menu")
(PUNCT "(")
(ID "mbar")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(LIT "apple")
(PUNCT ")")
(NEWLINE)
(ID "mbar")
(PUNCT ".")
(ID "add_cascade")
(PUNCT "(")
(ID "label")
(PUNCT "=")
(LIT "IDLE")
(PUNCT ",")
(ID "menu")
(PUNCT "=")
(ID "menu")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "fill_menus")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "recent_files_menu")
(PUNCT "=")
(ID "Menu")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "menubar")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "menudict")
(PUNCT "[")
(LIT "file")
(PUNCT "]")
(PUNCT ".")
(ID "insert_cascade")
(PUNCT "(")
(LIT 3)
(PUNCT ",")
(ID "label")
(PUNCT "=")
(LIT "Recent Files")
(PUNCT ",")
(ID "underline")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "menu")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "recent_files_menu")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "base_helpmenu_length")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "menudict")
(PUNCT "[")
(LIT "help")
(PUNCT "]")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(ID "END")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "reset_help_menu_entries")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "postwindowsmenu")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "menu")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "menudict")
(PUNCT "[")
(LIT "windows")
(PUNCT "]")
(NEWLINE)
(ID "end")
(PUNCT "=")
(ID "menu")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "end")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "end")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "end")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "end")
(PUNCT ">")
(ID "self")
(PUNCT ".")
(ID "wmenu_end")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "menu")
(PUNCT ".")
(ID "delete")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "wmenu_end")
(PUNCT "+")
(LIT 1)
(PUNCT ",")
(ID "end")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "WindowList")
(PUNCT ".")
(ID "add_windows_to_menu")
(PUNCT "(")
(ID "menu")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "rmenu")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "right_menu_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "mark_set")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(LIT "@%d,%d")
(PUNCT "%")
(PUNCT "(")
(ID "event")
(PUNCT ".")
(ID "x")
(PUNCT ",")
(ID "event")
(PUNCT ".")
(ID "y")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "rmenu")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "make_rmenu")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "rmenu")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "rmenu")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "event")
(PUNCT "=")
(ID "event")
(NEWLINE)
(ID "iswin")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "[")
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(PUNCT "==")
(LIT "win")
(NEWLINE)
(KEYWORD if)
(ID "iswin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "config")
(PUNCT "(")
(ID "cursor")
(PUNCT "=")
(LIT "arrow")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "item")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "rmenu_specs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "label")
(PUNCT ",")
(ID "eventname")
(PUNCT ",")
(ID "verify_state")
(PUNCT "=")
(ID "item")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "verify_state")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "state")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "verify_state")
(PUNCT ")")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "rmenu")
(PUNCT ".")
(ID "entryconfigure")
(PUNCT "(")
(ID "label")
(PUNCT ",")
(ID "state")
(PUNCT "=")
(ID "state")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "rmenu")
(PUNCT ".")
(ID "tk_popup")
(PUNCT "(")
(ID "event")
(PUNCT ".")
(ID "x_root")
(PUNCT ",")
(ID "event")
(PUNCT ".")
(ID "y_root")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "iswin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "config")
(PUNCT "(")
(ID "cursor")
(PUNCT "=")
(LIT "ibeam")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "rmenu_specs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(LIT "Close")
(PUNCT ",")
(LIT "<<close-window>>")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "make_rmenu")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rmenu")
(PUNCT "=")
(ID "Menu")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ",")
(ID "tearoff")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "item")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "rmenu_specs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "label")
(PUNCT ",")
(ID "eventname")
(PUNCT "=")
(ID "item")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(ID "item")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "label")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "command")
(PUNCT "(")
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ",")
(ID "eventname")
(PUNCT "=")
(ID "eventname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "event_generate")
(PUNCT "(")
(ID "eventname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "rmenu")
(PUNCT ".")
(ID "add_command")
(PUNCT "(")
(ID "label")
(PUNCT "=")
(ID "label")
(PUNCT ",")
(ID "command")
(PUNCT "=")
(ID "command")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rmenu")
(PUNCT ".")
(ID "add_separator")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "rmenu")
(PUNCT "=")
(ID "rmenu")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "rmenu_check_cut")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "rmenu_check_copy")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "rmenu_check_copy")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "indx")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "sel.first")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TclError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "disabled")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "normal")
(KEYWORD if)
(ID "indx")
(KEYWORD else)
(LIT "disabled")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "rmenu_check_paste")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tk::GetSelection")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ",")
(LIT "CLIPBOARD")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TclError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "disabled")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "normal")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "about_dialog")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "aboutDialog")
(PUNCT ".")
(ID "AboutDialog")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ",")
(LIT "About IDLE")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "config_dialog")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "configDialog")
(PUNCT ".")
(ID "ConfigDialog")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ",")
(LIT "Settings")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "config_extensions_dialog")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "configDialog")
(PUNCT ".")
(ID "ConfigExtensionsDialog")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "help_dialog")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "root")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "root")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "top")
(NEWLINE)
(DEDENT)
(ID "helpDialog")
(PUNCT ".")
(ID "display")
(PUNCT "(")
(ID "parent")
(PUNCT ",")
(ID "near")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "python_docs")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "[")
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(PUNCT "==")
(LIT "win")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "startfile")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "help_url")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "why")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(ID "title")
(PUNCT "=")
(LIT "Document Start Failure")
(PUNCT ",")
(ID "message")
(PUNCT "=")
(ID "str")
(PUNCT "(")
(ID "why")
(PUNCT ")")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "webbrowser")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "help_url")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "cut")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "event_generate")
(PUNCT "(")
(LIT "<<Cut>>")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "copy")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "tag_ranges")
(PUNCT "(")
(LIT "sel")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "event_generate")
(PUNCT "(")
(LIT "<<Copy>>")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "paste")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "event_generate")
(PUNCT "(")
(LIT "<<Paste>>")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "see")
(PUNCT "(")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "select_all")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "tag_add")
(PUNCT "(")
(LIT "sel")
(PUNCT ",")
(LIT "1.0")
(PUNCT ",")
(LIT "end-1c")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "mark_set")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(LIT "1.0")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "see")
(PUNCT "(")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "remove_selection")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "tag_remove")
(PUNCT "(")
(LIT "sel")
(PUNCT ",")
(LIT "1.0")
(PUNCT ",")
(LIT "end")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "see")
(PUNCT "(")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "move_at_edge_if_selection")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "edge_index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Cursor move begins at start or end of selection\n\n        When a left/right cursor key is pressed create and return to Tkinter a\n        function which causes a cursor move from the associated edge of the\n        selection.\n\n        ")
(NEWLINE)
(ID "self_text_index")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(NEWLINE)
(ID "self_text_mark_set")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "mark_set")
(NEWLINE)
(ID "edges_table")
(PUNCT "=")
(PUNCT "(")
(LIT "sel.first+1c")
(PUNCT ",")
(LIT "sel.last-1c")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "move_at_edge")
(PUNCT "(")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "event")
(PUNCT ".")
(ID "state")
(PUNCT "&")
(LIT 5)
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self_text_index")
(PUNCT "(")
(LIT "sel.first")
(PUNCT ")")
(NEWLINE)
(ID "self_text_mark_set")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(ID "edges_table")
(PUNCT "[")
(ID "edge_index")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TclError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "move_at_edge")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "del_word_left")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "event_generate")
(PUNCT "(")
(LIT "<Meta-Delete>")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "del_word_right")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "event_generate")
(PUNCT "(")
(LIT "<Meta-d>")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "find_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "SearchDialog")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "find_again_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "SearchDialog")
(PUNCT ".")
(ID "find_again")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "find_selection_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "SearchDialog")
(PUNCT ".")
(ID "find_selection")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "find_in_files_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "GrepDialog")
(PUNCT ".")
(ID "grep")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "replace_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ReplaceDialog")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "goto_line_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(ID "lineno")
(PUNCT "=")
(ID "tkSimpleDialog")
(PUNCT ".")
(ID "askinteger")
(PUNCT "(")
(LIT "Goto")
(PUNCT ",")
(LIT "Go to line number:")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "text")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "lineno")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "lineno")
(PUNCT "<=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "bell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "mark_set")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(LIT "%d.0")
(PUNCT "%")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "see")
(PUNCT "(")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "open_module")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "sel.first")
(PUNCT ",")
(LIT "sel.last")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TclError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "name")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "name")
(PUNCT "=")
(ID "tkSimpleDialog")
(PUNCT ".")
(ID "askstring")
(PUNCT "(")
(LIT "Module")
(PUNCT ",")
(LIT "Enter the name of a Python module\n")
(LIT "to search on sys.path and open:")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ",")
(ID "initialvalue")
(PUNCT "=")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "name")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "spec")
(PUNCT "=")
(ID "importlib")
(PUNCT ".")
(ID "util")
(PUNCT ".")
(ID "find_spec")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "ValueError")
(PUNCT ",")
(ID "ImportError")
(PUNCT ")")
(KEYWORD as)
(ID "msg")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(LIT "Import error")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "spec")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(LIT "Import error")
(PUNCT ",")
(LIT "module not found")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "spec")
(PUNCT ".")
(ID "loader")
(PUNCT ",")
(ID "importlib")
(PUNCT ".")
(ID "abc")
(PUNCT ".")
(ID "SourceLoader")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(LIT "Import error")
(PUNCT ",")
(LIT "not a source-based module")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "file_path")
(PUNCT "=")
(ID "spec")
(PUNCT ".")
(ID "loader")
(PUNCT ".")
(ID "get_filename")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(LIT "Import error")
(PUNCT ",")
(LIT "loader does not support get_filename")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "file_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT ".")
(ID "loadfile")
(PUNCT "(")
(ID "file_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "file_path")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "open_class_browser")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT ".")
(ID "filename")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT "==")
(LIT "PyShellEditorWindow")
(KEYWORD and)
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "open_module")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "filename")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(ID "base")
(PUNCT ",")
(ID "ext")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "splitext")
(PUNCT "(")
(ID "tail")
(PUNCT ")")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "ClassBrowser")
(NEWLINE)
(ID "ClassBrowser")
(PUNCT ".")
(ID "ClassBrowser")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT ",")
(ID "base")
(PUNCT ",")
(PUNCT "[")
(ID "head")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "open_path_browser")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "PathBrowser")
(NEWLINE)
(ID "PathBrowser")
(PUNCT ".")
(ID "PathBrowser")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "open_turtle_demo")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "subprocess")
(NEWLINE)
(ID "cmd")
(PUNCT "=")
(PUNCT "[")
(ID "sys")
(PUNCT ".")
(ID "executable")
(PUNCT ",")
(LIT "-c")
(PUNCT ",")
(LIT "from turtledemo.__main__ import main; main()")
(PUNCT "]")
(NEWLINE)
(ID "p")
(PUNCT "=")
(ID "subprocess")
(PUNCT ".")
(ID "Popen")
(PUNCT "(")
(ID "cmd")
(PUNCT ",")
(ID "shell")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "gotoline")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "lineno")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID "lineno")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "mark_set")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(LIT "%d.0")
(PUNCT "%")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "tag_remove")
(PUNCT "(")
(LIT "sel")
(PUNCT ",")
(LIT "1.0")
(PUNCT ",")
(LIT "end")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "tag_add")
(PUNCT "(")
(LIT "sel")
(PUNCT ",")
(LIT "insert")
(PUNCT ",")
(LIT "insert +1l")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "center")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "ispythonsource")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "filename")
(KEYWORD or)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isdir")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID "base")
(PUNCT ",")
(ID "ext")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "splitext")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "basename")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normcase")
(PUNCT "(")
(ID "ext")
(PUNCT ")")
(KEYWORD in)
(PUNCT "(")
(LIT ".py")
(PUNCT ",")
(LIT ".pyw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "1.0")
(PUNCT ",")
(LIT "1.0 lineend")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "line")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "#!")
(PUNCT ")")
(KEYWORD and)
(LIT "python")
(KEYWORD in)
(ID "line")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close_hook")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT ".")
(ID "unregister_maybe_terminate")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "set_close_hook")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "close_hook")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close_hook")
(PUNCT "=")
(ID "close_hook")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "filename_change_hook")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT ".")
(ID "filename_changed_edit")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "saved_change_hook")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "update_windowlist_registry")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "ResetColorizer")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_addcolorizer")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "color")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "ispythonsource")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT ".")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "color")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "ColorDelegator")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "color")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "per")
(PUNCT ".")
(ID "removefilter")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "undo")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "per")
(PUNCT ".")
(ID "insertfilter")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "color")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "per")
(PUNCT ".")
(ID "insertfilter")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "undo")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_rmcolorizer")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "color")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "color")
(PUNCT ".")
(ID "removecolors")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "per")
(PUNCT ".")
(ID "removefilter")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "color")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "color")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ResetColorizer")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Update the color theme")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_rmcolorizer")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_addcolorizer")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "theme")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "GetOption")
(PUNCT "(")
(LIT "main")
(PUNCT ",")
(LIT "Theme")
(PUNCT ",")
(LIT "name")
(PUNCT ")")
(NEWLINE)
(ID "normal_colors")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "GetHighlight")
(PUNCT "(")
(ID "theme")
(PUNCT ",")
(LIT "normal")
(PUNCT ")")
(NEWLINE)
(ID "cursor_color")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "GetHighlight")
(PUNCT "(")
(ID "theme")
(PUNCT ",")
(LIT "cursor")
(PUNCT ",")
(ID "fgBg")
(PUNCT "=")
(LIT "fg")
(PUNCT ")")
(NEWLINE)
(ID "select_colors")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "GetHighlight")
(PUNCT "(")
(ID "theme")
(PUNCT ",")
(LIT "hilite")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "config")
(PUNCT "(")
(ID "foreground")
(PUNCT "=")
(ID "normal_colors")
(PUNCT "[")
(LIT "foreground")
(PUNCT "]")
(PUNCT ",")
(ID "background")
(PUNCT "=")
(ID "normal_colors")
(PUNCT "[")
(LIT "background")
(PUNCT "]")
(PUNCT ",")
(ID "insertbackground")
(PUNCT "=")
(ID "cursor_color")
(PUNCT ",")
(ID "selectforeground")
(PUNCT "=")
(ID "select_colors")
(PUNCT "[")
(LIT "foreground")
(PUNCT "]")
(PUNCT ",")
(ID "selectbackground")
(PUNCT "=")
(ID "select_colors")
(PUNCT "[")
(LIT "background")
(PUNCT "]")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "IDENTCHARS")
(PUNCT "=")
(ID "string")
(PUNCT ".")
(ID "ascii_letters")
(PUNCT "+")
(ID "string")
(PUNCT ".")
(ID "digits")
(PUNCT "+")
(LIT "_")
(NEWLINE)
(KEYWORD def)
(ID "colorize_syntax_error")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(ID "pos")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "tag_add")
(PUNCT "(")
(LIT "ERROR")
(PUNCT ",")
(ID "pos")
(PUNCT ")")
(NEWLINE)
(ID "char")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "pos")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "char")
(KEYWORD and)
(ID "char")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "IDENTCHARS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "tag_add")
(PUNCT "(")
(LIT "ERROR")
(PUNCT ",")
(ID "pos")
(PUNCT "+")
(LIT " wordstart")
(PUNCT ",")
(ID "pos")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "\n")
(PUNCT "==")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "pos")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "mark_set")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(ID "pos")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "mark_set")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(ID "pos")
(PUNCT "+")
(LIT "+1c")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "see")
(PUNCT "(")
(ID "pos")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ResetFont")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Update the text widgets' font if it is changed")
(NEWLINE)
(ID "fontWeight")
(PUNCT "=")
(LIT "normal")
(NEWLINE)
(KEYWORD if)
(ID "idleConf")
(PUNCT ".")
(ID "GetOption")
(PUNCT "(")
(LIT "main")
(PUNCT ",")
(LIT "EditorWindow")
(PUNCT ",")
(LIT "font-bold")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(LIT "bool")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fontWeight")
(PUNCT "=")
(LIT "bold")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "config")
(PUNCT "(")
(ID "font")
(PUNCT "=")
(PUNCT "(")
(ID "idleConf")
(PUNCT ".")
(ID "GetOption")
(PUNCT "(")
(LIT "main")
(PUNCT ",")
(LIT "EditorWindow")
(PUNCT ",")
(LIT "font")
(PUNCT ")")
(PUNCT ",")
(ID "idleConf")
(PUNCT ".")
(ID "GetOption")
(PUNCT "(")
(LIT "main")
(PUNCT ",")
(LIT "EditorWindow")
(PUNCT ",")
(LIT "font-size")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(LIT "int")
(PUNCT ")")
(PUNCT ",")
(ID "fontWeight")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "RemoveKeybindings")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Remove the keybindings before they are changed.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "Bindings")
(PUNCT ".")
(ID "default_keydefs")
(PUNCT "=")
(ID "keydefs")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "GetCurrentKeySet")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "event")
(PUNCT ",")
(ID "keylist")
(KEYWORD in)
(ID "keydefs")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "event_delete")
(PUNCT "(")
(ID "event")
(PUNCT ",")
(PUNCT "*")
(ID "keylist")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "extensionName")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "get_standard_extension_names")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "xkeydefs")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "GetExtensionBindings")
(PUNCT "(")
(ID "extensionName")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "xkeydefs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "event")
(PUNCT ",")
(ID "keylist")
(KEYWORD in)
(ID "xkeydefs")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "event_delete")
(PUNCT "(")
(ID "event")
(PUNCT ",")
(PUNCT "*")
(ID "keylist")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "ApplyKeybindings")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Update the keybindings after they are changed")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "Bindings")
(PUNCT ".")
(ID "default_keydefs")
(PUNCT "=")
(ID "keydefs")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "GetCurrentKeySet")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "apply_bindings")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "extensionName")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "get_standard_extension_names")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "xkeydefs")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "GetExtensionBindings")
(PUNCT "(")
(ID "extensionName")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "xkeydefs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "apply_bindings")
(PUNCT "(")
(ID "xkeydefs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "menuEventDict")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "menu")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "Bindings")
(PUNCT ".")
(ID "menudefs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "menuEventDict")
(PUNCT "[")
(ID "menu")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "]")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "item")
(KEYWORD in)
(ID "menu")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "item")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "menuEventDict")
(PUNCT "[")
(ID "menu")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "]")
(PUNCT "[")
(ID "prepstr")
(PUNCT "(")
(ID "item")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "]")
(PUNCT "=")
(ID "item")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "menubarItem")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "menudict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "menu")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "menudict")
(PUNCT "[")
(ID "menubarItem")
(PUNCT "]")
(NEWLINE)
(ID "end")
(PUNCT "=")
(ID "menu")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(ID "END")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "end")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "end")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(KEYWORD for)
(ID "index")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "end")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "menu")
(PUNCT ".")
(ID "type")
(PUNCT "(")
(ID "index")
(PUNCT ")")
(PUNCT "==")
(LIT "command")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "accel")
(PUNCT "=")
(ID "menu")
(PUNCT ".")
(ID "entrycget")
(PUNCT "(")
(ID "index")
(PUNCT ",")
(LIT "accelerator")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "accel")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "itemName")
(PUNCT "=")
(ID "menu")
(PUNCT ".")
(ID "entrycget")
(PUNCT "(")
(ID "index")
(PUNCT ",")
(LIT "label")
(PUNCT ")")
(NEWLINE)
(ID "event")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD if)
(ID "menubarItem")
(KEYWORD in)
(ID "menuEventDict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "itemName")
(KEYWORD in)
(ID "menuEventDict")
(PUNCT "[")
(ID "menubarItem")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "event")
(PUNCT "=")
(ID "menuEventDict")
(PUNCT "[")
(ID "menubarItem")
(PUNCT "]")
(PUNCT "[")
(ID "itemName")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "event")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "accel")
(PUNCT "=")
(ID "get_accelerator")
(PUNCT "(")
(ID "keydefs")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(NEWLINE)
(ID "menu")
(PUNCT ".")
(ID "entryconfig")
(PUNCT "(")
(ID "index")
(PUNCT ",")
(ID "accelerator")
(PUNCT "=")
(ID "accel")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "set_notabs_indentwidth")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Update the indentwidth if changed and not using tabs in this window")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "usetabs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "GetOption")
(PUNCT "(")
(LIT "main")
(PUNCT ",")
(LIT "Indent")
(PUNCT ",")
(LIT "num-spaces")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(LIT "int")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "reset_help_menu_entries")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Update the additional help entries on the Help menu")
(NEWLINE)
(ID "help_list")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "GetAllExtraHelpSourcesList")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "helpmenu")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "menudict")
(PUNCT "[")
(LIT "help")
(PUNCT "]")
(NEWLINE)
(ID "helpmenu_length")
(PUNCT "=")
(ID "helpmenu")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(ID "END")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "helpmenu_length")
(PUNCT ">")
(ID "self")
(PUNCT ".")
(ID "base_helpmenu_length")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "helpmenu")
(PUNCT ".")
(ID "delete")
(PUNCT "(")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "base_helpmenu_length")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(ID "helpmenu_length")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "help_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "helpmenu")
(PUNCT ".")
(ID "add_separator")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "help_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cmd")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "__extra_help_callback")
(PUNCT "(")
(ID "entry")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "helpmenu")
(PUNCT ".")
(ID "add_command")
(PUNCT "(")
(ID "label")
(PUNCT "=")
(ID "entry")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(ID "command")
(PUNCT "=")
(ID "cmd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "menudict")
(PUNCT "[")
(LIT "help")
(PUNCT "]")
(PUNCT "=")
(ID "helpmenu")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__extra_help_callback")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "helpfile")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create a callback with the helpfile value frozen at definition time")
(NEWLINE)
(KEYWORD def)
(ID "display_extra_help")
(PUNCT "(")
(ID "helpfile")
(PUNCT "=")
(ID "helpfile")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "helpfile")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(PUNCT "(")
(LIT "www")
(PUNCT ",")
(LIT "http")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "helpfile")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normpath")
(PUNCT "(")
(ID "helpfile")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "[")
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(PUNCT "==")
(LIT "win")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "startfile")
(PUNCT "(")
(ID "helpfile")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "why")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(ID "title")
(PUNCT "=")
(LIT "Document Start Failure")
(PUNCT ",")
(ID "message")
(PUNCT "=")
(ID "str")
(PUNCT "(")
(ID "why")
(PUNCT ")")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "webbrowser")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "helpfile")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "display_extra_help")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "update_recent_files_list")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "new_file")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Load and update the recent files list and menus")
(NEWLINE)
(ID "rf_list")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "recent_files_path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "recent_files_path")
(PUNCT ",")
(LIT "r")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(LIT "utf_8")
(PUNCT ",")
(ID "errors")
(PUNCT "=")
(LIT "replace")
(PUNCT ")")
(KEYWORD as)
(ID "rf_list_file")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rf_list")
(PUNCT "=")
(ID "rf_list_file")
(PUNCT ".")
(ID "readlines")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "new_file")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_file")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "abspath")
(PUNCT "(")
(ID "new_file")
(PUNCT ")")
(PUNCT "+")
(LIT "\n")
(NEWLINE)
(KEYWORD if)
(ID "new_file")
(KEYWORD in)
(ID "rf_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rf_list")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "new_file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "rf_list")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "new_file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "bad_paths")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "path")
(KEYWORD in)
(ID "rf_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "\u0000")
(KEYWORD in)
(ID "path")
(KEYWORD or)
(KEYWORD not)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "path")
(PUNCT "[")
(LIT 0)
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bad_paths")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "rf_list")
(PUNCT "=")
(PUNCT "[")
(ID "path")
(KEYWORD for)
(ID "path")
(KEYWORD in)
(ID "rf_list")
(KEYWORD if)
(ID "path")
(KEYWORD not)
(KEYWORD in)
(ID "bad_paths")
(PUNCT "]")
(NEWLINE)
(ID "ulchars")
(PUNCT "=")
(LIT "1234567890ABCDEFGHIJK")
(NEWLINE)
(ID "rf_list")
(PUNCT "=")
(ID "rf_list")
(PUNCT "[")
(LIT 0)
(PUNCT ":")
(ID "len")
(PUNCT "(")
(ID "ulchars")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "recent_files_path")
(PUNCT ",")
(LIT "w")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(LIT "utf_8")
(PUNCT ",")
(ID "errors")
(PUNCT "=")
(LIT "replace")
(PUNCT ")")
(KEYWORD as)
(ID "rf_file")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rf_file")
(PUNCT ".")
(ID "writelines")
(PUNCT "(")
(ID "rf_list")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "err")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "root")
(PUNCT ",")
(LIT "recentfilelist_error_displayed")
(PUNCT ",")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "root")
(PUNCT ".")
(ID "recentfilelist_error_displayed")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(ID "title")
(PUNCT "=")
(LIT "IDLE Error")
(PUNCT ",")
(ID "message")
(PUNCT "=")
(LIT "Unable to update Recent Files list:\n%s")
(PUNCT "%")
(ID "str")
(PUNCT "(")
(ID "err")
(PUNCT ")")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "instance")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "instance_dict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "menu")
(PUNCT "=")
(ID "instance")
(PUNCT ".")
(ID "recent_files_menu")
(NEWLINE)
(ID "menu")
(PUNCT ".")
(ID "delete")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "END")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "file_name")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "rf_list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "file_name")
(PUNCT "=")
(ID "file_name")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "ufile_name")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_filename_to_unicode")
(PUNCT "(")
(ID "file_name")
(PUNCT ")")
(NEWLINE)
(ID "callback")
(PUNCT "=")
(ID "instance")
(PUNCT ".")
(ID "__recent_file_callback")
(PUNCT "(")
(ID "file_name")
(PUNCT ")")
(NEWLINE)
(ID "menu")
(PUNCT ".")
(ID "add_command")
(PUNCT "(")
(ID "label")
(PUNCT "=")
(ID "ulchars")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT "+")
(LIT " ")
(PUNCT "+")
(ID "ufile_name")
(PUNCT ",")
(ID "command")
(PUNCT "=")
(ID "callback")
(PUNCT ",")
(ID "underline")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__recent_file_callback")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "file_name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "open_recent_file")
(PUNCT "(")
(ID "fn_closure")
(PUNCT "=")
(ID "file_name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "editFile")
(PUNCT "=")
(ID "fn_closure")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "open_recent_file")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "saved_change_hook")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "short")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "short_title")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "long")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "long_title")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "short")
(KEYWORD and)
(ID "long")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(ID "short")
(PUNCT "+")
(LIT " - ")
(PUNCT "+")
(ID "long")
(PUNCT "+")
(ID "_py_version")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "short")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(ID "short")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "long")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(ID "long")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(LIT "Untitled")
(NEWLINE)
(DEDENT)
(ID "icon")
(PUNCT "=")
(ID "short")
(KEYWORD or)
(ID "long")
(KEYWORD or)
(ID "title")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "get_saved")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(LIT "*%s*")
(PUNCT "%")
(ID "title")
(NEWLINE)
(ID "icon")
(PUNCT "=")
(LIT "*%s")
(PUNCT "%")
(ID "icon")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "wm_title")
(PUNCT "(")
(ID "title")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "wm_iconname")
(PUNCT "(")
(ID "icon")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_saved")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "undo")
(PUNCT ".")
(ID "get_saved")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_saved")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "flag")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "undo")
(PUNCT ".")
(ID "set_saved")
(PUNCT "(")
(ID "flag")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "reset_undo")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "undo")
(PUNCT ".")
(ID "reset_undo")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "short_title")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT ".")
(ID "filename")
(NEWLINE)
(KEYWORD if)
(ID "filename")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "basename")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(LIT "Untitled")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_filename_to_unicode")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "long_title")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_filename_to_unicode")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT ".")
(ID "filename")
(KEYWORD or)
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "center_insert_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "center")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "center")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "mark")
(PUNCT "=")
(LIT "insert")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(ID "top")
(PUNCT ",")
(ID "bot")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getwindowlines")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "lineno")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getlineno")
(PUNCT "(")
(ID "mark")
(PUNCT ")")
(NEWLINE)
(ID "height")
(PUNCT "=")
(ID "bot")
(PUNCT "-")
(ID "top")
(NEWLINE)
(ID "newtop")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(ID "lineno")
(PUNCT "-")
(ID "height")
(PUNCT "//")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "yview")
(PUNCT "(")
(ID "float")
(PUNCT "(")
(ID "newtop")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getwindowlines")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(ID "top")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getlineno")
(PUNCT "(")
(LIT "@0,0")
(PUNCT ")")
(NEWLINE)
(ID "bot")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getlineno")
(PUNCT "(")
(LIT "@0,65535")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "top")
(PUNCT "==")
(ID "bot")
(KEYWORD and)
(ID "text")
(PUNCT ".")
(ID "winfo_height")
(PUNCT "(")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "height")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "text")
(PUNCT "[")
(LIT "height")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "bot")
(PUNCT "=")
(ID "top")
(PUNCT "+")
(ID "height")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "top")
(PUNCT ",")
(ID "bot")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getlineno")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "mark")
(PUNCT "=")
(LIT "insert")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(KEYWORD return)
(ID "int")
(PUNCT "(")
(ID "float")
(PUNCT "(")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(ID "mark")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_geometry")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return (width, height, x, y)")
(NEWLINE)
(ID "geom")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "wm_geometry")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "m")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(LIT "(\\d+)x(\\d+)\\+(-?\\d+)\\+(-?\\d+)")
(PUNCT ",")
(ID "geom")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "map")
(PUNCT "(")
(ID "int")
(PUNCT ",")
(ID "m")
(PUNCT ".")
(ID "groups")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "maybesave")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "get_saved")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "state")
(PUNCT "(")
(PUNCT ")")
(PUNCT "!=")
(LIT "normal")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "deiconify")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "lift")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT ".")
(ID "maybesave")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "reply")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "maybesave")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "str")
(PUNCT "(")
(ID "reply")
(PUNCT ")")
(PUNCT "!=")
(LIT "cancel")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "reply")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT ".")
(ID "filename")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "update_recent_files_list")
(PUNCT "(")
(ID "new_file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT ".")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "WindowList")
(PUNCT ".")
(ID "unregister_callback")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "postwindowsmenu")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "unload_extensions")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "io")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "undo")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "color")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "color")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "color")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tkinter_vars")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "per")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "per")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ".")
(ID "destroy")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "close_hook")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close_hook")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "load_extensions")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "extensions")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "load_standard_extensions")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "unload_extensions")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "ins")
(KEYWORD in)
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "extensions")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "ins")
(PUNCT ",")
(LIT "close")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ins")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "extensions")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "load_standard_extensions")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "get_standard_extension_names")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "load_extension")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Failed to load extension")
(PUNCT ",")
(ID "repr")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "traceback")
(PUNCT ".")
(ID "print_exc")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_standard_extension_names")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "idleConf")
(PUNCT ".")
(ID "GetExtensions")
(PUNCT "(")
(ID "editor_only")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "load_extension")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mod")
(PUNCT "=")
(ID "importlib")
(PUNCT ".")
(ID "import_module")
(PUNCT "(")
(LIT ".")
(PUNCT "+")
(ID "name")
(PUNCT ",")
(ID "package")
(PUNCT "=")
(ID "__package__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "ImportError")
(PUNCT ",")
(ID "TypeError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mod")
(PUNCT "=")
(ID "importlib")
(PUNCT ".")
(ID "import_module")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "\nFailed to import extension: ")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(ID "cls")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "mod")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(ID "keydefs")
(PUNCT "=")
(ID "idleConf")
(PUNCT ".")
(ID "GetExtensionBindings")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(LIT "menudefs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "fill_menus")
(PUNCT "(")
(ID "cls")
(PUNCT ".")
(ID "menudefs")
(PUNCT ",")
(ID "keydefs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "ins")
(PUNCT "=")
(ID "cls")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "extensions")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "ins")
(NEWLINE)
(KEYWORD if)
(ID "keydefs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "apply_bindings")
(PUNCT "(")
(ID "keydefs")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "vevent")
(KEYWORD in)
(ID "keydefs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "methodname")
(PUNCT "=")
(ID "vevent")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "-")
(PUNCT ",")
(LIT "_")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "methodname")
(PUNCT "[")
(PUNCT ":")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "<")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "methodname")
(PUNCT "=")
(ID "methodname")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(ID "methodname")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(LIT ">")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "methodname")
(PUNCT "=")
(ID "methodname")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "methodname")
(PUNCT "=")
(ID "methodname")
(PUNCT "+")
(LIT "_event")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "ins")
(PUNCT ",")
(ID "methodname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(ID "vevent")
(PUNCT ",")
(ID "getattr")
(PUNCT "(")
(ID "ins")
(PUNCT ",")
(ID "methodname")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "apply_bindings")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "keydefs")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "keydefs")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "keydefs")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "Bindings")
(PUNCT ".")
(ID "default_keydefs")
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "keydefs")
(PUNCT "=")
(ID "keydefs")
(NEWLINE)
(KEYWORD for)
(ID "event")
(PUNCT ",")
(ID "keylist")
(KEYWORD in)
(ID "keydefs")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "keylist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "event_add")
(PUNCT "(")
(ID "event")
(PUNCT ",")
(PUNCT "*")
(ID "keylist")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "fill_menus")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "menudefs")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "keydefs")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Add appropriate entries to the menus and submenus\n\n        Menus that are absent or None in self.menudict are ignored.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "menudefs")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "menudefs")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "Bindings")
(PUNCT ".")
(ID "menudefs")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "keydefs")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "keydefs")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "Bindings")
(PUNCT ".")
(ID "default_keydefs")
(NEWLINE)
(DEDENT)
(ID "menudict")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "menudict")
(NEWLINE)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(KEYWORD for)
(ID "mname")
(PUNCT ",")
(ID "entrylist")
(KEYWORD in)
(ID "menudefs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "menu")
(PUNCT "=")
(ID "menudict")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "mname")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "menu")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "entrylist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "entry")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "menu")
(PUNCT ".")
(ID "add_separator")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "label")
(PUNCT ",")
(ID "eventname")
(PUNCT "=")
(ID "entry")
(NEWLINE)
(ID "checkbutton")
(PUNCT "=")
(PUNCT "(")
(ID "label")
(PUNCT "[")
(PUNCT ":")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "!")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "checkbutton")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "label")
(PUNCT "=")
(ID "label")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "underline")
(PUNCT ",")
(ID "label")
(PUNCT "=")
(ID "prepstr")
(PUNCT "(")
(ID "label")
(PUNCT ")")
(NEWLINE)
(ID "accelerator")
(PUNCT "=")
(ID "get_accelerator")
(PUNCT "(")
(ID "keydefs")
(PUNCT ",")
(ID "eventname")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "command")
(PUNCT "(")
(ID "text")
(PUNCT "=")
(ID "text")
(PUNCT ",")
(ID "eventname")
(PUNCT "=")
(ID "eventname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "event_generate")
(PUNCT "(")
(ID "eventname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "checkbutton")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "var")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_var_obj")
(PUNCT "(")
(ID "eventname")
(PUNCT ",")
(ID "BooleanVar")
(PUNCT ")")
(NEWLINE)
(ID "menu")
(PUNCT ".")
(ID "add_checkbutton")
(PUNCT "(")
(ID "label")
(PUNCT "=")
(ID "label")
(PUNCT ",")
(ID "underline")
(PUNCT "=")
(ID "underline")
(PUNCT ",")
(ID "command")
(PUNCT "=")
(ID "command")
(PUNCT ",")
(ID "accelerator")
(PUNCT "=")
(ID "accelerator")
(PUNCT ",")
(ID "variable")
(PUNCT "=")
(ID "var")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "menu")
(PUNCT ".")
(ID "add_command")
(PUNCT "(")
(ID "label")
(PUNCT "=")
(ID "label")
(PUNCT ",")
(ID "underline")
(PUNCT "=")
(ID "underline")
(PUNCT ",")
(ID "command")
(PUNCT "=")
(ID "command")
(PUNCT ",")
(ID "accelerator")
(PUNCT "=")
(ID "accelerator")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "getvar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "var")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_var_obj")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "var")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "var")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "value")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "NameError")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "setvar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "vartype")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "var")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_var_obj")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "vartype")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "var")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "var")
(PUNCT ".")
(ID "set")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "NameError")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_var_obj")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "vartype")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "var")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tkinter_vars")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "var")
(KEYWORD and)
(ID "vartype")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tkinter_vars")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "var")
(PUNCT "=")
(ID "vartype")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "var")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_char_in_string")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text_index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "color")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "tag_prevrange")
(PUNCT "(")
(LIT "TODO")
(PUNCT ",")
(ID "text_index")
(PUNCT ")")
(KEYWORD or)
(LIT "STRING")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "tag_names")
(PUNCT "(")
(ID "text_index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_selection_indices")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "first")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "sel.first")
(PUNCT ")")
(NEWLINE)
(ID "last")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "sel.last")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "first")
(PUNCT ",")
(ID "last")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TclError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_tk_tabwidth")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "current")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT "[")
(LIT "tabs")
(PUNCT "]")
(KEYWORD or)
(ID "TK_TABWIDTH_DEFAULT")
(NEWLINE)
(KEYWORD return)
(ID "int")
(PUNCT "(")
(ID "current")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_tk_tabwidth")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "newtabwidth")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "get_tk_tabwidth")
(PUNCT "(")
(PUNCT ")")
(PUNCT "!=")
(ID "newtabwidth")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pixels")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "font")
(PUNCT ",")
(LIT "measure")
(PUNCT ",")
(ID "text")
(PUNCT "[")
(LIT "font")
(PUNCT "]")
(PUNCT ",")
(LIT "-displayof")
(PUNCT ",")
(ID "text")
(PUNCT ".")
(ID "master")
(PUNCT ",")
(LIT "n")
(PUNCT "*")
(ID "newtabwidth")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "configure")
(PUNCT "(")
(ID "tabs")
(PUNCT "=")
(ID "pixels")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "set_indentation_params")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "is_py_src")
(PUNCT ",")
(ID "guess")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "is_py_src")
(KEYWORD and)
(ID "guess")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "guess_indent")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT 2)
(PUNCT "<=")
(ID "i")
(PUNCT "<=")
(LIT 8)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(PUNCT "=")
(ID "i")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(PUNCT "!=")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "usetabs")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "set_tk_tabwidth")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "smart_backspace_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(ID "first")
(PUNCT ",")
(ID "last")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_selection_indices")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "first")
(KEYWORD and)
(ID "last")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "delete")
(PUNCT "(")
(ID "first")
(PUNCT ",")
(ID "last")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "mark_set")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(ID "first")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(ID "chars")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "insert linestart")
(PUNCT ",")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "chars")
(PUNCT "==")
(LIT "")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "text")
(PUNCT ".")
(ID "compare")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(LIT ">")
(PUNCT ",")
(LIT "1.0")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "delete")
(PUNCT "(")
(LIT "insert-1c")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "bell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "chars")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(KEYWORD not)
(KEYWORD in)
(LIT " \t")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "delete")
(PUNCT "(")
(LIT "insert-1c")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(ID "tabwidth")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(NEWLINE)
(ID "have")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "chars")
(PUNCT ".")
(ID "expandtabs")
(PUNCT "(")
(ID "tabwidth")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "have")
(PUNCT ">")
(LIT 0)
(NEWLINE)
(ID "want")
(PUNCT "=")
(PUNCT "(")
(PUNCT "(")
(ID "have")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT "//")
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(PUNCT ")")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "context_use_ps1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "last_line_of_prompt")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "ps1")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "last_line_of_prompt")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "ncharsdeleted")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "chars")
(PUNCT "==")
(ID "last_line_of_prompt")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "chars")
(PUNCT "=")
(ID "chars")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "ncharsdeleted")
(PUNCT "=")
(ID "ncharsdeleted")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "have")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "chars")
(PUNCT ".")
(ID "expandtabs")
(PUNCT "(")
(ID "tabwidth")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "have")
(PUNCT "<=")
(ID "want")
(KEYWORD or)
(ID "chars")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(KEYWORD not)
(KEYWORD in)
(LIT " \t")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "undo_block_start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "delete")
(PUNCT "(")
(LIT "insert-%dc")
(PUNCT "%")
(ID "ncharsdeleted")
(PUNCT ",")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "have")
(PUNCT "<")
(ID "want")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(LIT " ")
(PUNCT "*")
(PUNCT "(")
(ID "want")
(PUNCT "-")
(ID "have")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "undo_block_stop")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "smart_indent_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(ID "first")
(PUNCT ",")
(ID "last")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_selection_indices")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "undo_block_start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "first")
(KEYWORD and)
(ID "last")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "index2line")
(PUNCT "(")
(ID "first")
(PUNCT ")")
(PUNCT "!=")
(ID "index2line")
(PUNCT "(")
(ID "last")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "indent_region_event")
(PUNCT "(")
(ID "event")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "delete")
(PUNCT "(")
(ID "first")
(PUNCT ",")
(ID "last")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "mark_set")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(ID "first")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "prefix")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "insert linestart")
(PUNCT ",")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(ID "raw")
(PUNCT ",")
(ID "effective")
(PUNCT "=")
(ID "classifyws")
(PUNCT "(")
(ID "prefix")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "raw")
(PUNCT "==")
(ID "len")
(PUNCT "(")
(ID "prefix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "reindent_to")
(PUNCT "(")
(ID "effective")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "usetabs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pad")
(PUNCT "=")
(LIT "\t")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "effective")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "prefix")
(PUNCT ".")
(ID "expandtabs")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "n")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(NEWLINE)
(ID "pad")
(PUNCT "=")
(LIT " ")
(PUNCT "*")
(PUNCT "(")
(ID "n")
(PUNCT "-")
(ID "effective")
(PUNCT "%")
(ID "n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(ID "pad")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "see")
(PUNCT "(")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "undo_block_stop")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "newline_and_indent_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(ID "first")
(PUNCT ",")
(ID "last")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_selection_indices")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "undo_block_start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "first")
(KEYWORD and)
(ID "last")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "delete")
(PUNCT "(")
(ID "first")
(PUNCT ",")
(ID "last")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "mark_set")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(ID "first")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "line")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "insert linestart")
(PUNCT ",")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(ID "i")
(PUNCT ",")
(ID "n")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "i")
(PUNCT "<")
(ID "n")
(KEYWORD and)
(ID "line")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(KEYWORD in)
(LIT " \t")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "i")
(PUNCT "==")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT "insert linestart")
(PUNCT ",")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(ID "indent")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(NEWLINE)
(ID "i")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "last_line_of_prompt")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "ps1")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(ID "line")
(KEYWORD and)
(ID "line")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(KEYWORD in)
(LIT " \t")
(KEYWORD and)
(ID "line")
(PUNCT "!=")
(ID "last_line_of_prompt")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "i")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "delete")
(PUNCT "(")
(LIT "insert - %d chars")
(PUNCT "%")
(ID "i")
(PUNCT ",")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "insert")
(PUNCT ")")
(KEYWORD in)
(LIT " \t")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "delete")
(PUNCT "(")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "lno")
(PUNCT "=")
(ID "index2line")
(PUNCT "(")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "insert")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "y")
(PUNCT "=")
(ID "PyParse")
(PUNCT ".")
(ID "Parser")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "context_use_ps1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "context")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "num_context_lines")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "startat")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(ID "lno")
(PUNCT "-")
(ID "context")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "startatindex")
(PUNCT "=")
(ID "repr")
(PUNCT "(")
(ID "startat")
(PUNCT ")")
(PUNCT "+")
(LIT ".0")
(NEWLINE)
(ID "rawtext")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "startatindex")
(PUNCT ",")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(ID "y")
(PUNCT ".")
(ID "set_str")
(PUNCT "(")
(ID "rawtext")
(PUNCT ")")
(NEWLINE)
(ID "bod")
(PUNCT "=")
(ID "y")
(PUNCT ".")
(ID "find_good_parse_start")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "context_use_ps1")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_build_char_in_string_func")
(PUNCT "(")
(ID "startatindex")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "bod")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD or)
(ID "startat")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "y")
(PUNCT ".")
(ID "set_lo")
(PUNCT "(")
(ID "bod")
(KEYWORD or)
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "r")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "tag_prevrange")
(PUNCT "(")
(LIT "console")
(PUNCT ",")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "r")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "startatindex")
(PUNCT "=")
(ID "r")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "startatindex")
(PUNCT "=")
(LIT "1.0")
(NEWLINE)
(DEDENT)
(ID "rawtext")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "startatindex")
(PUNCT ",")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(ID "y")
(PUNCT ".")
(ID "set_str")
(PUNCT "(")
(ID "rawtext")
(PUNCT ")")
(NEWLINE)
(ID "y")
(PUNCT ".")
(ID "set_lo")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "c")
(PUNCT "=")
(ID "y")
(PUNCT ".")
(ID "get_continuation_type")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "c")
(PUNCT "!=")
(ID "PyParse")
(PUNCT ".")
(ID "C_NONE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "c")
(PUNCT "==")
(ID "PyParse")
(PUNCT ".")
(ID "C_STRING_FIRST_LINE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(PUNCT "==")
(ID "PyParse")
(PUNCT ".")
(ID "C_STRING_NEXT_LINES")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(ID "indent")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(PUNCT "==")
(ID "PyParse")
(PUNCT ".")
(ID "C_BRACKET")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "reindent_to")
(PUNCT "(")
(ID "y")
(PUNCT ".")
(ID "compute_bracket_indent")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(PUNCT "==")
(ID "PyParse")
(PUNCT ".")
(ID "C_BACKSLASH")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "y")
(PUNCT ".")
(ID "get_num_lines_in_stmt")
(PUNCT "(")
(PUNCT ")")
(PUNCT ">")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(ID "indent")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "reindent_to")
(PUNCT "(")
(ID "y")
(PUNCT ".")
(ID "compute_backslash_indent")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(LIT 0)
(PUNCT ",")
(LIT "bogus continuation type %r")
(PUNCT "%")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(ID "indent")
(PUNCT "=")
(ID "y")
(PUNCT ".")
(ID "get_base_indent_string")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(ID "indent")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "y")
(PUNCT ".")
(ID "is_block_opener")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "smart_indent_event")
(PUNCT "(")
(ID "event")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "indent")
(KEYWORD and)
(ID "y")
(PUNCT ".")
(ID "is_block_closer")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "smart_backspace_event")
(PUNCT "(")
(ID "event")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "see")
(PUNCT "(")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "undo_block_stop")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_build_char_in_string_func")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "startindex")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "inner")
(PUNCT "(")
(ID "offset")
(PUNCT ",")
(ID "_startindex")
(PUNCT "=")
(ID "startindex")
(PUNCT ",")
(ID "_icis")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "is_char_in_string")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_icis")
(PUNCT "(")
(ID "_startindex")
(PUNCT "+")
(LIT "+%dc")
(PUNCT "%")
(ID "offset")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "inner")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "indent_region_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ",")
(ID "chars")
(PUNCT ",")
(ID "lines")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_region")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "pos")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "lines")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "lines")
(PUNCT "[")
(ID "pos")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "raw")
(PUNCT ",")
(ID "effective")
(PUNCT "=")
(ID "classifyws")
(PUNCT "(")
(ID "line")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT ")")
(NEWLINE)
(ID "effective")
(PUNCT "=")
(ID "effective")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(NEWLINE)
(ID "lines")
(PUNCT "[")
(ID "pos")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_make_blanks")
(PUNCT "(")
(ID "effective")
(PUNCT ")")
(PUNCT "+")
(ID "line")
(PUNCT "[")
(ID "raw")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "set_region")
(PUNCT "(")
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ",")
(ID "chars")
(PUNCT ",")
(ID "lines")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dedent_region_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ",")
(ID "chars")
(PUNCT ",")
(ID "lines")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_region")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "pos")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "lines")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "lines")
(PUNCT "[")
(ID "pos")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "raw")
(PUNCT ",")
(ID "effective")
(PUNCT "=")
(ID "classifyws")
(PUNCT "(")
(ID "line")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT ")")
(NEWLINE)
(ID "effective")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(ID "effective")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "lines")
(PUNCT "[")
(ID "pos")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_make_blanks")
(PUNCT "(")
(ID "effective")
(PUNCT ")")
(PUNCT "+")
(ID "line")
(PUNCT "[")
(ID "raw")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "set_region")
(PUNCT "(")
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ",")
(ID "chars")
(PUNCT ",")
(ID "lines")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "comment_region_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ",")
(ID "chars")
(PUNCT ",")
(ID "lines")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_region")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "pos")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "lines")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "lines")
(PUNCT "[")
(ID "pos")
(PUNCT "]")
(NEWLINE)
(ID "lines")
(PUNCT "[")
(ID "pos")
(PUNCT "]")
(PUNCT "=")
(LIT "##")
(PUNCT "+")
(ID "line")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "set_region")
(PUNCT "(")
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ",")
(ID "chars")
(PUNCT ",")
(ID "lines")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "uncomment_region_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ",")
(ID "chars")
(PUNCT ",")
(ID "lines")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_region")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "pos")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "lines")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "lines")
(PUNCT "[")
(ID "pos")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "line")
(PUNCT "[")
(PUNCT ":")
(LIT 2)
(PUNCT "]")
(PUNCT "==")
(LIT "##")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "line")
(PUNCT "[")
(PUNCT ":")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "#")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "lines")
(PUNCT "[")
(ID "pos")
(PUNCT "]")
(PUNCT "=")
(ID "line")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "set_region")
(PUNCT "(")
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ",")
(ID "chars")
(PUNCT ",")
(ID "lines")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tabify_region_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ",")
(ID "chars")
(PUNCT ",")
(ID "lines")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_region")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "tabwidth")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_asktabwidth")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "tabwidth")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(KEYWORD return)
(NEWLINE)
(KEYWORD for)
(ID "pos")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "lines")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "lines")
(PUNCT "[")
(ID "pos")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "raw")
(PUNCT ",")
(ID "effective")
(PUNCT "=")
(ID "classifyws")
(PUNCT "(")
(ID "line")
(PUNCT ",")
(ID "tabwidth")
(PUNCT ")")
(NEWLINE)
(ID "ntabs")
(PUNCT ",")
(ID "nspaces")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "effective")
(PUNCT ",")
(ID "tabwidth")
(PUNCT ")")
(NEWLINE)
(ID "lines")
(PUNCT "[")
(ID "pos")
(PUNCT "]")
(PUNCT "=")
(LIT "\t")
(PUNCT "*")
(ID "ntabs")
(PUNCT "+")
(LIT " ")
(PUNCT "*")
(ID "nspaces")
(PUNCT "+")
(ID "line")
(PUNCT "[")
(ID "raw")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "set_region")
(PUNCT "(")
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ",")
(ID "chars")
(PUNCT ",")
(ID "lines")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "untabify_region_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ",")
(ID "chars")
(PUNCT ",")
(ID "lines")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_region")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "tabwidth")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_asktabwidth")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "tabwidth")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(KEYWORD return)
(NEWLINE)
(KEYWORD for)
(ID "pos")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "lines")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lines")
(PUNCT "[")
(ID "pos")
(PUNCT "]")
(PUNCT "=")
(ID "lines")
(PUNCT "[")
(ID "pos")
(PUNCT "]")
(PUNCT ".")
(ID "expandtabs")
(PUNCT "(")
(ID "tabwidth")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "set_region")
(PUNCT "(")
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ",")
(ID "chars")
(PUNCT ",")
(ID "lines")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "toggle_tabs_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "askyesno")
(PUNCT "(")
(LIT "Toggle tabs")
(PUNCT ",")
(LIT "Turn tabs ")
(PUNCT "+")
(PUNCT "(")
(LIT "on")
(PUNCT ",")
(LIT "off")
(PUNCT ")")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "usetabs")
(PUNCT "]")
(PUNCT "+")
(LIT "?\nIndent width ")
(PUNCT "+")
(PUNCT "(")
(LIT "will be")
(PUNCT ",")
(LIT "remains at")
(PUNCT ")")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "usetabs")
(PUNCT "]")
(PUNCT "+")
(LIT " 8.")
(PUNCT "+")
(LIT "\n Note: a tab is always 8 columns")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "usetabs")
(PUNCT "=")
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "usetabs")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(PUNCT "=")
(LIT 8)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "change_indentwidth_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "askinteger")
(PUNCT "(")
(LIT "Indent width")
(PUNCT ",")
(LIT "New indent width (2-16)\n(Always use 8 when using tabs)")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ",")
(ID "initialvalue")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(PUNCT ",")
(ID "minvalue")
(PUNCT "=")
(LIT 2)
(PUNCT ",")
(ID "maxvalue")
(PUNCT "=")
(LIT 16)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "new")
(KEYWORD and)
(ID "new")
(PUNCT "!=")
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(KEYWORD and)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "usetabs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(PUNCT "=")
(ID "new")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_region")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(ID "first")
(PUNCT ",")
(ID "last")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_selection_indices")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "first")
(KEYWORD and)
(ID "last")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "head")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(ID "first")
(PUNCT "+")
(LIT " linestart")
(PUNCT ")")
(NEWLINE)
(ID "tail")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(ID "last")
(PUNCT "+")
(LIT "-1c lineend +1c")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "head")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "insert linestart")
(PUNCT ")")
(NEWLINE)
(ID "tail")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "insert lineend +1c")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "chars")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ")")
(NEWLINE)
(ID "lines")
(PUNCT "=")
(ID "chars")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ",")
(ID "chars")
(PUNCT ",")
(ID "lines")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_region")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ",")
(ID "chars")
(PUNCT ",")
(ID "lines")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(ID "newchars")
(PUNCT "=")
(LIT "\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "lines")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "newchars")
(PUNCT "==")
(ID "chars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "bell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "tag_remove")
(PUNCT "(")
(LIT "sel")
(PUNCT ",")
(LIT "1.0")
(PUNCT ",")
(LIT "end")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "mark_set")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(ID "head")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "undo_block_start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "delete")
(PUNCT "(")
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(ID "head")
(PUNCT ",")
(ID "newchars")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "undo_block_stop")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "tag_add")
(PUNCT "(")
(LIT "sel")
(PUNCT ",")
(ID "head")
(PUNCT ",")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_make_blanks")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "usetabs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ntabs")
(PUNCT ",")
(ID "nspaces")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "n")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "\t")
(PUNCT "*")
(ID "ntabs")
(PUNCT "+")
(LIT " ")
(PUNCT "*")
(ID "nspaces")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT " ")
(PUNCT "*")
(ID "n")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "reindent_to")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "column")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(NEWLINE)
(ID "text")
(PUNCT ".")
(ID "undo_block_start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "text")
(PUNCT ".")
(ID "compare")
(PUNCT "(")
(LIT "insert linestart")
(PUNCT ",")
(LIT "!=")
(PUNCT ",")
(LIT "insert")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "delete")
(PUNCT "(")
(LIT "insert linestart")
(PUNCT ",")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "column")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_make_blanks")
(PUNCT "(")
(ID "column")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "undo_block_stop")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_asktabwidth")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "askinteger")
(PUNCT "(")
(LIT "Tab width")
(PUNCT ",")
(LIT "Columns per tab? (2-16)")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ",")
(ID "initialvalue")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(PUNCT ",")
(ID "minvalue")
(PUNCT "=")
(LIT 2)
(PUNCT ",")
(ID "maxvalue")
(PUNCT "=")
(LIT 16)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "guess_indent")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "opener")
(PUNCT ",")
(ID "indented")
(PUNCT "=")
(ID "IndentSearcher")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT ")")
(PUNCT ".")
(ID "run")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "opener")
(KEYWORD and)
(ID "indented")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "raw")
(PUNCT ",")
(ID "indentsmall")
(PUNCT "=")
(ID "classifyws")
(PUNCT "(")
(ID "opener")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT ")")
(NEWLINE)
(ID "raw")
(PUNCT ",")
(ID "indentlarge")
(PUNCT "=")
(ID "classifyws")
(PUNCT "(")
(ID "indented")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "indentsmall")
(PUNCT "=")
(ID "indentlarge")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "indentlarge")
(PUNCT "-")
(ID "indentsmall")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "index2line")
(PUNCT "(")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "int")
(PUNCT "(")
(ID "float")
(PUNCT "(")
(ID "index")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "classifyws")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "tabwidth")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "raw")
(PUNCT "=")
(ID "effective")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD for)
(ID "ch")
(KEYWORD in)
(ID "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "ch")
(PUNCT "==")
(LIT " ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "raw")
(PUNCT "=")
(ID "raw")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "effective")
(PUNCT "=")
(ID "effective")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "ch")
(PUNCT "==")
(LIT "\t")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "raw")
(PUNCT "=")
(ID "raw")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "effective")
(PUNCT "=")
(PUNCT "(")
(ID "effective")
(PUNCT "//")
(ID "tabwidth")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT "*")
(ID "tabwidth")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "raw")
(PUNCT ",")
(ID "effective")
(NEWLINE)
(DEDENT)
(KEYWORD import)
(ID "tokenize")
(NEWLINE)
(ID "_tokenize")
(PUNCT "=")
(ID "tokenize")
(NEWLINE)
(KEYWORD del)
(ID "tokenize")
(NEWLINE)
(KEYWORD class)
(ID "IndentSearcher")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(ID "tabwidth")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT "=")
(ID "text")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT "=")
(ID "tabwidth")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "finished")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "blkopenline")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "indentedline")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "readline")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "finished")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "")
(NEWLINE)
(DEDENT)
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "mark")
(PUNCT "=")
(ID "repr")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(PUNCT "+")
(LIT ".0")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "compare")
(PUNCT "(")
(ID "mark")
(PUNCT ",")
(LIT ">=")
(PUNCT ",")
(LIT "end")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "mark")
(PUNCT ",")
(ID "mark")
(PUNCT "+")
(LIT " lineend+1c")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tokeneater")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "type")
(PUNCT ",")
(ID "token")
(PUNCT ",")
(ID "start")
(PUNCT ",")
(ID "end")
(PUNCT ",")
(ID "line")
(PUNCT ",")
(ID "INDENT")
(PUNCT "=")
(ID "_tokenize")
(PUNCT ".")
(ID "INDENT")
(PUNCT ",")
(ID "NAME")
(PUNCT "=")
(ID "_tokenize")
(PUNCT ".")
(ID "NAME")
(PUNCT ",")
(ID "OPENERS")
(PUNCT "=")
(PUNCT "(")
(LIT "class")
(PUNCT ",")
(LIT "def")
(PUNCT ",")
(LIT "for")
(PUNCT ",")
(LIT "if")
(PUNCT ",")
(LIT "try")
(PUNCT ",")
(LIT "while")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "finished")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "type")
(PUNCT "==")
(ID "NAME")
(KEYWORD and)
(ID "token")
(KEYWORD in)
(ID "OPENERS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "blkopenline")
(PUNCT "=")
(ID "line")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "type")
(PUNCT "==")
(ID "INDENT")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "blkopenline")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "indentedline")
(PUNCT "=")
(ID "line")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "finished")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "run")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "save_tabsize")
(PUNCT "=")
(ID "_tokenize")
(PUNCT ".")
(ID "tabsize")
(NEWLINE)
(ID "_tokenize")
(PUNCT ".")
(ID "tabsize")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tokens")
(PUNCT "=")
(ID "_tokenize")
(PUNCT ".")
(ID "generate_tokens")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "readline")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "token")
(KEYWORD in)
(ID "tokens")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tokeneater")
(PUNCT "(")
(PUNCT "*")
(ID "token")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "_tokenize")
(PUNCT ".")
(ID "TokenError")
(PUNCT ",")
(ID "SyntaxError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_tokenize")
(PUNCT ".")
(ID "tabsize")
(PUNCT "=")
(ID "save_tabsize")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "blkopenline")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "indentedline")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "prepstr")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "s")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT "_")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "i")
(PUNCT ">=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "[")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(PUNCT "+")
(ID "s")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "i")
(PUNCT ",")
(ID "s")
(NEWLINE)
(DEDENT)
(ID "keynames")
(PUNCT "=")
(PUNCT "{")
(LIT "bracketleft")
(PUNCT ":")
(LIT "[")
(PUNCT ",")
(LIT "bracketright")
(PUNCT ":")
(LIT "]")
(PUNCT ",")
(LIT "slash")
(PUNCT ":")
(LIT "/")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "get_accelerator")
(PUNCT "(")
(ID "keydefs")
(PUNCT ",")
(ID "eventname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "keylist")
(PUNCT "=")
(ID "keydefs")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "eventname")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(KEYWORD not)
(ID "keylist")
(PUNCT ")")
(KEYWORD or)
(PUNCT "(")
(ID "macosxSupport")
(PUNCT ".")
(ID "isCocoaTk")
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID "eventname")
(KEYWORD in)
(PUNCT "{")
(LIT "<<open-module>>")
(PUNCT ",")
(LIT "<<goto-line>>")
(PUNCT ",")
(LIT "<<change-indentwidth>>")
(PUNCT "}")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "")
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(ID "keylist")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "-[a-z]\\b")
(PUNCT ",")
(KEYWORD lambda)
(ID "m")
(PUNCT ":")
(ID "m")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "upper")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "\\b\\w+\\b")
(PUNCT ",")
(KEYWORD lambda)
(ID "m")
(PUNCT ":")
(ID "keynames")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "m")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "m")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "Key-")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "Cancel")
(PUNCT ",")
(LIT "Ctrl-Break")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "Control-")
(PUNCT ",")
(LIT "Ctrl-")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "-")
(PUNCT ",")
(LIT "+")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "><")
(PUNCT ",")
(LIT " ")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "<")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT ">")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "fixwordbreaks")
(PUNCT "(")
(ID "root")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tk")
(PUNCT "=")
(ID "root")
(PUNCT ".")
(ID "tk")
(NEWLINE)
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tcl_wordBreakAfter")
(PUNCT ",")
(LIT "a b")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "set")
(PUNCT ",")
(LIT "tcl_wordchars")
(PUNCT ",")
(LIT "[a-zA-Z0-9_]")
(PUNCT ")")
(NEWLINE)
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "set")
(PUNCT ",")
(LIT "tcl_nonwordchars")
(PUNCT ",")
(LIT "[^a-zA-Z0-9_]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_editor_window")
(PUNCT "(")
(ID "parent")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "root")
(PUNCT "=")
(ID "parent")
(NEWLINE)
(ID "fixwordbreaks")
(PUNCT "(")
(ID "root")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "macosxSupport")
(PUNCT ".")
(ID "setupApp")
(PUNCT "(")
(ID "root")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "edit")
(PUNCT "=")
(ID "EditorWindow")
(PUNCT "(")
(ID "root")
(PUNCT "=")
(ID "root")
(PUNCT ",")
(ID "filename")
(PUNCT "=")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(ID "edit")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<close-all-windows>>")
(PUNCT ",")
(ID "edit")
(PUNCT ".")
(ID "close_event")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "idlelib")
(PUNCT ".")
(ID "idle_test")
(PUNCT ".")
(ID "htest")
(KEYWORD import)
(ID "run")
(NEWLINE)
(ID "run")
(PUNCT "(")
(ID "_help_dialog")
(PUNCT ",")
(ID "_editor_window")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
