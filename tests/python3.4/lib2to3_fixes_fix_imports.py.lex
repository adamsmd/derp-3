(LIT "Fix incompatible imports and module references.")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(KEYWORD import)
(ID "fixer_base")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(ID "fixer_util")
(KEYWORD import)
(ID "Name")
(PUNCT ",")
(ID "attr_chain")
(NEWLINE)
(ID "MAPPING")
(PUNCT "=")
(PUNCT "{")
(LIT "StringIO")
(PUNCT ":")
(LIT "io")
(PUNCT ",")
(LIT "cStringIO")
(PUNCT ":")
(LIT "io")
(PUNCT ",")
(LIT "cPickle")
(PUNCT ":")
(LIT "pickle")
(PUNCT ",")
(LIT "__builtin__")
(PUNCT ":")
(LIT "builtins")
(PUNCT ",")
(LIT "copy_reg")
(PUNCT ":")
(LIT "copyreg")
(PUNCT ",")
(LIT "Queue")
(PUNCT ":")
(LIT "queue")
(PUNCT ",")
(LIT "SocketServer")
(PUNCT ":")
(LIT "socketserver")
(PUNCT ",")
(LIT "ConfigParser")
(PUNCT ":")
(LIT "configparser")
(PUNCT ",")
(LIT "repr")
(PUNCT ":")
(LIT "reprlib")
(PUNCT ",")
(LIT "FileDialog")
(PUNCT ":")
(LIT "tkinter.filedialog")
(PUNCT ",")
(LIT "tkFileDialog")
(PUNCT ":")
(LIT "tkinter.filedialog")
(PUNCT ",")
(LIT "SimpleDialog")
(PUNCT ":")
(LIT "tkinter.simpledialog")
(PUNCT ",")
(LIT "tkSimpleDialog")
(PUNCT ":")
(LIT "tkinter.simpledialog")
(PUNCT ",")
(LIT "tkColorChooser")
(PUNCT ":")
(LIT "tkinter.colorchooser")
(PUNCT ",")
(LIT "tkCommonDialog")
(PUNCT ":")
(LIT "tkinter.commondialog")
(PUNCT ",")
(LIT "Dialog")
(PUNCT ":")
(LIT "tkinter.dialog")
(PUNCT ",")
(LIT "Tkdnd")
(PUNCT ":")
(LIT "tkinter.dnd")
(PUNCT ",")
(LIT "tkFont")
(PUNCT ":")
(LIT "tkinter.font")
(PUNCT ",")
(LIT "tkMessageBox")
(PUNCT ":")
(LIT "tkinter.messagebox")
(PUNCT ",")
(LIT "ScrolledText")
(PUNCT ":")
(LIT "tkinter.scrolledtext")
(PUNCT ",")
(LIT "Tkconstants")
(PUNCT ":")
(LIT "tkinter.constants")
(PUNCT ",")
(LIT "Tix")
(PUNCT ":")
(LIT "tkinter.tix")
(PUNCT ",")
(LIT "ttk")
(PUNCT ":")
(LIT "tkinter.ttk")
(PUNCT ",")
(LIT "Tkinter")
(PUNCT ":")
(LIT "tkinter")
(PUNCT ",")
(LIT "markupbase")
(PUNCT ":")
(LIT "_markupbase")
(PUNCT ",")
(LIT "_winreg")
(PUNCT ":")
(LIT "winreg")
(PUNCT ",")
(LIT "thread")
(PUNCT ":")
(LIT "_thread")
(PUNCT ",")
(LIT "dummy_thread")
(PUNCT ":")
(LIT "_dummy_thread")
(PUNCT ",")
(LIT "dbhash")
(PUNCT ":")
(LIT "dbm.bsd")
(PUNCT ",")
(LIT "dumbdbm")
(PUNCT ":")
(LIT "dbm.dumb")
(PUNCT ",")
(LIT "dbm")
(PUNCT ":")
(LIT "dbm.ndbm")
(PUNCT ",")
(LIT "gdbm")
(PUNCT ":")
(LIT "dbm.gnu")
(PUNCT ",")
(LIT "xmlrpclib")
(PUNCT ":")
(LIT "xmlrpc.client")
(PUNCT ",")
(LIT "DocXMLRPCServer")
(PUNCT ":")
(LIT "xmlrpc.server")
(PUNCT ",")
(LIT "SimpleXMLRPCServer")
(PUNCT ":")
(LIT "xmlrpc.server")
(PUNCT ",")
(LIT "httplib")
(PUNCT ":")
(LIT "http.client")
(PUNCT ",")
(LIT "htmlentitydefs")
(PUNCT ":")
(LIT "html.entities")
(PUNCT ",")
(LIT "HTMLParser")
(PUNCT ":")
(LIT "html.parser")
(PUNCT ",")
(LIT "Cookie")
(PUNCT ":")
(LIT "http.cookies")
(PUNCT ",")
(LIT "cookielib")
(PUNCT ":")
(LIT "http.cookiejar")
(PUNCT ",")
(LIT "BaseHTTPServer")
(PUNCT ":")
(LIT "http.server")
(PUNCT ",")
(LIT "SimpleHTTPServer")
(PUNCT ":")
(LIT "http.server")
(PUNCT ",")
(LIT "CGIHTTPServer")
(PUNCT ":")
(LIT "http.server")
(PUNCT ",")
(LIT "commands")
(PUNCT ":")
(LIT "subprocess")
(PUNCT ",")
(LIT "UserString")
(PUNCT ":")
(LIT "collections")
(PUNCT ",")
(LIT "UserList")
(PUNCT ":")
(LIT "collections")
(PUNCT ",")
(LIT "urlparse")
(PUNCT ":")
(LIT "urllib.parse")
(PUNCT ",")
(LIT "robotparser")
(PUNCT ":")
(LIT "urllib.robotparser")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "alternates")
(PUNCT "(")
(ID "members")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "(")
(PUNCT "+")
(LIT "|")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "map")
(PUNCT "(")
(ID "repr")
(PUNCT ",")
(ID "members")
(PUNCT ")")
(PUNCT ")")
(PUNCT "+")
(LIT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "build_pattern")
(PUNCT "(")
(ID "mapping")
(PUNCT "=")
(ID "MAPPING")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mod_list")
(PUNCT "=")
(LIT " | ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "[")
(LIT "module_name='%s'")
(PUNCT "%")
(ID "key")
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "mapping")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "bare_names")
(PUNCT "=")
(ID "alternates")
(PUNCT "(")
(ID "mapping")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD yield)
(LIT "name_import=import_name< 'import' ((%s) |\n               multiple_imports=dotted_as_names< any* (%s) any* >) >\n          ")
(PUNCT "%")
(PUNCT "(")
(ID "mod_list")
(PUNCT ",")
(ID "mod_list")
(PUNCT ")")
(NEWLINE)
(KEYWORD yield)
(LIT "import_from< 'from' (%s) 'import' ['(']\n              ( any | import_as_name< any 'as' any > |\n                import_as_names< any* >)  [')'] >\n          ")
(PUNCT "%")
(ID "mod_list")
(NEWLINE)
(KEYWORD yield)
(LIT "import_name< 'import' (dotted_as_name< (%s) 'as' any > |\n               multiple_imports=dotted_as_names<\n                 any* dotted_as_name< (%s) 'as' any > any* >) >\n          ")
(PUNCT "%")
(PUNCT "(")
(ID "mod_list")
(PUNCT ",")
(ID "mod_list")
(PUNCT ")")
(NEWLINE)
(KEYWORD yield)
(LIT "power< bare_with_attr=(%s) trailer<'.' any > any* >")
(PUNCT "%")
(ID "bare_names")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "FixImports")
(PUNCT "(")
(ID "fixer_base")
(PUNCT ".")
(ID "BaseFix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "BM_compatible")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "keep_line_order")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "mapping")
(PUNCT "=")
(ID "MAPPING")
(NEWLINE)
(ID "run_order")
(PUNCT "=")
(LIT 6)
(NEWLINE)
(KEYWORD def)
(ID "build_pattern")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "|")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "build_pattern")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "mapping")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "compile_pattern")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "PATTERN")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "build_pattern")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "super")
(PUNCT "(")
(ID "FixImports")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "compile_pattern")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "match")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "match")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(ID "FixImports")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "match")
(NEWLINE)
(ID "results")
(PUNCT "=")
(ID "match")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "results")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "bare_with_attr")
(KEYWORD not)
(KEYWORD in)
(ID "results")
(KEYWORD and)
(ID "any")
(PUNCT "(")
(ID "match")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(KEYWORD for)
(ID "obj")
(KEYWORD in)
(ID "attr_chain")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(LIT "parent")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "results")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "start_tree")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "tree")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "FixImports")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "start_tree")
(PUNCT "(")
(ID "tree")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "replace")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "transform")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "import_mod")
(PUNCT "=")
(ID "results")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "module_name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "import_mod")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mod_name")
(PUNCT "=")
(ID "import_mod")
(PUNCT ".")
(ID "value")
(NEWLINE)
(ID "new_name")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "mapping")
(PUNCT "[")
(ID "mod_name")
(PUNCT "]")
(NEWLINE)
(ID "import_mod")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "Name")
(PUNCT "(")
(ID "new_name")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(ID "import_mod")
(PUNCT ".")
(ID "prefix")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "name_import")
(KEYWORD in)
(ID "results")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "replace")
(PUNCT "[")
(ID "mod_name")
(PUNCT "]")
(PUNCT "=")
(ID "new_name")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "multiple_imports")
(KEYWORD in)
(ID "results")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "results")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "results")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "transform")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bare_name")
(PUNCT "=")
(ID "results")
(PUNCT "[")
(LIT "bare_with_attr")
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "new_name")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "replace")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "bare_name")
(PUNCT ".")
(ID "value")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "new_name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bare_name")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "Name")
(PUNCT "(")
(ID "new_name")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(ID "bare_name")
(PUNCT ".")
(ID "prefix")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(ENDMARKER)
