(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "Pool")
(PUNCT ",")
(LIT "ThreadPool")
(PUNCT "]")
(NEWLINE)
(KEYWORD import)
(ID "threading")
(NEWLINE)
(KEYWORD import)
(ID "queue")
(NEWLINE)
(KEYWORD import)
(ID "itertools")
(NEWLINE)
(KEYWORD import)
(ID "collections")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "time")
(NEWLINE)
(KEYWORD import)
(ID "traceback")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "util")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "get_context")
(PUNCT ",")
(ID "TimeoutError")
(NEWLINE)
(ID "RUN")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "CLOSE")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "TERMINATE")
(PUNCT "=")
(LIT 2)
(NEWLINE)
(ID "job_counter")
(PUNCT "=")
(ID "itertools")
(PUNCT ".")
(ID "count")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "mapstar")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "map")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "starmapstar")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "itertools")
(PUNCT ".")
(ID "starmap")
(PUNCT "(")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "RemoteTraceback")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "tb")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tb")
(PUNCT "=")
(ID "tb")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__str__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tb")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ExceptionWithTraceback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "exc")
(PUNCT ",")
(ID "tb")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tb")
(PUNCT "=")
(ID "traceback")
(PUNCT ".")
(ID "format_exception")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(PUNCT ",")
(ID "exc")
(PUNCT ",")
(ID "tb")
(PUNCT ")")
(NEWLINE)
(ID "tb")
(PUNCT "=")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "tb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "exc")
(PUNCT "=")
(ID "exc")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tb")
(PUNCT "=")
(LIT "\n\"\"\"\n%s\"\"\"")
(PUNCT "%")
(ID "tb")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__reduce__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "rebuild_exc")
(PUNCT ",")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "exc")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "tb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "rebuild_exc")
(PUNCT "(")
(ID "exc")
(PUNCT ",")
(ID "tb")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "exc")
(PUNCT ".")
(ID "__cause__")
(PUNCT "=")
(ID "RemoteTraceback")
(PUNCT "(")
(ID "tb")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "exc")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "MaybeEncodingError")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Wraps possible unpickleable errors, so they can be\n    safely sent through the socket.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "exc")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "exc")
(PUNCT "=")
(ID "repr")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "value")
(PUNCT "=")
(ID "repr")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(ID "super")
(PUNCT "(")
(ID "MaybeEncodingError")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "exc")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__str__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "Error sending result: '%s'. Reason: '%s'")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "value")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<MaybeEncodingError: %s>")
(PUNCT "%")
(ID "str")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "worker")
(PUNCT "(")
(ID "inqueue")
(PUNCT ",")
(ID "outqueue")
(PUNCT ",")
(ID "initializer")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "initargs")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "maxtasks")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "wrap_exception")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "maxtasks")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "maxtasks")
(PUNCT ")")
(PUNCT "==")
(ID "int")
(KEYWORD and)
(ID "maxtasks")
(PUNCT ">")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "put")
(PUNCT "=")
(ID "outqueue")
(PUNCT ".")
(ID "put")
(NEWLINE)
(ID "get")
(PUNCT "=")
(ID "inqueue")
(PUNCT ".")
(ID "get")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "inqueue")
(PUNCT ",")
(LIT "_writer")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "inqueue")
(PUNCT ".")
(ID "_writer")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "outqueue")
(PUNCT ".")
(ID "_reader")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "initializer")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "initializer")
(PUNCT "(")
(PUNCT "*")
(ID "initargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "completed")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD while)
(ID "maxtasks")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(PUNCT "(")
(ID "maxtasks")
(KEYWORD and)
(ID "completed")
(PUNCT "<")
(ID "maxtasks")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "task")
(PUNCT "=")
(ID "get")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "EOFError")
(PUNCT ",")
(ID "OSError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "worker got EOFError or OSError -- exiting")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "task")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "worker got sentinel -- exiting")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "job")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwds")
(PUNCT "=")
(ID "task")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(PUNCT "(")
(KEYWORD True)
(PUNCT ",")
(ID "func")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwds")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "wrap_exception")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "e")
(PUNCT "=")
(ID "ExceptionWithTraceback")
(PUNCT "(")
(ID "e")
(PUNCT ",")
(ID "e")
(PUNCT ".")
(ID "__traceback__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(PUNCT "(")
(KEYWORD False)
(PUNCT ",")
(ID "e")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "put")
(PUNCT "(")
(PUNCT "(")
(ID "job")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "wrapped")
(PUNCT "=")
(ID "MaybeEncodingError")
(PUNCT "(")
(ID "e")
(PUNCT ",")
(ID "result")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "Possible encoding error while sending result: %s")
(PUNCT "%")
(PUNCT "(")
(ID "wrapped")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "put")
(PUNCT "(")
(PUNCT "(")
(ID "job")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(PUNCT "(")
(KEYWORD False)
(PUNCT ",")
(ID "wrapped")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "completed")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "worker exiting after %d tasks")
(PUNCT "%")
(ID "completed")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "Pool")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Class which supports an async version of applying functions to arguments.\n    ")
(NEWLINE)
(ID "_wrap_exception")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID "Process")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwds")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_ctx")
(PUNCT ".")
(ID "Process")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwds")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "processes")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "initializer")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "initargs")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "maxtasksperchild")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "context")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_ctx")
(PUNCT "=")
(ID "context")
(KEYWORD or)
(ID "get_context")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_setup_queues")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_taskqueue")
(PUNCT "=")
(ID "queue")
(PUNCT ".")
(ID "Queue")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_state")
(PUNCT "=")
(ID "RUN")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_maxtasksperchild")
(PUNCT "=")
(ID "maxtasksperchild")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_initializer")
(PUNCT "=")
(ID "initializer")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_initargs")
(PUNCT "=")
(ID "initargs")
(NEWLINE)
(KEYWORD if)
(ID "processes")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "processes")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "cpu_count")
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "processes")
(PUNCT "<")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Number of processes must be at least 1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "initializer")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(KEYWORD not)
(ID "callable")
(PUNCT "(")
(ID "initializer")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "initializer must be a callable")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_processes")
(PUNCT "=")
(ID "processes")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pool")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_repopulate_pool")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_worker_handler")
(PUNCT "=")
(ID "threading")
(PUNCT ".")
(ID "Thread")
(PUNCT "(")
(ID "target")
(PUNCT "=")
(ID "Pool")
(PUNCT ".")
(ID "_handle_workers")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_worker_handler")
(PUNCT ".")
(ID "daemon")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_worker_handler")
(PUNCT ".")
(ID "_state")
(PUNCT "=")
(ID "RUN")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_worker_handler")
(PUNCT ".")
(ID "start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_task_handler")
(PUNCT "=")
(ID "threading")
(PUNCT ".")
(ID "Thread")
(PUNCT "(")
(ID "target")
(PUNCT "=")
(ID "Pool")
(PUNCT ".")
(ID "_handle_tasks")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_taskqueue")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_quick_put")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_outqueue")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_pool")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_task_handler")
(PUNCT ".")
(ID "daemon")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_task_handler")
(PUNCT ".")
(ID "_state")
(PUNCT "=")
(ID "RUN")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_task_handler")
(PUNCT ".")
(ID "start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_result_handler")
(PUNCT "=")
(ID "threading")
(PUNCT ".")
(ID "Thread")
(PUNCT "(")
(ID "target")
(PUNCT "=")
(ID "Pool")
(PUNCT ".")
(ID "_handle_results")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_outqueue")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_quick_get")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_result_handler")
(PUNCT ".")
(ID "daemon")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_result_handler")
(PUNCT ".")
(ID "_state")
(PUNCT "=")
(ID "RUN")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_result_handler")
(PUNCT ".")
(ID "start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_terminate")
(PUNCT "=")
(ID "util")
(PUNCT ".")
(ID "Finalize")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_terminate_pool")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_taskqueue")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_inqueue")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_outqueue")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_pool")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_worker_handler")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_task_handler")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_result_handler")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT ")")
(PUNCT ",")
(ID "exitpriority")
(PUNCT "=")
(LIT 15)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_join_exited_workers")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Cleanup after any worker processes which have exited due to reaching\n        their specified lifetime.  Returns True if any workers were cleaned up.\n        ")
(NEWLINE)
(ID "cleaned")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "reversed")
(PUNCT "(")
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_pool")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "worker")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_pool")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "worker")
(PUNCT ".")
(ID "exitcode")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "cleaning up worker %d")
(PUNCT "%")
(ID "i")
(PUNCT ")")
(NEWLINE)
(ID "worker")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "cleaned")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_pool")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "cleaned")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_repopulate_pool")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Bring the number of pool processes up to the specified number,\n        for use after reaping workers which have exited.\n        ")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_processes")
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_pool")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "w")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "Process")
(PUNCT "(")
(ID "target")
(PUNCT "=")
(ID "worker")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_inqueue")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_outqueue")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_initializer")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_initargs")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_maxtasksperchild")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_wrap_exception")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pool")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "w")
(PUNCT ")")
(NEWLINE)
(ID "w")
(PUNCT ".")
(ID "name")
(PUNCT "=")
(ID "w")
(PUNCT ".")
(ID "name")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "Process")
(PUNCT ",")
(LIT "PoolWorker")
(PUNCT ")")
(NEWLINE)
(ID "w")
(PUNCT ".")
(ID "daemon")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "w")
(PUNCT ".")
(ID "start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "added worker")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_maintain_pool")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Clean up any exited workers and start replacements for them.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_join_exited_workers")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_repopulate_pool")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_setup_queues")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_inqueue")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_ctx")
(PUNCT ".")
(ID "SimpleQueue")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_outqueue")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_ctx")
(PUNCT ".")
(ID "SimpleQueue")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_quick_put")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_inqueue")
(PUNCT ".")
(ID "_writer")
(PUNCT ".")
(ID "send")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_quick_get")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_outqueue")
(PUNCT ".")
(ID "_reader")
(PUNCT ".")
(ID "recv")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "apply")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "kwds")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Equivalent of `func(*args, **kwds)`.\n        ")
(NEWLINE)
(KEYWORD assert)
(ID "self")
(PUNCT ".")
(ID "_state")
(PUNCT "==")
(ID "RUN")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "apply_async")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwds")
(PUNCT ")")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "map")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(ID "iterable")
(PUNCT ",")
(ID "chunksize")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Apply `func` to each element in `iterable`, collecting the results\n        in a list that is returned.\n        ")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_map_async")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "iterable")
(PUNCT ",")
(ID "mapstar")
(PUNCT ",")
(ID "chunksize")
(PUNCT ")")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "starmap")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(ID "iterable")
(PUNCT ",")
(ID "chunksize")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Like `map()` method but the elements of the `iterable` are expected to\n        be iterables as well and will be unpacked as arguments. Hence\n        `func` and (a, b) becomes func(a, b).\n        ")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_map_async")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "iterable")
(PUNCT ",")
(ID "starmapstar")
(PUNCT ",")
(ID "chunksize")
(PUNCT ")")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "starmap_async")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(ID "iterable")
(PUNCT ",")
(ID "chunksize")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "callback")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "error_callback")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Asynchronous version of `starmap()` method.\n        ")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_map_async")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "iterable")
(PUNCT ",")
(ID "starmapstar")
(PUNCT ",")
(ID "chunksize")
(PUNCT ",")
(ID "callback")
(PUNCT ",")
(ID "error_callback")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "imap")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(ID "iterable")
(PUNCT ",")
(ID "chunksize")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Equivalent of `map()` -- can be MUCH slower than `Pool.map()`.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_state")
(PUNCT "!=")
(ID "RUN")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Pool not running")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "chunksize")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "IMapIterator")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_taskqueue")
(PUNCT ".")
(ID "put")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(ID "result")
(PUNCT ".")
(ID "_job")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(PUNCT "(")
(ID "x")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "x")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "iterable")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID "result")
(PUNCT ".")
(ID "_set_length")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "chunksize")
(PUNCT ">")
(LIT 1)
(NEWLINE)
(ID "task_batches")
(PUNCT "=")
(ID "Pool")
(PUNCT ".")
(ID "_get_tasks")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "iterable")
(PUNCT ",")
(ID "chunksize")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "IMapIterator")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_taskqueue")
(PUNCT ".")
(ID "put")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(ID "result")
(PUNCT ".")
(ID "_job")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "mapstar")
(PUNCT ",")
(PUNCT "(")
(ID "x")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "x")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "task_batches")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID "result")
(PUNCT ".")
(ID "_set_length")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID "item")
(KEYWORD for)
(ID "chunk")
(KEYWORD in)
(ID "result")
(KEYWORD for)
(ID "item")
(KEYWORD in)
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "imap_unordered")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(ID "iterable")
(PUNCT ",")
(ID "chunksize")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Like `imap()` method but ordering of results is arbitrary.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_state")
(PUNCT "!=")
(ID "RUN")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Pool not running")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "chunksize")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "IMapUnorderedIterator")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_taskqueue")
(PUNCT ".")
(ID "put")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(ID "result")
(PUNCT ".")
(ID "_job")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(PUNCT "(")
(ID "x")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "x")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "iterable")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID "result")
(PUNCT ".")
(ID "_set_length")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "chunksize")
(PUNCT ">")
(LIT 1)
(NEWLINE)
(ID "task_batches")
(PUNCT "=")
(ID "Pool")
(PUNCT ".")
(ID "_get_tasks")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "iterable")
(PUNCT ",")
(ID "chunksize")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "IMapUnorderedIterator")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_taskqueue")
(PUNCT ".")
(ID "put")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(ID "result")
(PUNCT ".")
(ID "_job")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "mapstar")
(PUNCT ",")
(PUNCT "(")
(ID "x")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "x")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "task_batches")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID "result")
(PUNCT ".")
(ID "_set_length")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID "item")
(KEYWORD for)
(ID "chunk")
(KEYWORD in)
(ID "result")
(KEYWORD for)
(ID "item")
(KEYWORD in)
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "apply_async")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "kwds")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(ID "callback")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "error_callback")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Asynchronous version of `apply()` method.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_state")
(PUNCT "!=")
(ID "RUN")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Pool not running")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "ApplyResult")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT ",")
(ID "callback")
(PUNCT ",")
(ID "error_callback")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_taskqueue")
(PUNCT ".")
(ID "put")
(PUNCT "(")
(PUNCT "(")
(PUNCT "[")
(PUNCT "(")
(ID "result")
(PUNCT ".")
(ID "_job")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID "func")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwds")
(PUNCT ")")
(PUNCT "]")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "map_async")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(ID "iterable")
(PUNCT ",")
(ID "chunksize")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "callback")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "error_callback")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Asynchronous version of `map()` method.\n        ")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_map_async")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "iterable")
(PUNCT ",")
(ID "mapstar")
(PUNCT ",")
(ID "chunksize")
(PUNCT ",")
(ID "callback")
(PUNCT ",")
(ID "error_callback")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_map_async")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(ID "iterable")
(PUNCT ",")
(ID "mapper")
(PUNCT ",")
(ID "chunksize")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "callback")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "error_callback")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Helper function to implement map, starmap and their async counterparts.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_state")
(PUNCT "!=")
(ID "RUN")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Pool not running")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "iterable")
(PUNCT ",")
(LIT "__len__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "iterable")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "iterable")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "chunksize")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "chunksize")
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "iterable")
(PUNCT ")")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_pool")
(PUNCT ")")
(PUNCT "*")
(LIT 4)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "extra")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "chunksize")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "iterable")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "chunksize")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(ID "task_batches")
(PUNCT "=")
(ID "Pool")
(PUNCT ".")
(ID "_get_tasks")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "iterable")
(PUNCT ",")
(ID "chunksize")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "MapResult")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT ",")
(ID "chunksize")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "iterable")
(PUNCT ")")
(PUNCT ",")
(ID "callback")
(PUNCT ",")
(ID "error_callback")
(PUNCT "=")
(ID "error_callback")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_taskqueue")
(PUNCT ".")
(ID "put")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(ID "result")
(PUNCT ".")
(ID "_job")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "mapper")
(PUNCT ",")
(PUNCT "(")
(ID "x")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "x")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "task_batches")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "staticmethod")
(NEWLINE)
(KEYWORD def)
(ID "_handle_workers")
(PUNCT "(")
(ID "pool")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "thread")
(PUNCT "=")
(ID "threading")
(PUNCT ".")
(ID "current_thread")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "thread")
(PUNCT ".")
(ID "_state")
(PUNCT "==")
(ID "RUN")
(KEYWORD or)
(PUNCT "(")
(ID "pool")
(PUNCT ".")
(ID "_cache")
(KEYWORD and)
(ID "thread")
(PUNCT ".")
(ID "_state")
(PUNCT "!=")
(ID "TERMINATE")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pool")
(PUNCT ".")
(ID "_maintain_pool")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "time")
(PUNCT ".")
(ID "sleep")
(PUNCT "(")
(LIT 0.1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "pool")
(PUNCT ".")
(ID "_taskqueue")
(PUNCT ".")
(ID "put")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "worker handler exiting")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "staticmethod")
(NEWLINE)
(KEYWORD def)
(ID "_handle_tasks")
(PUNCT "(")
(ID "taskqueue")
(PUNCT ",")
(ID "put")
(PUNCT ",")
(ID "outqueue")
(PUNCT ",")
(ID "pool")
(PUNCT ",")
(ID "cache")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "thread")
(PUNCT "=")
(ID "threading")
(PUNCT ".")
(ID "current_thread")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "taskseq")
(PUNCT ",")
(ID "set_length")
(KEYWORD in)
(ID "iter")
(PUNCT "(")
(ID "taskqueue")
(PUNCT ".")
(ID "get")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "task")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "taskseq")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "thread")
(PUNCT ".")
(ID "_state")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "task handler found thread._state != RUN")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "put")
(PUNCT "(")
(ID "task")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "job")
(PUNCT ",")
(ID "ind")
(PUNCT "=")
(ID "task")
(PUNCT "[")
(PUNCT ":")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cache")
(PUNCT "[")
(ID "job")
(PUNCT "]")
(PUNCT ".")
(ID "_set")
(PUNCT "(")
(ID "ind")
(PUNCT ",")
(PUNCT "(")
(KEYWORD False)
(PUNCT ",")
(ID "e")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "set_length")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "doing set_length()")
(PUNCT ")")
(NEWLINE)
(ID "set_length")
(PUNCT "(")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "task handler got sentinel")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "task handler sending sentinel to result handler")
(PUNCT ")")
(NEWLINE)
(ID "outqueue")
(PUNCT ".")
(ID "put")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "task handler sending sentinel to workers")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "p")
(KEYWORD in)
(ID "pool")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "put")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "task handler got OSError when sending sentinels")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "task handler exiting")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "staticmethod")
(NEWLINE)
(KEYWORD def)
(ID "_handle_results")
(PUNCT "(")
(ID "outqueue")
(PUNCT ",")
(ID "get")
(PUNCT ",")
(ID "cache")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "thread")
(PUNCT "=")
(ID "threading")
(PUNCT ".")
(ID "current_thread")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "task")
(PUNCT "=")
(ID "get")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "OSError")
(PUNCT ",")
(ID "EOFError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "result handler got EOFError/OSError -- exiting")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "thread")
(PUNCT ".")
(ID "_state")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "thread")
(PUNCT ".")
(ID "_state")
(PUNCT "==")
(ID "TERMINATE")
(NEWLINE)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "result handler found thread._state=TERMINATE")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "task")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "result handler got sentinel")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "job")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "obj")
(PUNCT "=")
(ID "task")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cache")
(PUNCT "[")
(ID "job")
(PUNCT "]")
(PUNCT ".")
(ID "_set")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD while)
(ID "cache")
(KEYWORD and)
(ID "thread")
(PUNCT ".")
(ID "_state")
(PUNCT "!=")
(ID "TERMINATE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "task")
(PUNCT "=")
(ID "get")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "OSError")
(PUNCT ",")
(ID "EOFError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "result handler got EOFError/OSError -- exiting")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "task")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "result handler ignoring extra sentinel")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "job")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "obj")
(PUNCT "=")
(ID "task")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cache")
(PUNCT "[")
(ID "job")
(PUNCT "]")
(PUNCT ".")
(ID "_set")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "outqueue")
(PUNCT ",")
(LIT "_reader")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "ensuring that outqueue is not full")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 10)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "outqueue")
(PUNCT ".")
(ID "_reader")
(PUNCT ".")
(ID "poll")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "get")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "OSError")
(PUNCT ",")
(ID "EOFError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "result handler exiting: len(cache)=%s, thread._state=%s")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "cache")
(PUNCT ")")
(PUNCT ",")
(ID "thread")
(PUNCT ".")
(ID "_state")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "staticmethod")
(NEWLINE)
(KEYWORD def)
(ID "_get_tasks")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "it")
(PUNCT ",")
(ID "size")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "it")
(PUNCT "=")
(ID "iter")
(PUNCT "(")
(ID "it")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "x")
(PUNCT "=")
(ID "tuple")
(PUNCT "(")
(ID "itertools")
(PUNCT ".")
(ID "islice")
(PUNCT "(")
(ID "it")
(PUNCT ",")
(ID "size")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "x")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD yield)
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__reduce__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "pool objects cannot be passed between processes or pickled")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "closing pool")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_state")
(PUNCT "==")
(ID "RUN")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_state")
(PUNCT "=")
(ID "CLOSE")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_worker_handler")
(PUNCT ".")
(ID "_state")
(PUNCT "=")
(ID "CLOSE")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "terminate")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "terminating pool")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_state")
(PUNCT "=")
(ID "TERMINATE")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_worker_handler")
(PUNCT ".")
(ID "_state")
(PUNCT "=")
(ID "TERMINATE")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_terminate")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "joining pool")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "self")
(PUNCT ".")
(ID "_state")
(KEYWORD in)
(PUNCT "(")
(ID "CLOSE")
(PUNCT ",")
(ID "TERMINATE")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_worker_handler")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_task_handler")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_result_handler")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "p")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_pool")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "p")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(PUNCT "@")
(ID "staticmethod")
(NEWLINE)
(KEYWORD def)
(ID "_help_stuff_finish")
(PUNCT "(")
(ID "inqueue")
(PUNCT ",")
(ID "task_handler")
(PUNCT ",")
(ID "size")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "removing tasks from inqueue until task handler finished")
(PUNCT ")")
(NEWLINE)
(ID "inqueue")
(PUNCT ".")
(ID "_rlock")
(PUNCT ".")
(ID "acquire")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "task_handler")
(PUNCT ".")
(ID "is_alive")
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(ID "inqueue")
(PUNCT ".")
(ID "_reader")
(PUNCT ".")
(ID "poll")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "inqueue")
(PUNCT ".")
(ID "_reader")
(PUNCT ".")
(ID "recv")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "time")
(PUNCT ".")
(ID "sleep")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "_terminate_pool")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "taskqueue")
(PUNCT ",")
(ID "inqueue")
(PUNCT ",")
(ID "outqueue")
(PUNCT ",")
(ID "pool")
(PUNCT ",")
(ID "worker_handler")
(PUNCT ",")
(ID "task_handler")
(PUNCT ",")
(ID "result_handler")
(PUNCT ",")
(ID "cache")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "finalizing pool")
(PUNCT ")")
(NEWLINE)
(ID "worker_handler")
(PUNCT ".")
(ID "_state")
(PUNCT "=")
(ID "TERMINATE")
(NEWLINE)
(ID "task_handler")
(PUNCT ".")
(ID "_state")
(PUNCT "=")
(ID "TERMINATE")
(NEWLINE)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "helping task handler/workers to finish")
(PUNCT ")")
(NEWLINE)
(ID "cls")
(PUNCT ".")
(ID "_help_stuff_finish")
(PUNCT "(")
(ID "inqueue")
(PUNCT ",")
(ID "task_handler")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "pool")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "result_handler")
(PUNCT ".")
(ID "is_alive")
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID "len")
(PUNCT "(")
(ID "cache")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(NEWLINE)
(ID "result_handler")
(PUNCT ".")
(ID "_state")
(PUNCT "=")
(ID "TERMINATE")
(NEWLINE)
(ID "outqueue")
(PUNCT ".")
(ID "put")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "joining worker handler")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "threading")
(PUNCT ".")
(ID "current_thread")
(PUNCT "(")
(PUNCT ")")
(KEYWORD is)
(KEYWORD not)
(ID "worker_handler")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "worker_handler")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "pool")
(KEYWORD and)
(ID "hasattr")
(PUNCT "(")
(ID "pool")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(LIT "terminate")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "terminating workers")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "p")
(KEYWORD in)
(ID "pool")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "p")
(PUNCT ".")
(ID "exitcode")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "p")
(PUNCT ".")
(ID "terminate")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "joining task handler")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "threading")
(PUNCT ".")
(ID "current_thread")
(PUNCT "(")
(PUNCT ")")
(KEYWORD is)
(KEYWORD not)
(ID "task_handler")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "task_handler")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "joining result handler")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "threading")
(PUNCT ".")
(ID "current_thread")
(PUNCT "(")
(PUNCT ")")
(KEYWORD is)
(KEYWORD not)
(ID "result_handler")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result_handler")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "pool")
(KEYWORD and)
(ID "hasattr")
(PUNCT "(")
(ID "pool")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(LIT "terminate")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "joining pool workers")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "p")
(KEYWORD in)
(ID "pool")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "p")
(PUNCT ".")
(ID "is_alive")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "cleaning up worker %d")
(PUNCT "%")
(ID "p")
(PUNCT ".")
(ID "pid")
(PUNCT ")")
(NEWLINE)
(ID "p")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__enter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__exit__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "exc_type")
(PUNCT ",")
(ID "exc_val")
(PUNCT ",")
(ID "exc_tb")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "terminate")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ApplyResult")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cache")
(PUNCT ",")
(ID "callback")
(PUNCT ",")
(ID "error_callback")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_event")
(PUNCT "=")
(ID "threading")
(PUNCT ".")
(ID "Event")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_job")
(PUNCT "=")
(ID "next")
(PUNCT "(")
(ID "job_counter")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT "=")
(ID "cache")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_callback")
(PUNCT "=")
(ID "callback")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_error_callback")
(PUNCT "=")
(ID "error_callback")
(NEWLINE)
(ID "cache")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_job")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ready")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_event")
(PUNCT ".")
(ID "is_set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "successful")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "self")
(PUNCT ".")
(ID "ready")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_success")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "wait")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_event")
(PUNCT ".")
(ID "wait")
(PUNCT "(")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "wait")
(PUNCT "(")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "ready")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TimeoutError")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_success")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_value")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "self")
(PUNCT ".")
(ID "_value")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_success")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_value")
(PUNCT "=")
(ID "obj")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_callback")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_success")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_callback")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_error_callback")
(KEYWORD and)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_success")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_error_callback")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_event")
(PUNCT ".")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_job")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "AsyncResult")
(PUNCT "=")
(ID "ApplyResult")
(NEWLINE)
(KEYWORD class)
(ID "MapResult")
(PUNCT "(")
(ID "ApplyResult")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cache")
(PUNCT ",")
(ID "chunksize")
(PUNCT ",")
(ID "length")
(PUNCT ",")
(ID "callback")
(PUNCT ",")
(ID "error_callback")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ApplyResult")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cache")
(PUNCT ",")
(ID "callback")
(PUNCT ",")
(ID "error_callback")
(PUNCT "=")
(ID "error_callback")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_success")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_value")
(PUNCT "=")
(PUNCT "[")
(KEYWORD None)
(PUNCT "]")
(PUNCT "*")
(ID "length")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_chunksize")
(PUNCT "=")
(ID "chunksize")
(NEWLINE)
(KEYWORD if)
(ID "chunksize")
(PUNCT "<=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_number_left")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_event")
(PUNCT ".")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "cache")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_job")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_number_left")
(PUNCT "=")
(ID "length")
(PUNCT "//")
(ID "chunksize")
(PUNCT "+")
(ID "bool")
(PUNCT "(")
(ID "length")
(PUNCT "%")
(ID "chunksize")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "success_result")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "success")
(PUNCT ",")
(ID "result")
(PUNCT "=")
(ID "success_result")
(NEWLINE)
(KEYWORD if)
(ID "success")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_value")
(PUNCT "[")
(ID "i")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_chunksize")
(PUNCT ":")
(PUNCT "(")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_chunksize")
(PUNCT "]")
(PUNCT "=")
(ID "result")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_number_left")
(PUNCT "-=")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_number_left")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_callback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_callback")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_job")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_event")
(PUNCT ".")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_success")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_value")
(PUNCT "=")
(ID "result")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_error_callback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_error_callback")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_job")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_event")
(PUNCT ".")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "IMapIterator")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cache")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_cond")
(PUNCT "=")
(ID "threading")
(PUNCT ".")
(ID "Condition")
(PUNCT "(")
(ID "threading")
(PUNCT ".")
(ID "Lock")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_job")
(PUNCT "=")
(ID "next")
(PUNCT "(")
(ID "job_counter")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT "=")
(ID "cache")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_items")
(PUNCT "=")
(ID "collections")
(PUNCT ".")
(ID "deque")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_length")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_unsorted")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "cache")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_job")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__iter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "next")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_cond")
(PUNCT ".")
(ID "acquire")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "item")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_items")
(PUNCT ".")
(ID "popleft")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "IndexError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "==")
(ID "self")
(PUNCT ".")
(ID "_length")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "StopIteration")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_cond")
(PUNCT ".")
(ID "wait")
(PUNCT "(")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "item")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_items")
(PUNCT ".")
(ID "popleft")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "IndexError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "==")
(ID "self")
(PUNCT ".")
(ID "_length")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "StopIteration")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "TimeoutError")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_cond")
(PUNCT ".")
(ID "release")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "success")
(PUNCT ",")
(ID "value")
(PUNCT "=")
(ID "item")
(NEWLINE)
(KEYWORD if)
(ID "success")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "value")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "value")
(NEWLINE)
(DEDENT)
(ID "__next__")
(PUNCT "=")
(ID "next")
(NEWLINE)
(KEYWORD def)
(ID "_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_cond")
(PUNCT ".")
(ID "acquire")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "==")
(ID "i")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_items")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(KEYWORD while)
(ID "self")
(PUNCT ".")
(ID "_index")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_unsorted")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_unsorted")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_items")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_cond")
(PUNCT ".")
(ID "notify")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_unsorted")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT "=")
(ID "obj")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "==")
(ID "self")
(PUNCT ".")
(ID "_length")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_job")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_cond")
(PUNCT ".")
(ID "release")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_set_length")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "length")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_cond")
(PUNCT ".")
(ID "acquire")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_length")
(PUNCT "=")
(ID "length")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "==")
(ID "self")
(PUNCT ".")
(ID "_length")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_cond")
(PUNCT ".")
(ID "notify")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_job")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_cond")
(PUNCT ".")
(ID "release")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "IMapUnorderedIterator")
(PUNCT "(")
(ID "IMapIterator")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_cond")
(PUNCT ".")
(ID "acquire")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_items")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_cond")
(PUNCT ".")
(ID "notify")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "==")
(ID "self")
(PUNCT ".")
(ID "_length")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_job")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_cond")
(PUNCT ".")
(ID "release")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ThreadPool")
(PUNCT "(")
(ID "Pool")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_wrap_exception")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(PUNCT "@")
(ID "staticmethod")
(NEWLINE)
(KEYWORD def)
(ID "Process")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwds")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(ID "dummy")
(KEYWORD import)
(ID "Process")
(NEWLINE)
(KEYWORD return)
(ID "Process")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwds")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "processes")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "initializer")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "initargs")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "Pool")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "processes")
(PUNCT ",")
(ID "initializer")
(PUNCT ",")
(ID "initargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_setup_queues")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_inqueue")
(PUNCT "=")
(ID "queue")
(PUNCT ".")
(ID "Queue")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_outqueue")
(PUNCT "=")
(ID "queue")
(PUNCT ".")
(ID "Queue")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_quick_put")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_inqueue")
(PUNCT ".")
(ID "put")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_quick_get")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_outqueue")
(PUNCT ".")
(ID "get")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "staticmethod")
(NEWLINE)
(KEYWORD def)
(ID "_help_stuff_finish")
(PUNCT "(")
(ID "inqueue")
(PUNCT ",")
(ID "task_handler")
(PUNCT ",")
(ID "size")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "inqueue")
(PUNCT ".")
(ID "not_empty")
(PUNCT ".")
(ID "acquire")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "inqueue")
(PUNCT ".")
(ID "queue")
(PUNCT ".")
(ID "clear")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "inqueue")
(PUNCT ".")
(ID "queue")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(PUNCT "[")
(KEYWORD None)
(PUNCT "]")
(PUNCT "*")
(ID "size")
(PUNCT ")")
(NEWLINE)
(ID "inqueue")
(PUNCT ".")
(ID "not_empty")
(PUNCT ".")
(ID "notify_all")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "inqueue")
(PUNCT ".")
(ID "not_empty")
(PUNCT ".")
(ID "release")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ENDMARKER)
