(LIT "Facility to use the Expat parser to load a minidom instance\nfrom a string or file.\n\nThis avoids all the overhead of SAX and pulldom to gain performance.\n")
(NEWLINE)
(KEYWORD from)
(ID "xml")
(PUNCT ".")
(ID "dom")
(KEYWORD import)
(ID "xmlbuilder")
(PUNCT ",")
(ID "minidom")
(PUNCT ",")
(ID "Node")
(NEWLINE)
(KEYWORD from)
(ID "xml")
(PUNCT ".")
(ID "dom")
(KEYWORD import)
(ID "EMPTY_NAMESPACE")
(PUNCT ",")
(ID "EMPTY_PREFIX")
(PUNCT ",")
(ID "XMLNS_NAMESPACE")
(NEWLINE)
(KEYWORD from)
(ID "xml")
(PUNCT ".")
(ID "parsers")
(KEYWORD import)
(ID "expat")
(NEWLINE)
(KEYWORD from)
(ID "xml")
(PUNCT ".")
(ID "dom")
(PUNCT ".")
(ID "minidom")
(KEYWORD import)
(ID "_append_child")
(PUNCT ",")
(ID "_set_attribute_node")
(NEWLINE)
(KEYWORD from)
(ID "xml")
(PUNCT ".")
(ID "dom")
(PUNCT ".")
(ID "NodeFilter")
(KEYWORD import)
(ID "NodeFilter")
(NEWLINE)
(ID "TEXT_NODE")
(PUNCT "=")
(ID "Node")
(PUNCT ".")
(ID "TEXT_NODE")
(NEWLINE)
(ID "CDATA_SECTION_NODE")
(PUNCT "=")
(ID "Node")
(PUNCT ".")
(ID "CDATA_SECTION_NODE")
(NEWLINE)
(ID "DOCUMENT_NODE")
(PUNCT "=")
(ID "Node")
(PUNCT ".")
(ID "DOCUMENT_NODE")
(NEWLINE)
(ID "FILTER_ACCEPT")
(PUNCT "=")
(ID "xmlbuilder")
(PUNCT ".")
(ID "DOMBuilderFilter")
(PUNCT ".")
(ID "FILTER_ACCEPT")
(NEWLINE)
(ID "FILTER_REJECT")
(PUNCT "=")
(ID "xmlbuilder")
(PUNCT ".")
(ID "DOMBuilderFilter")
(PUNCT ".")
(ID "FILTER_REJECT")
(NEWLINE)
(ID "FILTER_SKIP")
(PUNCT "=")
(ID "xmlbuilder")
(PUNCT ".")
(ID "DOMBuilderFilter")
(PUNCT ".")
(ID "FILTER_SKIP")
(NEWLINE)
(ID "FILTER_INTERRUPT")
(PUNCT "=")
(ID "xmlbuilder")
(PUNCT ".")
(ID "DOMBuilderFilter")
(PUNCT ".")
(ID "FILTER_INTERRUPT")
(NEWLINE)
(ID "theDOMImplementation")
(PUNCT "=")
(ID "minidom")
(PUNCT ".")
(ID "getDOMImplementation")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "_typeinfo_map")
(PUNCT "=")
(PUNCT "{")
(LIT "CDATA")
(PUNCT ":")
(ID "minidom")
(PUNCT ".")
(ID "TypeInfo")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(LIT "cdata")
(PUNCT ")")
(PUNCT ",")
(LIT "ENUM")
(PUNCT ":")
(ID "minidom")
(PUNCT ".")
(ID "TypeInfo")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(LIT "enumeration")
(PUNCT ")")
(PUNCT ",")
(LIT "ENTITY")
(PUNCT ":")
(ID "minidom")
(PUNCT ".")
(ID "TypeInfo")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(LIT "entity")
(PUNCT ")")
(PUNCT ",")
(LIT "ENTITIES")
(PUNCT ":")
(ID "minidom")
(PUNCT ".")
(ID "TypeInfo")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(LIT "entities")
(PUNCT ")")
(PUNCT ",")
(LIT "ID")
(PUNCT ":")
(ID "minidom")
(PUNCT ".")
(ID "TypeInfo")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(LIT "id")
(PUNCT ")")
(PUNCT ",")
(LIT "IDREF")
(PUNCT ":")
(ID "minidom")
(PUNCT ".")
(ID "TypeInfo")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(LIT "idref")
(PUNCT ")")
(PUNCT ",")
(LIT "IDREFS")
(PUNCT ":")
(ID "minidom")
(PUNCT ".")
(ID "TypeInfo")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(LIT "idrefs")
(PUNCT ")")
(PUNCT ",")
(LIT "NMTOKEN")
(PUNCT ":")
(ID "minidom")
(PUNCT ".")
(ID "TypeInfo")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(LIT "nmtoken")
(PUNCT ")")
(PUNCT ",")
(LIT "NMTOKENS")
(PUNCT ":")
(ID "minidom")
(PUNCT ".")
(ID "TypeInfo")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(LIT "nmtokens")
(PUNCT ")")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD class)
(ID "ElementInfo")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "__slots__")
(PUNCT "=")
(LIT "_attr_info")
(PUNCT ",")
(LIT "_model")
(PUNCT ",")
(LIT "tagName")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "tagName")
(PUNCT ",")
(ID "model")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tagName")
(PUNCT "=")
(ID "tagName")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_attr_info")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_model")
(PUNCT "=")
(ID "model")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getstate__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_attr_info")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_model")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "tagName")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__setstate__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "state")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_attr_info")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_model")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "tagName")
(PUNCT "=")
(ID "state")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getAttributeType")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "aname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "info")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_attr_info")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "info")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(ID "aname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "t")
(PUNCT "=")
(ID "info")
(PUNCT "[")
(PUNCT "-")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "t")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(LIT "(")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_typeinfo_map")
(PUNCT "[")
(LIT "ENUM")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_typeinfo_map")
(PUNCT "[")
(ID "info")
(PUNCT "[")
(PUNCT "-")
(LIT 2)
(PUNCT "]")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "minidom")
(PUNCT ".")
(ID "_no_type")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getAttributeTypeNS")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "namespaceURI")
(PUNCT ",")
(ID "localName")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "minidom")
(PUNCT ".")
(ID "_no_type")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "isElementContent")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_model")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "type")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_model")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "type")
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(ID "expat")
(PUNCT ".")
(ID "model")
(PUNCT ".")
(ID "XML_CTYPE_ANY")
(PUNCT ",")
(ID "expat")
(PUNCT ".")
(ID "model")
(PUNCT ".")
(ID "XML_CTYPE_MIXED")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "isEmpty")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_model")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_model")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(ID "expat")
(PUNCT ".")
(ID "model")
(PUNCT ".")
(ID "XML_CTYPE_EMPTY")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "isId")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "aname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "info")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_attr_info")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "info")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(ID "aname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "info")
(PUNCT "[")
(PUNCT "-")
(LIT 2)
(PUNCT "]")
(PUNCT "==")
(LIT "ID")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "isIdNS")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "euri")
(PUNCT ",")
(ID "ename")
(PUNCT ",")
(ID "auri")
(PUNCT ",")
(ID "aname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "isId")
(PUNCT "(")
(PUNCT "(")
(ID "auri")
(PUNCT ",")
(ID "aname")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_intern")
(PUNCT "(")
(ID "builder")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "builder")
(PUNCT ".")
(ID "_intern_setdefault")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_parse_ns_name")
(PUNCT "(")
(ID "builder")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(LIT " ")
(KEYWORD in)
(ID "name")
(NEWLINE)
(ID "parts")
(PUNCT "=")
(ID "name")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(ID "intern")
(PUNCT "=")
(ID "builder")
(PUNCT ".")
(ID "_intern_setdefault")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "parts")
(PUNCT ")")
(PUNCT "==")
(LIT 3)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "uri")
(PUNCT ",")
(ID "localname")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(ID "parts")
(NEWLINE)
(ID "prefix")
(PUNCT "=")
(ID "intern")
(PUNCT "(")
(ID "prefix")
(PUNCT ",")
(ID "prefix")
(PUNCT ")")
(NEWLINE)
(ID "qname")
(PUNCT "=")
(LIT "%s:%s")
(PUNCT "%")
(PUNCT "(")
(ID "prefix")
(PUNCT ",")
(ID "localname")
(PUNCT ")")
(NEWLINE)
(ID "qname")
(PUNCT "=")
(ID "intern")
(PUNCT "(")
(ID "qname")
(PUNCT ",")
(ID "qname")
(PUNCT ")")
(NEWLINE)
(ID "localname")
(PUNCT "=")
(ID "intern")
(PUNCT "(")
(ID "localname")
(PUNCT ",")
(ID "localname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "len")
(PUNCT "(")
(ID "parts")
(PUNCT ")")
(PUNCT "==")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "uri")
(PUNCT ",")
(ID "localname")
(PUNCT "=")
(ID "parts")
(NEWLINE)
(ID "prefix")
(PUNCT "=")
(ID "EMPTY_PREFIX")
(NEWLINE)
(ID "qname")
(PUNCT "=")
(ID "localname")
(PUNCT "=")
(ID "intern")
(PUNCT "(")
(ID "localname")
(PUNCT ",")
(ID "localname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Unsupported syntax: spaces in URIs not supported: %r")
(PUNCT "%")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "intern")
(PUNCT "(")
(ID "uri")
(PUNCT ",")
(ID "uri")
(PUNCT ")")
(PUNCT ",")
(ID "localname")
(PUNCT ",")
(ID "prefix")
(PUNCT ",")
(ID "qname")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "ExpatBuilder")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Document builder that uses Expat to build a ParsedXML.DOM document\n    instance.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "options")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "options")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "options")
(PUNCT "=")
(ID "xmlbuilder")
(PUNCT ".")
(ID "Options")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "=")
(ID "options")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT ".")
(ID "filter")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_filter")
(PUNCT "=")
(ID "FilterVisibilityController")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT ".")
(ID "filter")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_filter")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_finish_start_element")
(PUNCT "=")
(ID "id")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "createParser")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create a new parser object.")
(NEWLINE)
(KEYWORD return)
(ID "expat")
(PUNCT ".")
(ID "ParserCreate")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getParser")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the parser object, creating a new one if needed.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "createParser")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_intern_setdefault")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT ".")
(ID "intern")
(PUNCT ".")
(ID "setdefault")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT ".")
(ID "buffer_text")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT ".")
(ID "ordered_attributes")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT ".")
(ID "specified_attributes")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_parser")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "reset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Free all data structures used during DOM construction.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT "=")
(ID "theDOMImplementation")
(PUNCT ".")
(ID "createDocument")
(PUNCT "(")
(ID "EMPTY_NAMESPACE")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_elem_info")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "_elem_info")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_cdata")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "install")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parser")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Install the callbacks needed to build the DOM into the parser.")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "StartDoctypeDeclHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "start_doctype_decl_handler")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "StartElementHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "first_element_handler")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "EndElementHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "end_element_handler")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "ProcessingInstructionHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "pi_handler")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT ".")
(ID "entities")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "EntityDeclHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "entity_decl_handler")
(NEWLINE)
(DEDENT)
(ID "parser")
(PUNCT ".")
(ID "NotationDeclHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "notation_decl_handler")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT ".")
(ID "comments")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "CommentHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "comment_handler")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT ".")
(ID "cdata_sections")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "StartCdataSectionHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "start_cdata_section_handler")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "EndCdataSectionHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "end_cdata_section_handler")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "CharacterDataHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "character_data_handler_cdata")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "CharacterDataHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "character_data_handler")
(NEWLINE)
(DEDENT)
(ID "parser")
(PUNCT ".")
(ID "ExternalEntityRefHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "external_entity_ref_handler")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "XmlDeclHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "xml_decl_handler")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "ElementDeclHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "element_decl_handler")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "AttlistDeclHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "attlist_decl_handler")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parseFile")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Parse a document from a file object, returning the document\n        node.")
(NEWLINE)
(ID "parser")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getParser")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "first_buffer")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "buffer")
(PUNCT "=")
(ID "file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 16)
(PUNCT "*")
(LIT 1024)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "parser")
(PUNCT ".")
(ID "Parse")
(PUNCT "(")
(ID "buffer")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "first_buffer")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "documentElement")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_setup_subset")
(PUNCT "(")
(ID "buffer")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "first_buffer")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(ID "parser")
(PUNCT ".")
(ID "Parse")
(PUNCT "(")
(LIT "")
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ParseEscape")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(ID "doc")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD return)
(ID "doc")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parseString")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "string")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Parse a document from a string, returning the document node.")
(NEWLINE)
(ID "parser")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getParser")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "Parse")
(PUNCT "(")
(ID "string")
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_setup_subset")
(PUNCT "(")
(ID "string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ParseEscape")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(ID "doc")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD return)
(ID "doc")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_setup_subset")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "buffer")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Load the internal subset if there might be one.")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "doctype")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "extractor")
(PUNCT "=")
(ID "InternalSubsetExtractor")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "extractor")
(PUNCT ".")
(ID "parseString")
(PUNCT "(")
(ID "buffer")
(PUNCT ")")
(NEWLINE)
(ID "subset")
(PUNCT "=")
(ID "extractor")
(PUNCT ".")
(ID "getSubset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "doctype")
(PUNCT ".")
(ID "internalSubset")
(PUNCT "=")
(ID "subset")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "start_doctype_decl_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "doctypeName")
(PUNCT ",")
(ID "systemId")
(PUNCT ",")
(ID "publicId")
(PUNCT ",")
(ID "has_internal_subset")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "doctype")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "implementation")
(PUNCT ".")
(ID "createDocumentType")
(PUNCT "(")
(ID "doctypeName")
(PUNCT ",")
(ID "publicId")
(PUNCT ",")
(ID "systemId")
(PUNCT ")")
(NEWLINE)
(ID "doctype")
(PUNCT ".")
(ID "ownerDocument")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(NEWLINE)
(ID "_append_child")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ",")
(ID "doctype")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "doctype")
(PUNCT "=")
(ID "doctype")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_filter")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_filter")
(PUNCT ".")
(ID "acceptNode")
(PUNCT "(")
(ID "doctype")
(PUNCT ")")
(PUNCT "==")
(ID "FILTER_REJECT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "doctype")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "childNodes")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "doctype")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT ".")
(ID "EntityDeclHandler")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT ".")
(ID "NotationDeclHandler")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "has_internal_subset")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "doctype")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "doctype")
(PUNCT ".")
(ID "entities")
(PUNCT ".")
(ID "_seq")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "doctype")
(PUNCT ".")
(ID "notations")
(PUNCT ".")
(ID "_seq")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT ".")
(ID "CommentHandler")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT ".")
(ID "ProcessingInstructionHandler")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT ".")
(ID "EndDoctypeDeclHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "end_doctype_decl_handler")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "end_doctype_decl_handler")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT ".")
(ID "comments")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT ".")
(ID "CommentHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "comment_handler")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT ".")
(ID "ProcessingInstructionHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "pi_handler")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_elem_info")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "_filter")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_finish_end_element")
(PUNCT "=")
(ID "id")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "pi_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "target")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "node")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "createProcessingInstruction")
(PUNCT "(")
(ID "target")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "_append_child")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT ",")
(ID "node")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_filter")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_filter")
(PUNCT ".")
(ID "acceptNode")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(PUNCT "==")
(ID "FILTER_REJECT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT ".")
(ID "removeChild")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "character_data_handler_cdata")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "childNodes")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT ".")
(ID "childNodes")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_cdata")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_cdata_continue")
(KEYWORD and)
(ID "childNodes")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "nodeType")
(PUNCT "==")
(ID "CDATA_SECTION_NODE")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "childNodes")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "appendData")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "node")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "createCDATASection")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_cdata_continue")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "childNodes")
(KEYWORD and)
(ID "childNodes")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "nodeType")
(PUNCT "==")
(ID "TEXT_NODE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "node")
(PUNCT "=")
(ID "childNodes")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "value")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "data")
(PUNCT "+")
(ID "data")
(NEWLINE)
(ID "node")
(PUNCT ".")
(ID "data")
(PUNCT "=")
(ID "value")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "node")
(PUNCT "=")
(ID "minidom")
(PUNCT ".")
(ID "Text")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "node")
(PUNCT ".")
(ID "data")
(PUNCT "=")
(ID "data")
(NEWLINE)
(ID "node")
(PUNCT ".")
(ID "ownerDocument")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(NEWLINE)
(DEDENT)
(ID "_append_child")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT ",")
(ID "node")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "character_data_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "childNodes")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT ".")
(ID "childNodes")
(NEWLINE)
(KEYWORD if)
(ID "childNodes")
(KEYWORD and)
(ID "childNodes")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "nodeType")
(PUNCT "==")
(ID "TEXT_NODE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "node")
(PUNCT "=")
(ID "childNodes")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "node")
(PUNCT ".")
(ID "data")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "data")
(PUNCT "+")
(ID "data")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "node")
(PUNCT "=")
(ID "minidom")
(PUNCT ".")
(ID "Text")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "node")
(PUNCT ".")
(ID "data")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "data")
(PUNCT "+")
(ID "data")
(NEWLINE)
(ID "node")
(PUNCT ".")
(ID "ownerDocument")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(NEWLINE)
(ID "_append_child")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT ",")
(ID "node")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "entity_decl_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entityName")
(PUNCT ",")
(ID "is_parameter_entity")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "base")
(PUNCT ",")
(ID "systemId")
(PUNCT ",")
(ID "publicId")
(PUNCT ",")
(ID "notationName")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "is_parameter_entity")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT ".")
(ID "entities")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "node")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "_create_entity")
(PUNCT "(")
(ID "entityName")
(PUNCT ",")
(ID "publicId")
(PUNCT ",")
(ID "systemId")
(PUNCT ",")
(ID "notationName")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "value")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "child")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "createTextNode")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(ID "node")
(PUNCT ".")
(ID "childNodes")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "child")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "doctype")
(PUNCT ".")
(ID "entities")
(PUNCT ".")
(ID "_seq")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_filter")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_filter")
(PUNCT ".")
(ID "acceptNode")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(PUNCT "==")
(ID "FILTER_REJECT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "doctype")
(PUNCT ".")
(ID "entities")
(PUNCT ".")
(ID "_seq")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "notation_decl_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "notationName")
(PUNCT ",")
(ID "base")
(PUNCT ",")
(ID "systemId")
(PUNCT ",")
(ID "publicId")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "node")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "_create_notation")
(PUNCT "(")
(ID "notationName")
(PUNCT ",")
(ID "publicId")
(PUNCT ",")
(ID "systemId")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "doctype")
(PUNCT ".")
(ID "notations")
(PUNCT ".")
(ID "_seq")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_filter")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_filter")
(PUNCT ".")
(ID "acceptNode")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(PUNCT "==")
(ID "FILTER_ACCEPT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "doctype")
(PUNCT ".")
(ID "notations")
(PUNCT ".")
(ID "_seq")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "comment_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "node")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "createComment")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "_append_child")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT ",")
(ID "node")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_filter")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_filter")
(PUNCT ".")
(ID "acceptNode")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(PUNCT "==")
(ID "FILTER_REJECT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT ".")
(ID "removeChild")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "start_cdata_section_handler")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_cdata")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_cdata_continue")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "end_cdata_section_handler")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_cdata")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_cdata_continue")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "external_entity_ref_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "context")
(PUNCT ",")
(ID "base")
(PUNCT ",")
(ID "systemId")
(PUNCT ",")
(ID "publicId")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "first_element_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "attributes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_filter")
(KEYWORD is)
(KEYWORD None)
(KEYWORD and)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_elem_info")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_finish_end_element")
(PUNCT "=")
(ID "id")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "getParser")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "StartElementHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "start_element_handler")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "start_element_handler")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "attributes")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "start_element_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "attributes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "node")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "createElement")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(ID "_append_child")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT ",")
(ID "node")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT "=")
(ID "node")
(NEWLINE)
(KEYWORD if)
(ID "attributes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "attributes")
(PUNCT ")")
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "a")
(PUNCT "=")
(ID "minidom")
(PUNCT ".")
(ID "Attr")
(PUNCT "(")
(ID "attributes")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ",")
(ID "EMPTY_NAMESPACE")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID "EMPTY_PREFIX")
(PUNCT ")")
(NEWLINE)
(ID "value")
(PUNCT "=")
(ID "attributes")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "a")
(PUNCT ".")
(ID "value")
(PUNCT "=")
(ID "value")
(NEWLINE)
(ID "a")
(PUNCT ".")
(ID "ownerDocument")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(NEWLINE)
(ID "_set_attribute_node")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(ID "a")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "node")
(KEYWORD is)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "documentElement")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_finish_start_element")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_finish_start_element")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_filter")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "node")
(KEYWORD is)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "documentElement")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "filt")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_filter")
(PUNCT ".")
(ID "startContainer")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "filt")
(PUNCT "==")
(ID "FILTER_REJECT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "Rejecter")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "filt")
(PUNCT "==")
(ID "FILTER_SKIP")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "Skipper")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "parentNode")
(NEWLINE)
(ID "node")
(PUNCT ".")
(ID "parentNode")
(PUNCT ".")
(ID "removeChild")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(NEWLINE)
(ID "node")
(PUNCT ".")
(ID "unlink")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "end_element_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "curNode")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "curNode")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT "=")
(ID "curNode")
(PUNCT ".")
(ID "parentNode")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_finish_end_element")
(PUNCT "(")
(ID "curNode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_finish_end_element")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "curNode")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_elem_info")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "curNode")
(PUNCT ".")
(ID "tagName")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "info")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_handle_white_text_nodes")
(PUNCT "(")
(ID "curNode")
(PUNCT ",")
(ID "info")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_filter")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "curNode")
(KEYWORD is)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "documentElement")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_filter")
(PUNCT ".")
(ID "acceptNode")
(PUNCT "(")
(ID "curNode")
(PUNCT ")")
(PUNCT "==")
(ID "FILTER_REJECT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT ".")
(ID "removeChild")
(PUNCT "(")
(ID "curNode")
(PUNCT ")")
(NEWLINE)
(ID "curNode")
(PUNCT ".")
(ID "unlink")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_handle_white_text_nodes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "info")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT ".")
(ID "whitespace_in_element_content")
(KEYWORD or)
(KEYWORD not)
(ID "info")
(PUNCT ".")
(ID "isElementContent")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "L")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "child")
(KEYWORD in)
(ID "node")
(PUNCT ".")
(ID "childNodes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "child")
(PUNCT ".")
(ID "nodeType")
(PUNCT "==")
(ID "TEXT_NODE")
(KEYWORD and)
(KEYWORD not)
(ID "child")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "L")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "child")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "child")
(KEYWORD in)
(ID "L")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "node")
(PUNCT ".")
(ID "removeChild")
(PUNCT "(")
(ID "child")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "element_decl_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "model")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_elem_info")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "info")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_elem_info")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "ElementInfo")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "model")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "info")
(PUNCT ".")
(ID "_model")
(KEYWORD is)
(KEYWORD None)
(NEWLINE)
(ID "info")
(PUNCT ".")
(ID "_model")
(PUNCT "=")
(ID "model")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "attlist_decl_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "elem")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "type")
(PUNCT ",")
(ID "default")
(PUNCT ",")
(ID "required")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_elem_info")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "elem")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "info")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT "=")
(ID "ElementInfo")
(PUNCT "(")
(ID "elem")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_elem_info")
(PUNCT "[")
(ID "elem")
(PUNCT "]")
(PUNCT "=")
(ID "info")
(NEWLINE)
(DEDENT)
(ID "info")
(PUNCT ".")
(ID "_attr_info")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "[")
(KEYWORD None)
(PUNCT ",")
(ID "name")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID "default")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "type")
(PUNCT ",")
(ID "required")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "xml_decl_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "version")
(PUNCT ",")
(ID "encoding")
(PUNCT ",")
(ID "standalone")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "version")
(PUNCT "=")
(ID "version")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "encoding")
(PUNCT "=")
(ID "encoding")
(NEWLINE)
(KEYWORD if)
(ID "standalone")
(PUNCT ">=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "standalone")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "standalone")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "standalone")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "_ALLOWED_FILTER_RETURNS")
(PUNCT "=")
(PUNCT "(")
(ID "FILTER_ACCEPT")
(PUNCT ",")
(ID "FILTER_REJECT")
(PUNCT ",")
(ID "FILTER_SKIP")
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "FilterVisibilityController")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Wrapper around a DOMBuilderFilter which implements the checks\n    to make the whatToShow filter attribute work.")
(NEWLINE)
(ID "__slots__")
(PUNCT "=")
(LIT "filter")
(PUNCT ",")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filter")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "filter")
(PUNCT "=")
(ID "filter")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "startContainer")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mask")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_nodetype_mask")
(PUNCT "[")
(ID "node")
(PUNCT ".")
(ID "nodeType")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "filter")
(PUNCT ".")
(ID "whatToShow")
(PUNCT "&")
(ID "mask")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "val")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "filter")
(PUNCT ".")
(ID "startContainer")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "val")
(PUNCT "==")
(ID "FILTER_INTERRUPT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ParseEscape")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "val")
(KEYWORD not)
(KEYWORD in)
(ID "_ALLOWED_FILTER_RETURNS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "startContainer() returned illegal value: ")
(PUNCT "+")
(ID "repr")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "val")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "FILTER_ACCEPT")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "acceptNode")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mask")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_nodetype_mask")
(PUNCT "[")
(ID "node")
(PUNCT ".")
(ID "nodeType")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "filter")
(PUNCT ".")
(ID "whatToShow")
(PUNCT "&")
(ID "mask")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "val")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "filter")
(PUNCT ".")
(ID "acceptNode")
(PUNCT "(")
(ID "node")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "val")
(PUNCT "==")
(ID "FILTER_INTERRUPT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ParseEscape")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "val")
(PUNCT "==")
(ID "FILTER_SKIP")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "parentNode")
(NEWLINE)
(KEYWORD for)
(ID "child")
(KEYWORD in)
(ID "node")
(PUNCT ".")
(ID "childNodes")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent")
(PUNCT ".")
(ID "appendChild")
(PUNCT "(")
(ID "child")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "FILTER_REJECT")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "val")
(KEYWORD not)
(KEYWORD in)
(ID "_ALLOWED_FILTER_RETURNS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "acceptNode() returned illegal value: ")
(PUNCT "+")
(ID "repr")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "val")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "FILTER_ACCEPT")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "_nodetype_mask")
(PUNCT "=")
(PUNCT "{")
(ID "Node")
(PUNCT ".")
(ID "ELEMENT_NODE")
(PUNCT ":")
(ID "NodeFilter")
(PUNCT ".")
(ID "SHOW_ELEMENT")
(PUNCT ",")
(ID "Node")
(PUNCT ".")
(ID "ATTRIBUTE_NODE")
(PUNCT ":")
(ID "NodeFilter")
(PUNCT ".")
(ID "SHOW_ATTRIBUTE")
(PUNCT ",")
(ID "Node")
(PUNCT ".")
(ID "TEXT_NODE")
(PUNCT ":")
(ID "NodeFilter")
(PUNCT ".")
(ID "SHOW_TEXT")
(PUNCT ",")
(ID "Node")
(PUNCT ".")
(ID "CDATA_SECTION_NODE")
(PUNCT ":")
(ID "NodeFilter")
(PUNCT ".")
(ID "SHOW_CDATA_SECTION")
(PUNCT ",")
(ID "Node")
(PUNCT ".")
(ID "ENTITY_REFERENCE_NODE")
(PUNCT ":")
(ID "NodeFilter")
(PUNCT ".")
(ID "SHOW_ENTITY_REFERENCE")
(PUNCT ",")
(ID "Node")
(PUNCT ".")
(ID "ENTITY_NODE")
(PUNCT ":")
(ID "NodeFilter")
(PUNCT ".")
(ID "SHOW_ENTITY")
(PUNCT ",")
(ID "Node")
(PUNCT ".")
(ID "PROCESSING_INSTRUCTION_NODE")
(PUNCT ":")
(ID "NodeFilter")
(PUNCT ".")
(ID "SHOW_PROCESSING_INSTRUCTION")
(PUNCT ",")
(ID "Node")
(PUNCT ".")
(ID "COMMENT_NODE")
(PUNCT ":")
(ID "NodeFilter")
(PUNCT ".")
(ID "SHOW_COMMENT")
(PUNCT ",")
(ID "Node")
(PUNCT ".")
(ID "DOCUMENT_NODE")
(PUNCT ":")
(ID "NodeFilter")
(PUNCT ".")
(ID "SHOW_DOCUMENT")
(PUNCT ",")
(ID "Node")
(PUNCT ".")
(ID "DOCUMENT_TYPE_NODE")
(PUNCT ":")
(ID "NodeFilter")
(PUNCT ".")
(ID "SHOW_DOCUMENT_TYPE")
(PUNCT ",")
(ID "Node")
(PUNCT ".")
(ID "DOCUMENT_FRAGMENT_NODE")
(PUNCT ":")
(ID "NodeFilter")
(PUNCT ".")
(ID "SHOW_DOCUMENT_FRAGMENT")
(PUNCT ",")
(ID "Node")
(PUNCT ".")
(ID "NOTATION_NODE")
(PUNCT ":")
(ID "NodeFilter")
(PUNCT ".")
(ID "SHOW_NOTATION")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "FilterCrutch")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "__slots__")
(PUNCT "=")
(LIT "_builder")
(PUNCT ",")
(LIT "_level")
(PUNCT ",")
(LIT "_old_start")
(PUNCT ",")
(LIT "_old_end")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "builder")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_level")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_builder")
(PUNCT "=")
(ID "builder")
(NEWLINE)
(ID "parser")
(PUNCT "=")
(ID "builder")
(PUNCT ".")
(ID "_parser")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_old_start")
(PUNCT "=")
(ID "parser")
(PUNCT ".")
(ID "StartElementHandler")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_old_end")
(PUNCT "=")
(ID "parser")
(PUNCT ".")
(ID "EndElementHandler")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "StartElementHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "start_element_handler")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "EndElementHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "end_element_handler")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Rejecter")
(PUNCT "(")
(ID "FilterCrutch")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "__slots__")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "builder")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "FilterCrutch")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "builder")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT "=")
(ID "builder")
(PUNCT ".")
(ID "_parser")
(NEWLINE)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(PUNCT "(")
(LIT "ProcessingInstructionHandler")
(PUNCT ",")
(LIT "CommentHandler")
(PUNCT ",")
(LIT "CharacterDataHandler")
(PUNCT ",")
(LIT "StartCdataSectionHandler")
(PUNCT ",")
(LIT "EndCdataSectionHandler")
(PUNCT ",")
(LIT "ExternalEntityRefHandler")
(PUNCT ",")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setattr")
(PUNCT "(")
(ID "parser")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "start_element_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_level")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_level")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "end_element_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_level")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_builder")
(PUNCT ".")
(ID "_parser")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_builder")
(PUNCT ".")
(ID "install")
(PUNCT "(")
(ID "parser")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "StartElementHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_old_start")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "EndElementHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_old_end")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_level")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_level")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Skipper")
(PUNCT "(")
(ID "FilterCrutch")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "__slots__")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "start_element_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "node")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_builder")
(PUNCT ".")
(ID "curNode")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_old_start")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_builder")
(PUNCT ".")
(ID "curNode")
(KEYWORD is)
(KEYWORD not)
(ID "node")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_level")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_level")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "end_element_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_level")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_builder")
(PUNCT ".")
(ID "_parser")
(PUNCT ".")
(ID "StartElementHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_old_start")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_builder")
(PUNCT ".")
(ID "_parser")
(PUNCT ".")
(ID "EndElementHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_old_end")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_builder")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_level")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_level")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_old_end")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "_FRAGMENT_BUILDER_INTERNAL_SYSTEM_ID")
(PUNCT "=")
(LIT "http://xml.python.org/entities/fragment-builder/internal")
(NEWLINE)
(ID "_FRAGMENT_BUILDER_TEMPLATE")
(PUNCT "=")
(PUNCT "(")
(LIT "<!DOCTYPE wrapper\n  %%s [\n  <!ENTITY fragment-builder-internal\n    SYSTEM \"%s\">\n%%s\n]>\n<wrapper %%s\n>&fragment-builder-internal;</wrapper>")
(PUNCT "%")
(ID "_FRAGMENT_BUILDER_INTERNAL_SYSTEM_ID")
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "FragmentBuilder")
(PUNCT "(")
(ID "ExpatBuilder")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Builder which constructs document fragments given XML source\n    text and a context node.\n\n    The context node is expected to provide information about the\n    namespace declarations which are in scope at the start of the\n    fragment.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "context")
(PUNCT ",")
(ID "options")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "context")
(PUNCT ".")
(ID "nodeType")
(PUNCT "==")
(ID "DOCUMENT_NODE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "originalDocument")
(PUNCT "=")
(ID "context")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "context")
(PUNCT "=")
(ID "context")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "originalDocument")
(PUNCT "=")
(ID "context")
(PUNCT ".")
(ID "ownerDocument")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "context")
(PUNCT "=")
(ID "context")
(NEWLINE)
(DEDENT)
(ID "ExpatBuilder")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "options")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "reset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ExpatBuilder")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fragment")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parseFile")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Parse a document fragment from a file object, returning the\n        fragment node.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "parseString")
(PUNCT "(")
(ID "file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parseString")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "string")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Parse a document fragment from a string, returning the\n        fragment node.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_source")
(PUNCT "=")
(ID "string")
(NEWLINE)
(ID "parser")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getParser")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "doctype")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "originalDocument")
(PUNCT ".")
(ID "doctype")
(NEWLINE)
(ID "ident")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD if)
(ID "doctype")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subset")
(PUNCT "=")
(ID "doctype")
(PUNCT ".")
(ID "internalSubset")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "_getDeclarations")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "doctype")
(PUNCT ".")
(ID "publicId")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ident")
(PUNCT "=")
(PUNCT "(")
(LIT "PUBLIC \"%s\" \"%s\"")
(PUNCT "%")
(PUNCT "(")
(ID "doctype")
(PUNCT ".")
(ID "publicId")
(PUNCT ",")
(ID "doctype")
(PUNCT ".")
(ID "systemId")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "doctype")
(PUNCT ".")
(ID "systemId")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ident")
(PUNCT "=")
(LIT "SYSTEM \"%s\"")
(PUNCT "%")
(ID "doctype")
(PUNCT ".")
(ID "systemId")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subset")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "nsattrs")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_getNSattrs")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "document")
(PUNCT "=")
(ID "_FRAGMENT_BUILDER_TEMPLATE")
(PUNCT "%")
(PUNCT "(")
(ID "ident")
(PUNCT ",")
(ID "subset")
(PUNCT ",")
(ID "nsattrs")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "Parse")
(PUNCT "(")
(ID "document")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(ID "fragment")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "fragment")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "fragment")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_getDeclarations")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Re-create the internal subset from the DocumentType node.\n\n        This is only needed if we don't already have the\n        internalSubset as a string.\n        ")
(NEWLINE)
(ID "doctype")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "context")
(PUNCT ".")
(ID "ownerDocument")
(PUNCT ".")
(ID "doctype")
(NEWLINE)
(ID "s")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD if)
(ID "doctype")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "doctype")
(PUNCT ".")
(ID "notations")
(PUNCT ".")
(ID "length")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "notation")
(PUNCT "=")
(ID "doctype")
(PUNCT ".")
(ID "notations")
(PUNCT ".")
(ID "item")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "+")
(LIT "\n  ")
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(LIT "%s<!NOTATION %s")
(PUNCT "%")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "notation")
(PUNCT ".")
(ID "nodeName")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "notation")
(PUNCT ".")
(ID "publicId")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "%s PUBLIC \"%s\"\n             \"%s\">")
(PUNCT "%")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "notation")
(PUNCT ".")
(ID "publicId")
(PUNCT ",")
(ID "notation")
(PUNCT ".")
(ID "systemId")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "%s SYSTEM \"%s\">")
(PUNCT "%")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "notation")
(PUNCT ".")
(ID "systemId")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "doctype")
(PUNCT ".")
(ID "entities")
(PUNCT ".")
(ID "length")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "entity")
(PUNCT "=")
(ID "doctype")
(PUNCT ".")
(ID "entities")
(PUNCT ".")
(ID "item")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "+")
(LIT "\n  ")
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(LIT "%s<!ENTITY %s")
(PUNCT "%")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "entity")
(PUNCT ".")
(ID "nodeName")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "entity")
(PUNCT ".")
(ID "publicId")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "%s PUBLIC \"%s\"\n             \"%s\"")
(PUNCT "%")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "entity")
(PUNCT ".")
(ID "publicId")
(PUNCT ",")
(ID "entity")
(PUNCT ".")
(ID "systemId")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "entity")
(PUNCT ".")
(ID "systemId")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "%s SYSTEM \"%s\"")
(PUNCT "%")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "entity")
(PUNCT ".")
(ID "systemId")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "%s \"%s\"")
(PUNCT "%")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "entity")
(PUNCT ".")
(ID "firstChild")
(PUNCT ".")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "entity")
(PUNCT ".")
(ID "notationName")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "%s NOTATION %s")
(PUNCT "%")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "entity")
(PUNCT ".")
(ID "notationName")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "+")
(LIT ">")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_getNSattrs")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "external_entity_ref_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "context")
(PUNCT ",")
(ID "base")
(PUNCT ",")
(ID "systemId")
(PUNCT ",")
(ID "publicId")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "systemId")
(PUNCT "==")
(ID "_FRAGMENT_BUILDER_INTERNAL_SYSTEM_ID")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "old_document")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(NEWLINE)
(ID "old_cur_node")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "curNode")
(NEWLINE)
(ID "parser")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_parser")
(PUNCT ".")
(ID "ExternalEntityParserCreate")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "originalDocument")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fragment")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT ".")
(ID "createDocumentFragment")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "fragment")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "Parse")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_source")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT "=")
(ID "old_cur_node")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "document")
(PUNCT "=")
(ID "old_document")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_source")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "ExpatBuilder")
(PUNCT ".")
(ID "external_entity_ref_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "context")
(PUNCT ",")
(ID "base")
(PUNCT ",")
(ID "systemId")
(PUNCT ",")
(ID "publicId")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Namespaces")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Mix-in class for builders; adds support for namespaces.")
(NEWLINE)
(KEYWORD def)
(ID "_initNamespaces")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_ns_ordered_prefixes")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "createParser")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create a new namespace-handling parser.")
(NEWLINE)
(ID "parser")
(PUNCT "=")
(ID "expat")
(PUNCT ".")
(ID "ParserCreate")
(PUNCT "(")
(ID "namespace_separator")
(PUNCT "=")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "namespace_prefixes")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD return)
(ID "parser")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "install")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parser")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Insert the namespace-handlers onto the parser.")
(NEWLINE)
(ID "ExpatBuilder")
(PUNCT ".")
(ID "install")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parser")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT ".")
(ID "namespace_declarations")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "StartNamespaceDeclHandler")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "start_namespace_decl_handler")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "start_namespace_decl_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "prefix")
(PUNCT ",")
(ID "uri")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Push this namespace declaration on our storage.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_ns_ordered_prefixes")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "prefix")
(PUNCT ",")
(ID "uri")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "start_element_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "attributes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT " ")
(KEYWORD in)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "uri")
(PUNCT ",")
(ID "localname")
(PUNCT ",")
(ID "prefix")
(PUNCT ",")
(ID "qname")
(PUNCT "=")
(ID "_parse_ns_name")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "uri")
(PUNCT "=")
(ID "EMPTY_NAMESPACE")
(NEWLINE)
(ID "qname")
(PUNCT "=")
(ID "name")
(NEWLINE)
(ID "localname")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "prefix")
(PUNCT "=")
(ID "EMPTY_PREFIX")
(NEWLINE)
(DEDENT)
(ID "node")
(PUNCT "=")
(ID "minidom")
(PUNCT ".")
(ID "Element")
(PUNCT "(")
(ID "qname")
(PUNCT ",")
(ID "uri")
(PUNCT ",")
(ID "prefix")
(PUNCT ",")
(ID "localname")
(PUNCT ")")
(NEWLINE)
(ID "node")
(PUNCT ".")
(ID "ownerDocument")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(NEWLINE)
(ID "_append_child")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT ",")
(ID "node")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT "=")
(ID "node")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_ns_ordered_prefixes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "prefix")
(PUNCT ",")
(ID "uri")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_ns_ordered_prefixes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "prefix")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "a")
(PUNCT "=")
(ID "minidom")
(PUNCT ".")
(ID "Attr")
(PUNCT "(")
(ID "_intern")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "xmlns:")
(PUNCT "+")
(ID "prefix")
(PUNCT ")")
(PUNCT ",")
(ID "XMLNS_NAMESPACE")
(PUNCT ",")
(ID "prefix")
(PUNCT ",")
(LIT "xmlns")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "a")
(PUNCT "=")
(ID "minidom")
(PUNCT ".")
(ID "Attr")
(PUNCT "(")
(LIT "xmlns")
(PUNCT ",")
(ID "XMLNS_NAMESPACE")
(PUNCT ",")
(LIT "xmlns")
(PUNCT ",")
(ID "EMPTY_PREFIX")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "a")
(PUNCT ".")
(ID "value")
(PUNCT "=")
(ID "uri")
(NEWLINE)
(ID "a")
(PUNCT ".")
(ID "ownerDocument")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(NEWLINE)
(ID "_set_attribute_node")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(ID "a")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_ns_ordered_prefixes")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "attributes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "node")
(PUNCT ".")
(ID "_ensure_attributes")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "_attrs")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "_attrs")
(NEWLINE)
(ID "_attrsNS")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "_attrsNS")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "attributes")
(PUNCT ")")
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "aname")
(PUNCT "=")
(ID "attributes")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(ID "value")
(PUNCT "=")
(ID "attributes")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(LIT " ")
(KEYWORD in)
(ID "aname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "uri")
(PUNCT ",")
(ID "localname")
(PUNCT ",")
(ID "prefix")
(PUNCT ",")
(ID "qname")
(PUNCT "=")
(ID "_parse_ns_name")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "aname")
(PUNCT ")")
(NEWLINE)
(ID "a")
(PUNCT "=")
(ID "minidom")
(PUNCT ".")
(ID "Attr")
(PUNCT "(")
(ID "qname")
(PUNCT ",")
(ID "uri")
(PUNCT ",")
(ID "localname")
(PUNCT ",")
(ID "prefix")
(PUNCT ")")
(NEWLINE)
(ID "_attrs")
(PUNCT "[")
(ID "qname")
(PUNCT "]")
(PUNCT "=")
(ID "a")
(NEWLINE)
(ID "_attrsNS")
(PUNCT "[")
(PUNCT "(")
(ID "uri")
(PUNCT ",")
(ID "localname")
(PUNCT ")")
(PUNCT "]")
(PUNCT "=")
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "a")
(PUNCT "=")
(ID "minidom")
(PUNCT ".")
(ID "Attr")
(PUNCT "(")
(ID "aname")
(PUNCT ",")
(ID "EMPTY_NAMESPACE")
(PUNCT ",")
(ID "aname")
(PUNCT ",")
(ID "EMPTY_PREFIX")
(PUNCT ")")
(NEWLINE)
(ID "_attrs")
(PUNCT "[")
(ID "aname")
(PUNCT "]")
(PUNCT "=")
(ID "a")
(NEWLINE)
(ID "_attrsNS")
(PUNCT "[")
(PUNCT "(")
(ID "EMPTY_NAMESPACE")
(PUNCT ",")
(ID "aname")
(PUNCT ")")
(PUNCT "]")
(PUNCT "=")
(ID "a")
(NEWLINE)
(DEDENT)
(ID "a")
(PUNCT ".")
(ID "ownerDocument")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "document")
(NEWLINE)
(ID "a")
(PUNCT ".")
(ID "value")
(PUNCT "=")
(ID "value")
(NEWLINE)
(ID "a")
(PUNCT ".")
(ID "ownerElement")
(PUNCT "=")
(ID "node")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "__debug__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "end_element_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "curNode")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "curNode")
(NEWLINE)
(KEYWORD if)
(LIT " ")
(KEYWORD in)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "uri")
(PUNCT ",")
(ID "localname")
(PUNCT ",")
(ID "prefix")
(PUNCT ",")
(ID "qname")
(PUNCT "=")
(ID "_parse_ns_name")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(PUNCT "(")
(ID "curNode")
(PUNCT ".")
(ID "namespaceURI")
(PUNCT "==")
(ID "uri")
(KEYWORD and)
(ID "curNode")
(PUNCT ".")
(ID "localName")
(PUNCT "==")
(ID "localname")
(KEYWORD and)
(ID "curNode")
(PUNCT ".")
(ID "prefix")
(PUNCT "==")
(ID "prefix")
(PUNCT ")")
(PUNCT ",")
(LIT "element stack messed up! (namespace)")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "curNode")
(PUNCT ".")
(ID "nodeName")
(PUNCT "==")
(ID "name")
(PUNCT ",")
(LIT "element stack messed up - bad nodeName")
(NEWLINE)
(KEYWORD assert)
(ID "curNode")
(PUNCT ".")
(ID "namespaceURI")
(PUNCT "==")
(ID "EMPTY_NAMESPACE")
(PUNCT ",")
(LIT "element stack messed up - bad namespaceURI")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "curNode")
(PUNCT "=")
(ID "curNode")
(PUNCT ".")
(ID "parentNode")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_finish_end_element")
(PUNCT "(")
(ID "curNode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ExpatBuilderNS")
(PUNCT "(")
(ID "Namespaces")
(PUNCT ",")
(ID "ExpatBuilder")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Document builder that supports namespaces.")
(NEWLINE)
(KEYWORD def)
(ID "reset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ExpatBuilder")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_initNamespaces")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "FragmentBuilderNS")
(PUNCT "(")
(ID "Namespaces")
(PUNCT ",")
(ID "FragmentBuilder")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Fragment builder that supports namespaces.")
(NEWLINE)
(KEYWORD def)
(ID "reset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "FragmentBuilder")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_initNamespaces")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_getNSattrs")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return string of namespace attributes from this element and\n        ancestors.")
(NEWLINE)
(ID "attrs")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "context")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "context")
(NEWLINE)
(ID "L")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(ID "context")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "context")
(PUNCT ",")
(LIT "_ns_prefix_uri")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "prefix")
(PUNCT ",")
(ID "uri")
(KEYWORD in)
(ID "context")
(PUNCT ".")
(ID "_ns_prefix_uri")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "prefix")
(KEYWORD in)
(ID "L")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "L")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "prefix")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "prefix")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "declname")
(PUNCT "=")
(LIT "xmlns:")
(PUNCT "+")
(ID "prefix")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "declname")
(PUNCT "=")
(LIT "xmlns")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "attrs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "attrs")
(PUNCT "=")
(LIT "%s\n    %s='%s'")
(PUNCT "%")
(PUNCT "(")
(ID "attrs")
(PUNCT ",")
(ID "declname")
(PUNCT ",")
(ID "uri")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "attrs")
(PUNCT "=")
(LIT " %s='%s'")
(PUNCT "%")
(PUNCT "(")
(ID "declname")
(PUNCT ",")
(ID "uri")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "context")
(PUNCT "=")
(ID "context")
(PUNCT ".")
(ID "parentNode")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "attrs")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ParseEscape")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Exception raised to short-circuit parsing in InternalSubsetExtractor.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "InternalSubsetExtractor")
(PUNCT "(")
(ID "ExpatBuilder")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "XML processor which can rip out the internal document type subset.")
(NEWLINE)
(ID "subset")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "getSubset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the internal subset as a string.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "subset")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parseFile")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ExpatBuilder")
(PUNCT ".")
(ID "parseFile")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ParseEscape")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "parseString")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "string")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ExpatBuilder")
(PUNCT ".")
(ID "parseString")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ParseEscape")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "install")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parser")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "StartDoctypeDeclHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "start_doctype_decl_handler")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "StartElementHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "start_element_handler")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "start_doctype_decl_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "publicId")
(PUNCT ",")
(ID "systemId")
(PUNCT ",")
(ID "has_internal_subset")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "has_internal_subset")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getParser")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subset")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "DefaultHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "subset")
(PUNCT ".")
(ID "append")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "EndDoctypeDeclHandler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "end_doctype_decl_handler")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ParseEscape")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "end_doctype_decl_handler")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "subset")
(PUNCT ")")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "\r\n")
(PUNCT ",")
(LIT "\n")
(PUNCT ")")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "\r")
(PUNCT ",")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subset")
(PUNCT "=")
(ID "s")
(NEWLINE)
(KEYWORD raise)
(ID "ParseEscape")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "start_element_handler")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "attrs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ParseEscape")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "parse")
(PUNCT "(")
(ID "file")
(PUNCT ",")
(ID "namespaces")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Parse a document, returning the resulting Document node.\n\n    'file' may be either a file name or an open file object.\n    ")
(NEWLINE)
(KEYWORD if)
(ID "namespaces")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "builder")
(PUNCT "=")
(ID "ExpatBuilderNS")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "builder")
(PUNCT "=")
(ID "ExpatBuilder")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "file")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "file")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(KEYWORD as)
(ID "fp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "builder")
(PUNCT ".")
(ID "parseFile")
(PUNCT "(")
(ID "fp")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "builder")
(PUNCT ".")
(ID "parseFile")
(PUNCT "(")
(ID "file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parseString")
(PUNCT "(")
(ID "string")
(PUNCT ",")
(ID "namespaces")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Parse a document from a string, returning the resulting\n    Document node.\n    ")
(NEWLINE)
(KEYWORD if)
(ID "namespaces")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "builder")
(PUNCT "=")
(ID "ExpatBuilderNS")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "builder")
(PUNCT "=")
(ID "ExpatBuilder")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "builder")
(PUNCT ".")
(ID "parseString")
(PUNCT "(")
(ID "string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parseFragment")
(PUNCT "(")
(ID "file")
(PUNCT ",")
(ID "context")
(PUNCT ",")
(ID "namespaces")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Parse a fragment of a document, given the context from which it\n    was originally extracted.  context should be the parent of the\n    node(s) which are in the fragment.\n\n    'file' may be either a file name or an open file object.\n    ")
(NEWLINE)
(KEYWORD if)
(ID "namespaces")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "builder")
(PUNCT "=")
(ID "FragmentBuilderNS")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "builder")
(PUNCT "=")
(ID "FragmentBuilder")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "file")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "file")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(KEYWORD as)
(ID "fp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "builder")
(PUNCT ".")
(ID "parseFile")
(PUNCT "(")
(ID "fp")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "builder")
(PUNCT ".")
(ID "parseFile")
(PUNCT "(")
(ID "file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parseFragmentString")
(PUNCT "(")
(ID "string")
(PUNCT ",")
(ID "context")
(PUNCT ",")
(ID "namespaces")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Parse a fragment of a document from a string, given the context\n    from which it was originally extracted.  context should be the\n    parent of the node(s) which are in the fragment.\n    ")
(NEWLINE)
(KEYWORD if)
(ID "namespaces")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "builder")
(PUNCT "=")
(ID "FragmentBuilderNS")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "builder")
(PUNCT "=")
(ID "FragmentBuilder")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "builder")
(PUNCT ".")
(ID "parseString")
(PUNCT "(")
(ID "string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "makeBuilder")
(PUNCT "(")
(ID "options")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create a builder based on an Options object.")
(NEWLINE)
(KEYWORD if)
(ID "options")
(PUNCT ".")
(ID "namespaces")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "ExpatBuilderNS")
(PUNCT "(")
(ID "options")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "ExpatBuilder")
(PUNCT "(")
(ID "options")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
