(LIT "Unittest main program")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "argparse")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "loader")
(PUNCT ",")
(ID "runner")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID "signals")
(KEYWORD import)
(ID "installHandler")
(NEWLINE)
(ID "__unittest")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "MAIN_EXAMPLES")
(PUNCT "=")
(LIT "Examples:\n  %(prog)s test_module               - run tests from test_module\n  %(prog)s module.TestClass          - run tests from module.TestClass\n  %(prog)s module.Class.test_method  - run specified test method\n")
(NEWLINE)
(ID "MODULE_EXAMPLES")
(PUNCT "=")
(LIT "Examples:\n  %(prog)s                           - run default set of tests\n  %(prog)s MyTestSuite               - run suite 'MyTestSuite'\n  %(prog)s MyTestCase.testSomething  - run MyTestCase.testSomething\n  %(prog)s MyTestCase                - run all 'test*' test methods\n                                       in MyTestCase\n")
(NEWLINE)
(KEYWORD def)
(ID "_convert_name")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isfile")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(KEYWORD and)
(ID "name")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT ".py")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isabs")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rel_path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "relpath")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "getcwd")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isabs")
(PUNCT "(")
(ID "rel_path")
(PUNCT ")")
(KEYWORD or)
(ID "rel_path")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "pardir")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "name")
(NEWLINE)
(DEDENT)
(ID "name")
(PUNCT "=")
(ID "rel_path")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "name")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 3)
(PUNCT "]")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "\\")
(PUNCT ",")
(LIT ".")
(PUNCT ")")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "/")
(PUNCT ",")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_convert_names")
(PUNCT "(")
(ID "names")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(ID "_convert_name")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "names")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "TestProgram")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "A command-line program that runs a set of tests; this is primarily\n       for making test modules conveniently executable.\n    ")
(NEWLINE)
(ID "module")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "verbosity")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "failfast")
(PUNCT "=")
(ID "catchbreak")
(PUNCT "=")
(ID "buffer")
(PUNCT "=")
(ID "progName")
(PUNCT "=")
(ID "warnings")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "_discovery_parser")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "module")
(PUNCT "=")
(LIT "__main__")
(PUNCT ",")
(ID "defaultTest")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "argv")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "testRunner")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "testLoader")
(PUNCT "=")
(ID "loader")
(PUNCT ".")
(ID "defaultTestLoader")
(PUNCT ",")
(ID "exit")
(PUNCT "=")
(KEYWORD True)
(PUNCT ",")
(ID "verbosity")
(PUNCT "=")
(LIT 1)
(PUNCT ",")
(ID "failfast")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "catchbreak")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "buffer")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "warnings")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "module")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "module")
(PUNCT "=")
(ID "__import__")
(PUNCT "(")
(ID "module")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "part")
(KEYWORD in)
(ID "module")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "module")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "module")
(PUNCT ",")
(ID "part")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "module")
(PUNCT "=")
(ID "module")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "argv")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "argv")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "argv")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "exit")
(PUNCT "=")
(ID "exit")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "failfast")
(PUNCT "=")
(ID "failfast")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "catchbreak")
(PUNCT "=")
(ID "catchbreak")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "verbosity")
(PUNCT "=")
(ID "verbosity")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "buffer")
(PUNCT "=")
(ID "buffer")
(NEWLINE)
(KEYWORD if)
(ID "warnings")
(KEYWORD is)
(KEYWORD None)
(KEYWORD and)
(KEYWORD not)
(ID "sys")
(PUNCT ".")
(ID "warnoptions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "warnings")
(PUNCT "=")
(LIT "default")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "warnings")
(PUNCT "=")
(ID "warnings")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "defaultTest")
(PUNCT "=")
(ID "defaultTest")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "testRunner")
(PUNCT "=")
(ID "testRunner")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "testLoader")
(PUNCT "=")
(ID "testLoader")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "progName")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "basename")
(PUNCT "(")
(ID "argv")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "parseArgs")
(PUNCT "(")
(ID "argv")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "runTests")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "usageExit")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "msg")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "msg")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_discovery_parser")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_initArgParsers")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_print_help")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_print_help")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "module")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_main_parser")
(PUNCT ".")
(ID "format_help")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "MAIN_EXAMPLES")
(PUNCT "%")
(PUNCT "{")
(LIT "prog")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "progName")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_discovery_parser")
(PUNCT ".")
(ID "print_help")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_main_parser")
(PUNCT ".")
(ID "format_help")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "MODULE_EXAMPLES")
(PUNCT "%")
(PUNCT "{")
(LIT "prog")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "progName")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "parseArgs")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "argv")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_initArgParsers")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "module")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "argv")
(PUNCT ")")
(PUNCT ">")
(LIT 1)
(KEYWORD and)
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(PUNCT "==")
(LIT "discover")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_do_discovery")
(PUNCT "(")
(ID "argv")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_main_parser")
(PUNCT ".")
(ID "parse_args")
(PUNCT "(")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "tests")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_do_discovery")
(PUNCT "(")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_main_parser")
(PUNCT ".")
(ID "parse_args")
(PUNCT "(")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "tests")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "testNames")
(PUNCT "=")
(ID "_convert_names")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tests")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "module")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "defaultTest")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "testNames")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "defaultTest")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "testNames")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "defaultTest")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "testNames")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "defaultTest")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "createTests")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "createTests")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "testNames")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "test")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "testLoader")
(PUNCT ".")
(ID "loadTestsFromModule")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "module")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "test")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "testLoader")
(PUNCT ".")
(ID "loadTestsFromNames")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "testNames")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "module")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_initArgParsers")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent_parser")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_getParentArgParser")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_main_parser")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_getMainArgParser")
(PUNCT "(")
(ID "parent_parser")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_discovery_parser")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_getDiscoveryArgParser")
(PUNCT "(")
(ID "parent_parser")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_getParentArgParser")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT "=")
(ID "argparse")
(PUNCT ".")
(ID "ArgumentParser")
(PUNCT "(")
(ID "add_help")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_argument")
(PUNCT "(")
(LIT "-v")
(PUNCT ",")
(LIT "--verbose")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "verbosity")
(PUNCT ",")
(ID "action")
(PUNCT "=")
(LIT "store_const")
(PUNCT ",")
(ID "const")
(PUNCT "=")
(LIT 2)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "Verbose output")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_argument")
(PUNCT "(")
(LIT "-q")
(PUNCT ",")
(LIT "--quiet")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "verbosity")
(PUNCT ",")
(ID "action")
(PUNCT "=")
(LIT "store_const")
(PUNCT ",")
(ID "const")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "Quiet output")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "failfast")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "add_argument")
(PUNCT "(")
(LIT "-f")
(PUNCT ",")
(LIT "--failfast")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "failfast")
(PUNCT ",")
(ID "action")
(PUNCT "=")
(LIT "store_true")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "Stop on first fail or error")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "failfast")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "catchbreak")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "add_argument")
(PUNCT "(")
(LIT "-c")
(PUNCT ",")
(LIT "--catch")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "catchbreak")
(PUNCT ",")
(ID "action")
(PUNCT "=")
(LIT "store_true")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "Catch ctrl-C and display results so far")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "catchbreak")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "buffer")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "add_argument")
(PUNCT "(")
(LIT "-b")
(PUNCT ",")
(LIT "--buffer")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "buffer")
(PUNCT ",")
(ID "action")
(PUNCT "=")
(LIT "store_true")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "Buffer stdout and stderr during tests")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "buffer")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "parser")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_getMainArgParser")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parent")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT "=")
(ID "argparse")
(PUNCT ".")
(ID "ArgumentParser")
(PUNCT "(")
(ID "parents")
(PUNCT "=")
(PUNCT "[")
(ID "parent")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "prog")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "progName")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "print_help")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_print_help")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_argument")
(PUNCT "(")
(LIT "tests")
(PUNCT ",")
(ID "nargs")
(PUNCT "=")
(LIT "*")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "a list of any number of test modules, ")
(LIT "classes and test methods.")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "parser")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_getDiscoveryArgParser")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parent")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT "=")
(ID "argparse")
(PUNCT ".")
(ID "ArgumentParser")
(PUNCT "(")
(ID "parents")
(PUNCT "=")
(PUNCT "[")
(ID "parent")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "prog")
(PUNCT "=")
(LIT "%s discover")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "progName")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "epilog")
(PUNCT "=")
(PUNCT "(")
(LIT "For test discovery all test modules must be ")
(LIT "importable from the top level directory of the ")
(LIT "project.")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_argument")
(PUNCT "(")
(LIT "-s")
(PUNCT ",")
(LIT "--start-directory")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "start")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "Directory to start discovery ('.' default)")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_argument")
(PUNCT "(")
(LIT "-p")
(PUNCT ",")
(LIT "--pattern")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "pattern")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "Pattern to match tests ('test*.py' default)")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_argument")
(PUNCT "(")
(LIT "-t")
(PUNCT ",")
(LIT "--top-level-directory")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "top")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "Top level directory of project (defaults to ")
(LIT "start directory)")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "arg")
(KEYWORD in)
(PUNCT "(")
(LIT "start")
(PUNCT ",")
(LIT "pattern")
(PUNCT ",")
(LIT "top")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "add_argument")
(PUNCT "(")
(ID "arg")
(PUNCT ",")
(ID "nargs")
(PUNCT "=")
(LIT "?")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(ID "argparse")
(PUNCT ".")
(ID "SUPPRESS")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(ID "argparse")
(PUNCT ".")
(ID "SUPPRESS")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "parser")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_do_discovery")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "argv")
(PUNCT ",")
(ID "Loader")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "start")
(PUNCT "=")
(LIT ".")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "pattern")
(PUNCT "=")
(LIT "test*.py")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "argv")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_discovery_parser")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_initArgParsers")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_discovery_parser")
(PUNCT ".")
(ID "parse_args")
(PUNCT "(")
(ID "argv")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "loader")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "testLoader")
(KEYWORD if)
(ID "Loader")
(KEYWORD is)
(KEYWORD None)
(KEYWORD else)
(ID "Loader")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "test")
(PUNCT "=")
(ID "loader")
(PUNCT ".")
(ID "discover")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "start")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "pattern")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "top")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "runTests")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "catchbreak")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "installHandler")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "testRunner")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "testRunner")
(PUNCT "=")
(ID "runner")
(PUNCT ".")
(ID "TextTestRunner")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "testRunner")
(PUNCT ",")
(ID "type")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "testRunner")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "testRunner")
(PUNCT "(")
(ID "verbosity")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "verbosity")
(PUNCT ",")
(ID "failfast")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "failfast")
(PUNCT ",")
(ID "buffer")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "buffer")
(PUNCT ",")
(ID "warnings")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "warnings")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "testRunner")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "testRunner")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "testRunner")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "testRunner")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "result")
(PUNCT "=")
(ID "testRunner")
(PUNCT ".")
(ID "run")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "test")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "exit")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "result")
(PUNCT ".")
(ID "wasSuccessful")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "main")
(PUNCT "=")
(ID "TestProgram")
(NEWLINE)
(ENDMARKER)
