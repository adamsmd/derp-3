(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "Client")
(PUNCT ",")
(LIT "Listener")
(PUNCT ",")
(LIT "Pipe")
(PUNCT ",")
(LIT "wait")
(PUNCT "]")
(NEWLINE)
(KEYWORD import)
(ID "io")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "socket")
(NEWLINE)
(KEYWORD import)
(ID "struct")
(NEWLINE)
(KEYWORD import)
(ID "time")
(NEWLINE)
(KEYWORD import)
(ID "tempfile")
(NEWLINE)
(KEYWORD import)
(ID "itertools")
(NEWLINE)
(KEYWORD import)
(ID "_multiprocessing")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "reduction")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "util")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "AuthenticationError")
(PUNCT ",")
(ID "BufferTooShort")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID "reduction")
(KEYWORD import)
(ID "ForkingPickler")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "_winapi")
(NEWLINE)
(KEYWORD from)
(ID "_winapi")
(KEYWORD import)
(ID "WAIT_OBJECT_0")
(PUNCT ",")
(ID "WAIT_ABANDONED_0")
(PUNCT ",")
(ID "WAIT_TIMEOUT")
(PUNCT ",")
(ID "INFINITE")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(ID "_winapi")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "BUFSIZE")
(PUNCT "=")
(LIT 8192)
(NEWLINE)
(ID "CONNECTION_TIMEOUT")
(PUNCT "=")
(LIT 20.0)
(NEWLINE)
(ID "_mmap_counter")
(PUNCT "=")
(ID "itertools")
(PUNCT ".")
(ID "count")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "default_family")
(PUNCT "=")
(LIT "AF_INET")
(NEWLINE)
(ID "families")
(PUNCT "=")
(PUNCT "[")
(LIT "AF_INET")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "socket")
(PUNCT ",")
(LIT "AF_UNIX")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "default_family")
(PUNCT "=")
(LIT "AF_UNIX")
(NEWLINE)
(ID "families")
(PUNCT "+=")
(PUNCT "[")
(LIT "AF_UNIX")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "default_family")
(PUNCT "=")
(LIT "AF_PIPE")
(NEWLINE)
(ID "families")
(PUNCT "+=")
(PUNCT "[")
(LIT "AF_PIPE")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_init_timeout")
(PUNCT "(")
(ID "timeout")
(PUNCT "=")
(ID "CONNECTION_TIMEOUT")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "time")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(PUNCT "+")
(ID "timeout")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_check_timeout")
(PUNCT "(")
(ID "t")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "time")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(PUNCT ">")
(ID "t")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "arbitrary_address")
(PUNCT "(")
(ID "family")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Return an arbitrary free address for the given family\n    ")
(NEWLINE)
(KEYWORD if)
(ID "family")
(PUNCT "==")
(LIT "AF_INET")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(LIT "localhost")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "family")
(PUNCT "==")
(LIT "AF_UNIX")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "tempfile")
(PUNCT ".")
(ID "mktemp")
(PUNCT "(")
(ID "prefix")
(PUNCT "=")
(LIT "listener-")
(PUNCT ",")
(ID "dir")
(PUNCT "=")
(ID "util")
(PUNCT ".")
(ID "get_temp_dir")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "family")
(PUNCT "==")
(LIT "AF_PIPE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "tempfile")
(PUNCT ".")
(ID "mktemp")
(PUNCT "(")
(ID "prefix")
(PUNCT "=")
(LIT "\\\\.\\pipe\\pyc-%d-%d-")
(PUNCT "%")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "getpid")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "next")
(PUNCT "(")
(ID "_mmap_counter")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID "dir")
(PUNCT "=")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "unrecognized family")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_validate_family")
(PUNCT "(")
(ID "family")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Checks if the family is valid for the current environment.\n    ")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "!=")
(LIT "win32")
(KEYWORD and)
(ID "family")
(PUNCT "==")
(LIT "AF_PIPE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Family %s is not recognized.")
(PUNCT "%")
(ID "family")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(KEYWORD and)
(ID "family")
(PUNCT "==")
(LIT "AF_UNIX")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "socket")
(PUNCT ",")
(ID "family")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Family %s is not recognized.")
(PUNCT "%")
(ID "family")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "address_type")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Return the types of the address\n\n    This can be 'AF_INET', 'AF_UNIX', or 'AF_PIPE'\n    ")
(NEWLINE)
(KEYWORD if)
(ID "type")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(PUNCT "==")
(ID "tuple")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "AF_INET")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "type")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(KEYWORD is)
(ID "str")
(KEYWORD and)
(ID "address")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "\\\\")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "AF_PIPE")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "type")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(KEYWORD is)
(ID "str")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "AF_UNIX")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "address type of %r unrecognized")
(PUNCT "%")
(ID "address")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_ConnectionBase")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_handle")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "handle")
(PUNCT ",")
(ID "readable")
(PUNCT "=")
(KEYWORD True)
(PUNCT ",")
(ID "writable")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "handle")
(PUNCT "=")
(ID "handle")
(PUNCT ".")
(ID "__index__")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "handle")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "invalid handle")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "readable")
(KEYWORD and)
(KEYWORD not)
(ID "writable")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "at least one of `readable` and `writable` must be True")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT "=")
(ID "handle")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_readable")
(PUNCT "=")
(ID "readable")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_writable")
(PUNCT "=")
(ID "writable")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__del__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_handle")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_check_closed")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_handle")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT "handle is closed")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_check_readable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_readable")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT "connection is write-only")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_check_writable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_writable")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT "connection is read-only")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_bad_message_length")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_writable")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_readable")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT "bad message length")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "closed")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "True if the connection is closed")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_handle")
(KEYWORD is)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "readable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "True if the connection is readable")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_readable")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "writable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "True if the connection is writable")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_writable")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "fileno")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "File descriptor or handle of the connection")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_closed")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_handle")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Close the connection")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_handle")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "send_bytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "buf")
(PUNCT ",")
(ID "offset")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "size")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Send the bytes data from a bytes-like object")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_closed")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_writable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "m")
(PUNCT "=")
(ID "memoryview")
(PUNCT "(")
(ID "buf")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "m")
(PUNCT ".")
(ID "itemsize")
(PUNCT ">")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT "=")
(ID "memoryview")
(PUNCT "(")
(ID "bytes")
(PUNCT "(")
(ID "m")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "n")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "m")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "offset")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "offset is negative")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "n")
(PUNCT "<")
(ID "offset")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "buffer length < offset")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "size")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "size")
(PUNCT "=")
(ID "n")
(PUNCT "-")
(ID "offset")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "size")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "size is negative")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "offset")
(PUNCT "+")
(ID "size")
(PUNCT ">")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "buffer length < offset + size")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_send_bytes")
(PUNCT "(")
(ID "m")
(PUNCT "[")
(ID "offset")
(PUNCT ":")
(ID "offset")
(PUNCT "+")
(ID "size")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Send a (picklable) object")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_closed")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_writable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_send_bytes")
(PUNCT "(")
(ID "ForkingPickler")
(PUNCT ".")
(ID "dumps")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "recv_bytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "maxlength")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Receive bytes data as a bytes object.\n        ")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_closed")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_readable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "maxlength")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID "maxlength")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "negative maxlength")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "buf")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_recv_bytes")
(PUNCT "(")
(ID "maxlength")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "buf")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_bad_message_length")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "buf")
(PUNCT ".")
(ID "getvalue")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "recv_bytes_into")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "buf")
(PUNCT ",")
(ID "offset")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Receive bytes data into a writeable bytes-like object.\n        Return the number of bytes read.\n        ")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_closed")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_readable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD with)
(ID "memoryview")
(PUNCT "(")
(ID "buf")
(PUNCT ")")
(KEYWORD as)
(ID "m")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "itemsize")
(PUNCT "=")
(ID "m")
(PUNCT ".")
(ID "itemsize")
(NEWLINE)
(ID "bytesize")
(PUNCT "=")
(ID "itemsize")
(PUNCT "*")
(ID "len")
(PUNCT "(")
(ID "m")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "offset")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "negative offset")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "offset")
(PUNCT ">")
(ID "bytesize")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "offset too large")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_recv_bytes")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "size")
(PUNCT "=")
(ID "result")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "bytesize")
(PUNCT "<")
(ID "offset")
(PUNCT "+")
(ID "size")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "BufferTooShort")
(PUNCT "(")
(ID "result")
(PUNCT ".")
(ID "getvalue")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT ".")
(ID "readinto")
(PUNCT "(")
(ID "m")
(PUNCT "[")
(ID "offset")
(PUNCT "//")
(ID "itemsize")
(PUNCT ":")
(PUNCT "(")
(ID "offset")
(PUNCT "+")
(ID "size")
(PUNCT ")")
(PUNCT "//")
(ID "itemsize")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "size")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "recv")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Receive a (picklable) object")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_closed")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_readable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "buf")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_recv_bytes")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "ForkingPickler")
(PUNCT ".")
(ID "loads")
(PUNCT "(")
(ID "buf")
(PUNCT ".")
(ID "getbuffer")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "poll")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(LIT 0.0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Whether there is any input available to be read")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_closed")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_readable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_poll")
(PUNCT "(")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__enter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__exit__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "exc_type")
(PUNCT ",")
(ID "exc_value")
(PUNCT ",")
(ID "exc_tb")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "_winapi")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD class)
(ID "PipeConnection")
(PUNCT "(")
(ID "_ConnectionBase")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Connection class based on a Windows named pipe.\n        Overlapped I/O is used, so the handles must have been created\n        with FILE_FLAG_OVERLAPPED.\n        ")
(NEWLINE)
(ID "_got_empty_message")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID "_close")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "_CloseHandle")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "CloseHandle")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_CloseHandle")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_send_bytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "buf")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT ",")
(ID "err")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "WriteFile")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT ",")
(ID "buf")
(PUNCT ",")
(ID "overlapped")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "err")
(PUNCT "==")
(ID "_winapi")
(PUNCT ".")
(ID "ERROR_IO_PENDING")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "waitres")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "WaitForMultipleObjects")
(PUNCT "(")
(PUNCT "[")
(ID "ov")
(PUNCT ".")
(ID "event")
(PUNCT "]")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(ID "INFINITE")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "waitres")
(PUNCT "==")
(ID "WAIT_OBJECT_0")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT ".")
(ID "cancel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nwritten")
(PUNCT ",")
(ID "err")
(PUNCT "=")
(ID "ov")
(PUNCT ".")
(ID "GetOverlappedResult")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD assert)
(ID "err")
(PUNCT "==")
(LIT 0)
(NEWLINE)
(KEYWORD assert)
(ID "nwritten")
(PUNCT "==")
(ID "len")
(PUNCT "(")
(ID "buf")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_recv_bytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "maxsize")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_got_empty_message")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_got_empty_message")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD return)
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bsize")
(PUNCT "=")
(LIT 128)
(KEYWORD if)
(ID "maxsize")
(KEYWORD is)
(KEYWORD None)
(KEYWORD else)
(ID "min")
(PUNCT "(")
(ID "maxsize")
(PUNCT ",")
(LIT 128)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT ",")
(ID "err")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "ReadFile")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT ",")
(ID "bsize")
(PUNCT ",")
(ID "overlapped")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "err")
(PUNCT "==")
(ID "_winapi")
(PUNCT ".")
(ID "ERROR_IO_PENDING")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "waitres")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "WaitForMultipleObjects")
(PUNCT "(")
(PUNCT "[")
(ID "ov")
(PUNCT ".")
(ID "event")
(PUNCT "]")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(ID "INFINITE")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "waitres")
(PUNCT "==")
(ID "WAIT_OBJECT_0")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT ".")
(ID "cancel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nread")
(PUNCT ",")
(ID "err")
(PUNCT "=")
(ID "ov")
(PUNCT ".")
(ID "GetOverlappedResult")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "err")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "ov")
(PUNCT ".")
(ID "getbuffer")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "f")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "err")
(PUNCT "==")
(ID "_winapi")
(PUNCT ".")
(ID "ERROR_MORE_DATA")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_get_more_data")
(PUNCT "(")
(ID "ov")
(PUNCT ",")
(ID "maxsize")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "winerror")
(PUNCT "==")
(ID "_winapi")
(PUNCT ".")
(ID "ERROR_BROKEN_PIPE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "EOFError")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "shouldn't get here; expected KeyboardInterrupt")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_poll")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "timeout")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_got_empty_message")
(KEYWORD or)
(ID "_winapi")
(PUNCT ".")
(ID "PeekNamedPipe")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "!=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "wait")
(PUNCT "(")
(PUNCT "[")
(ID "self")
(PUNCT "]")
(PUNCT ",")
(ID "timeout")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_more_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "ov")
(PUNCT ",")
(ID "maxsize")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "buf")
(PUNCT "=")
(ID "ov")
(PUNCT ".")
(ID "getbuffer")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "f")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "buf")
(PUNCT ")")
(NEWLINE)
(ID "left")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "PeekNamedPipe")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD assert)
(ID "left")
(PUNCT ">")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "maxsize")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID "len")
(PUNCT "(")
(ID "buf")
(PUNCT ")")
(PUNCT "+")
(ID "left")
(PUNCT ">")
(ID "maxsize")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_bad_message_length")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "ov")
(PUNCT ",")
(ID "err")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "ReadFile")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT ",")
(ID "left")
(PUNCT ",")
(ID "overlapped")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID "rbytes")
(PUNCT ",")
(ID "err")
(PUNCT "=")
(ID "ov")
(PUNCT ".")
(ID "GetOverlappedResult")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "err")
(PUNCT "==")
(LIT 0)
(NEWLINE)
(KEYWORD assert)
(ID "rbytes")
(PUNCT "==")
(ID "left")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "ov")
(PUNCT ".")
(ID "getbuffer")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "f")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Connection")
(PUNCT "(")
(ID "_ConnectionBase")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Connection class based on an arbitrary file descriptor (Unix only), or\n    a socket handle (Windows).\n    ")
(NEWLINE)
(KEYWORD if)
(ID "_winapi")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "_close")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "_close")
(PUNCT "=")
(ID "_multiprocessing")
(PUNCT ".")
(ID "closesocket")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_close")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "_write")
(PUNCT "=")
(ID "_multiprocessing")
(PUNCT ".")
(ID "send")
(NEWLINE)
(ID "_read")
(PUNCT "=")
(ID "_multiprocessing")
(PUNCT ".")
(ID "recv")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "_close")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "_close")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "close")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_close")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "_write")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "write")
(NEWLINE)
(ID "_read")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "read")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_send")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "buf")
(PUNCT ",")
(ID "write")
(PUNCT "=")
(ID "_write")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "remaining")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "buf")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(ID "write")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT ",")
(ID "buf")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "InterruptedError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "remaining")
(PUNCT "-=")
(ID "n")
(NEWLINE)
(KEYWORD if)
(ID "remaining")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "buf")
(PUNCT "=")
(ID "buf")
(PUNCT "[")
(ID "n")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_recv")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "size")
(PUNCT ",")
(ID "read")
(PUNCT "=")
(ID "_read")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "buf")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "handle")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_handle")
(NEWLINE)
(ID "remaining")
(PUNCT "=")
(ID "size")
(NEWLINE)
(KEYWORD while)
(ID "remaining")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "chunk")
(PUNCT "=")
(ID "read")
(PUNCT "(")
(ID "handle")
(PUNCT ",")
(ID "remaining")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "InterruptedError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "n")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "n")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "remaining")
(PUNCT "==")
(ID "size")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "EOFError")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT "got end of file during message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "buf")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(ID "remaining")
(PUNCT "-=")
(ID "n")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "buf")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_send_bytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "buf")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "buf")
(PUNCT ")")
(NEWLINE)
(ID "header")
(PUNCT "=")
(ID "struct")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(LIT "!i")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "n")
(PUNCT ">")
(LIT 16384)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "chunks")
(PUNCT "=")
(PUNCT "[")
(ID "header")
(PUNCT ",")
(ID "buf")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "n")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "chunks")
(PUNCT "=")
(PUNCT "[")
(ID "header")
(PUNCT "+")
(ID "buf")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "chunks")
(PUNCT "=")
(PUNCT "[")
(ID "header")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "chunk")
(KEYWORD in)
(ID "chunks")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_send")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_recv_bytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "maxsize")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "buf")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_recv")
(PUNCT "(")
(LIT 4)
(PUNCT ")")
(NEWLINE)
(ID "size")
(PUNCT ",")
(PUNCT "=")
(ID "struct")
(PUNCT ".")
(ID "unpack")
(PUNCT "(")
(LIT "!i")
(PUNCT ",")
(ID "buf")
(PUNCT ".")
(ID "getvalue")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "maxsize")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID "size")
(PUNCT ">")
(ID "maxsize")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_recv")
(PUNCT "(")
(ID "size")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_poll")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "timeout")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "r")
(PUNCT "=")
(ID "wait")
(PUNCT "(")
(PUNCT "[")
(ID "self")
(PUNCT "]")
(PUNCT ",")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "r")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Listener")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Returns a listener object.\n\n    This is a wrapper for a bound socket which is 'listening' for\n    connections, or for a Windows named pipe.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "address")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "family")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "backlog")
(PUNCT "=")
(LIT 1)
(PUNCT ",")
(ID "authkey")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "family")
(PUNCT "=")
(ID "family")
(KEYWORD or)
(PUNCT "(")
(ID "address")
(KEYWORD and)
(ID "address_type")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(PUNCT ")")
(KEYWORD or)
(ID "default_family")
(NEWLINE)
(ID "address")
(PUNCT "=")
(ID "address")
(KEYWORD or)
(ID "arbitrary_address")
(PUNCT "(")
(ID "family")
(PUNCT ")")
(NEWLINE)
(ID "_validate_family")
(PUNCT "(")
(ID "family")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "family")
(PUNCT "==")
(LIT "AF_PIPE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_listener")
(PUNCT "=")
(ID "PipeListener")
(PUNCT "(")
(ID "address")
(PUNCT ",")
(ID "backlog")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_listener")
(PUNCT "=")
(ID "SocketListener")
(PUNCT "(")
(ID "address")
(PUNCT ",")
(ID "family")
(PUNCT ",")
(ID "backlog")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "authkey")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "authkey")
(PUNCT ",")
(ID "bytes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "authkey should be a byte string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_authkey")
(PUNCT "=")
(ID "authkey")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "accept")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Accept a connection on the bound socket or named pipe of `self`.\n\n        Returns a `Connection` object.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_listener")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT "listener is closed")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "c")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_listener")
(PUNCT ".")
(ID "accept")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_authkey")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "deliver_challenge")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_authkey")
(PUNCT ")")
(NEWLINE)
(ID "answer_challenge")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_authkey")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "c")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Close the bound socket or named pipe of `self`.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_listener")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_listener")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_listener")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "address")
(PUNCT "=")
(ID "property")
(PUNCT "(")
(KEYWORD lambda)
(ID "self")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "_listener")
(PUNCT ".")
(ID "_address")
(PUNCT ")")
(NEWLINE)
(ID "last_accepted")
(PUNCT "=")
(ID "property")
(PUNCT "(")
(KEYWORD lambda)
(ID "self")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "_listener")
(PUNCT ".")
(ID "_last_accepted")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "__enter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__exit__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "exc_type")
(PUNCT ",")
(ID "exc_value")
(PUNCT ",")
(ID "exc_tb")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "Client")
(PUNCT "(")
(ID "address")
(PUNCT ",")
(ID "family")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "authkey")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Returns a connection to the address of a `Listener`\n    ")
(NEWLINE)
(ID "family")
(PUNCT "=")
(ID "family")
(KEYWORD or)
(ID "address_type")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(NEWLINE)
(ID "_validate_family")
(PUNCT "(")
(ID "family")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "family")
(PUNCT "==")
(LIT "AF_PIPE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "PipeClient")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "SocketClient")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "authkey")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "authkey")
(PUNCT ",")
(ID "bytes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "authkey should be a byte string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "authkey")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "answer_challenge")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(ID "authkey")
(PUNCT ")")
(NEWLINE)
(ID "deliver_challenge")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(ID "authkey")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "c")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "!=")
(LIT "win32")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "Pipe")
(PUNCT "(")
(ID "duplex")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Returns pair of connection objects at either end of a pipe\n        ")
(NEWLINE)
(KEYWORD if)
(ID "duplex")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s1")
(PUNCT ",")
(ID "s2")
(PUNCT "=")
(ID "socket")
(PUNCT ".")
(ID "socketpair")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "s1")
(PUNCT ".")
(ID "setblocking")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID "s2")
(PUNCT ".")
(ID "setblocking")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID "c1")
(PUNCT "=")
(ID "Connection")
(PUNCT "(")
(ID "s1")
(PUNCT ".")
(ID "detach")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "c2")
(PUNCT "=")
(ID "Connection")
(PUNCT "(")
(ID "s2")
(PUNCT ".")
(ID "detach")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd1")
(PUNCT ",")
(ID "fd2")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "pipe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "c1")
(PUNCT "=")
(ID "Connection")
(PUNCT "(")
(ID "fd1")
(PUNCT ",")
(ID "writable")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID "c2")
(PUNCT "=")
(ID "Connection")
(PUNCT "(")
(ID "fd2")
(PUNCT ",")
(ID "readable")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "c1")
(PUNCT ",")
(ID "c2")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "Pipe")
(PUNCT "(")
(ID "duplex")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Returns pair of connection objects at either end of a pipe\n        ")
(NEWLINE)
(ID "address")
(PUNCT "=")
(ID "arbitrary_address")
(PUNCT "(")
(LIT "AF_PIPE")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "duplex")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "openmode")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_ACCESS_DUPLEX")
(NEWLINE)
(ID "access")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "GENERIC_READ")
(PUNCT "|")
(ID "_winapi")
(PUNCT ".")
(ID "GENERIC_WRITE")
(NEWLINE)
(ID "obsize")
(PUNCT ",")
(ID "ibsize")
(PUNCT "=")
(ID "BUFSIZE")
(PUNCT ",")
(ID "BUFSIZE")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "openmode")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_ACCESS_INBOUND")
(NEWLINE)
(ID "access")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "GENERIC_WRITE")
(NEWLINE)
(ID "obsize")
(PUNCT ",")
(ID "ibsize")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "BUFSIZE")
(NEWLINE)
(DEDENT)
(ID "h1")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "CreateNamedPipe")
(PUNCT "(")
(ID "address")
(PUNCT ",")
(ID "openmode")
(PUNCT "|")
(ID "_winapi")
(PUNCT ".")
(ID "FILE_FLAG_OVERLAPPED")
(PUNCT "|")
(ID "_winapi")
(PUNCT ".")
(ID "FILE_FLAG_FIRST_PIPE_INSTANCE")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_TYPE_MESSAGE")
(PUNCT "|")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_READMODE_MESSAGE")
(PUNCT "|")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_WAIT")
(PUNCT ",")
(LIT 1)
(PUNCT ",")
(ID "obsize")
(PUNCT ",")
(ID "ibsize")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "NMPWAIT_WAIT_FOREVER")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "NULL")
(PUNCT ")")
(NEWLINE)
(ID "h2")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "CreateFile")
(PUNCT "(")
(ID "address")
(PUNCT ",")
(ID "access")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "NULL")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "OPEN_EXISTING")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "FILE_FLAG_OVERLAPPED")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "NULL")
(PUNCT ")")
(NEWLINE)
(ID "_winapi")
(PUNCT ".")
(ID "SetNamedPipeHandleState")
(PUNCT "(")
(ID "h2")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_READMODE_MESSAGE")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "overlapped")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "ConnectNamedPipe")
(PUNCT "(")
(ID "h1")
(PUNCT ",")
(ID "overlapped")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID "_")
(PUNCT ",")
(ID "err")
(PUNCT "=")
(ID "overlapped")
(PUNCT ".")
(ID "GetOverlappedResult")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "err")
(PUNCT "==")
(LIT 0)
(NEWLINE)
(ID "c1")
(PUNCT "=")
(ID "PipeConnection")
(PUNCT "(")
(ID "h1")
(PUNCT ",")
(ID "writable")
(PUNCT "=")
(ID "duplex")
(PUNCT ")")
(NEWLINE)
(ID "c2")
(PUNCT "=")
(ID "PipeConnection")
(PUNCT "(")
(ID "h2")
(PUNCT ",")
(ID "readable")
(PUNCT "=")
(ID "duplex")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "c1")
(PUNCT ",")
(ID "c2")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "SocketListener")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Representation of a socket which is bound to an address and listening\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "address")
(PUNCT ",")
(ID "family")
(PUNCT ",")
(ID "backlog")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_socket")
(PUNCT "=")
(ID "socket")
(PUNCT ".")
(ID "socket")
(PUNCT "(")
(ID "getattr")
(PUNCT "(")
(ID "socket")
(PUNCT ",")
(ID "family")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "name")
(PUNCT "==")
(LIT "posix")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_socket")
(PUNCT ".")
(ID "setsockopt")
(PUNCT "(")
(ID "socket")
(PUNCT ".")
(ID "SOL_SOCKET")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "SO_REUSEADDR")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_socket")
(PUNCT ".")
(ID "setblocking")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_socket")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_socket")
(PUNCT ".")
(ID "listen")
(PUNCT "(")
(ID "backlog")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_address")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_socket")
(PUNCT ".")
(ID "getsockname")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_socket")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_family")
(PUNCT "=")
(ID "family")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_last_accepted")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "family")
(PUNCT "==")
(LIT "AF_UNIX")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_unlink")
(PUNCT "=")
(ID "util")
(PUNCT ".")
(ID "Finalize")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "unlink")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(PUNCT "(")
(ID "address")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(ID "exitpriority")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_unlink")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "accept")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_last_accepted")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_socket")
(PUNCT ".")
(ID "accept")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "InterruptedError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "s")
(PUNCT ".")
(ID "setblocking")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "Connection")
(PUNCT "(")
(ID "s")
(PUNCT ".")
(ID "detach")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_socket")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_unlink")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_unlink")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "SocketClient")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Return a connection object connected to the socket given by `address`\n    ")
(NEWLINE)
(ID "family")
(PUNCT "=")
(ID "address_type")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(NEWLINE)
(KEYWORD with)
(ID "socket")
(PUNCT ".")
(ID "socket")
(PUNCT "(")
(ID "getattr")
(PUNCT "(")
(ID "socket")
(PUNCT ",")
(ID "family")
(PUNCT ")")
(PUNCT ")")
(KEYWORD as)
(ID "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT ".")
(ID "setblocking")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT ".")
(ID "connect")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "Connection")
(PUNCT "(")
(ID "s")
(PUNCT ".")
(ID "detach")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD class)
(ID "PipeListener")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Representation of a named pipe\n        ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "address")
(PUNCT ",")
(ID "backlog")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_address")
(PUNCT "=")
(ID "address")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_handle_queue")
(PUNCT "=")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_new_handle")
(PUNCT "(")
(ID "first")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_last_accepted")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "util")
(PUNCT ".")
(ID "sub_debug")
(PUNCT "(")
(LIT "listener created with address=%r")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_address")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "=")
(ID "util")
(PUNCT ".")
(ID "Finalize")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "PipeListener")
(PUNCT ".")
(ID "_finalize_pipe_listener")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_handle_queue")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_address")
(PUNCT ")")
(PUNCT ",")
(ID "exitpriority")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_new_handle")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "first")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_ACCESS_DUPLEX")
(PUNCT "|")
(ID "_winapi")
(PUNCT ".")
(ID "FILE_FLAG_OVERLAPPED")
(NEWLINE)
(KEYWORD if)
(ID "first")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "|=")
(ID "_winapi")
(PUNCT ".")
(ID "FILE_FLAG_FIRST_PIPE_INSTANCE")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_winapi")
(PUNCT ".")
(ID "CreateNamedPipe")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_address")
(PUNCT ",")
(ID "flags")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_TYPE_MESSAGE")
(PUNCT "|")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_READMODE_MESSAGE")
(PUNCT "|")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_WAIT")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_UNLIMITED_INSTANCES")
(PUNCT ",")
(ID "BUFSIZE")
(PUNCT ",")
(ID "BUFSIZE")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "NMPWAIT_WAIT_FOREVER")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "NULL")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "accept")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_handle_queue")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_new_handle")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "handle")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_handle_queue")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "ConnectNamedPipe")
(PUNCT "(")
(ID "handle")
(PUNCT ",")
(ID "overlapped")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "winerror")
(PUNCT "!=")
(ID "_winapi")
(PUNCT ".")
(ID "ERROR_NO_DATA")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "res")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "WaitForMultipleObjects")
(PUNCT "(")
(PUNCT "[")
(ID "ov")
(PUNCT ".")
(ID "event")
(PUNCT "]")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(ID "INFINITE")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT ".")
(ID "cancel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "_winapi")
(PUNCT ".")
(ID "CloseHandle")
(PUNCT "(")
(ID "handle")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_")
(PUNCT ",")
(ID "err")
(PUNCT "=")
(ID "ov")
(PUNCT ".")
(ID "GetOverlappedResult")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "err")
(PUNCT "==")
(LIT 0)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "PipeConnection")
(PUNCT "(")
(ID "handle")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "staticmethod")
(NEWLINE)
(KEYWORD def)
(ID "_finalize_pipe_listener")
(PUNCT "(")
(ID "queue")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "sub_debug")
(PUNCT "(")
(LIT "closing listener with address=%r")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "handle")
(KEYWORD in)
(ID "queue")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_winapi")
(PUNCT ".")
(ID "CloseHandle")
(PUNCT "(")
(ID "handle")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "PipeClient")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Return a connection object connected to the pipe given by `address`\n        ")
(NEWLINE)
(ID "t")
(PUNCT "=")
(ID "_init_timeout")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_winapi")
(PUNCT ".")
(ID "WaitNamedPipe")
(PUNCT "(")
(ID "address")
(PUNCT ",")
(LIT 1000)
(PUNCT ")")
(NEWLINE)
(ID "h")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "CreateFile")
(PUNCT "(")
(ID "address")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "GENERIC_READ")
(PUNCT "|")
(ID "_winapi")
(PUNCT ".")
(ID "GENERIC_WRITE")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "NULL")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "OPEN_EXISTING")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "FILE_FLAG_OVERLAPPED")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "NULL")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "winerror")
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(ID "_winapi")
(PUNCT ".")
(ID "ERROR_SEM_TIMEOUT")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "ERROR_PIPE_BUSY")
(PUNCT ")")
(KEYWORD or)
(ID "_check_timeout")
(PUNCT "(")
(ID "t")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(ID "_winapi")
(PUNCT ".")
(ID "SetNamedPipeHandleState")
(PUNCT "(")
(ID "h")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_READMODE_MESSAGE")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "PipeConnection")
(PUNCT "(")
(ID "h")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "MESSAGE_LENGTH")
(PUNCT "=")
(LIT 20)
(NEWLINE)
(ID "CHALLENGE")
(PUNCT "=")
(LIT #"#CHALLENGE#")
(NEWLINE)
(ID "WELCOME")
(PUNCT "=")
(LIT #"#WELCOME#")
(NEWLINE)
(ID "FAILURE")
(PUNCT "=")
(LIT #"#FAILURE#")
(NEWLINE)
(KEYWORD def)
(ID "deliver_challenge")
(PUNCT "(")
(ID "connection")
(PUNCT ",")
(ID "authkey")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "hmac")
(NEWLINE)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "authkey")
(PUNCT ",")
(ID "bytes")
(PUNCT ")")
(NEWLINE)
(ID "message")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "urandom")
(PUNCT "(")
(ID "MESSAGE_LENGTH")
(PUNCT ")")
(NEWLINE)
(ID "connection")
(PUNCT ".")
(ID "send_bytes")
(PUNCT "(")
(ID "CHALLENGE")
(PUNCT "+")
(ID "message")
(PUNCT ")")
(NEWLINE)
(ID "digest")
(PUNCT "=")
(ID "hmac")
(PUNCT ".")
(ID "new")
(PUNCT "(")
(ID "authkey")
(PUNCT ",")
(ID "message")
(PUNCT ",")
(LIT "md5")
(PUNCT ")")
(PUNCT ".")
(ID "digest")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "response")
(PUNCT "=")
(ID "connection")
(PUNCT ".")
(ID "recv_bytes")
(PUNCT "(")
(LIT 256)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "response")
(PUNCT "==")
(ID "digest")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "connection")
(PUNCT ".")
(ID "send_bytes")
(PUNCT "(")
(ID "WELCOME")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "connection")
(PUNCT ".")
(ID "send_bytes")
(PUNCT "(")
(ID "FAILURE")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "AuthenticationError")
(PUNCT "(")
(LIT "digest received was wrong")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "answer_challenge")
(PUNCT "(")
(ID "connection")
(PUNCT ",")
(ID "authkey")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "hmac")
(NEWLINE)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "authkey")
(PUNCT ",")
(ID "bytes")
(PUNCT ")")
(NEWLINE)
(ID "message")
(PUNCT "=")
(ID "connection")
(PUNCT ".")
(ID "recv_bytes")
(PUNCT "(")
(LIT 256)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "message")
(PUNCT "[")
(PUNCT ":")
(ID "len")
(PUNCT "(")
(ID "CHALLENGE")
(PUNCT ")")
(PUNCT "]")
(PUNCT "==")
(ID "CHALLENGE")
(PUNCT ",")
(LIT "message = %r")
(PUNCT "%")
(ID "message")
(NEWLINE)
(ID "message")
(PUNCT "=")
(ID "message")
(PUNCT "[")
(ID "len")
(PUNCT "(")
(ID "CHALLENGE")
(PUNCT ")")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "digest")
(PUNCT "=")
(ID "hmac")
(PUNCT ".")
(ID "new")
(PUNCT "(")
(ID "authkey")
(PUNCT ",")
(ID "message")
(PUNCT ",")
(LIT "md5")
(PUNCT ")")
(PUNCT ".")
(ID "digest")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "connection")
(PUNCT ".")
(ID "send_bytes")
(PUNCT "(")
(ID "digest")
(PUNCT ")")
(NEWLINE)
(ID "response")
(PUNCT "=")
(ID "connection")
(PUNCT ".")
(ID "recv_bytes")
(PUNCT "(")
(LIT 256)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "response")
(PUNCT "!=")
(ID "WELCOME")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "AuthenticationError")
(PUNCT "(")
(LIT "digest sent was rejected")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ConnectionWrapper")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "dumps")
(PUNCT ",")
(ID "loads")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT "=")
(ID "conn")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_dumps")
(PUNCT "=")
(ID "dumps")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loads")
(PUNCT "=")
(ID "loads")
(NEWLINE)
(KEYWORD for)
(ID "attr")
(KEYWORD in)
(PUNCT "(")
(LIT "fileno")
(PUNCT ",")
(LIT "close")
(PUNCT ",")
(LIT "poll")
(PUNCT ",")
(LIT "recv_bytes")
(PUNCT ",")
(LIT "send_bytes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "conn")
(PUNCT ",")
(ID "attr")
(PUNCT ")")
(NEWLINE)
(ID "setattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attr")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "send")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_dumps")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT ".")
(ID "send_bytes")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "recv")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT ".")
(ID "recv_bytes")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_loads")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_xml_dumps")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "xmlrpclib")
(PUNCT ".")
(ID "dumps")
(PUNCT "(")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "utf-8")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_xml_loads")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(ID "method")
(PUNCT "=")
(ID "xmlrpclib")
(PUNCT ".")
(ID "loads")
(PUNCT "(")
(ID "s")
(PUNCT ".")
(ID "decode")
(PUNCT "(")
(LIT "utf-8")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "obj")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "XmlListener")
(PUNCT "(")
(ID "Listener")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "accept")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD global)
(ID "xmlrpclib")
(NEWLINE)
(KEYWORD import)
(ID "xmlrpc")
(PUNCT ".")
(ID "client")
(KEYWORD as)
(ID "xmlrpclib")
(NEWLINE)
(ID "obj")
(PUNCT "=")
(ID "Listener")
(PUNCT ".")
(ID "accept")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "ConnectionWrapper")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "_xml_dumps")
(PUNCT ",")
(ID "_xml_loads")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "XmlClient")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwds")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD global)
(ID "xmlrpclib")
(NEWLINE)
(KEYWORD import)
(ID "xmlrpc")
(PUNCT ".")
(ID "client")
(KEYWORD as)
(ID "xmlrpclib")
(NEWLINE)
(KEYWORD return)
(ID "ConnectionWrapper")
(PUNCT "(")
(ID "Client")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwds")
(PUNCT ")")
(PUNCT ",")
(ID "_xml_dumps")
(PUNCT ",")
(ID "_xml_loads")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "_exhaustive_wait")
(PUNCT "(")
(ID "handles")
(PUNCT ",")
(ID "timeout")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "L")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "handles")
(PUNCT ")")
(NEWLINE)
(ID "ready")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(ID "L")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "res")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "WaitForMultipleObjects")
(PUNCT "(")
(ID "L")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "res")
(PUNCT "==")
(ID "WAIT_TIMEOUT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "WAIT_OBJECT_0")
(PUNCT "<=")
(ID "res")
(PUNCT "<")
(ID "WAIT_OBJECT_0")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "L")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "res")
(PUNCT "-=")
(ID "WAIT_OBJECT_0")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "WAIT_ABANDONED_0")
(PUNCT "<=")
(ID "res")
(PUNCT "<")
(ID "WAIT_ABANDONED_0")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "L")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "res")
(PUNCT "-=")
(ID "WAIT_ABANDONED_0")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "Should not get here")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "ready")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "L")
(PUNCT "[")
(ID "res")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "L")
(PUNCT "=")
(ID "L")
(PUNCT "[")
(ID "res")
(PUNCT "+")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "timeout")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "ready")
(NEWLINE)
(DEDENT)
(ID "_ready_errors")
(PUNCT "=")
(PUNCT "{")
(ID "_winapi")
(PUNCT ".")
(ID "ERROR_BROKEN_PIPE")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "ERROR_NETNAME_DELETED")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "wait")
(PUNCT "(")
(ID "object_list")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Wait till an object in object_list is ready/readable.\n\n        Returns list of those objects in object_list which are ready/readable.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "timeout")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "timeout")
(PUNCT "=")
(ID "INFINITE")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "timeout")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "timeout")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "timeout")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "timeout")
(PUNCT "*")
(LIT 1000)
(PUNCT "+")
(LIT 0.5)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "object_list")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "object_list")
(PUNCT ")")
(NEWLINE)
(ID "waithandle_to_obj")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "ov_list")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "ready_objects")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "ready_handles")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "o")
(KEYWORD in)
(ID "object_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fileno")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "o")
(PUNCT ",")
(LIT "fileno")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "waithandle_to_obj")
(PUNCT "[")
(ID "o")
(PUNCT ".")
(ID "__index__")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(PUNCT "=")
(ID "o")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT ",")
(ID "err")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "ReadFile")
(PUNCT "(")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "err")
(PUNCT "=")
(ID "e")
(PUNCT ".")
(ID "winerror")
(NEWLINE)
(KEYWORD if)
(ID "err")
(KEYWORD not)
(KEYWORD in)
(ID "_ready_errors")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "err")
(PUNCT "==")
(ID "_winapi")
(PUNCT ".")
(ID "ERROR_IO_PENDING")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov_list")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "ov")
(PUNCT ")")
(NEWLINE)
(ID "waithandle_to_obj")
(PUNCT "[")
(ID "ov")
(PUNCT ".")
(ID "event")
(PUNCT "]")
(PUNCT "=")
(ID "o")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ready_objects")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "o")
(PUNCT ")")
(NEWLINE)
(ID "timeout")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "ready_handles")
(PUNCT "=")
(ID "_exhaustive_wait")
(PUNCT "(")
(ID "waithandle_to_obj")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "ov")
(KEYWORD in)
(ID "ov_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT ".")
(ID "cancel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "ov")
(KEYWORD in)
(ID "ov_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_")
(PUNCT ",")
(ID "err")
(PUNCT "=")
(ID "ov")
(PUNCT ".")
(ID "GetOverlappedResult")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "err")
(PUNCT "=")
(ID "e")
(PUNCT ".")
(ID "winerror")
(NEWLINE)
(KEYWORD if)
(ID "err")
(KEYWORD not)
(KEYWORD in)
(ID "_ready_errors")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "err")
(PUNCT "!=")
(ID "_winapi")
(PUNCT ".")
(ID "ERROR_OPERATION_ABORTED")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "o")
(PUNCT "=")
(ID "waithandle_to_obj")
(PUNCT "[")
(ID "ov")
(PUNCT ".")
(ID "event")
(PUNCT "]")
(NEWLINE)
(ID "ready_objects")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "o")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "err")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "o")
(PUNCT ",")
(LIT "_got_empty_message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "o")
(PUNCT ".")
(ID "_got_empty_message")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "ready_objects")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "waithandle_to_obj")
(PUNCT "[")
(ID "h")
(PUNCT "]")
(KEYWORD for)
(ID "h")
(KEYWORD in)
(ID "ready_handles")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(ID "o")
(KEYWORD for)
(ID "o")
(KEYWORD in)
(ID "object_list")
(KEYWORD if)
(ID "o")
(KEYWORD in)
(ID "ready_objects")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "selectors")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "selectors")
(PUNCT ",")
(LIT "PollSelector")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_WaitSelector")
(PUNCT "=")
(ID "selectors")
(PUNCT ".")
(ID "PollSelector")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_WaitSelector")
(PUNCT "=")
(ID "selectors")
(PUNCT ".")
(ID "SelectSelector")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "wait")
(PUNCT "(")
(ID "object_list")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        Wait till an object in object_list is ready/readable.\n\n        Returns list of those objects in object_list which are ready/readable.\n        ")
(NEWLINE)
(KEYWORD with)
(ID "_WaitSelector")
(PUNCT "(")
(PUNCT ")")
(KEYWORD as)
(ID "selector")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "obj")
(KEYWORD in)
(ID "object_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "selector")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "selectors")
(PUNCT ".")
(ID "EVENT_READ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "timeout")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "deadline")
(PUNCT "=")
(ID "time")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(PUNCT "+")
(ID "timeout")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ready")
(PUNCT "=")
(ID "selector")
(PUNCT ".")
(ID "select")
(PUNCT "(")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "ready")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(ID "key")
(PUNCT ".")
(ID "fileobj")
(KEYWORD for)
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "events")
(PUNCT ")")
(KEYWORD in)
(ID "ready")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "timeout")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "timeout")
(PUNCT "=")
(ID "deadline")
(PUNCT "-")
(ID "time")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "timeout")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "ready")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "reduce_connection")
(PUNCT "(")
(ID "conn")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "handle")
(PUNCT "=")
(ID "conn")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD with)
(ID "socket")
(PUNCT ".")
(ID "fromfd")
(PUNCT "(")
(ID "handle")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "AF_INET")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "SOCK_STREAM")
(PUNCT ")")
(KEYWORD as)
(ID "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "resource_sharer")
(NEWLINE)
(ID "ds")
(PUNCT "=")
(ID "resource_sharer")
(PUNCT ".")
(ID "DupSocket")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "rebuild_connection")
(PUNCT ",")
(PUNCT "(")
(ID "ds")
(PUNCT ",")
(ID "conn")
(PUNCT ".")
(ID "readable")
(PUNCT ",")
(ID "conn")
(PUNCT ".")
(ID "writable")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "rebuild_connection")
(PUNCT "(")
(ID "ds")
(PUNCT ",")
(ID "readable")
(PUNCT ",")
(ID "writable")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sock")
(PUNCT "=")
(ID "ds")
(PUNCT ".")
(ID "detach")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "Connection")
(PUNCT "(")
(ID "sock")
(PUNCT ".")
(ID "detach")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "readable")
(PUNCT ",")
(ID "writable")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "reduction")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "Connection")
(PUNCT ",")
(ID "reduce_connection")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "reduce_pipe_connection")
(PUNCT "(")
(ID "conn")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "access")
(PUNCT "=")
(PUNCT "(")
(PUNCT "(")
(ID "_winapi")
(PUNCT ".")
(ID "FILE_GENERIC_READ")
(KEYWORD if)
(ID "conn")
(PUNCT ".")
(ID "readable")
(KEYWORD else)
(LIT 0)
(PUNCT ")")
(PUNCT "|")
(PUNCT "(")
(ID "_winapi")
(PUNCT ".")
(ID "FILE_GENERIC_WRITE")
(KEYWORD if)
(ID "conn")
(PUNCT ".")
(ID "writable")
(KEYWORD else)
(LIT 0)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "dh")
(PUNCT "=")
(ID "reduction")
(PUNCT ".")
(ID "DupHandle")
(PUNCT "(")
(ID "conn")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "access")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "rebuild_pipe_connection")
(PUNCT ",")
(PUNCT "(")
(ID "dh")
(PUNCT ",")
(ID "conn")
(PUNCT ".")
(ID "readable")
(PUNCT ",")
(ID "conn")
(PUNCT ".")
(ID "writable")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "rebuild_pipe_connection")
(PUNCT "(")
(ID "dh")
(PUNCT ",")
(ID "readable")
(PUNCT ",")
(ID "writable")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "handle")
(PUNCT "=")
(ID "dh")
(PUNCT ".")
(ID "detach")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "PipeConnection")
(PUNCT "(")
(ID "handle")
(PUNCT ",")
(ID "readable")
(PUNCT ",")
(ID "writable")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "reduction")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "PipeConnection")
(PUNCT ",")
(ID "reduce_pipe_connection")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "reduce_connection")
(PUNCT "(")
(ID "conn")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "df")
(PUNCT "=")
(ID "reduction")
(PUNCT ".")
(ID "DupFd")
(PUNCT "(")
(ID "conn")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "rebuild_connection")
(PUNCT ",")
(PUNCT "(")
(ID "df")
(PUNCT ",")
(ID "conn")
(PUNCT ".")
(ID "readable")
(PUNCT ",")
(ID "conn")
(PUNCT ".")
(ID "writable")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "rebuild_connection")
(PUNCT "(")
(ID "df")
(PUNCT ",")
(ID "readable")
(PUNCT ",")
(ID "writable")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "df")
(PUNCT ".")
(ID "detach")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "Connection")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "readable")
(PUNCT ",")
(ID "writable")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "reduction")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "Connection")
(PUNCT ",")
(ID "reduce_connection")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
