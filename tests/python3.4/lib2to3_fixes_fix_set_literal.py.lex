(LIT "\nOptional fixer to transform set() calls to set literals.\n")
(NEWLINE)
(KEYWORD from)
(ID "lib2to3")
(KEYWORD import)
(ID "fixer_base")
(PUNCT ",")
(ID "pytree")
(NEWLINE)
(KEYWORD from)
(ID "lib2to3")
(PUNCT ".")
(ID "fixer_util")
(KEYWORD import)
(ID "token")
(PUNCT ",")
(ID "syms")
(NEWLINE)
(KEYWORD class)
(ID "FixSetLiteral")
(PUNCT "(")
(ID "fixer_base")
(PUNCT ".")
(ID "BaseFix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "BM_compatible")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "explicit")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "PATTERN")
(PUNCT "=")
(LIT "power< 'set' trailer< '('\n                     (atom=atom< '[' (items=listmaker< any ((',' any)* [',']) >\n                                |\n                                single=any) ']' >\n                     |\n                     atom< '(' items=testlist_gexp< any ((',' any)* [',']) > ')' >\n                     )\n                     ')' > >\n              ")
(NEWLINE)
(KEYWORD def)
(ID "transform")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "single")
(PUNCT "=")
(ID "results")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "single")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "single")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fake")
(PUNCT "=")
(ID "pytree")
(PUNCT ".")
(ID "Node")
(PUNCT "(")
(ID "syms")
(PUNCT ".")
(ID "listmaker")
(PUNCT ",")
(PUNCT "[")
(ID "single")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "single")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "fake")
(PUNCT ")")
(NEWLINE)
(ID "items")
(PUNCT "=")
(ID "fake")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "items")
(PUNCT "=")
(ID "results")
(PUNCT "[")
(LIT "items")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "literal")
(PUNCT "=")
(PUNCT "[")
(ID "pytree")
(PUNCT ".")
(ID "Leaf")
(PUNCT "(")
(ID "token")
(PUNCT ".")
(ID "LBRACE")
(PUNCT ",")
(LIT "{")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(ID "literal")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "n")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID "n")
(KEYWORD in)
(ID "items")
(PUNCT ".")
(ID "children")
(PUNCT ")")
(NEWLINE)
(ID "literal")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "pytree")
(PUNCT ".")
(ID "Leaf")
(PUNCT "(")
(ID "token")
(PUNCT ".")
(ID "RBRACE")
(PUNCT ",")
(LIT "}")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "literal")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(ID "items")
(PUNCT ".")
(ID "next_sibling")
(PUNCT ".")
(ID "prefix")
(NEWLINE)
(ID "maker")
(PUNCT "=")
(ID "pytree")
(PUNCT ".")
(ID "Node")
(PUNCT "(")
(ID "syms")
(PUNCT ".")
(ID "dictsetmaker")
(PUNCT ",")
(ID "literal")
(PUNCT ")")
(NEWLINE)
(ID "maker")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(ID "node")
(PUNCT ".")
(ID "prefix")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "maker")
(PUNCT ".")
(ID "children")
(PUNCT ")")
(PUNCT "==")
(LIT 4)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(ID "maker")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(ID "n")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "maker")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(ID "n")
(PUNCT ".")
(ID "prefix")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "maker")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
