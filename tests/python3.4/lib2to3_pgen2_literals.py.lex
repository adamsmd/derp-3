(LIT "Safely evaluate Python string literals without using eval().")
(NEWLINE)
(KEYWORD import)
(ID "re")
(NEWLINE)
(ID "simple_escapes")
(PUNCT "=")
(PUNCT "{")
(LIT "a")
(PUNCT ":")
(LIT "\a")
(PUNCT ",")
(LIT "b")
(PUNCT ":")
(LIT "\b")
(PUNCT ",")
(LIT "f")
(PUNCT ":")
(LIT "\f")
(PUNCT ",")
(LIT "n")
(PUNCT ":")
(LIT "\n")
(PUNCT ",")
(LIT "r")
(PUNCT ":")
(LIT "\r")
(PUNCT ",")
(LIT "t")
(PUNCT ":")
(LIT "\t")
(PUNCT ",")
(LIT "v")
(PUNCT ":")
(LIT "\v")
(PUNCT ",")
(LIT "'")
(PUNCT ":")
(LIT "'")
(PUNCT ",")
(LIT "\"")
(PUNCT ":")
(LIT "\"")
(PUNCT ",")
(LIT "\\")
(PUNCT ":")
(LIT "\\")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "escape")
(PUNCT "(")
(ID "m")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "all")
(PUNCT ",")
(ID "tail")
(PUNCT "=")
(ID "m")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "all")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "\\")
(PUNCT ")")
(NEWLINE)
(ID "esc")
(PUNCT "=")
(ID "simple_escapes")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "tail")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "esc")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "esc")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "tail")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "x")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hexes")
(PUNCT "=")
(ID "tail")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "hexes")
(PUNCT ")")
(PUNCT "<")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "invalid hex string escape ('\\%s')")
(PUNCT "%")
(ID "tail")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "hexes")
(PUNCT ",")
(LIT 16)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "invalid hex string escape ('\\%s')")
(PUNCT "%")
(ID "tail")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "tail")
(PUNCT ",")
(LIT 8)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "invalid octal string escape ('\\%s')")
(PUNCT "%")
(ID "tail")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "chr")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "evalString")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "s")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "'")
(PUNCT ")")
(KEYWORD or)
(ID "s")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "\"")
(PUNCT ")")
(PUNCT ",")
(ID "repr")
(PUNCT "(")
(ID "s")
(PUNCT "[")
(PUNCT ":")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "q")
(PUNCT "=")
(ID "s")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "s")
(PUNCT "[")
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(PUNCT "==")
(ID "q")
(PUNCT "*")
(LIT 3)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "q")
(PUNCT "=")
(ID "q")
(PUNCT "*")
(LIT 3)
(NEWLINE)
(DEDENT)
(KEYWORD assert)
(ID "s")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(ID "q")
(PUNCT ")")
(PUNCT ",")
(ID "repr")
(PUNCT "(")
(ID "s")
(PUNCT "[")
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "q")
(PUNCT ")")
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "len")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ">=")
(LIT 2)
(PUNCT "*")
(ID "len")
(PUNCT "(")
(ID "q")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "[")
(ID "len")
(PUNCT "(")
(ID "q")
(PUNCT ")")
(PUNCT ":")
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "q")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "\\\\(\\'|\\\"|\\\\|[abfnrtv]|x.{0,2}|[0-7]{1,3})")
(PUNCT ",")
(ID "escape")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "test")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 256)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "chr")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "repr")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(NEWLINE)
(ID "e")
(PUNCT "=")
(ID "evalString")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "e")
(PUNCT "!=")
(ID "c")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "c")
(PUNCT ",")
(ID "s")
(PUNCT ",")
(ID "e")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "test")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
