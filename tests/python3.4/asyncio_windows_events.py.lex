(LIT "Selector and proactor event loops for Windows.")
(NEWLINE)
(KEYWORD import)
(ID "_winapi")
(NEWLINE)
(KEYWORD import)
(ID "errno")
(NEWLINE)
(KEYWORD import)
(ID "math")
(NEWLINE)
(KEYWORD import)
(ID "socket")
(NEWLINE)
(KEYWORD import)
(ID "struct")
(NEWLINE)
(KEYWORD import)
(ID "weakref")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "events")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "base_subprocess")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "futures")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "proactor_events")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "selector_events")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "tasks")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "windows_utils")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "_overlapped")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID "coroutines")
(KEYWORD import)
(ID "coroutine")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID "log")
(KEYWORD import)
(ID "logger")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "SelectorEventLoop")
(PUNCT ",")
(LIT "ProactorEventLoop")
(PUNCT ",")
(LIT "IocpProactor")
(PUNCT ",")
(LIT "DefaultEventLoopPolicy")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(ID "NULL")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "INFINITE")
(PUNCT "=")
(LIT 4294967295)
(NEWLINE)
(ID "ERROR_CONNECTION_REFUSED")
(PUNCT "=")
(LIT 1225)
(NEWLINE)
(ID "ERROR_CONNECTION_ABORTED")
(PUNCT "=")
(LIT 1236)
(NEWLINE)
(ID "CONNECT_PIPE_INIT_DELAY")
(PUNCT "=")
(LIT 0.001)
(NEWLINE)
(ID "CONNECT_PIPE_MAX_DELAY")
(PUNCT "=")
(LIT 0.1)
(NEWLINE)
(KEYWORD class)
(ID "_OverlappedFuture")
(PUNCT "(")
(ID "futures")
(PUNCT ".")
(ID "Future")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Subclass of Future which represents an overlapped operation.\n\n    Cancelling it will immediately cancel the overlapped operation.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "ov")
(PUNCT ",")
(PUNCT "*")
(PUNCT ",")
(ID "loop")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "loop")
(PUNCT "=")
(ID "loop")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_source_traceback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_source_traceback")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_ov")
(PUNCT "=")
(ID "ov")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_repr_info")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "_repr_info")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_ov")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "state")
(PUNCT "=")
(LIT "pending")
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_ov")
(PUNCT ".")
(ID "pending")
(KEYWORD else)
(LIT "completed")
(NEWLINE)
(ID "info")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(LIT "overlapped=<%s, %#x>")
(PUNCT "%")
(PUNCT "(")
(ID "state")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_ov")
(PUNCT ".")
(ID "address")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "info")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_cancel_overlapped")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_ov")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_ov")
(PUNCT ".")
(ID "cancel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "context")
(PUNCT "=")
(PUNCT "{")
(LIT "message")
(PUNCT ":")
(LIT "Cancelling an overlapped future failed")
(PUNCT ",")
(LIT "exception")
(PUNCT ":")
(ID "exc")
(PUNCT ",")
(LIT "future")
(PUNCT ":")
(ID "self")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_source_traceback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "context")
(PUNCT "[")
(LIT "source_traceback")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_source_traceback")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_exception_handler")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_ov")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "cancel")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_cancel_overlapped")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "cancel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_exception")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "set_exception")
(PUNCT "(")
(ID "exception")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_cancel_overlapped")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_result")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "set_result")
(PUNCT "(")
(ID "result")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_ov")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_BaseWaitHandleFuture")
(PUNCT "(")
(ID "futures")
(PUNCT ".")
(ID "Future")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Subclass of Future which represents a wait handle.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "ov")
(PUNCT ",")
(ID "handle")
(PUNCT ",")
(ID "wait_handle")
(PUNCT ",")
(PUNCT "*")
(PUNCT ",")
(ID "loop")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "loop")
(PUNCT "=")
(ID "loop")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_source_traceback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_source_traceback")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_ov")
(PUNCT "=")
(ID "ov")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT "=")
(ID "handle")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_wait_handle")
(PUNCT "=")
(ID "wait_handle")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_registered")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_poll")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "_winapi")
(PUNCT ".")
(ID "WaitForSingleObject")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(PUNCT "==")
(ID "_winapi")
(PUNCT ".")
(ID "WAIT_OBJECT_0")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_repr_info")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "_repr_info")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "info")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "handle=%#x")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_handle")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "state")
(PUNCT "=")
(LIT "signaled")
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_poll")
(PUNCT "(")
(PUNCT ")")
(KEYWORD else)
(LIT "waiting")
(NEWLINE)
(ID "info")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "state")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_wait_handle")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "wait_handle=%#x")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "_wait_handle")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "info")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_unregister_wait_cb")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fut")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_ov")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_unregister_wait")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_registered")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_registered")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "wait_handle")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_wait_handle")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_wait_handle")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_overlapped")
(PUNCT ".")
(ID "UnregisterWait")
(PUNCT "(")
(ID "wait_handle")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "exc")
(PUNCT ".")
(ID "winerror")
(PUNCT "!=")
(ID "_overlapped")
(PUNCT ".")
(ID "ERROR_IO_PENDING")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "context")
(PUNCT "=")
(PUNCT "{")
(LIT "message")
(PUNCT ":")
(LIT "Failed to unregister the wait handle")
(PUNCT ",")
(LIT "exception")
(PUNCT ":")
(ID "exc")
(PUNCT ",")
(LIT "future")
(PUNCT ":")
(ID "self")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_source_traceback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "context")
(PUNCT "[")
(LIT "source_traceback")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_source_traceback")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_exception_handler")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_unregister_wait_cb")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "cancel")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_unregister_wait")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "cancel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_exception")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_unregister_wait")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "set_exception")
(PUNCT "(")
(ID "exception")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_result")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "result")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_unregister_wait")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "set_result")
(PUNCT "(")
(ID "result")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_WaitCancelFuture")
(PUNCT "(")
(ID "_BaseWaitHandleFuture")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Subclass of Future which represents a wait for the cancellation of a\n    _WaitHandleFuture using an event.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "ov")
(PUNCT ",")
(ID "event")
(PUNCT ",")
(ID "wait_handle")
(PUNCT ",")
(PUNCT "*")
(PUNCT ",")
(ID "loop")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "ov")
(PUNCT ",")
(ID "event")
(PUNCT ",")
(ID "wait_handle")
(PUNCT ",")
(ID "loop")
(PUNCT "=")
(ID "loop")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_done_callback")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "cancel")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "_WaitCancelFuture must not be cancelled")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_schedule_callbacks")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "_WaitCancelFuture")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "_schedule_callbacks")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_done_callback")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_done_callback")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_WaitHandleFuture")
(PUNCT "(")
(ID "_BaseWaitHandleFuture")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "ov")
(PUNCT ",")
(ID "handle")
(PUNCT ",")
(ID "wait_handle")
(PUNCT ",")
(ID "proactor")
(PUNCT ",")
(PUNCT "*")
(PUNCT ",")
(ID "loop")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "ov")
(PUNCT ",")
(ID "handle")
(PUNCT ",")
(ID "wait_handle")
(PUNCT ",")
(ID "loop")
(PUNCT "=")
(ID "loop")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_proactor")
(PUNCT "=")
(ID "proactor")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_unregister_proactor")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_event")
(PUNCT "=")
(ID "_overlapped")
(PUNCT ".")
(ID "CreateEvent")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(KEYWORD True)
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_event_fut")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_unregister_wait_cb")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fut")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_event")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_winapi")
(PUNCT ".")
(ID "CloseHandle")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_event")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_event")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_event_fut")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_proactor")
(PUNCT ".")
(ID "_unregister")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_ov")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_proactor")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "_unregister_wait_cb")
(PUNCT "(")
(ID "fut")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_unregister_wait")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_registered")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_registered")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "wait_handle")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_wait_handle")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_wait_handle")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_overlapped")
(PUNCT ".")
(ID "UnregisterWaitEx")
(PUNCT "(")
(ID "wait_handle")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_event")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "exc")
(PUNCT ".")
(ID "winerror")
(PUNCT "!=")
(ID "_overlapped")
(PUNCT ".")
(ID "ERROR_IO_PENDING")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "context")
(PUNCT "=")
(PUNCT "{")
(LIT "message")
(PUNCT ":")
(LIT "Failed to unregister the wait handle")
(PUNCT ",")
(LIT "exception")
(PUNCT ":")
(ID "exc")
(PUNCT ",")
(LIT "future")
(PUNCT ":")
(ID "self")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_source_traceback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "context")
(PUNCT "[")
(LIT "source_traceback")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_source_traceback")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_exception_handler")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_event_fut")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_proactor")
(PUNCT ".")
(ID "_wait_cancel")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_event")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_unregister_wait_cb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "PipeServer")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Class representing a pipe server.\n\n    This is much like a bound, listening socket.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_address")
(PUNCT "=")
(ID "address")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_free_instances")
(PUNCT "=")
(ID "weakref")
(PUNCT ".")
(ID "WeakSet")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pipe")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_accept_pipe_future")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pipe")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_server_pipe_handle")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_unconnected_pipe")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tmp")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_pipe")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_pipe")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_server_pipe_handle")
(PUNCT "(")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "tmp")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_server_pipe_handle")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "first")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "closed")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "flags")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_ACCESS_DUPLEX")
(PUNCT "|")
(ID "_winapi")
(PUNCT ".")
(ID "FILE_FLAG_OVERLAPPED")
(NEWLINE)
(KEYWORD if)
(ID "first")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "|=")
(ID "_winapi")
(PUNCT ".")
(ID "FILE_FLAG_FIRST_PIPE_INSTANCE")
(NEWLINE)
(DEDENT)
(ID "h")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "CreateNamedPipe")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_address")
(PUNCT ",")
(ID "flags")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_TYPE_MESSAGE")
(PUNCT "|")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_READMODE_MESSAGE")
(PUNCT "|")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_WAIT")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "PIPE_UNLIMITED_INSTANCES")
(PUNCT ",")
(ID "windows_utils")
(PUNCT ".")
(ID "BUFSIZE")
(PUNCT ",")
(ID "windows_utils")
(PUNCT ".")
(ID "BUFSIZE")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "NMPWAIT_WAIT_FOREVER")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "NULL")
(PUNCT ")")
(NEWLINE)
(ID "pipe")
(PUNCT "=")
(ID "windows_utils")
(PUNCT ".")
(ID "PipeHandle")
(PUNCT "(")
(ID "h")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_free_instances")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "pipe")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "pipe")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "closed")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_address")
(KEYWORD is)
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_accept_pipe_future")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_accept_pipe_future")
(PUNCT ".")
(ID "cancel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_accept_pipe_future")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_address")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "pipe")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_free_instances")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pipe")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_pipe")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_address")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_free_instances")
(PUNCT ".")
(ID "clear")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "__del__")
(PUNCT "=")
(ID "close")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "_WindowsSelectorEventLoop")
(PUNCT "(")
(ID "selector_events")
(PUNCT ".")
(ID "BaseSelectorEventLoop")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Windows version of selector event loop.")
(NEWLINE)
(KEYWORD def)
(ID "_socketpair")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "windows_utils")
(PUNCT ".")
(ID "socketpair")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ProactorEventLoop")
(PUNCT "(")
(ID "proactor_events")
(PUNCT ".")
(ID "BaseProactorEventLoop")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Windows version of proactor event loop using IOCP.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "proactor")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "proactor")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "proactor")
(PUNCT "=")
(ID "IocpProactor")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "proactor")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_socketpair")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "windows_utils")
(PUNCT ".")
(ID "socketpair")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "coroutine")
(NEWLINE)
(KEYWORD def)
(ID "create_pipe_connection")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "protocol_factory")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_proactor")
(PUNCT ".")
(ID "connect_pipe")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(NEWLINE)
(ID "pipe")
(PUNCT "=")
(KEYWORD yield)
(KEYWORD from)
(ID "f")
(NEWLINE)
(ID "protocol")
(PUNCT "=")
(ID "protocol_factory")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "trans")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_make_duplex_pipe_transport")
(PUNCT "(")
(ID "pipe")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(PUNCT "{")
(LIT "addr")
(PUNCT ":")
(ID "address")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "trans")
(PUNCT ",")
(ID "protocol")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "coroutine")
(NEWLINE)
(KEYWORD def)
(ID "start_serving_pipe")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "protocol_factory")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "server")
(PUNCT "=")
(ID "PipeServer")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "loop_accept_pipe")
(PUNCT "(")
(ID "f")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pipe")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pipe")
(PUNCT "=")
(ID "f")
(PUNCT ".")
(ID "result")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "server")
(PUNCT ".")
(ID "_free_instances")
(PUNCT ".")
(ID "discard")
(PUNCT "(")
(ID "pipe")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "server")
(PUNCT ".")
(ID "closed")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pipe")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "protocol")
(PUNCT "=")
(ID "protocol_factory")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_make_duplex_pipe_transport")
(PUNCT "(")
(ID "pipe")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(PUNCT "{")
(LIT "addr")
(PUNCT ":")
(ID "address")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "pipe")
(PUNCT "=")
(ID "server")
(PUNCT ".")
(ID "_get_unconnected_pipe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "pipe")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "f")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_proactor")
(PUNCT ".")
(ID "accept_pipe")
(PUNCT "(")
(ID "pipe")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "pipe")
(KEYWORD and)
(ID "pipe")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT "!=")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "call_exception_handler")
(PUNCT "(")
(PUNCT "{")
(LIT "message")
(PUNCT ":")
(LIT "Pipe accept failed")
(PUNCT ",")
(LIT "exception")
(PUNCT ":")
(ID "exc")
(PUNCT ",")
(LIT "pipe")
(PUNCT ":")
(ID "pipe")
(PUNCT ",")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(ID "pipe")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "_debug")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "warning")
(PUNCT "(")
(LIT "Accept pipe failed on pipe %r")
(PUNCT ",")
(ID "pipe")
(PUNCT ",")
(ID "exc_info")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "futures")
(PUNCT ".")
(ID "CancelledError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "pipe")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pipe")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "server")
(PUNCT ".")
(ID "_accept_pipe_future")
(PUNCT "=")
(ID "f")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "add_done_callback")
(PUNCT "(")
(ID "loop_accept_pipe")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "call_soon")
(PUNCT "(")
(ID "loop_accept_pipe")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(ID "server")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "coroutine")
(NEWLINE)
(KEYWORD def)
(ID "_make_subprocess_transport")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "shell")
(PUNCT ",")
(ID "stdin")
(PUNCT ",")
(ID "stdout")
(PUNCT ",")
(ID "stderr")
(PUNCT ",")
(ID "bufsize")
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "waiter")
(PUNCT "=")
(ID "futures")
(PUNCT ".")
(ID "Future")
(PUNCT "(")
(ID "loop")
(PUNCT "=")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "transp")
(PUNCT "=")
(ID "_WindowsSubprocessTransport")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "shell")
(PUNCT ",")
(ID "stdin")
(PUNCT ",")
(ID "stdout")
(PUNCT ",")
(ID "stderr")
(PUNCT ",")
(ID "bufsize")
(PUNCT ",")
(ID "waiter")
(PUNCT "=")
(ID "waiter")
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(ID "extra")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(KEYWORD from)
(ID "waiter")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "err")
(PUNCT "=")
(ID "exc")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "err")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "err")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "transp")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD yield)
(KEYWORD from)
(ID "transp")
(PUNCT ".")
(ID "_wait")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "err")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "transp")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "IocpProactor")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Proactor implementation using IOCP.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "concurrency")
(PUNCT "=")
(LIT 4294967295)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_results")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_iocp")
(PUNCT "=")
(ID "_overlapped")
(PUNCT ".")
(ID "CreateIoCompletionPort")
(PUNCT "(")
(ID "_overlapped")
(PUNCT ".")
(ID "INVALID_HANDLE_VALUE")
(PUNCT ",")
(ID "NULL")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "concurrency")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_registered")
(PUNCT "=")
(ID "weakref")
(PUNCT ".")
(ID "WeakSet")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_unregistered")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_stopped_serving")
(PUNCT "=")
(ID "weakref")
(PUNCT ".")
(ID "WeakSet")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(LIT "<%s overlapped#=%s result#=%s>")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT ")")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_results")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_loop")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "loop")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT "=")
(ID "loop")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "select")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_results")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_poll")
(PUNCT "(")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "tmp")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_results")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_results")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "tmp")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_result")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT "=")
(ID "futures")
(PUNCT ".")
(ID "Future")
(PUNCT "(")
(ID "loop")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ")")
(NEWLINE)
(ID "fut")
(PUNCT ".")
(ID "set_result")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "fut")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "recv")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "nbytes")
(PUNCT ",")
(ID "flags")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_register_with_iocp")
(PUNCT "(")
(ID "conn")
(PUNCT ")")
(NEWLINE)
(ID "ov")
(PUNCT "=")
(ID "_overlapped")
(PUNCT ".")
(ID "Overlapped")
(PUNCT "(")
(ID "NULL")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "conn")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "socket")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT ".")
(ID "WSARecv")
(PUNCT "(")
(ID "conn")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "nbytes")
(PUNCT ",")
(ID "flags")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT ".")
(ID "ReadFile")
(PUNCT "(")
(ID "conn")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "nbytes")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "BrokenPipeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_result")
(PUNCT "(")
(LIT #"")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "finish_recv")
(PUNCT "(")
(ID "trans")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "ov")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "ov")
(PUNCT ".")
(ID "getresult")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "exc")
(PUNCT ".")
(ID "winerror")
(PUNCT "==")
(ID "_overlapped")
(PUNCT ".")
(ID "ERROR_NETNAME_DELETED")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ConnectionResetError")
(PUNCT "(")
(PUNCT "*")
(ID "exc")
(PUNCT ".")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_register")
(PUNCT "(")
(ID "ov")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "finish_recv")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "buf")
(PUNCT ",")
(ID "flags")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_register_with_iocp")
(PUNCT "(")
(ID "conn")
(PUNCT ")")
(NEWLINE)
(ID "ov")
(PUNCT "=")
(ID "_overlapped")
(PUNCT ".")
(ID "Overlapped")
(PUNCT "(")
(ID "NULL")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "conn")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "socket")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT ".")
(ID "WSASend")
(PUNCT "(")
(ID "conn")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "buf")
(PUNCT ",")
(ID "flags")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT ".")
(ID "WriteFile")
(PUNCT "(")
(ID "conn")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "buf")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "finish_send")
(PUNCT "(")
(ID "trans")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "ov")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "ov")
(PUNCT ".")
(ID "getresult")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "exc")
(PUNCT ".")
(ID "winerror")
(PUNCT "==")
(ID "_overlapped")
(PUNCT ".")
(ID "ERROR_NETNAME_DELETED")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ConnectionResetError")
(PUNCT "(")
(PUNCT "*")
(ID "exc")
(PUNCT ".")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_register")
(PUNCT "(")
(ID "ov")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "finish_send")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "accept")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "listener")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_register_with_iocp")
(PUNCT "(")
(ID "listener")
(PUNCT ")")
(NEWLINE)
(ID "conn")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_accept_socket")
(PUNCT "(")
(ID "listener")
(PUNCT ".")
(ID "family")
(PUNCT ")")
(NEWLINE)
(ID "ov")
(PUNCT "=")
(ID "_overlapped")
(PUNCT ".")
(ID "Overlapped")
(PUNCT "(")
(ID "NULL")
(PUNCT ")")
(NEWLINE)
(ID "ov")
(PUNCT ".")
(ID "AcceptEx")
(PUNCT "(")
(ID "listener")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "conn")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "finish_accept")
(PUNCT "(")
(ID "trans")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "ov")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT ".")
(ID "getresult")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "buf")
(PUNCT "=")
(ID "struct")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(LIT "@P")
(PUNCT ",")
(ID "listener")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "conn")
(PUNCT ".")
(ID "setsockopt")
(PUNCT "(")
(ID "socket")
(PUNCT ".")
(ID "SOL_SOCKET")
(PUNCT ",")
(ID "_overlapped")
(PUNCT ".")
(ID "SO_UPDATE_ACCEPT_CONTEXT")
(PUNCT ",")
(ID "buf")
(PUNCT ")")
(NEWLINE)
(ID "conn")
(PUNCT ".")
(ID "settimeout")
(PUNCT "(")
(ID "listener")
(PUNCT ".")
(ID "gettimeout")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "conn")
(PUNCT ",")
(ID "conn")
(PUNCT ".")
(ID "getpeername")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "coroutine")
(NEWLINE)
(KEYWORD def)
(ID "accept_coro")
(PUNCT "(")
(ID "future")
(PUNCT ",")
(ID "conn")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(KEYWORD from)
(ID "future")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "futures")
(PUNCT ".")
(ID "CancelledError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "conn")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "future")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_register")
(PUNCT "(")
(ID "ov")
(PUNCT ",")
(ID "listener")
(PUNCT ",")
(ID "finish_accept")
(PUNCT ")")
(NEWLINE)
(ID "coro")
(PUNCT "=")
(ID "accept_coro")
(PUNCT "(")
(ID "future")
(PUNCT ",")
(ID "conn")
(PUNCT ")")
(NEWLINE)
(ID "tasks")
(PUNCT ".")
(ID "async")
(PUNCT "(")
(ID "coro")
(PUNCT ",")
(ID "loop")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "future")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "connect")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_register_with_iocp")
(PUNCT "(")
(ID "conn")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_overlapped")
(PUNCT ".")
(ID "BindLocal")
(PUNCT "(")
(ID "conn")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "conn")
(PUNCT ".")
(ID "family")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "winerror")
(PUNCT "!=")
(ID "errno")
(PUNCT ".")
(ID "WSAEINVAL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "conn")
(PUNCT ".")
(ID "getsockname")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "ov")
(PUNCT "=")
(ID "_overlapped")
(PUNCT ".")
(ID "Overlapped")
(PUNCT "(")
(ID "NULL")
(PUNCT ")")
(NEWLINE)
(ID "ov")
(PUNCT ".")
(ID "ConnectEx")
(PUNCT "(")
(ID "conn")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "finish_connect")
(PUNCT "(")
(ID "trans")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "ov")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT ".")
(ID "getresult")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "conn")
(PUNCT ".")
(ID "setsockopt")
(PUNCT "(")
(ID "socket")
(PUNCT ".")
(ID "SOL_SOCKET")
(PUNCT ",")
(ID "_overlapped")
(PUNCT ".")
(ID "SO_UPDATE_CONNECT_CONTEXT")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "conn")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_register")
(PUNCT "(")
(ID "ov")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "finish_connect")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "accept_pipe")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "pipe")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_register_with_iocp")
(PUNCT "(")
(ID "pipe")
(PUNCT ")")
(NEWLINE)
(ID "ov")
(PUNCT "=")
(ID "_overlapped")
(PUNCT ".")
(ID "Overlapped")
(PUNCT "(")
(ID "NULL")
(PUNCT ")")
(NEWLINE)
(ID "connected")
(PUNCT "=")
(ID "ov")
(PUNCT ".")
(ID "ConnectNamedPipe")
(PUNCT "(")
(ID "pipe")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "connected")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_result")
(PUNCT "(")
(ID "pipe")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "finish_accept_pipe")
(PUNCT "(")
(ID "trans")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "ov")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ov")
(PUNCT ".")
(ID "getresult")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "pipe")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_register")
(PUNCT "(")
(ID "ov")
(PUNCT ",")
(ID "pipe")
(PUNCT ",")
(ID "finish_accept_pipe")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "coroutine")
(NEWLINE)
(KEYWORD def)
(ID "connect_pipe")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "delay")
(PUNCT "=")
(ID "CONNECT_PIPE_INIT_DELAY")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "handle")
(PUNCT "=")
(ID "_overlapped")
(PUNCT ".")
(ID "ConnectPipe")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "exc")
(PUNCT ".")
(ID "winerror")
(PUNCT "!=")
(ID "_overlapped")
(PUNCT ".")
(ID "ERROR_PIPE_BUSY")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "delay")
(PUNCT "=")
(ID "min")
(PUNCT "(")
(ID "delay")
(PUNCT "*")
(LIT 2)
(PUNCT ",")
(ID "CONNECT_PIPE_MAX_DELAY")
(PUNCT ")")
(NEWLINE)
(KEYWORD yield)
(KEYWORD from)
(ID "tasks")
(PUNCT ".")
(ID "sleep")
(PUNCT "(")
(ID "delay")
(PUNCT ",")
(ID "loop")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "windows_utils")
(PUNCT ".")
(ID "PipeHandle")
(PUNCT "(")
(ID "handle")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "wait_for_handle")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "handle")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Wait for a handle.\n\n        Return a Future object. The result of the future is True if the wait\n        completed, or False if the wait did not complete (on timeout).\n        ")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_wait_for_handle")
(PUNCT "(")
(ID "handle")
(PUNCT ",")
(ID "timeout")
(PUNCT ",")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_wait_cancel")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ",")
(ID "done_callback")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_wait_for_handle")
(PUNCT "(")
(ID "event")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID "fut")
(PUNCT ".")
(ID "_done_callback")
(PUNCT "=")
(ID "done_callback")
(NEWLINE)
(KEYWORD return)
(ID "fut")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_wait_for_handle")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "handle")
(PUNCT ",")
(ID "timeout")
(PUNCT ",")
(ID "_is_cancel")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "timeout")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ms")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "INFINITE")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ms")
(PUNCT "=")
(ID "math")
(PUNCT ".")
(ID "ceil")
(PUNCT "(")
(ID "timeout")
(PUNCT "*")
(LIT 1000.0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "ov")
(PUNCT "=")
(ID "_overlapped")
(PUNCT ".")
(ID "Overlapped")
(PUNCT "(")
(ID "NULL")
(PUNCT ")")
(NEWLINE)
(ID "wait_handle")
(PUNCT "=")
(ID "_overlapped")
(PUNCT ".")
(ID "RegisterWaitWithQueue")
(PUNCT "(")
(ID "handle")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_iocp")
(PUNCT ",")
(ID "ov")
(PUNCT ".")
(ID "address")
(PUNCT ",")
(ID "ms")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "_is_cancel")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "_WaitCancelFuture")
(PUNCT "(")
(ID "ov")
(PUNCT ",")
(ID "handle")
(PUNCT ",")
(ID "wait_handle")
(PUNCT ",")
(ID "loop")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "_WaitHandleFuture")
(PUNCT "(")
(ID "ov")
(PUNCT ",")
(ID "handle")
(PUNCT ",")
(ID "wait_handle")
(PUNCT ",")
(ID "self")
(PUNCT ",")
(ID "loop")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "f")
(PUNCT ".")
(ID "_source_traceback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "f")
(PUNCT ".")
(ID "_source_traceback")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "finish_wait_for_handle")
(PUNCT "(")
(ID "trans")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "ov")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "f")
(PUNCT ".")
(ID "_poll")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT "[")
(ID "ov")
(PUNCT ".")
(ID "address")
(PUNCT "]")
(PUNCT "=")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "ov")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "finish_wait_for_handle")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "f")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_register_with_iocp")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "obj")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_registered")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_registered")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(ID "_overlapped")
(PUNCT ".")
(ID "CreateIoCompletionPort")
(PUNCT "(")
(ID "obj")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_iocp")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_register")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "ov")
(PUNCT ",")
(ID "obj")
(PUNCT ",")
(ID "callback")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "_OverlappedFuture")
(PUNCT "(")
(ID "ov")
(PUNCT ",")
(ID "loop")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "f")
(PUNCT ".")
(ID "_source_traceback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "f")
(PUNCT ".")
(ID "_source_traceback")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "ov")
(PUNCT ".")
(ID "pending")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "callback")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID "ov")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "set_exception")
(PUNCT "(")
(ID "e")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "set_result")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT "[")
(ID "ov")
(PUNCT ".")
(ID "address")
(PUNCT "]")
(PUNCT "=")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "ov")
(PUNCT ",")
(ID "obj")
(PUNCT ",")
(ID "callback")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "f")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_unregister")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "ov")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Unregister an overlapped object.\n\n        Call this method when its future has been cancelled. The event can\n        already be signalled (pending in the proactor event queue). It is also\n        safe if the event is never signalled (because it was cancelled).\n        ")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_unregistered")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "ov")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_accept_socket")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "family")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "socket")
(PUNCT ".")
(ID "socket")
(PUNCT "(")
(ID "family")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT ".")
(ID "settimeout")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_poll")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "timeout")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ms")
(PUNCT "=")
(ID "INFINITE")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "timeout")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "negative timeout")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ms")
(PUNCT "=")
(ID "math")
(PUNCT ".")
(ID "ceil")
(PUNCT "(")
(ID "timeout")
(PUNCT "*")
(LIT 1000.0)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "ms")
(PUNCT ">=")
(ID "INFINITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "timeout too big")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "status")
(PUNCT "=")
(ID "_overlapped")
(PUNCT ".")
(ID "GetQueuedCompletionStatus")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_iocp")
(PUNCT ",")
(ID "ms")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "status")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "ms")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "err")
(PUNCT ",")
(ID "transferred")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "address")
(PUNCT "=")
(ID "status")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ",")
(ID "ov")
(PUNCT ",")
(ID "obj")
(PUNCT ",")
(ID "callback")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "get_debug")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_exception_handler")
(PUNCT "(")
(PUNCT "{")
(LIT "message")
(PUNCT ":")
(PUNCT "(")
(LIT "GetQueuedCompletionStatus() returned an ")
(LIT "unexpected event")
(PUNCT ")")
(PUNCT ",")
(LIT "status")
(PUNCT ":")
(PUNCT "(")
(LIT "err=%s transferred=%s key=%#x address=%#x")
(PUNCT "%")
(PUNCT "(")
(ID "err")
(PUNCT ",")
(ID "transferred")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "key")
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "_overlapped")
(PUNCT ".")
(ID "INVALID_HANDLE_VALUE")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_winapi")
(PUNCT ".")
(ID "CloseHandle")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "obj")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_stopped_serving")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "cancel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "f")
(PUNCT ".")
(ID "done")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "callback")
(PUNCT "(")
(ID "transferred")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "ov")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "set_exception")
(PUNCT "(")
(ID "e")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_results")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "set_result")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_results")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "ov")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_unregistered")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(ID "ov")
(PUNCT ".")
(ID "address")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_unregistered")
(PUNCT ".")
(ID "clear")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_stop_serving")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_stopped_serving")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "address")
(PUNCT ",")
(PUNCT "(")
(ID "fut")
(PUNCT ",")
(ID "ov")
(PUNCT ",")
(ID "obj")
(PUNCT ",")
(ID "callback")
(PUNCT ")")
(KEYWORD in)
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "fut")
(PUNCT ".")
(ID "cancelled")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "fut")
(PUNCT ",")
(ID "_WaitCancelFuture")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT ".")
(ID "cancel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_loop")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "context")
(PUNCT "=")
(PUNCT "{")
(LIT "message")
(PUNCT ":")
(LIT "Cancelling a future failed")
(PUNCT ",")
(LIT "exception")
(PUNCT ":")
(ID "exc")
(PUNCT ",")
(LIT "future")
(PUNCT ":")
(ID "fut")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD if)
(ID "fut")
(PUNCT ".")
(ID "_source_traceback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "context")
(PUNCT "[")
(LIT "source_traceback")
(PUNCT "]")
(PUNCT "=")
(ID "fut")
(PUNCT ".")
(ID "_source_traceback")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_exception_handler")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD while)
(ID "self")
(PUNCT ".")
(ID "_cache")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_poll")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "taking long time to close proactor")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_results")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_iocp")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_winapi")
(PUNCT ".")
(ID "CloseHandle")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_iocp")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_iocp")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__del__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_WindowsSubprocessTransport")
(PUNCT "(")
(ID "base_subprocess")
(PUNCT ".")
(ID "BaseSubprocessTransport")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "_start")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "shell")
(PUNCT ",")
(ID "stdin")
(PUNCT ",")
(ID "stdout")
(PUNCT ",")
(ID "stderr")
(PUNCT ",")
(ID "bufsize")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_proc")
(PUNCT "=")
(ID "windows_utils")
(PUNCT ".")
(ID "Popen")
(PUNCT "(")
(ID "args")
(PUNCT ",")
(ID "shell")
(PUNCT "=")
(ID "shell")
(PUNCT ",")
(ID "stdin")
(PUNCT "=")
(ID "stdin")
(PUNCT ",")
(ID "stdout")
(PUNCT "=")
(ID "stdout")
(PUNCT ",")
(ID "stderr")
(PUNCT "=")
(ID "stderr")
(PUNCT ",")
(ID "bufsize")
(PUNCT "=")
(ID "bufsize")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "callback")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "returncode")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_proc")
(PUNCT ".")
(ID "poll")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_process_exited")
(PUNCT "(")
(ID "returncode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "f")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "_proactor")
(PUNCT ".")
(ID "wait_for_handle")
(PUNCT "(")
(ID "int")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_proc")
(PUNCT ".")
(ID "_handle")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "add_done_callback")
(PUNCT "(")
(ID "callback")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "SelectorEventLoop")
(PUNCT "=")
(ID "_WindowsSelectorEventLoop")
(NEWLINE)
(KEYWORD class)
(ID "_WindowsDefaultEventLoopPolicy")
(PUNCT "(")
(ID "events")
(PUNCT ".")
(ID "BaseDefaultEventLoopPolicy")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_loop_factory")
(PUNCT "=")
(ID "SelectorEventLoop")
(NEWLINE)
(DEDENT)
(ID "DefaultEventLoopPolicy")
(PUNCT "=")
(ID "_WindowsDefaultEventLoopPolicy")
(NEWLINE)
(ENDMARKER)
