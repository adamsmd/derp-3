(LIT "Command-line parsing library\n\nThis module is an optparse-inspired command-line parsing library that:\n\n    - handles both optional and positional arguments\n    - produces highly informative usage messages\n    - supports parsers that dispatch to sub-parsers\n\nThe following is a simple usage example that sums integers from the\ncommand-line and writes the result to a file::\n\n    parser = argparse.ArgumentParser(\n        description='sum the integers at the command line')\n    parser.add_argument(\n        'integers', metavar='int', nargs='+', type=int,\n        help='an integer to be summed')\n    parser.add_argument(\n        '--log', default=sys.stdout, type=argparse.FileType('w'),\n        help='the file where the sum should be written')\n    args = parser.parse_args()\n    args.log.write('%s' % sum(args.integers))\n    args.log.close()\n\nThe module contains the following public classes:\n\n    - ArgumentParser -- The main entry point for command-line parsing. As the\n        example above shows, the add_argument() method is used to populate\n        the parser with actions for optional and positional arguments. Then\n        the parse_args() method is invoked to convert the args at the\n        command-line into an object with attributes.\n\n    - ArgumentError -- The exception raised by ArgumentParser objects when\n        there are errors with the parser's actions. Errors raised while\n        parsing the command-line are caught by ArgumentParser and emitted\n        as command-line messages.\n\n    - FileType -- A factory for defining types of files to be created. As the\n        example above shows, instances of FileType are typically passed as\n        the type= argument of add_argument() calls.\n\n    - Action -- The base class for parser actions. Typically actions are\n        selected by passing strings like 'store_true' or 'append_const' to\n        the action= argument of add_argument(). However, for greater\n        customization of ArgumentParser actions, subclasses of Action may\n        be defined and passed as the action= argument.\n\n    - HelpFormatter, RawDescriptionHelpFormatter, RawTextHelpFormatter,\n        ArgumentDefaultsHelpFormatter -- Formatter classes which\n        may be passed as the formatter_class= argument to the\n        ArgumentParser constructor. HelpFormatter is the default,\n        RawDescriptionHelpFormatter and RawTextHelpFormatter tell the parser\n        not to change the formatting for help text, and\n        ArgumentDefaultsHelpFormatter adds information about argument defaults\n        to the help.\n\nAll other classes in this module are considered implementation details.\n(Also note that HelpFormatter and RawDescriptionHelpFormatter are only\nconsidered public as object names -- the API of the formatter objects is\nstill considered an implementation detail.)\n")
(NEWLINE)
(ID "__version__")
(PUNCT "=")
(LIT "1.1")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "ArgumentParser")
(PUNCT ",")
(LIT "ArgumentError")
(PUNCT ",")
(LIT "ArgumentTypeError")
(PUNCT ",")
(LIT "FileType")
(PUNCT ",")
(LIT "HelpFormatter")
(PUNCT ",")
(LIT "ArgumentDefaultsHelpFormatter")
(PUNCT ",")
(LIT "RawDescriptionHelpFormatter")
(PUNCT ",")
(LIT "RawTextHelpFormatter")
(PUNCT ",")
(LIT "MetavarTypeHelpFormatter")
(PUNCT ",")
(LIT "Namespace")
(PUNCT ",")
(LIT "Action")
(PUNCT ",")
(LIT "ONE_OR_MORE")
(PUNCT ",")
(LIT "OPTIONAL")
(PUNCT ",")
(LIT "PARSER")
(PUNCT ",")
(LIT "REMAINDER")
(PUNCT ",")
(LIT "SUPPRESS")
(PUNCT ",")
(LIT "ZERO_OR_MORE")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(KEYWORD import)
(ID "collections")
(KEYWORD as)
(ID "_collections")
(NEWLINE)
(KEYWORD import)
(ID "copy")
(KEYWORD as)
(ID "_copy")
(NEWLINE)
(KEYWORD import)
(ID "os")
(KEYWORD as)
(ID "_os")
(NEWLINE)
(KEYWORD import)
(ID "re")
(KEYWORD as)
(ID "_re")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(KEYWORD as)
(ID "_sys")
(NEWLINE)
(KEYWORD import)
(ID "textwrap")
(KEYWORD as)
(ID "_textwrap")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "gettext")
(KEYWORD import)
(ID "gettext")
(KEYWORD as)
(ID "_")
(PUNCT ",")
(ID "ngettext")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "_")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "message")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ngettext")
(PUNCT "(")
(ID "singular")
(PUNCT ",")
(ID "plural")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "n")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "singular")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "plural")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "SUPPRESS")
(PUNCT "=")
(LIT "==SUPPRESS==")
(NEWLINE)
(ID "OPTIONAL")
(PUNCT "=")
(LIT "?")
(NEWLINE)
(ID "ZERO_OR_MORE")
(PUNCT "=")
(LIT "*")
(NEWLINE)
(ID "ONE_OR_MORE")
(PUNCT "=")
(LIT "+")
(NEWLINE)
(ID "PARSER")
(PUNCT "=")
(LIT "A...")
(NEWLINE)
(ID "REMAINDER")
(PUNCT "=")
(LIT "...")
(NEWLINE)
(ID "_UNRECOGNIZED_ARGS_ATTR")
(PUNCT "=")
(LIT "_unrecognized_args")
(NEWLINE)
(KEYWORD class)
(ID "_AttributeHolder")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Abstract base class that provides __repr__.\n\n    The __repr__ method returns a string in the format::\n        ClassName(attr=name, attr=name, ...)\n    The attributes are determined either by a class-level attribute,\n    '_kwarg_names', or by inspecting the instance __dict__.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "type_name")
(PUNCT "=")
(ID "type")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(ID "arg_strings")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "arg")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_get_args")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "arg_strings")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "repr")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_get_kwargs")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "arg_strings")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "%s=%r")
(PUNCT "%")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "%s(%s)")
(PUNCT "%")
(PUNCT "(")
(ID "type_name")
(PUNCT ",")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "arg_strings")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_kwargs")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "sorted")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__dict__")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_args")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_ensure_value")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "getattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "getattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "HelpFormatter")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Formatter for generating usage messages and argument help strings.\n\n    Only the name of this class is considered a public API. All the methods\n    provided by the class are considered an implementation detail.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "prog")
(PUNCT ",")
(ID "indent_increment")
(PUNCT "=")
(LIT 2)
(PUNCT ",")
(ID "max_help_position")
(PUNCT "=")
(LIT 24)
(PUNCT ",")
(ID "width")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "width")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "width")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "_os")
(PUNCT ".")
(ID "environ")
(PUNCT "[")
(LIT "COLUMNS")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "KeyError")
(PUNCT ",")
(ID "ValueError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "width")
(PUNCT "=")
(LIT 80)
(NEWLINE)
(DEDENT)
(ID "width")
(PUNCT "-=")
(LIT 2)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_prog")
(PUNCT "=")
(ID "prog")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_indent_increment")
(PUNCT "=")
(ID "indent_increment")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_max_help_position")
(PUNCT "=")
(ID "max_help_position")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_max_help_position")
(PUNCT "=")
(ID "min")
(PUNCT "(")
(ID "max_help_position")
(PUNCT ",")
(ID "max")
(PUNCT "(")
(ID "width")
(PUNCT "-")
(LIT 20)
(PUNCT ",")
(ID "indent_increment")
(PUNCT "*")
(LIT 2)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_width")
(PUNCT "=")
(ID "width")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_current_indent")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_level")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_action_max_length")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_root_section")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_Section")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_current_section")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_root_section")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_whitespace_matcher")
(PUNCT "=")
(ID "_re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "\\s+")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_long_break_matcher")
(PUNCT "=")
(ID "_re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "\\n\\n\\n+")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_indent")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_current_indent")
(PUNCT "+=")
(ID "self")
(PUNCT ".")
(ID "_indent_increment")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_level")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_dedent")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_current_indent")
(PUNCT "-=")
(ID "self")
(PUNCT ".")
(ID "_indent_increment")
(NEWLINE)
(KEYWORD assert)
(ID "self")
(PUNCT ".")
(ID "_current_indent")
(PUNCT ">=")
(LIT 0)
(PUNCT ",")
(LIT "Indent decreased below 0.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_level")
(PUNCT "-=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "_Section")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "formatter")
(PUNCT ",")
(ID "parent")
(PUNCT ",")
(ID "heading")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "formatter")
(PUNCT "=")
(ID "formatter")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "parent")
(PUNCT "=")
(ID "parent")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "heading")
(PUNCT "=")
(ID "heading")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "items")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "format_help")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "parent")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "formatter")
(PUNCT ".")
(ID "_indent")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "join")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "formatter")
(PUNCT ".")
(ID "_join_parts")
(NEWLINE)
(KEYWORD for)
(ID "func")
(PUNCT ",")
(ID "args")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "items")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "func")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "item_help")
(PUNCT "=")
(ID "join")
(PUNCT "(")
(PUNCT "[")
(ID "func")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(KEYWORD for)
(ID "func")
(PUNCT ",")
(ID "args")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "items")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "parent")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "formatter")
(PUNCT ".")
(ID "_dedent")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "item_help")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "heading")
(KEYWORD is)
(KEYWORD not)
(ID "SUPPRESS")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "heading")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "current_indent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "formatter")
(PUNCT ".")
(ID "_current_indent")
(NEWLINE)
(ID "heading")
(PUNCT "=")
(LIT "%*s%s:\n")
(PUNCT "%")
(PUNCT "(")
(ID "current_indent")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "heading")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "heading")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "join")
(PUNCT "(")
(PUNCT "[")
(LIT "\n")
(PUNCT ",")
(ID "heading")
(PUNCT ",")
(ID "item_help")
(PUNCT ",")
(LIT "\n")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_add_item")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_current_section")
(PUNCT ".")
(ID "items")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "args")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "start_section")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "heading")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_indent")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "section")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_Section")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_current_section")
(PUNCT ",")
(ID "heading")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_add_item")
(PUNCT "(")
(ID "section")
(PUNCT ".")
(ID "format_help")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_current_section")
(PUNCT "=")
(ID "section")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "end_section")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_current_section")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_current_section")
(PUNCT ".")
(ID "parent")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_dedent")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_text")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "text")
(KEYWORD is)
(KEYWORD not)
(ID "SUPPRESS")
(KEYWORD and)
(ID "text")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_add_item")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_format_text")
(PUNCT ",")
(PUNCT "[")
(ID "text")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "add_usage")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "usage")
(PUNCT ",")
(ID "actions")
(PUNCT ",")
(ID "groups")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "usage")
(KEYWORD is)
(KEYWORD not)
(ID "SUPPRESS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(ID "usage")
(PUNCT ",")
(ID "actions")
(PUNCT ",")
(ID "groups")
(PUNCT ",")
(ID "prefix")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_add_item")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_format_usage")
(PUNCT ",")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "add_argument")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "help")
(KEYWORD is)
(KEYWORD not)
(ID "SUPPRESS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "get_invocation")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_format_action_invocation")
(NEWLINE)
(ID "invocations")
(PUNCT "=")
(PUNCT "[")
(ID "get_invocation")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "subaction")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_iter_indented_subactions")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "invocations")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "get_invocation")
(PUNCT "(")
(ID "subaction")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "invocation_length")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(PUNCT "[")
(ID "len")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(KEYWORD for)
(ID "s")
(KEYWORD in)
(ID "invocations")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "action_length")
(PUNCT "=")
(ID "invocation_length")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "_current_indent")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_action_max_length")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_action_max_length")
(PUNCT ",")
(ID "action_length")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_add_item")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_format_action")
(PUNCT ",")
(PUNCT "[")
(ID "action")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "add_arguments")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "actions")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "add_argument")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "format_help")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "help")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_root_section")
(PUNCT ".")
(ID "format_help")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "help")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "help")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_long_break_matcher")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "\n\n")
(PUNCT ",")
(ID "help")
(PUNCT ")")
(NEWLINE)
(ID "help")
(PUNCT "=")
(ID "help")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(PUNCT "+")
(LIT "\n")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "help")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_join_parts")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "part_strings")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "[")
(ID "part")
(KEYWORD for)
(ID "part")
(KEYWORD in)
(ID "part_strings")
(KEYWORD if)
(ID "part")
(KEYWORD and)
(ID "part")
(KEYWORD is)
(KEYWORD not)
(ID "SUPPRESS")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_format_usage")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "usage")
(PUNCT ",")
(ID "actions")
(PUNCT ",")
(ID "groups")
(PUNCT ",")
(ID "prefix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "prefix")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "prefix")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "usage: ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "usage")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "usage")
(PUNCT "=")
(ID "usage")
(PUNCT "%")
(ID "dict")
(PUNCT "(")
(ID "prog")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_prog")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "usage")
(KEYWORD is)
(KEYWORD None)
(KEYWORD and)
(KEYWORD not)
(ID "actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "usage")
(PUNCT "=")
(LIT "%(prog)s")
(PUNCT "%")
(ID "dict")
(PUNCT "(")
(ID "prog")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_prog")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "usage")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "prog")
(PUNCT "=")
(LIT "%(prog)s")
(PUNCT "%")
(ID "dict")
(PUNCT "(")
(ID "prog")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_prog")
(PUNCT ")")
(NEWLINE)
(ID "optionals")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "positionals")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "optionals")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "positionals")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "format")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_format_actions_usage")
(NEWLINE)
(ID "action_usage")
(PUNCT "=")
(ID "format")
(PUNCT "(")
(ID "optionals")
(PUNCT "+")
(ID "positionals")
(PUNCT ",")
(ID "groups")
(PUNCT ")")
(NEWLINE)
(ID "usage")
(PUNCT "=")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "[")
(ID "s")
(KEYWORD for)
(ID "s")
(KEYWORD in)
(PUNCT "[")
(ID "prog")
(PUNCT ",")
(ID "action_usage")
(PUNCT "]")
(KEYWORD if)
(ID "s")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "text_width")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_width")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_current_indent")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "prefix")
(PUNCT ")")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "usage")
(PUNCT ")")
(PUNCT ">")
(ID "text_width")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "part_regexp")
(PUNCT "=")
(LIT "\\(.*?\\)+|\\[.*?\\]+|\\S+")
(NEWLINE)
(ID "opt_usage")
(PUNCT "=")
(ID "format")
(PUNCT "(")
(ID "optionals")
(PUNCT ",")
(ID "groups")
(PUNCT ")")
(NEWLINE)
(ID "pos_usage")
(PUNCT "=")
(ID "format")
(PUNCT "(")
(ID "positionals")
(PUNCT ",")
(ID "groups")
(PUNCT ")")
(NEWLINE)
(ID "opt_parts")
(PUNCT "=")
(ID "_re")
(PUNCT ".")
(ID "findall")
(PUNCT "(")
(ID "part_regexp")
(PUNCT ",")
(ID "opt_usage")
(PUNCT ")")
(NEWLINE)
(ID "pos_parts")
(PUNCT "=")
(ID "_re")
(PUNCT ".")
(ID "findall")
(PUNCT "(")
(ID "part_regexp")
(PUNCT ",")
(ID "pos_usage")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "opt_parts")
(PUNCT ")")
(PUNCT "==")
(ID "opt_usage")
(NEWLINE)
(KEYWORD assert)
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "pos_parts")
(PUNCT ")")
(PUNCT "==")
(ID "pos_usage")
(NEWLINE)
(KEYWORD def)
(ID "get_lines")
(PUNCT "(")
(ID "parts")
(PUNCT ",")
(ID "indent")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lines")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "line")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "prefix")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line_len")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "prefix")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line_len")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "indent")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "part")
(KEYWORD in)
(ID "parts")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "line_len")
(PUNCT "+")
(LIT 1)
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "part")
(PUNCT ")")
(PUNCT ">")
(ID "text_width")
(KEYWORD and)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lines")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "indent")
(PUNCT "+")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "line")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "line_len")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "indent")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "line")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "part")
(PUNCT ")")
(NEWLINE)
(ID "line_len")
(PUNCT "+=")
(ID "len")
(PUNCT "(")
(ID "part")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lines")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "indent")
(PUNCT "+")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "prefix")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lines")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "=")
(ID "lines")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "[")
(ID "len")
(PUNCT "(")
(ID "indent")
(PUNCT ")")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "lines")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "prefix")
(PUNCT ")")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "prog")
(PUNCT ")")
(PUNCT "<=")
(LIT 0.75)
(PUNCT "*")
(ID "text_width")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "indent")
(PUNCT "=")
(LIT " ")
(PUNCT "*")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "prefix")
(PUNCT ")")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "prog")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "opt_parts")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lines")
(PUNCT "=")
(ID "get_lines")
(PUNCT "(")
(PUNCT "[")
(ID "prog")
(PUNCT "]")
(PUNCT "+")
(ID "opt_parts")
(PUNCT ",")
(ID "indent")
(PUNCT ",")
(ID "prefix")
(PUNCT ")")
(NEWLINE)
(ID "lines")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "get_lines")
(PUNCT "(")
(ID "pos_parts")
(PUNCT ",")
(ID "indent")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "pos_parts")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lines")
(PUNCT "=")
(ID "get_lines")
(PUNCT "(")
(PUNCT "[")
(ID "prog")
(PUNCT "]")
(PUNCT "+")
(ID "pos_parts")
(PUNCT ",")
(ID "indent")
(PUNCT ",")
(ID "prefix")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lines")
(PUNCT "=")
(PUNCT "[")
(ID "prog")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "indent")
(PUNCT "=")
(LIT " ")
(PUNCT "*")
(ID "len")
(PUNCT "(")
(ID "prefix")
(PUNCT ")")
(NEWLINE)
(ID "parts")
(PUNCT "=")
(ID "opt_parts")
(PUNCT "+")
(ID "pos_parts")
(NEWLINE)
(ID "lines")
(PUNCT "=")
(ID "get_lines")
(PUNCT "(")
(ID "parts")
(PUNCT ",")
(ID "indent")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "lines")
(PUNCT ")")
(PUNCT ">")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lines")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "lines")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "get_lines")
(PUNCT "(")
(ID "opt_parts")
(PUNCT ",")
(ID "indent")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "lines")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "get_lines")
(PUNCT "(")
(ID "pos_parts")
(PUNCT ",")
(ID "indent")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "lines")
(PUNCT "=")
(PUNCT "[")
(ID "prog")
(PUNCT "]")
(PUNCT "+")
(ID "lines")
(NEWLINE)
(DEDENT)
(ID "usage")
(PUNCT "=")
(LIT "\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "lines")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(LIT "%s%s\n\n")
(PUNCT "%")
(PUNCT "(")
(ID "prefix")
(PUNCT ",")
(ID "usage")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_format_actions_usage")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "actions")
(PUNCT ",")
(ID "groups")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "group_actions")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "inserts")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "group")
(KEYWORD in)
(ID "groups")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "start")
(PUNCT "=")
(ID "actions")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(ID "group")
(PUNCT ".")
(ID "_group_actions")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "end")
(PUNCT "=")
(ID "start")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "group")
(PUNCT ".")
(ID "_group_actions")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "actions")
(PUNCT "[")
(ID "start")
(PUNCT ":")
(ID "end")
(PUNCT "]")
(PUNCT "==")
(ID "group")
(PUNCT ".")
(ID "_group_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "group")
(PUNCT ".")
(ID "_group_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "group_actions")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "group")
(PUNCT ".")
(ID "required")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "start")
(KEYWORD in)
(ID "inserts")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "inserts")
(PUNCT "[")
(ID "start")
(PUNCT "]")
(PUNCT "+=")
(LIT " [")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "inserts")
(PUNCT "[")
(ID "start")
(PUNCT "]")
(PUNCT "=")
(LIT "[")
(NEWLINE)
(DEDENT)
(ID "inserts")
(PUNCT "[")
(ID "end")
(PUNCT "]")
(PUNCT "=")
(LIT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "start")
(KEYWORD in)
(ID "inserts")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "inserts")
(PUNCT "[")
(ID "start")
(PUNCT "]")
(PUNCT "+=")
(LIT " (")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "inserts")
(PUNCT "[")
(ID "start")
(PUNCT "]")
(PUNCT "=")
(LIT "(")
(NEWLINE)
(DEDENT)
(ID "inserts")
(PUNCT "[")
(ID "end")
(PUNCT "]")
(PUNCT "=")
(LIT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "start")
(PUNCT "+")
(LIT 1)
(PUNCT ",")
(ID "end")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "inserts")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT "=")
(LIT "|")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "parts")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "action")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "actions")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "help")
(KEYWORD is)
(ID "SUPPRESS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parts")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "inserts")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(PUNCT "==")
(LIT "|")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "inserts")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "inserts")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT "==")
(LIT "|")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "inserts")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "default")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_default_metavar_for_positional")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(ID "part")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_format_args")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "default")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "action")
(KEYWORD in)
(ID "group_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "part")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(LIT "[")
(KEYWORD and)
(ID "part")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "part")
(PUNCT "=")
(ID "part")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "parts")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "part")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "option_string")
(PUNCT "=")
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "part")
(PUNCT "=")
(LIT "%s")
(PUNCT "%")
(ID "option_string")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "default")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_default_metavar_for_optional")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(ID "args_string")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_format_args")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "default")
(PUNCT ")")
(NEWLINE)
(ID "part")
(PUNCT "=")
(LIT "%s %s")
(PUNCT "%")
(PUNCT "(")
(ID "option_string")
(PUNCT ",")
(ID "args_string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "action")
(PUNCT ".")
(ID "required")
(KEYWORD and)
(ID "action")
(KEYWORD not)
(KEYWORD in)
(ID "group_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "part")
(PUNCT "=")
(LIT "[%s]")
(PUNCT "%")
(ID "part")
(NEWLINE)
(DEDENT)
(ID "parts")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "part")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "sorted")
(PUNCT "(")
(ID "inserts")
(PUNCT ",")
(ID "reverse")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parts")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(PUNCT "=")
(PUNCT "[")
(ID "inserts")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "text")
(PUNCT "=")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "[")
(ID "item")
(KEYWORD for)
(ID "item")
(KEYWORD in)
(ID "parts")
(KEYWORD if)
(ID "item")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "open")
(PUNCT "=")
(LIT "[\\[(]")
(NEWLINE)
(ID "close")
(PUNCT "=")
(LIT "[\\])]")
(NEWLINE)
(ID "text")
(PUNCT "=")
(ID "_re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "(%s) ")
(PUNCT "%")
(ID "open")
(PUNCT ",")
(LIT "\\1")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT "=")
(ID "_re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT " (%s)")
(PUNCT "%")
(ID "close")
(PUNCT ",")
(LIT "\\1")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT "=")
(ID "_re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "%s *%s")
(PUNCT "%")
(PUNCT "(")
(ID "open")
(PUNCT ",")
(ID "close")
(PUNCT ")")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT "=")
(ID "_re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "\\(([^|]*)\\)")
(PUNCT ",")
(LIT "\\1")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "text")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_format_text")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "%(prog)")
(KEYWORD in)
(ID "text")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "text")
(PUNCT "%")
(ID "dict")
(PUNCT "(")
(ID "prog")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_prog")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "text_width")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_width")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_current_indent")
(PUNCT ",")
(LIT 11)
(PUNCT ")")
(NEWLINE)
(ID "indent")
(PUNCT "=")
(LIT " ")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_current_indent")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_fill_text")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(ID "text_width")
(PUNCT ",")
(ID "indent")
(PUNCT ")")
(PUNCT "+")
(LIT "\n\n")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_format_action")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "help_position")
(PUNCT "=")
(ID "min")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_action_max_length")
(PUNCT "+")
(LIT 2)
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_max_help_position")
(PUNCT ")")
(NEWLINE)
(ID "help_width")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_width")
(PUNCT "-")
(ID "help_position")
(PUNCT ",")
(LIT 11)
(PUNCT ")")
(NEWLINE)
(ID "action_width")
(PUNCT "=")
(ID "help_position")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_current_indent")
(PUNCT "-")
(LIT 2)
(NEWLINE)
(ID "action_header")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_format_action_invocation")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "action")
(PUNCT ".")
(ID "help")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tup")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_current_indent")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(ID "action_header")
(NEWLINE)
(ID "action_header")
(PUNCT "=")
(LIT "%*s%s\n")
(PUNCT "%")
(ID "tup")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "len")
(PUNCT "(")
(ID "action_header")
(PUNCT ")")
(PUNCT "<=")
(ID "action_width")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tup")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_current_indent")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(ID "action_width")
(PUNCT ",")
(ID "action_header")
(NEWLINE)
(ID "action_header")
(PUNCT "=")
(LIT "%*s%-*s  ")
(PUNCT "%")
(ID "tup")
(NEWLINE)
(ID "indent_first")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tup")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_current_indent")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(ID "action_header")
(NEWLINE)
(ID "action_header")
(PUNCT "=")
(LIT "%*s%s\n")
(PUNCT "%")
(ID "tup")
(NEWLINE)
(ID "indent_first")
(PUNCT "=")
(ID "help_position")
(NEWLINE)
(DEDENT)
(ID "parts")
(PUNCT "=")
(PUNCT "[")
(ID "action_header")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "help")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "help_text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_expand_help")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(ID "help_lines")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_split_lines")
(PUNCT "(")
(ID "help_text")
(PUNCT ",")
(ID "help_width")
(PUNCT ")")
(NEWLINE)
(ID "parts")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "%*s%s\n")
(PUNCT "%")
(PUNCT "(")
(ID "indent_first")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(ID "help_lines")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "line")
(KEYWORD in)
(ID "help_lines")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parts")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "%*s%s\n")
(PUNCT "%")
(PUNCT "(")
(ID "help_position")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "action_header")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parts")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "subaction")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_iter_indented_subactions")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parts")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_format_action")
(PUNCT "(")
(ID "subaction")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_join_parts")
(PUNCT "(")
(ID "parts")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_format_action_invocation")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "default")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_default_metavar_for_positional")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(ID "metavar")
(PUNCT ",")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_metavar_formatter")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "default")
(PUNCT ")")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "metavar")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parts")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parts")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "default")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_default_metavar_for_optional")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(ID "args_string")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_format_args")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "default")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "option_string")
(KEYWORD in)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parts")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "%s %s")
(PUNCT "%")
(PUNCT "(")
(ID "option_string")
(PUNCT ",")
(ID "args_string")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "parts")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_metavar_formatter")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ",")
(ID "default_metavar")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "metavar")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "action")
(PUNCT ".")
(ID "metavar")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "action")
(PUNCT ".")
(ID "choices")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "choice_strs")
(PUNCT "=")
(PUNCT "[")
(ID "str")
(PUNCT "(")
(ID "choice")
(PUNCT ")")
(KEYWORD for)
(ID "choice")
(KEYWORD in)
(ID "action")
(PUNCT ".")
(ID "choices")
(PUNCT "]")
(NEWLINE)
(ID "result")
(PUNCT "=")
(LIT "{%s}")
(PUNCT "%")
(LIT ",")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "choice_strs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "default_metavar")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "format")
(PUNCT "(")
(ID "tuple_size")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "result")
(PUNCT ",")
(ID "tuple")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "result")
(PUNCT ",")
(PUNCT ")")
(PUNCT "*")
(ID "tuple_size")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "format")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_format_args")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ",")
(ID "default_metavar")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "get_metavar")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_metavar_formatter")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "default_metavar")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "nargs")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(LIT "%s")
(PUNCT "%")
(ID "get_metavar")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT "==")
(ID "OPTIONAL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(LIT "[%s]")
(PUNCT "%")
(ID "get_metavar")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT "==")
(ID "ZERO_OR_MORE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(LIT "[%s [%s ...]]")
(PUNCT "%")
(ID "get_metavar")
(PUNCT "(")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT "==")
(ID "ONE_OR_MORE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(LIT "%s [%s ...]")
(PUNCT "%")
(ID "get_metavar")
(PUNCT "(")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT "==")
(ID "REMAINDER")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(LIT "...")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT "==")
(ID "PARSER")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(LIT "%s ...")
(PUNCT "%")
(ID "get_metavar")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "formats")
(PUNCT "=")
(PUNCT "[")
(LIT "%s")
(KEYWORD for)
(ID "_")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(ID "result")
(PUNCT "=")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "formats")
(PUNCT ")")
(PUNCT "%")
(ID "get_metavar")
(PUNCT "(")
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_expand_help")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "params")
(PUNCT "=")
(ID "dict")
(PUNCT "(")
(ID "vars")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(PUNCT ",")
(ID "prog")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_prog")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "list")
(PUNCT "(")
(ID "params")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "params")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(KEYWORD is)
(ID "SUPPRESS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "params")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "list")
(PUNCT "(")
(ID "params")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "params")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT ",")
(LIT "__name__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "params")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "params")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "params")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "choices")
(PUNCT ")")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "choices_str")
(PUNCT "=")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "[")
(ID "str")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(KEYWORD for)
(ID "c")
(KEYWORD in)
(ID "params")
(PUNCT "[")
(LIT "choices")
(PUNCT "]")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "params")
(PUNCT "[")
(LIT "choices")
(PUNCT "]")
(PUNCT "=")
(ID "choices_str")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_get_help_string")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(PUNCT "%")
(ID "params")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_iter_indented_subactions")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "get_subactions")
(PUNCT "=")
(ID "action")
(PUNCT ".")
(ID "_get_subactions")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_indent")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD yield)
(KEYWORD from)
(ID "get_subactions")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_dedent")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_split_lines")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_whitespace_matcher")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT " ")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "_textwrap")
(PUNCT ".")
(ID "wrap")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_fill_text")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(ID "width")
(PUNCT ",")
(ID "indent")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_whitespace_matcher")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT " ")
(PUNCT ",")
(ID "text")
(PUNCT ")")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "_textwrap")
(PUNCT ".")
(ID "fill")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(ID "width")
(PUNCT ",")
(ID "initial_indent")
(PUNCT "=")
(ID "indent")
(PUNCT ",")
(ID "subsequent_indent")
(PUNCT "=")
(ID "indent")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_help_string")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "action")
(PUNCT ".")
(ID "help")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_default_metavar_for_optional")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "action")
(PUNCT ".")
(ID "dest")
(PUNCT ".")
(ID "upper")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_default_metavar_for_positional")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "action")
(PUNCT ".")
(ID "dest")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "RawDescriptionHelpFormatter")
(PUNCT "(")
(ID "HelpFormatter")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Help message formatter which retains any formatting in descriptions.\n\n    Only the name of this class is considered a public API. All the methods\n    provided by the class are considered an implementation detail.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "_fill_text")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(ID "width")
(PUNCT ",")
(ID "indent")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "indent")
(PUNCT "+")
(ID "line")
(KEYWORD for)
(ID "line")
(KEYWORD in)
(ID "text")
(PUNCT ".")
(ID "splitlines")
(PUNCT "(")
(ID "keepends")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "RawTextHelpFormatter")
(PUNCT "(")
(ID "RawDescriptionHelpFormatter")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Help message formatter which retains formatting of all help text.\n\n    Only the name of this class is considered a public API. All the methods\n    provided by the class are considered an implementation detail.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "_split_lines")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "text")
(PUNCT ".")
(ID "splitlines")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ArgumentDefaultsHelpFormatter")
(PUNCT "(")
(ID "HelpFormatter")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Help message formatter which adds default values to argument help.\n\n    Only the name of this class is considered a public API. All the methods\n    provided by the class are considered an implementation detail.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "_get_help_string")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "help")
(PUNCT "=")
(ID "action")
(PUNCT ".")
(ID "help")
(NEWLINE)
(KEYWORD if)
(LIT "%(default)")
(KEYWORD not)
(KEYWORD in)
(ID "action")
(PUNCT ".")
(ID "help")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "default")
(KEYWORD is)
(KEYWORD not)
(ID "SUPPRESS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "defaulting_nargs")
(PUNCT "=")
(PUNCT "[")
(ID "OPTIONAL")
(PUNCT ",")
(ID "ZERO_OR_MORE")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(KEYWORD or)
(ID "action")
(PUNCT ".")
(ID "nargs")
(KEYWORD in)
(ID "defaulting_nargs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "help")
(PUNCT "+=")
(LIT " (default: %(default)s)")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "help")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "MetavarTypeHelpFormatter")
(PUNCT "(")
(ID "HelpFormatter")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Help message formatter which uses the argument 'type' as the default\n    metavar value (instead of the argument 'dest')\n\n    Only the name of this class is considered a public API. All the methods\n    provided by the class are considered an implementation detail.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "_get_default_metavar_for_optional")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "action")
(PUNCT ".")
(ID "type")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_default_metavar_for_positional")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "action")
(PUNCT ".")
(ID "type")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_get_action_name")
(PUNCT "(")
(ID "argument")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "argument")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "argument")
(PUNCT ".")
(ID "option_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "/")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "argument")
(PUNCT ".")
(ID "option_strings")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "argument")
(PUNCT ".")
(ID "metavar")
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(ID "SUPPRESS")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "argument")
(PUNCT ".")
(ID "metavar")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "argument")
(PUNCT ".")
(ID "dest")
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(ID "SUPPRESS")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "argument")
(PUNCT ".")
(ID "dest")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ArgumentError")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "An error from creating or using an argument (optional or positional).\n\n    The string value of this exception is the message, augmented with\n    information about the argument that caused it.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "argument")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "argument_name")
(PUNCT "=")
(ID "_get_action_name")
(PUNCT "(")
(ID "argument")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "message")
(PUNCT "=")
(ID "message")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__str__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "argument_name")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "format")
(PUNCT "=")
(LIT "%(message)s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "format")
(PUNCT "=")
(LIT "argument %(argument_name)s: %(message)s")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "format")
(PUNCT "%")
(ID "dict")
(PUNCT "(")
(ID "message")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "message")
(PUNCT ",")
(ID "argument_name")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "argument_name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ArgumentTypeError")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "An error from trying to convert a command line string to a type.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "Action")
(PUNCT "(")
(ID "_AttributeHolder")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Information about how to convert command line strings to Python objects.\n\n    Action objects are used by an ArgumentParser to represent the information\n    needed to parse a single argument from one or more strings from the\n    command line. The keyword arguments to the Action constructor are also\n    all attributes of Action instances.\n\n    Keyword Arguments:\n\n        - option_strings -- A list of command-line option strings which\n            should be associated with this action.\n\n        - dest -- The name of the attribute to hold the created object(s)\n\n        - nargs -- The number of command-line arguments that should be\n            consumed. By default, one argument will be consumed and a single\n            value will be produced.  Other values include:\n                - N (an integer) consumes N arguments (and produces a list)\n                - '?' consumes zero or one arguments\n                - '*' consumes zero or more arguments (and produces a list)\n                - '+' consumes one or more arguments (and produces a list)\n            Note that the difference between the default and nargs=1 is that\n            with the default, a single value will be produced, while with\n            nargs=1, a list containing a single value will be produced.\n\n        - const -- The value to be produced if the option is specified and the\n            option uses an action that takes no values.\n\n        - default -- The value to be produced if the option is not specified.\n\n        - type -- A callable that accepts a single string argument, and\n            returns the converted value.  The standard Python types str, int,\n            float, and complex are useful examples of such callables.  If None,\n            str is used.\n\n        - choices -- A container of values that should be allowed. If not None,\n            after a command-line argument has been converted to the appropriate\n            type, an exception will be raised if it is not a member of this\n            collection.\n\n        - required -- True if the action must always be specified at the\n            command line. This is only meaningful for optional command-line\n            arguments.\n\n        - help -- The help string describing the argument.\n\n        - metavar -- The name to be used for the option's argument with the\n            help string. If None, the 'dest' value will be used as the name.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT ",")
(ID "nargs")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "const")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "type")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "choices")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "required")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "metavar")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "option_strings")
(PUNCT "=")
(ID "option_strings")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "dest")
(PUNCT "=")
(ID "dest")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "nargs")
(PUNCT "=")
(ID "nargs")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "const")
(PUNCT "=")
(ID "const")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "default")
(PUNCT "=")
(ID "default")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "type")
(PUNCT "=")
(ID "type")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "choices")
(PUNCT "=")
(ID "choices")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "required")
(PUNCT "=")
(ID "required")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "help")
(PUNCT "=")
(ID "help")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "metavar")
(PUNCT "=")
(ID "metavar")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_kwargs")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT "=")
(PUNCT "[")
(LIT "option_strings")
(PUNCT ",")
(LIT "dest")
(PUNCT ",")
(LIT "nargs")
(PUNCT ",")
(LIT "const")
(PUNCT ",")
(LIT "default")
(PUNCT ",")
(LIT "type")
(PUNCT ",")
(LIT "choices")
(PUNCT ",")
(LIT "help")
(PUNCT ",")
(LIT "metavar")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ")")
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "names")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parser")
(PUNCT ",")
(ID "namespace")
(PUNCT ",")
(ID "values")
(PUNCT ",")
(ID "option_string")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(ID "_")
(PUNCT "(")
(LIT ".__call__() not defined")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_StoreAction")
(PUNCT "(")
(ID "Action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT ",")
(ID "nargs")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "const")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "type")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "choices")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "required")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "metavar")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "nargs")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "nargs for store actions must be > 0; if you ")
(LIT "have nothing to store, actions such as store ")
(LIT "true or store const may be more appropriate")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "const")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID "nargs")
(PUNCT "!=")
(ID "OPTIONAL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "nargs must be %r to supply const")
(PUNCT "%")
(ID "OPTIONAL")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "super")
(PUNCT "(")
(ID "_StoreAction")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "option_strings")
(PUNCT "=")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "dest")
(PUNCT ",")
(ID "nargs")
(PUNCT "=")
(ID "nargs")
(PUNCT ",")
(ID "const")
(PUNCT "=")
(ID "const")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(ID "default")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(ID "type")
(PUNCT ",")
(ID "choices")
(PUNCT "=")
(ID "choices")
(PUNCT ",")
(ID "required")
(PUNCT "=")
(ID "required")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(ID "help")
(PUNCT ",")
(ID "metavar")
(PUNCT "=")
(ID "metavar")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parser")
(PUNCT ",")
(ID "namespace")
(PUNCT ",")
(ID "values")
(PUNCT ",")
(ID "option_string")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "dest")
(PUNCT ",")
(ID "values")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_StoreConstAction")
(PUNCT "(")
(ID "Action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT ",")
(ID "const")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "required")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "metavar")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "_StoreConstAction")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "option_strings")
(PUNCT "=")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "dest")
(PUNCT ",")
(ID "nargs")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "const")
(PUNCT "=")
(ID "const")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(ID "default")
(PUNCT ",")
(ID "required")
(PUNCT "=")
(ID "required")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(ID "help")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parser")
(PUNCT ",")
(ID "namespace")
(PUNCT ",")
(ID "values")
(PUNCT ",")
(ID "option_string")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "dest")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "const")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_StoreTrueAction")
(PUNCT "(")
(ID "_StoreConstAction")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "required")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "_StoreTrueAction")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "option_strings")
(PUNCT "=")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "dest")
(PUNCT ",")
(ID "const")
(PUNCT "=")
(KEYWORD True)
(PUNCT ",")
(ID "default")
(PUNCT "=")
(ID "default")
(PUNCT ",")
(ID "required")
(PUNCT "=")
(ID "required")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(ID "help")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_StoreFalseAction")
(PUNCT "(")
(ID "_StoreConstAction")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD True)
(PUNCT ",")
(ID "required")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "_StoreFalseAction")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "option_strings")
(PUNCT "=")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "dest")
(PUNCT ",")
(ID "const")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "default")
(PUNCT "=")
(ID "default")
(PUNCT ",")
(ID "required")
(PUNCT "=")
(ID "required")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(ID "help")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_AppendAction")
(PUNCT "(")
(ID "Action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT ",")
(ID "nargs")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "const")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "type")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "choices")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "required")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "metavar")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "nargs")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "nargs for append actions must be > 0; if arg ")
(LIT "strings are not supplying the value to append, ")
(LIT "the append const action may be more appropriate")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "const")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID "nargs")
(PUNCT "!=")
(ID "OPTIONAL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "nargs must be %r to supply const")
(PUNCT "%")
(ID "OPTIONAL")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "super")
(PUNCT "(")
(ID "_AppendAction")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "option_strings")
(PUNCT "=")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "dest")
(PUNCT ",")
(ID "nargs")
(PUNCT "=")
(ID "nargs")
(PUNCT ",")
(ID "const")
(PUNCT "=")
(ID "const")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(ID "default")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(ID "type")
(PUNCT ",")
(ID "choices")
(PUNCT "=")
(ID "choices")
(PUNCT ",")
(ID "required")
(PUNCT "=")
(ID "required")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(ID "help")
(PUNCT ",")
(ID "metavar")
(PUNCT "=")
(ID "metavar")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parser")
(PUNCT ",")
(ID "namespace")
(PUNCT ",")
(ID "values")
(PUNCT ",")
(ID "option_string")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "items")
(PUNCT "=")
(ID "_copy")
(PUNCT ".")
(ID "copy")
(PUNCT "(")
(ID "_ensure_value")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "dest")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "items")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "values")
(PUNCT ")")
(NEWLINE)
(ID "setattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "dest")
(PUNCT ",")
(ID "items")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_AppendConstAction")
(PUNCT "(")
(ID "Action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT ",")
(ID "const")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "required")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "metavar")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "_AppendConstAction")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "option_strings")
(PUNCT "=")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "dest")
(PUNCT ",")
(ID "nargs")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "const")
(PUNCT "=")
(ID "const")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(ID "default")
(PUNCT ",")
(ID "required")
(PUNCT "=")
(ID "required")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(ID "help")
(PUNCT ",")
(ID "metavar")
(PUNCT "=")
(ID "metavar")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parser")
(PUNCT ",")
(ID "namespace")
(PUNCT ",")
(ID "values")
(PUNCT ",")
(ID "option_string")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "items")
(PUNCT "=")
(ID "_copy")
(PUNCT ".")
(ID "copy")
(PUNCT "(")
(ID "_ensure_value")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "dest")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "items")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "const")
(PUNCT ")")
(NEWLINE)
(ID "setattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "dest")
(PUNCT ",")
(ID "items")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_CountAction")
(PUNCT "(")
(ID "Action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "required")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "_CountAction")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "option_strings")
(PUNCT "=")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "dest")
(PUNCT ",")
(ID "nargs")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "default")
(PUNCT "=")
(ID "default")
(PUNCT ",")
(ID "required")
(PUNCT "=")
(ID "required")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(ID "help")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parser")
(PUNCT ",")
(ID "namespace")
(PUNCT ",")
(ID "values")
(PUNCT ",")
(ID "option_string")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_count")
(PUNCT "=")
(ID "_ensure_value")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "dest")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "setattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "dest")
(PUNCT ",")
(ID "new_count")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_HelpAction")
(PUNCT "(")
(ID "Action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "SUPPRESS")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(ID "SUPPRESS")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "_HelpAction")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "option_strings")
(PUNCT "=")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "dest")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(ID "default")
(PUNCT ",")
(ID "nargs")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(ID "help")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parser")
(PUNCT ",")
(ID "namespace")
(PUNCT ",")
(ID "values")
(PUNCT ",")
(ID "option_string")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "print_help")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_VersionAction")
(PUNCT "(")
(ID "Action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option_strings")
(PUNCT ",")
(ID "version")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "SUPPRESS")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(ID "SUPPRESS")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "show program's version number and exit")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "_VersionAction")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "option_strings")
(PUNCT "=")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "dest")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(ID "default")
(PUNCT ",")
(ID "nargs")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "help")
(PUNCT "=")
(ID "help")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "version")
(PUNCT "=")
(ID "version")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parser")
(PUNCT ",")
(ID "namespace")
(PUNCT ",")
(ID "values")
(PUNCT ",")
(ID "option_string")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "version")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "version")
(NEWLINE)
(KEYWORD if)
(ID "version")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "version")
(PUNCT "=")
(ID "parser")
(PUNCT ".")
(ID "version")
(NEWLINE)
(DEDENT)
(ID "formatter")
(PUNCT "=")
(ID "parser")
(PUNCT ".")
(ID "_get_formatter")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "formatter")
(PUNCT ".")
(ID "add_text")
(PUNCT "(")
(ID "version")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "_print_message")
(PUNCT "(")
(ID "formatter")
(PUNCT ".")
(ID "format_help")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "_sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_SubParsersAction")
(PUNCT "(")
(ID "Action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD class)
(ID "_ChoicesPseudoAction")
(PUNCT "(")
(ID "Action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "aliases")
(PUNCT ",")
(ID "help")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "metavar")
(PUNCT "=")
(ID "dest")
(PUNCT "=")
(ID "name")
(NEWLINE)
(KEYWORD if)
(ID "aliases")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "metavar")
(PUNCT "+=")
(LIT " (%s)")
(PUNCT "%")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "aliases")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "sup")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(ID "_SubParsersAction")
(PUNCT ".")
(ID "_ChoicesPseudoAction")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "sup")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "option_strings")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "dest")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(ID "help")
(PUNCT ",")
(ID "metavar")
(PUNCT "=")
(ID "metavar")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option_strings")
(PUNCT ",")
(ID "prog")
(PUNCT ",")
(ID "parser_class")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "SUPPRESS")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "metavar")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_prog_prefix")
(PUNCT "=")
(ID "prog")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_parser_class")
(PUNCT "=")
(ID "parser_class")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_name_parser_map")
(PUNCT "=")
(ID "_collections")
(PUNCT ".")
(ID "OrderedDict")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_choices_actions")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "super")
(PUNCT "(")
(ID "_SubParsersAction")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "option_strings")
(PUNCT "=")
(ID "option_strings")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "dest")
(PUNCT ",")
(ID "nargs")
(PUNCT "=")
(ID "PARSER")
(PUNCT ",")
(ID "choices")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_name_parser_map")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(ID "help")
(PUNCT ",")
(ID "metavar")
(PUNCT "=")
(ID "metavar")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_parser")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "kwargs")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "prog")
(PUNCT ")")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kwargs")
(PUNCT "[")
(LIT "prog")
(PUNCT "]")
(PUNCT "=")
(LIT "%s %s")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_prog_prefix")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "aliases")
(PUNCT "=")
(ID "kwargs")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(LIT "aliases")
(PUNCT ",")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "help")
(KEYWORD in)
(ID "kwargs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "help")
(PUNCT "=")
(ID "kwargs")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(LIT "help")
(PUNCT ")")
(NEWLINE)
(ID "choice_action")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_ChoicesPseudoAction")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "aliases")
(PUNCT ",")
(ID "help")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_choices_actions")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "choice_action")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "parser")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_parser_class")
(PUNCT "(")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_name_parser_map")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "parser")
(NEWLINE)
(KEYWORD for)
(ID "alias")
(KEYWORD in)
(ID "aliases")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_name_parser_map")
(PUNCT "[")
(ID "alias")
(PUNCT "]")
(PUNCT "=")
(ID "parser")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "parser")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_subactions")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_choices_actions")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parser")
(PUNCT ",")
(ID "namespace")
(PUNCT ",")
(ID "values")
(PUNCT ",")
(ID "option_string")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser_name")
(PUNCT "=")
(ID "values")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "arg_strings")
(PUNCT "=")
(ID "values")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "dest")
(KEYWORD is)
(KEYWORD not)
(ID "SUPPRESS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "dest")
(PUNCT ",")
(ID "parser_name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_name_parser_map")
(PUNCT "[")
(ID "parser_name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(PUNCT "{")
(LIT "parser_name")
(PUNCT ":")
(ID "parser_name")
(PUNCT ",")
(LIT "choices")
(PUNCT ":")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_name_parser_map")
(PUNCT ")")
(PUNCT "}")
(NEWLINE)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "unknown parser %(parser_name)r (choices: %(choices)s)")
(PUNCT ")")
(PUNCT "%")
(ID "args")
(NEWLINE)
(KEYWORD raise)
(ID "ArgumentError")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "subnamespace")
(PUNCT ",")
(ID "arg_strings")
(PUNCT "=")
(ID "parser")
(PUNCT ".")
(ID "parse_known_args")
(PUNCT "(")
(ID "arg_strings")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "vars")
(PUNCT "(")
(ID "subnamespace")
(PUNCT ")")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "arg_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "vars")
(PUNCT "(")
(ID "namespace")
(PUNCT ")")
(PUNCT ".")
(ID "setdefault")
(PUNCT "(")
(ID "_UNRECOGNIZED_ARGS_ATTR")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "getattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "_UNRECOGNIZED_ARGS_ATTR")
(PUNCT ")")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "arg_strings")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "FileType")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Factory for creating file object types\n\n    Instances of FileType are typically passed as type= arguments to the\n    ArgumentParser add_argument() method.\n\n    Keyword Arguments:\n        - mode -- A string indicating how the file is to be opened. Accepts the\n            same values as the builtin open() function.\n        - bufsize -- The file's desired buffer size. Accepts the same values as\n            the builtin open() function.\n        - encoding -- The file's encoding. Accepts the same values as the\n            builtin open() function.\n        - errors -- A string indicating how encoding and decoding errors are to\n            be handled. Accepts the same value as the builtin open() function.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "mode")
(PUNCT "=")
(LIT "r")
(PUNCT ",")
(ID "bufsize")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "errors")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_mode")
(PUNCT "=")
(ID "mode")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_bufsize")
(PUNCT "=")
(ID "bufsize")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_encoding")
(PUNCT "=")
(ID "encoding")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_errors")
(PUNCT "=")
(ID "errors")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "string")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "string")
(PUNCT "==")
(LIT "-")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "r")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_mode")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_sys")
(PUNCT ".")
(ID "stdin")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(LIT "w")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_mode")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_sys")
(PUNCT ".")
(ID "stdout")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "argument \"-\" with mode %r")
(PUNCT ")")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "_mode")
(NEWLINE)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "open")
(PUNCT "(")
(ID "string")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_mode")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_bufsize")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_encoding")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_errors")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "can't open '%s': %s")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ArgumentTypeError")
(PUNCT "(")
(ID "message")
(PUNCT "%")
(PUNCT "(")
(ID "string")
(PUNCT ",")
(ID "e")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_mode")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_bufsize")
(NEWLINE)
(ID "kwargs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(LIT "encoding")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_encoding")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "errors")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_errors")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(ID "args_str")
(PUNCT "=")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "[")
(ID "repr")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(KEYWORD for)
(ID "arg")
(KEYWORD in)
(ID "args")
(KEYWORD if)
(ID "arg")
(PUNCT "!=")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "+")
(PUNCT "[")
(LIT "%s=%r")
(PUNCT "%")
(PUNCT "(")
(ID "kw")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(KEYWORD for)
(ID "kw")
(PUNCT ",")
(ID "arg")
(KEYWORD in)
(ID "kwargs")
(KEYWORD if)
(ID "arg")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "%s(%s)")
(PUNCT "%")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "args_str")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Namespace")
(PUNCT "(")
(ID "_AttributeHolder")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Simple object for storing attributes.\n\n    Implements equality by attribute names and values, and provides a simple\n    string representation.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "kwargs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "kwargs")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__eq__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "Namespace")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "vars")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT "==")
(ID "vars")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__ne__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "Namespace")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD not)
(PUNCT "(")
(ID "self")
(PUNCT "==")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__contains__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "__dict__")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_ActionsContainer")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "description")
(PUNCT ",")
(ID "prefix_chars")
(PUNCT ",")
(ID "argument_default")
(PUNCT ",")
(ID "conflict_handler")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "_ActionsContainer")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "description")
(PUNCT "=")
(ID "description")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "argument_default")
(PUNCT "=")
(ID "argument_default")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "prefix_chars")
(PUNCT "=")
(ID "prefix_chars")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "conflict_handler")
(PUNCT "=")
(ID "conflict_handler")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_registries")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(LIT "action")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID "_StoreAction")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(LIT "action")
(PUNCT ",")
(LIT "store")
(PUNCT ",")
(ID "_StoreAction")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(LIT "action")
(PUNCT ",")
(LIT "store_const")
(PUNCT ",")
(ID "_StoreConstAction")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(LIT "action")
(PUNCT ",")
(LIT "store_true")
(PUNCT ",")
(ID "_StoreTrueAction")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(LIT "action")
(PUNCT ",")
(LIT "store_false")
(PUNCT ",")
(ID "_StoreFalseAction")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(LIT "action")
(PUNCT ",")
(LIT "append")
(PUNCT ",")
(ID "_AppendAction")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(LIT "action")
(PUNCT ",")
(LIT "append_const")
(PUNCT ",")
(ID "_AppendConstAction")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(LIT "action")
(PUNCT ",")
(LIT "count")
(PUNCT ",")
(ID "_CountAction")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(LIT "action")
(PUNCT ",")
(LIT "help")
(PUNCT ",")
(ID "_HelpAction")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(LIT "action")
(PUNCT ",")
(LIT "version")
(PUNCT ",")
(ID "_VersionAction")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(LIT "action")
(PUNCT ",")
(LIT "parsers")
(PUNCT ",")
(ID "_SubParsersAction")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_get_handler")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_actions")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_action_groups")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_mutually_exclusive_groups")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_defaults")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_negative_number_matcher")
(PUNCT "=")
(ID "_re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "^-\\d+$|^-\\d*\\.\\d+$")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_has_negative_number_optionals")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "register")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "registry_name")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "registry")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_registries")
(PUNCT ".")
(ID "setdefault")
(PUNCT "(")
(ID "registry_name")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(ID "registry")
(PUNCT "[")
(ID "value")
(PUNCT "]")
(PUNCT "=")
(ID "object")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_registry_get")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "registry_name")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_registries")
(PUNCT "[")
(ID "registry_name")
(PUNCT "]")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "default")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_defaults")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_defaults")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "dest")
(KEYWORD in)
(ID "kwargs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "action")
(PUNCT ".")
(ID "default")
(PUNCT "=")
(ID "kwargs")
(PUNCT "[")
(ID "action")
(PUNCT ".")
(ID "dest")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_default")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dest")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "dest")
(PUNCT "==")
(ID "dest")
(KEYWORD and)
(ID "action")
(PUNCT ".")
(ID "default")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "action")
(PUNCT ".")
(ID "default")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_defaults")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "dest")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_argument")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        add_argument(dest, ..., name=value, ...)\n        add_argument(option_string, option_string, ..., name=value, ...)\n        ")
(NEWLINE)
(ID "chars")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "prefix_chars")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "args")
(KEYWORD or)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(KEYWORD and)
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD not)
(KEYWORD in)
(ID "chars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "args")
(KEYWORD and)
(LIT "dest")
(KEYWORD in)
(ID "kwargs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "dest supplied twice for positional argument")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "kwargs")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_positional_kwargs")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kwargs")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_optional_kwargs")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "default")
(KEYWORD not)
(KEYWORD in)
(ID "kwargs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dest")
(PUNCT "=")
(ID "kwargs")
(PUNCT "[")
(LIT "dest")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "dest")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_defaults")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kwargs")
(PUNCT "[")
(LIT "default")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_defaults")
(PUNCT "[")
(ID "dest")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "argument_default")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kwargs")
(PUNCT "[")
(LIT "default")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "argument_default")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "action_class")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_pop_action_class")
(PUNCT "(")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "callable")
(PUNCT "(")
(ID "action_class")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "unknown action \"%s\"")
(PUNCT "%")
(PUNCT "(")
(ID "action_class")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "action")
(PUNCT "=")
(ID "action_class")
(PUNCT "(")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(ID "type_func")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_registry_get")
(PUNCT "(")
(LIT "type")
(PUNCT ",")
(ID "action")
(PUNCT ".")
(ID "type")
(PUNCT ",")
(ID "action")
(PUNCT ".")
(ID "type")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "callable")
(PUNCT "(")
(ID "type_func")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "%r is not callable")
(PUNCT "%")
(PUNCT "(")
(ID "type_func")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "_get_formatter")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_get_formatter")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "_format_args")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "length of metavar tuple does not match nargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_add_action")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_argument_group")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "group")
(PUNCT "=")
(ID "_ArgumentGroup")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_action_groups")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "group")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "group")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_mutually_exclusive_group")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "group")
(PUNCT "=")
(ID "_MutuallyExclusiveGroup")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_mutually_exclusive_groups")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "group")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "group")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_add_action")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_check_conflict")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_actions")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(ID "action")
(PUNCT ".")
(ID "container")
(PUNCT "=")
(ID "self")
(NEWLINE)
(KEYWORD for)
(ID "option_string")
(KEYWORD in)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT "[")
(ID "option_string")
(PUNCT "]")
(PUNCT "=")
(ID "action")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "option_string")
(KEYWORD in)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_negative_number_matcher")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "option_string")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_has_negative_number_optionals")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_has_negative_number_optionals")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "action")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_remove_action")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_actions")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_add_container_actions")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "container")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title_group_map")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "group")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_action_groups")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "group")
(PUNCT ".")
(ID "title")
(KEYWORD in)
(ID "title_group_map")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "cannot merge actions - two groups are named %r")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(ID "msg")
(PUNCT "%")
(PUNCT "(")
(ID "group")
(PUNCT ".")
(ID "title")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "title_group_map")
(PUNCT "[")
(ID "group")
(PUNCT ".")
(ID "title")
(PUNCT "]")
(PUNCT "=")
(ID "group")
(NEWLINE)
(DEDENT)
(ID "group_map")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "group")
(KEYWORD in)
(ID "container")
(PUNCT ".")
(ID "_action_groups")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "group")
(PUNCT ".")
(ID "title")
(KEYWORD not)
(KEYWORD in)
(ID "title_group_map")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title_group_map")
(PUNCT "[")
(ID "group")
(PUNCT ".")
(ID "title")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "add_argument_group")
(PUNCT "(")
(ID "title")
(PUNCT "=")
(ID "group")
(PUNCT ".")
(ID "title")
(PUNCT ",")
(ID "description")
(PUNCT "=")
(ID "group")
(PUNCT ".")
(ID "description")
(PUNCT ",")
(ID "conflict_handler")
(PUNCT "=")
(ID "group")
(PUNCT ".")
(ID "conflict_handler")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "group")
(PUNCT ".")
(ID "_group_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "group_map")
(PUNCT "[")
(ID "action")
(PUNCT "]")
(PUNCT "=")
(ID "title_group_map")
(PUNCT "[")
(ID "group")
(PUNCT ".")
(ID "title")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "group")
(KEYWORD in)
(ID "container")
(PUNCT ".")
(ID "_mutually_exclusive_groups")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mutex_group")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "add_mutually_exclusive_group")
(PUNCT "(")
(ID "required")
(PUNCT "=")
(ID "group")
(PUNCT ".")
(ID "required")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "group")
(PUNCT ".")
(ID "_group_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "group_map")
(PUNCT "[")
(ID "action")
(PUNCT "]")
(PUNCT "=")
(ID "mutex_group")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "container")
(PUNCT ".")
(ID "_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "group_map")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "_add_action")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_get_positional_kwargs")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dest")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "required")
(KEYWORD in)
(ID "kwargs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "'required' is an invalid argument for positionals")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "kwargs")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "nargs")
(PUNCT ")")
(KEYWORD not)
(KEYWORD in)
(PUNCT "[")
(ID "OPTIONAL")
(PUNCT ",")
(ID "ZERO_OR_MORE")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kwargs")
(PUNCT "[")
(LIT "required")
(PUNCT "]")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "kwargs")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "nargs")
(PUNCT ")")
(PUNCT "==")
(ID "ZERO_OR_MORE")
(KEYWORD and)
(LIT "default")
(KEYWORD not)
(KEYWORD in)
(ID "kwargs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kwargs")
(PUNCT "[")
(LIT "required")
(PUNCT "]")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "dict")
(PUNCT "(")
(ID "kwargs")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "dest")
(PUNCT ",")
(ID "option_strings")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_optional_kwargs")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "option_strings")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "long_option_strings")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "option_string")
(KEYWORD in)
(ID "args")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "option_string")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "prefix_chars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(PUNCT "{")
(LIT "option")
(PUNCT ":")
(ID "option_string")
(PUNCT ",")
(LIT "prefix_chars")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "prefix_chars")
(PUNCT "}")
(NEWLINE)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "invalid option string %(option)r: ")
(LIT "must start with a character %(prefix_chars)r")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(ID "msg")
(PUNCT "%")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "option_strings")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "option_string")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "option_string")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "prefix_chars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "option_string")
(PUNCT ")")
(PUNCT ">")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "option_string")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "prefix_chars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "long_option_strings")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "option_string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "dest")
(PUNCT "=")
(ID "kwargs")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(LIT "dest")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "dest")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "long_option_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dest_option_string")
(PUNCT "=")
(ID "long_option_strings")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dest_option_string")
(PUNCT "=")
(ID "option_strings")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "dest")
(PUNCT "=")
(ID "dest_option_string")
(PUNCT ".")
(ID "lstrip")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "prefix_chars")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "dest")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "dest= is required for options like %r")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(ID "msg")
(PUNCT "%")
(ID "option_string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "dest")
(PUNCT "=")
(ID "dest")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "-")
(PUNCT ",")
(LIT "_")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "dict")
(PUNCT "(")
(ID "kwargs")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(ID "dest")
(PUNCT ",")
(ID "option_strings")
(PUNCT "=")
(ID "option_strings")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_pop_action_class")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "kwargs")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "action")
(PUNCT "=")
(ID "kwargs")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(LIT "action")
(PUNCT ",")
(ID "default")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_registry_get")
(PUNCT "(")
(LIT "action")
(PUNCT ",")
(ID "action")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_handler")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "handler_func_name")
(PUNCT "=")
(LIT "_handle_conflict_%s")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "conflict_handler")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "handler_func_name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "invalid conflict_resolution value: %r")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(ID "msg")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "conflict_handler")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_check_conflict")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "confl_optionals")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "option_string")
(KEYWORD in)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "option_string")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "confl_optional")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT "[")
(ID "option_string")
(PUNCT "]")
(NEWLINE)
(ID "confl_optionals")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "option_string")
(PUNCT ",")
(ID "confl_optional")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "confl_optionals")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "conflict_handler")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_handler")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "conflict_handler")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "confl_optionals")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_handle_conflict_error")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ",")
(ID "conflicting_actions")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT "=")
(ID "ngettext")
(PUNCT "(")
(LIT "conflicting option string: %s")
(PUNCT ",")
(LIT "conflicting option strings: %s")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "conflicting_actions")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "conflict_string")
(PUNCT "=")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "[")
(ID "option_string")
(KEYWORD for)
(ID "option_string")
(PUNCT ",")
(ID "action")
(KEYWORD in)
(ID "conflicting_actions")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ArgumentError")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "message")
(PUNCT "%")
(ID "conflict_string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_handle_conflict_resolve")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ",")
(ID "conflicting_actions")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "option_string")
(PUNCT ",")
(ID "action")
(KEYWORD in)
(ID "conflicting_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "option_string")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(ID "option_string")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "action")
(PUNCT ".")
(ID "container")
(PUNCT ".")
(ID "_remove_action")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_ArgumentGroup")
(PUNCT "(")
(ID "_ActionsContainer")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "container")
(PUNCT ",")
(ID "title")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "description")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "update")
(PUNCT "=")
(ID "kwargs")
(PUNCT ".")
(ID "setdefault")
(NEWLINE)
(ID "update")
(PUNCT "(")
(LIT "conflict_handler")
(PUNCT ",")
(ID "container")
(PUNCT ".")
(ID "conflict_handler")
(PUNCT ")")
(NEWLINE)
(ID "update")
(PUNCT "(")
(LIT "prefix_chars")
(PUNCT ",")
(ID "container")
(PUNCT ".")
(ID "prefix_chars")
(PUNCT ")")
(NEWLINE)
(ID "update")
(PUNCT "(")
(LIT "argument_default")
(PUNCT ",")
(ID "container")
(PUNCT ".")
(ID "argument_default")
(PUNCT ")")
(NEWLINE)
(ID "super_init")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(ID "_ArgumentGroup")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(NEWLINE)
(ID "super_init")
(PUNCT "(")
(ID "description")
(PUNCT "=")
(ID "description")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "title")
(PUNCT "=")
(ID "title")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_group_actions")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_registries")
(PUNCT "=")
(ID "container")
(PUNCT ".")
(ID "_registries")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_actions")
(PUNCT "=")
(ID "container")
(PUNCT ".")
(ID "_actions")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT "=")
(ID "container")
(PUNCT ".")
(ID "_option_string_actions")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_defaults")
(PUNCT "=")
(ID "container")
(PUNCT ".")
(ID "_defaults")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_has_negative_number_optionals")
(PUNCT "=")
(ID "container")
(PUNCT ".")
(ID "_has_negative_number_optionals")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_mutually_exclusive_groups")
(PUNCT "=")
(ID "container")
(PUNCT ".")
(ID "_mutually_exclusive_groups")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_add_action")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "action")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(ID "_ArgumentGroup")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "_add_action")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_group_actions")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "action")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_remove_action")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "_ArgumentGroup")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "_remove_action")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_group_actions")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_MutuallyExclusiveGroup")
(PUNCT "(")
(ID "_ArgumentGroup")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "container")
(PUNCT ",")
(ID "required")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "_MutuallyExclusiveGroup")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "container")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "required")
(PUNCT "=")
(ID "required")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_container")
(PUNCT "=")
(ID "container")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_add_action")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "required")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "mutually exclusive arguments must be optional")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "action")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_container")
(PUNCT ".")
(ID "_add_action")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_group_actions")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "action")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_remove_action")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_container")
(PUNCT ".")
(ID "_remove_action")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_group_actions")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ArgumentParser")
(PUNCT "(")
(ID "_AttributeHolder")
(PUNCT ",")
(ID "_ActionsContainer")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Object for parsing command line strings into Python objects.\n\n    Keyword Arguments:\n        - prog -- The name of the program (default: sys.argv[0])\n        - usage -- A usage message (default: auto-generated from arguments)\n        - description -- A description of what the program does\n        - epilog -- Text following the argument descriptions\n        - parents -- Parsers whose arguments should be copied into this one\n        - formatter_class -- HelpFormatter class for printing help messages\n        - prefix_chars -- Characters that prefix optional arguments\n        - fromfile_prefix_chars -- Characters that prefix files containing\n            additional arguments\n        - argument_default -- The default value for all arguments\n        - conflict_handler -- String indicating how to handle conflicts\n        - add_help -- Add a -h/-help option\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "prog")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "usage")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "description")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "epilog")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "parents")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(ID "formatter_class")
(PUNCT "=")
(ID "HelpFormatter")
(PUNCT ",")
(ID "prefix_chars")
(PUNCT "=")
(LIT "-")
(PUNCT ",")
(ID "fromfile_prefix_chars")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "argument_default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "conflict_handler")
(PUNCT "=")
(LIT "error")
(PUNCT ",")
(ID "add_help")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "superinit")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(ID "ArgumentParser")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(NEWLINE)
(ID "superinit")
(PUNCT "(")
(ID "description")
(PUNCT "=")
(ID "description")
(PUNCT ",")
(ID "prefix_chars")
(PUNCT "=")
(ID "prefix_chars")
(PUNCT ",")
(ID "argument_default")
(PUNCT "=")
(ID "argument_default")
(PUNCT ",")
(ID "conflict_handler")
(PUNCT "=")
(ID "conflict_handler")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "prog")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "prog")
(PUNCT "=")
(ID "_os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "basename")
(PUNCT "(")
(ID "_sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "prog")
(PUNCT "=")
(ID "prog")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "usage")
(PUNCT "=")
(ID "usage")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "epilog")
(PUNCT "=")
(ID "epilog")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "formatter_class")
(PUNCT "=")
(ID "formatter_class")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fromfile_prefix_chars")
(PUNCT "=")
(ID "fromfile_prefix_chars")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "add_help")
(PUNCT "=")
(ID "add_help")
(NEWLINE)
(ID "add_group")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "add_argument_group")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_positionals")
(PUNCT "=")
(ID "add_group")
(PUNCT "(")
(ID "_")
(PUNCT "(")
(LIT "positional arguments")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_optionals")
(PUNCT "=")
(ID "add_group")
(PUNCT "(")
(ID "_")
(PUNCT "(")
(LIT "optional arguments")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_subparsers")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "identity")
(PUNCT "(")
(ID "string")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "string")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(LIT "type")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID "identity")
(PUNCT ")")
(NEWLINE)
(ID "default_prefix")
(PUNCT "=")
(LIT "-")
(KEYWORD if)
(LIT "-")
(KEYWORD in)
(ID "prefix_chars")
(KEYWORD else)
(ID "prefix_chars")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "add_help")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "add_argument")
(PUNCT "(")
(ID "default_prefix")
(PUNCT "+")
(LIT "h")
(PUNCT ",")
(ID "default_prefix")
(PUNCT "*")
(LIT 2)
(PUNCT "+")
(LIT "help")
(PUNCT ",")
(ID "action")
(PUNCT "=")
(LIT "help")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(ID "SUPPRESS")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "show this help message and exit")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "parent")
(KEYWORD in)
(ID "parents")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_add_container_actions")
(PUNCT "(")
(ID "parent")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "defaults")
(PUNCT "=")
(ID "parent")
(PUNCT ".")
(ID "_defaults")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_defaults")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "defaults")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_get_kwargs")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT "=")
(PUNCT "[")
(LIT "prog")
(PUNCT ",")
(LIT "usage")
(PUNCT ",")
(LIT "description")
(PUNCT ",")
(LIT "formatter_class")
(PUNCT ",")
(LIT "conflict_handler")
(PUNCT ",")
(LIT "add_help")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ")")
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "names")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_subparsers")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_subparsers")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(ID "_")
(PUNCT "(")
(LIT "cannot have multiple subparser arguments")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "kwargs")
(PUNCT ".")
(ID "setdefault")
(PUNCT "(")
(LIT "parser_class")
(PUNCT ",")
(ID "type")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "title")
(KEYWORD in)
(ID "kwargs")
(KEYWORD or)
(LIT "description")
(KEYWORD in)
(ID "kwargs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "title")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(ID "kwargs")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(LIT "title")
(PUNCT ",")
(LIT "subcommands")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "description")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(ID "kwargs")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(LIT "description")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_subparsers")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "add_argument_group")
(PUNCT "(")
(ID "title")
(PUNCT ",")
(ID "description")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_subparsers")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_positionals")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "kwargs")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "prog")
(PUNCT ")")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "formatter")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_formatter")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "positionals")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_positional_actions")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "groups")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_mutually_exclusive_groups")
(NEWLINE)
(ID "formatter")
(PUNCT ".")
(ID "add_usage")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "usage")
(PUNCT ",")
(ID "positionals")
(PUNCT ",")
(ID "groups")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(ID "kwargs")
(PUNCT "[")
(LIT "prog")
(PUNCT "]")
(PUNCT "=")
(ID "formatter")
(PUNCT ".")
(ID "format_help")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "parsers_class")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_pop_action_class")
(PUNCT "(")
(ID "kwargs")
(PUNCT ",")
(LIT "parsers")
(PUNCT ")")
(NEWLINE)
(ID "action")
(PUNCT "=")
(ID "parsers_class")
(PUNCT "(")
(ID "option_strings")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_subparsers")
(PUNCT ".")
(ID "_add_action")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "action")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_add_action")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_optionals")
(PUNCT ".")
(ID "_add_action")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_positionals")
(PUNCT ".")
(ID "_add_action")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "action")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_optional_actions")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(ID "action")
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_actions")
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_positional_actions")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(ID "action")
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_actions")
(KEYWORD if)
(KEYWORD not)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parse_args")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "namespace")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT ",")
(ID "argv")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "parse_known_args")
(PUNCT "(")
(ID "args")
(PUNCT ",")
(ID "namespace")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "argv")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "unrecognized arguments: %s")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(ID "msg")
(PUNCT "%")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "argv")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "args")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parse_known_args")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "namespace")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "args")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(ID "_sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "namespace")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "namespace")
(PUNCT "=")
(ID "Namespace")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "dest")
(KEYWORD is)
(KEYWORD not)
(ID "SUPPRESS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "action")
(PUNCT ".")
(ID "dest")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "default")
(KEYWORD is)
(KEYWORD not)
(ID "SUPPRESS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "action")
(PUNCT ".")
(ID "dest")
(PUNCT ",")
(ID "action")
(PUNCT ".")
(ID "default")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "dest")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_defaults")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "dest")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "dest")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_defaults")
(PUNCT "[")
(ID "dest")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "namespace")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_parse_known_args")
(PUNCT "(")
(ID "args")
(PUNCT ",")
(ID "namespace")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "_UNRECOGNIZED_ARGS_ATTR")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "getattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "_UNRECOGNIZED_ARGS_ATTR")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "delattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "_UNRECOGNIZED_ARGS_ATTR")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "namespace")
(PUNCT ",")
(ID "args")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ArgumentError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "err")
(PUNCT "=")
(ID "_sys")
(PUNCT ".")
(ID "exc_info")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(ID "str")
(PUNCT "(")
(ID "err")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_parse_known_args")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "arg_strings")
(PUNCT ",")
(ID "namespace")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "fromfile_prefix_chars")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "arg_strings")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_read_args_from_files")
(PUNCT "(")
(ID "arg_strings")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "action_conflicts")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "mutex_group")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_mutually_exclusive_groups")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "group_actions")
(PUNCT "=")
(ID "mutex_group")
(PUNCT ".")
(ID "_group_actions")
(NEWLINE)
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "mutex_action")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "mutex_group")
(PUNCT ".")
(ID "_group_actions")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "conflicts")
(PUNCT "=")
(ID "action_conflicts")
(PUNCT ".")
(ID "setdefault")
(PUNCT "(")
(ID "mutex_action")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "conflicts")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "group_actions")
(PUNCT "[")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "conflicts")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "group_actions")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "option_string_indices")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "arg_string_pattern_parts")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "arg_strings_iter")
(PUNCT "=")
(ID "iter")
(PUNCT "(")
(ID "arg_strings")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "arg_string")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "arg_strings_iter")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "arg_string")
(PUNCT "==")
(LIT "--")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "arg_string_pattern_parts")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "-")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "arg_string")
(KEYWORD in)
(ID "arg_strings_iter")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "arg_string_pattern_parts")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "A")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "option_tuple")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_parse_optional")
(PUNCT "(")
(ID "arg_string")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "option_tuple")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pattern")
(PUNCT "=")
(LIT "A")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "option_string_indices")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT "=")
(ID "option_tuple")
(NEWLINE)
(ID "pattern")
(PUNCT "=")
(LIT "O")
(NEWLINE)
(DEDENT)
(ID "arg_string_pattern_parts")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "pattern")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "arg_strings_pattern")
(PUNCT "=")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "arg_string_pattern_parts")
(PUNCT ")")
(NEWLINE)
(ID "seen_actions")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "seen_non_default_actions")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "take_action")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "argument_strings")
(PUNCT ",")
(ID "option_string")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "seen_actions")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(ID "argument_values")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_values")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "argument_strings")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "argument_values")
(KEYWORD is)
(KEYWORD not)
(ID "action")
(PUNCT ".")
(ID "default")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "seen_non_default_actions")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "conflict_action")
(KEYWORD in)
(ID "action_conflicts")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "conflict_action")
(KEYWORD in)
(ID "seen_non_default_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "not allowed with argument %s")
(PUNCT ")")
(NEWLINE)
(ID "action_name")
(PUNCT "=")
(ID "_get_action_name")
(PUNCT "(")
(ID "conflict_action")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ArgumentError")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "msg")
(PUNCT "%")
(ID "action_name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "argument_values")
(KEYWORD is)
(KEYWORD not)
(ID "SUPPRESS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "action")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "namespace")
(PUNCT ",")
(ID "argument_values")
(PUNCT ",")
(ID "option_string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "consume_optional")
(PUNCT "(")
(ID "start_index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "option_tuple")
(PUNCT "=")
(ID "option_string_indices")
(PUNCT "[")
(ID "start_index")
(PUNCT "]")
(NEWLINE)
(ID "action")
(PUNCT ",")
(ID "option_string")
(PUNCT ",")
(ID "explicit_arg")
(PUNCT "=")
(ID "option_tuple")
(NEWLINE)
(ID "match_argument")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_match_argument")
(NEWLINE)
(ID "action_tuples")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "extras")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "arg_strings")
(PUNCT "[")
(ID "start_index")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "start_index")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "explicit_arg")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "arg_count")
(PUNCT "=")
(ID "match_argument")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(LIT "A")
(PUNCT ")")
(NEWLINE)
(ID "chars")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "prefix_chars")
(NEWLINE)
(KEYWORD if)
(ID "arg_count")
(PUNCT "==")
(LIT 0)
(KEYWORD and)
(ID "option_string")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(KEYWORD not)
(KEYWORD in)
(ID "chars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "action_tuples")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(ID "option_string")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "char")
(PUNCT "=")
(ID "option_string")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "option_string")
(PUNCT "=")
(ID "char")
(PUNCT "+")
(ID "explicit_arg")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "new_explicit_arg")
(PUNCT "=")
(ID "explicit_arg")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(KEYWORD or)
(KEYWORD None)
(NEWLINE)
(ID "optionals_map")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(NEWLINE)
(KEYWORD if)
(ID "option_string")
(KEYWORD in)
(ID "optionals_map")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "action")
(PUNCT "=")
(ID "optionals_map")
(PUNCT "[")
(ID "option_string")
(PUNCT "]")
(NEWLINE)
(ID "explicit_arg")
(PUNCT "=")
(ID "new_explicit_arg")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "ignored explicit argument %r")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ArgumentError")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "msg")
(PUNCT "%")
(ID "explicit_arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "arg_count")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stop")
(PUNCT "=")
(ID "start_index")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "args")
(PUNCT "=")
(PUNCT "[")
(ID "explicit_arg")
(PUNCT "]")
(NEWLINE)
(ID "action_tuples")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "option_string")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "ignored explicit argument %r")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ArgumentError")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "msg")
(PUNCT "%")
(ID "explicit_arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "start")
(PUNCT "=")
(ID "start_index")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "selected_patterns")
(PUNCT "=")
(ID "arg_strings_pattern")
(PUNCT "[")
(ID "start")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "arg_count")
(PUNCT "=")
(ID "match_argument")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "selected_patterns")
(PUNCT ")")
(NEWLINE)
(ID "stop")
(PUNCT "=")
(ID "start")
(PUNCT "+")
(ID "arg_count")
(NEWLINE)
(ID "args")
(PUNCT "=")
(ID "arg_strings")
(PUNCT "[")
(ID "start")
(PUNCT ":")
(ID "stop")
(PUNCT "]")
(NEWLINE)
(ID "action_tuples")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "option_string")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD assert)
(ID "action_tuples")
(NEWLINE)
(KEYWORD for)
(ID "action")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "option_string")
(KEYWORD in)
(ID "action_tuples")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "take_action")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "option_string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "stop")
(NEWLINE)
(DEDENT)
(ID "positionals")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_positional_actions")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "consume_positionals")
(PUNCT "(")
(ID "start_index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "match_partial")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_match_arguments_partial")
(NEWLINE)
(ID "selected_pattern")
(PUNCT "=")
(ID "arg_strings_pattern")
(PUNCT "[")
(ID "start_index")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "arg_counts")
(PUNCT "=")
(ID "match_partial")
(PUNCT "(")
(ID "positionals")
(PUNCT ",")
(ID "selected_pattern")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "action")
(PUNCT ",")
(ID "arg_count")
(KEYWORD in)
(ID "zip")
(PUNCT "(")
(ID "positionals")
(PUNCT ",")
(ID "arg_counts")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(ID "arg_strings")
(PUNCT "[")
(ID "start_index")
(PUNCT ":")
(ID "start_index")
(PUNCT "+")
(ID "arg_count")
(PUNCT "]")
(NEWLINE)
(ID "start_index")
(PUNCT "+=")
(ID "arg_count")
(NEWLINE)
(ID "take_action")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "positionals")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(PUNCT "=")
(ID "positionals")
(PUNCT "[")
(ID "len")
(PUNCT "(")
(ID "arg_counts")
(PUNCT ")")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "start_index")
(NEWLINE)
(DEDENT)
(ID "extras")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "start_index")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "option_string_indices")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "max_option_string_index")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(ID "option_string_indices")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "max_option_string_index")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD while)
(ID "start_index")
(PUNCT "<=")
(ID "max_option_string_index")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "next_option_string_index")
(PUNCT "=")
(ID "min")
(PUNCT "(")
(PUNCT "[")
(ID "index")
(KEYWORD for)
(ID "index")
(KEYWORD in)
(ID "option_string_indices")
(KEYWORD if)
(ID "index")
(PUNCT ">=")
(ID "start_index")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "start_index")
(PUNCT "!=")
(ID "next_option_string_index")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "positionals_end_index")
(PUNCT "=")
(ID "consume_positionals")
(PUNCT "(")
(ID "start_index")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "positionals_end_index")
(PUNCT ">")
(ID "start_index")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "start_index")
(PUNCT "=")
(ID "positionals_end_index")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "start_index")
(PUNCT "=")
(ID "positionals_end_index")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "start_index")
(KEYWORD not)
(KEYWORD in)
(ID "option_string_indices")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "strings")
(PUNCT "=")
(ID "arg_strings")
(PUNCT "[")
(ID "start_index")
(PUNCT ":")
(ID "next_option_string_index")
(PUNCT "]")
(NEWLINE)
(ID "extras")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "strings")
(PUNCT ")")
(NEWLINE)
(ID "start_index")
(PUNCT "=")
(ID "next_option_string_index")
(NEWLINE)
(DEDENT)
(ID "start_index")
(PUNCT "=")
(ID "consume_optional")
(PUNCT "(")
(ID "start_index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "stop_index")
(PUNCT "=")
(ID "consume_positionals")
(PUNCT "(")
(ID "start_index")
(PUNCT ")")
(NEWLINE)
(ID "extras")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "arg_strings")
(PUNCT "[")
(ID "stop_index")
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "required_actions")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(KEYWORD not)
(KEYWORD in)
(ID "seen_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "required")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "required_actions")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "_get_action_name")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "action")
(PUNCT ".")
(ID "default")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID "isinstance")
(PUNCT "(")
(ID "action")
(PUNCT ".")
(ID "default")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(KEYWORD and)
(ID "hasattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "action")
(PUNCT ".")
(ID "dest")
(PUNCT ")")
(KEYWORD and)
(ID "action")
(PUNCT ".")
(ID "default")
(KEYWORD is)
(ID "getattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "action")
(PUNCT ".")
(ID "dest")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setattr")
(PUNCT "(")
(ID "namespace")
(PUNCT ",")
(ID "action")
(PUNCT ".")
(ID "dest")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_get_value")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "action")
(PUNCT ".")
(ID "default")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "required_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(ID "_")
(PUNCT "(")
(LIT "the following arguments are required: %s")
(PUNCT ")")
(PUNCT "%")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "required_actions")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "group")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_mutually_exclusive_groups")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "group")
(PUNCT ".")
(ID "required")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "group")
(PUNCT ".")
(ID "_group_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(KEYWORD in)
(ID "seen_non_default_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT "=")
(PUNCT "[")
(ID "_get_action_name")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "group")
(PUNCT ".")
(ID "_group_actions")
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "help")
(KEYWORD is)
(KEYWORD not)
(ID "SUPPRESS")
(PUNCT "]")
(NEWLINE)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "one of the arguments %s is required")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(ID "msg")
(PUNCT "%")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "names")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "namespace")
(PUNCT ",")
(ID "extras")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_read_args_from_files")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "arg_strings")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_arg_strings")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "arg_string")
(KEYWORD in)
(ID "arg_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "arg_string")
(KEYWORD or)
(ID "arg_string")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "fromfile_prefix_chars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_arg_strings")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "arg_string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "arg_string")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(KEYWORD as)
(ID "args_file")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "arg_strings")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "arg_line")
(KEYWORD in)
(ID "args_file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "splitlines")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "arg")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "convert_arg_line_to_args")
(PUNCT "(")
(ID "arg_line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "arg_strings")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "arg_strings")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_read_args_from_files")
(PUNCT "(")
(ID "arg_strings")
(PUNCT ")")
(NEWLINE)
(ID "new_arg_strings")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "arg_strings")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "err")
(PUNCT "=")
(ID "_sys")
(PUNCT ".")
(ID "exc_info")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(ID "str")
(PUNCT "(")
(ID "err")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "new_arg_strings")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "convert_arg_line_to_args")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "arg_line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(ID "arg_line")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_match_argument")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ",")
(ID "arg_strings_pattern")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nargs_pattern")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_nargs_pattern")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(NEWLINE)
(ID "match")
(PUNCT "=")
(ID "_re")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "nargs_pattern")
(PUNCT ",")
(ID "arg_strings_pattern")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "match")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nargs_errors")
(PUNCT "=")
(PUNCT "{")
(KEYWORD None)
(PUNCT ":")
(ID "_")
(PUNCT "(")
(LIT "expected one argument")
(PUNCT ")")
(PUNCT ",")
(ID "OPTIONAL")
(PUNCT ":")
(ID "_")
(PUNCT "(")
(LIT "expected at most one argument")
(PUNCT ")")
(PUNCT ",")
(ID "ONE_OR_MORE")
(PUNCT ":")
(ID "_")
(PUNCT "(")
(LIT "expected at least one argument")
(PUNCT ")")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(ID "default")
(PUNCT "=")
(ID "ngettext")
(PUNCT "(")
(LIT "expected %s argument")
(PUNCT ",")
(LIT "expected %s arguments")
(PUNCT ",")
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT ")")
(PUNCT "%")
(ID "action")
(PUNCT ".")
(ID "nargs")
(NEWLINE)
(ID "msg")
(PUNCT "=")
(ID "nargs_errors")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT ",")
(ID "default")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ArgumentError")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "match")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_match_arguments_partial")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "actions")
(PUNCT ",")
(ID "arg_strings_pattern")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "actions")
(PUNCT ")")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "actions_slice")
(PUNCT "=")
(ID "actions")
(PUNCT "[")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(NEWLINE)
(ID "pattern")
(PUNCT "=")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_get_nargs_pattern")
(PUNCT "(")
(ID "action")
(PUNCT ")")
(KEYWORD for)
(ID "action")
(KEYWORD in)
(ID "actions_slice")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "match")
(PUNCT "=")
(ID "_re")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "pattern")
(PUNCT ",")
(ID "arg_strings_pattern")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "match")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(PUNCT "[")
(ID "len")
(PUNCT "(")
(ID "string")
(PUNCT ")")
(KEYWORD for)
(ID "string")
(KEYWORD in)
(ID "match")
(PUNCT ".")
(ID "groups")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_parse_optional")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "arg_string")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "arg_string")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "arg_string")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "prefix_chars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "arg_string")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "action")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT "[")
(ID "arg_string")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "action")
(PUNCT ",")
(ID "arg_string")
(PUNCT ",")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "arg_string")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "=")
(KEYWORD in)
(ID "arg_string")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "option_string")
(PUNCT ",")
(ID "explicit_arg")
(PUNCT "=")
(ID "arg_string")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "=")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "option_string")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "action")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT "[")
(ID "option_string")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "action")
(PUNCT ",")
(ID "option_string")
(PUNCT ",")
(ID "explicit_arg")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "option_tuples")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_option_tuples")
(PUNCT "(")
(ID "arg_string")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "option_tuples")
(PUNCT ")")
(PUNCT ">")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "options")
(PUNCT "=")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "[")
(ID "option_string")
(KEYWORD for)
(ID "action")
(PUNCT ",")
(ID "option_string")
(PUNCT ",")
(ID "explicit_arg")
(KEYWORD in)
(ID "option_tuples")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "args")
(PUNCT "=")
(PUNCT "{")
(LIT "option")
(PUNCT ":")
(ID "arg_string")
(PUNCT ",")
(LIT "matches")
(PUNCT ":")
(ID "options")
(PUNCT "}")
(NEWLINE)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "ambiguous option: %(option)s could match %(matches)s")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(ID "msg")
(PUNCT "%")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "len")
(PUNCT "(")
(ID "option_tuples")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "option_tuple")
(PUNCT ",")
(PUNCT "=")
(ID "option_tuples")
(NEWLINE)
(KEYWORD return)
(ID "option_tuple")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_negative_number_matcher")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "arg_string")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_has_negative_number_optionals")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(LIT " ")
(KEYWORD in)
(ID "arg_string")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(PUNCT ",")
(ID "arg_string")
(PUNCT ",")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_option_tuples")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option_string")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "chars")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "prefix_chars")
(NEWLINE)
(KEYWORD if)
(ID "option_string")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(ID "chars")
(KEYWORD and)
(ID "option_string")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(KEYWORD in)
(ID "chars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "=")
(KEYWORD in)
(ID "option_string")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "option_prefix")
(PUNCT ",")
(ID "explicit_arg")
(PUNCT "=")
(ID "option_string")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "=")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "option_prefix")
(PUNCT "=")
(ID "option_string")
(NEWLINE)
(ID "explicit_arg")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "option_string")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "option_string")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(ID "option_prefix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "action")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT "[")
(ID "option_string")
(PUNCT "]")
(NEWLINE)
(ID "tup")
(PUNCT "=")
(ID "action")
(PUNCT ",")
(ID "option_string")
(PUNCT ",")
(ID "explicit_arg")
(NEWLINE)
(ID "result")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "tup")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "option_string")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(ID "chars")
(KEYWORD and)
(ID "option_string")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(KEYWORD not)
(KEYWORD in)
(ID "chars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "option_prefix")
(PUNCT "=")
(ID "option_string")
(NEWLINE)
(ID "explicit_arg")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "short_option_prefix")
(PUNCT "=")
(ID "option_string")
(PUNCT "[")
(PUNCT ":")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(ID "short_explicit_arg")
(PUNCT "=")
(ID "option_string")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "option_string")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "option_string")
(PUNCT "==")
(ID "short_option_prefix")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "action")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT "[")
(ID "option_string")
(PUNCT "]")
(NEWLINE)
(ID "tup")
(PUNCT "=")
(ID "action")
(PUNCT ",")
(ID "option_string")
(PUNCT ",")
(ID "short_explicit_arg")
(NEWLINE)
(ID "result")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "tup")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "option_string")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(ID "option_prefix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "action")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_option_string_actions")
(PUNCT "[")
(ID "option_string")
(PUNCT "]")
(NEWLINE)
(ID "tup")
(PUNCT "=")
(ID "action")
(PUNCT ",")
(ID "option_string")
(PUNCT ",")
(ID "explicit_arg")
(NEWLINE)
(ID "result")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "tup")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(ID "_")
(PUNCT "(")
(LIT "unexpected option string: %s")
(PUNCT ")")
(PUNCT "%")
(ID "option_string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_nargs_pattern")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nargs")
(PUNCT "=")
(ID "action")
(PUNCT ".")
(ID "nargs")
(NEWLINE)
(KEYWORD if)
(ID "nargs")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nargs_pattern")
(PUNCT "=")
(LIT "(-*A-*)")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "nargs")
(PUNCT "==")
(ID "OPTIONAL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nargs_pattern")
(PUNCT "=")
(LIT "(-*A?-*)")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "nargs")
(PUNCT "==")
(ID "ZERO_OR_MORE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nargs_pattern")
(PUNCT "=")
(LIT "(-*[A-]*)")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "nargs")
(PUNCT "==")
(ID "ONE_OR_MORE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nargs_pattern")
(PUNCT "=")
(LIT "(-*A[A-]*)")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "nargs")
(PUNCT "==")
(ID "REMAINDER")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nargs_pattern")
(PUNCT "=")
(LIT "([-AO]*)")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "nargs")
(PUNCT "==")
(ID "PARSER")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nargs_pattern")
(PUNCT "=")
(LIT "(-*A[-AO]*)")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nargs_pattern")
(PUNCT "=")
(LIT "(-*%s-*)")
(PUNCT "%")
(LIT "-*")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(LIT "A")
(PUNCT "*")
(ID "nargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nargs_pattern")
(PUNCT "=")
(ID "nargs_pattern")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "-*")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(ID "nargs_pattern")
(PUNCT "=")
(ID "nargs_pattern")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "-")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "nargs_pattern")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_values")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ",")
(ID "arg_strings")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "nargs")
(KEYWORD not)
(KEYWORD in)
(PUNCT "[")
(ID "PARSER")
(PUNCT ",")
(ID "REMAINDER")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "arg_strings")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(LIT "--")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "arg_strings")
(KEYWORD and)
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT "==")
(ID "OPTIONAL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "action")
(PUNCT ".")
(ID "const")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "action")
(PUNCT ".")
(ID "default")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_value")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_value")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(KEYWORD not)
(ID "arg_strings")
(KEYWORD and)
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT "==")
(ID "ZERO_OR_MORE")
(KEYWORD and)
(KEYWORD not)
(ID "action")
(PUNCT ".")
(ID "option_strings")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "default")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "action")
(PUNCT ".")
(ID "default")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "arg_strings")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_check_value")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "len")
(PUNCT "(")
(ID "arg_strings")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(KEYWORD and)
(ID "action")
(PUNCT ".")
(ID "nargs")
(KEYWORD in)
(PUNCT "[")
(KEYWORD None)
(PUNCT ",")
(ID "OPTIONAL")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "arg_string")
(PUNCT ",")
(PUNCT "=")
(ID "arg_strings")
(NEWLINE)
(ID "value")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_value")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "arg_string")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_value")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT "==")
(ID "REMAINDER")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_get_value")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "v")
(PUNCT ")")
(KEYWORD for)
(ID "v")
(KEYWORD in)
(ID "arg_strings")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "action")
(PUNCT ".")
(ID "nargs")
(PUNCT "==")
(ID "PARSER")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_get_value")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "v")
(PUNCT ")")
(KEYWORD for)
(ID "v")
(KEYWORD in)
(ID "arg_strings")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_value")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "value")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_get_value")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "v")
(PUNCT ")")
(KEYWORD for)
(ID "v")
(KEYWORD in)
(ID "arg_strings")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "v")
(KEYWORD in)
(ID "value")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_check_value")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "v")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "value")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_value")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ",")
(ID "arg_string")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "type_func")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_registry_get")
(PUNCT "(")
(LIT "type")
(PUNCT ",")
(ID "action")
(PUNCT ".")
(ID "type")
(PUNCT ",")
(ID "action")
(PUNCT ".")
(ID "type")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "callable")
(PUNCT "(")
(ID "type_func")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "%r is not callable")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ArgumentError")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "msg")
(PUNCT "%")
(ID "type_func")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "type_func")
(PUNCT "(")
(ID "arg_string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ArgumentTypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "action")
(PUNCT ".")
(ID "type")
(PUNCT ",")
(LIT "__name__")
(PUNCT ",")
(ID "repr")
(PUNCT "(")
(ID "action")
(PUNCT ".")
(ID "type")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "msg")
(PUNCT "=")
(ID "str")
(PUNCT "(")
(ID "_sys")
(PUNCT ".")
(ID "exc_info")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ArgumentError")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "TypeError")
(PUNCT ",")
(ID "ValueError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "action")
(PUNCT ".")
(ID "type")
(PUNCT ",")
(LIT "__name__")
(PUNCT ",")
(ID "repr")
(PUNCT "(")
(ID "action")
(PUNCT ".")
(ID "type")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "args")
(PUNCT "=")
(PUNCT "{")
(LIT "type")
(PUNCT ":")
(ID "name")
(PUNCT ",")
(LIT "value")
(PUNCT ":")
(ID "arg_string")
(PUNCT "}")
(NEWLINE)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "invalid %(type)s value: %(value)r")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ArgumentError")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "msg")
(PUNCT "%")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_check_value")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "action")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "action")
(PUNCT ".")
(ID "choices")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID "value")
(KEYWORD not)
(KEYWORD in)
(ID "action")
(PUNCT ".")
(ID "choices")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(PUNCT "{")
(LIT "value")
(PUNCT ":")
(ID "value")
(PUNCT ",")
(LIT "choices")
(PUNCT ":")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "map")
(PUNCT "(")
(ID "repr")
(PUNCT ",")
(ID "action")
(PUNCT ".")
(ID "choices")
(PUNCT ")")
(PUNCT ")")
(PUNCT "}")
(NEWLINE)
(ID "msg")
(PUNCT "=")
(ID "_")
(PUNCT "(")
(LIT "invalid choice: %(value)r (choose from %(choices)s)")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ArgumentError")
(PUNCT "(")
(ID "action")
(PUNCT ",")
(ID "msg")
(PUNCT "%")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "format_usage")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "formatter")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_formatter")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "formatter")
(PUNCT ".")
(ID "add_usage")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "usage")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_actions")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_mutually_exclusive_groups")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "formatter")
(PUNCT ".")
(ID "format_help")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "format_help")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "formatter")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_get_formatter")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "formatter")
(PUNCT ".")
(ID "add_usage")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "usage")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_actions")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_mutually_exclusive_groups")
(PUNCT ")")
(NEWLINE)
(ID "formatter")
(PUNCT ".")
(ID "add_text")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "description")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "action_group")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_action_groups")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "formatter")
(PUNCT ".")
(ID "start_section")
(PUNCT "(")
(ID "action_group")
(PUNCT ".")
(ID "title")
(PUNCT ")")
(NEWLINE)
(ID "formatter")
(PUNCT ".")
(ID "add_text")
(PUNCT "(")
(ID "action_group")
(PUNCT ".")
(ID "description")
(PUNCT ")")
(NEWLINE)
(ID "formatter")
(PUNCT ".")
(ID "add_arguments")
(PUNCT "(")
(ID "action_group")
(PUNCT ".")
(ID "_group_actions")
(PUNCT ")")
(NEWLINE)
(ID "formatter")
(PUNCT ".")
(ID "end_section")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "formatter")
(PUNCT ".")
(ID "add_text")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "epilog")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "formatter")
(PUNCT ".")
(ID "format_help")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_formatter")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "formatter_class")
(PUNCT "(")
(ID "prog")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "prog")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "print_usage")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "file")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "file")
(PUNCT "=")
(ID "_sys")
(PUNCT ".")
(ID "stdout")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_print_message")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "format_usage")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "print_help")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "file")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "file")
(PUNCT "=")
(ID "_sys")
(PUNCT ".")
(ID "stdout")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_print_message")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "format_help")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_print_message")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "message")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "file")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "file")
(PUNCT "=")
(ID "_sys")
(PUNCT ".")
(ID "stderr")
(NEWLINE)
(DEDENT)
(ID "file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "exit")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "status")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "message")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "message")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_print_message")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "_sys")
(PUNCT ".")
(ID "stderr")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "_sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(ID "status")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "error")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "error(message: string)\n\n        Prints a usage message incorporating the message to stderr and\n        exits.\n\n        If you override this in a subclass, it should not return -- it\n        should either exit or raise an exception.\n        ")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "print_usage")
(PUNCT "(")
(ID "_sys")
(PUNCT ".")
(ID "stderr")
(PUNCT ")")
(NEWLINE)
(ID "args")
(PUNCT "=")
(PUNCT "{")
(LIT "prog")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "prog")
(PUNCT ",")
(LIT "message")
(PUNCT ":")
(ID "message")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(ID "_")
(PUNCT "(")
(LIT "%(prog)s: error: %(message)s\n")
(PUNCT ")")
(PUNCT "%")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
