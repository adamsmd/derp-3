(LIT "Internationalization and localization support.\n\nThis module provides internationalization (I18N) and localization (L10N)\nsupport for your Python programs by providing an interface to the GNU gettext\nmessage catalog library.\n\nI18N refers to the operation by which a program is made aware of multiple\nlanguages.  L10N refers to the adaptation of your program, once\ninternationalized, to the local language and cultural habits.\n\n")
(NEWLINE)
(KEYWORD import)
(ID "locale")
(PUNCT ",")
(ID "copy")
(PUNCT ",")
(ID "io")
(PUNCT ",")
(ID "os")
(PUNCT ",")
(ID "re")
(PUNCT ",")
(ID "struct")
(PUNCT ",")
(ID "sys")
(NEWLINE)
(KEYWORD from)
(ID "errno")
(KEYWORD import)
(ID "ENOENT")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "NullTranslations")
(PUNCT ",")
(LIT "GNUTranslations")
(PUNCT ",")
(LIT "Catalog")
(PUNCT ",")
(LIT "find")
(PUNCT ",")
(LIT "translation")
(PUNCT ",")
(LIT "install")
(PUNCT ",")
(LIT "textdomain")
(PUNCT ",")
(LIT "bindtextdomain")
(PUNCT ",")
(LIT "dgettext")
(PUNCT ",")
(LIT "dngettext")
(PUNCT ",")
(LIT "gettext")
(PUNCT ",")
(LIT "ngettext")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(ID "_default_localedir")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "base_prefix")
(PUNCT ",")
(LIT "share")
(PUNCT ",")
(LIT "locale")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "c2py")
(PUNCT "(")
(ID "plural")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Gets a C expression as used in PO files for plural forms and returns a\n    Python lambda function that implements an equivalent expression.\n    ")
(NEWLINE)
(KEYWORD import)
(ID "token")
(PUNCT ",")
(ID "tokenize")
(NEWLINE)
(ID "tokens")
(PUNCT "=")
(ID "tokenize")
(PUNCT ".")
(ID "generate_tokens")
(PUNCT "(")
(ID "io")
(PUNCT ".")
(ID "StringIO")
(PUNCT "(")
(ID "plural")
(PUNCT ")")
(PUNCT ".")
(ID "readline")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "danger")
(PUNCT "=")
(PUNCT "[")
(ID "x")
(KEYWORD for)
(ID "x")
(KEYWORD in)
(ID "tokens")
(KEYWORD if)
(ID "x")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(ID "token")
(PUNCT ".")
(ID "NAME")
(KEYWORD and)
(ID "x")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "!=")
(LIT "n")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "tokenize")
(PUNCT ".")
(ID "TokenError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "plural forms expression error, maybe unbalanced parenthesis")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "danger")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "plural forms expression could be dangerous")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "plural")
(PUNCT "=")
(ID "plural")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "&&")
(PUNCT ",")
(LIT " and ")
(PUNCT ")")
(NEWLINE)
(ID "plural")
(PUNCT "=")
(ID "plural")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "||")
(PUNCT ",")
(LIT " or ")
(PUNCT ")")
(NEWLINE)
(ID "expr")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "\\!([^=])")
(PUNCT ")")
(NEWLINE)
(ID "plural")
(PUNCT "=")
(ID "expr")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT " not \\1")
(PUNCT ",")
(ID "plural")
(PUNCT ")")
(NEWLINE)
(ID "expr")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "(.*?)\\?(.*?):(.*)")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "repl")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "(%s if %s else %s)")
(PUNCT "%")
(PUNCT "(")
(ID "x")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(LIT 2)
(PUNCT ")")
(PUNCT ",")
(ID "x")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(ID "expr")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(ID "repl")
(PUNCT ",")
(ID "x")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(LIT 3)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "stack")
(PUNCT "=")
(PUNCT "[")
(LIT "")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "c")
(KEYWORD in)
(ID "plural")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "c")
(PUNCT "==")
(LIT "(")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stack")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(PUNCT "==")
(LIT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "stack")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "unbalanced parenthesis in plural form")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(ID "expr")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(ID "repl")
(PUNCT ",")
(ID "stack")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "stack")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "+=")
(LIT "(%s)")
(PUNCT "%")
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stack")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "+=")
(ID "c")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "plural")
(PUNCT "=")
(ID "expr")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(ID "repl")
(PUNCT ",")
(ID "stack")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "eval")
(PUNCT "(")
(LIT "lambda n: int(%s)")
(PUNCT "%")
(ID "plural")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_expand_lang")
(PUNCT "(")
(ID "loc")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "loc")
(PUNCT "=")
(ID "locale")
(PUNCT ".")
(ID "normalize")
(PUNCT "(")
(ID "loc")
(PUNCT ")")
(NEWLINE)
(ID "COMPONENT_CODESET")
(PUNCT "=")
(LIT 1)
(PUNCT "<<")
(LIT 0)
(NEWLINE)
(ID "COMPONENT_TERRITORY")
(PUNCT "=")
(LIT 1)
(PUNCT "<<")
(LIT 1)
(NEWLINE)
(ID "COMPONENT_MODIFIER")
(PUNCT "=")
(LIT 1)
(PUNCT "<<")
(LIT 2)
(NEWLINE)
(ID "mask")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "pos")
(PUNCT "=")
(ID "loc")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT "@")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "pos")
(PUNCT ">=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modifier")
(PUNCT "=")
(ID "loc")
(PUNCT "[")
(ID "pos")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "loc")
(PUNCT "=")
(ID "loc")
(PUNCT "[")
(PUNCT ":")
(ID "pos")
(PUNCT "]")
(NEWLINE)
(ID "mask")
(PUNCT "|=")
(ID "COMPONENT_MODIFIER")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modifier")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "pos")
(PUNCT "=")
(ID "loc")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "pos")
(PUNCT ">=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "codeset")
(PUNCT "=")
(ID "loc")
(PUNCT "[")
(ID "pos")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "loc")
(PUNCT "=")
(ID "loc")
(PUNCT "[")
(PUNCT ":")
(ID "pos")
(PUNCT "]")
(NEWLINE)
(ID "mask")
(PUNCT "|=")
(ID "COMPONENT_CODESET")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "codeset")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "pos")
(PUNCT "=")
(ID "loc")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT "_")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "pos")
(PUNCT ">=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "territory")
(PUNCT "=")
(ID "loc")
(PUNCT "[")
(ID "pos")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "loc")
(PUNCT "=")
(ID "loc")
(PUNCT "[")
(PUNCT ":")
(ID "pos")
(PUNCT "]")
(NEWLINE)
(ID "mask")
(PUNCT "|=")
(ID "COMPONENT_TERRITORY")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "territory")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "language")
(PUNCT "=")
(ID "loc")
(NEWLINE)
(ID "ret")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "mask")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID "i")
(PUNCT "&")
(PUNCT "~")
(ID "mask")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "val")
(PUNCT "=")
(ID "language")
(NEWLINE)
(KEYWORD if)
(ID "i")
(PUNCT "&")
(ID "COMPONENT_TERRITORY")
(PUNCT ":")
(ID "val")
(PUNCT "+=")
(ID "territory")
(NEWLINE)
(KEYWORD if)
(ID "i")
(PUNCT "&")
(ID "COMPONENT_CODESET")
(PUNCT ":")
(ID "val")
(PUNCT "+=")
(ID "codeset")
(NEWLINE)
(KEYWORD if)
(ID "i")
(PUNCT "&")
(ID "COMPONENT_MODIFIER")
(PUNCT ":")
(ID "val")
(PUNCT "+=")
(ID "modifier")
(NEWLINE)
(ID "ret")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "ret")
(PUNCT ".")
(ID "reverse")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "ret")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "NullTranslations")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fp")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_info")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_charset")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_output_charset")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "fp")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_parse")
(PUNCT "(")
(ID "fp")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_parse")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fp")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_fallback")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fallback")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ".")
(ID "add_fallback")
(PUNCT "(")
(ID "fallback")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT "=")
(ID "fallback")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "gettext")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ".")
(ID "gettext")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "message")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "lgettext")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ".")
(ID "lgettext")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "message")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ngettext")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ".")
(ID "ngettext")
(PUNCT "(")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "n")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "msgid1")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "msgid2")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "lngettext")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ".")
(ID "lngettext")
(PUNCT "(")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "n")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "msgid1")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "msgid2")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "info")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_info")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "charset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_charset")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "output_charset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_output_charset")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_output_charset")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "charset")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_output_charset")
(PUNCT "=")
(ID "charset")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "install")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "names")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "builtins")
(NEWLINE)
(ID "builtins")
(PUNCT ".")
(ID "__dict__")
(PUNCT "[")
(LIT "_")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "gettext")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "names")
(PUNCT ",")
(LIT "__contains__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "gettext")
(KEYWORD in)
(ID "names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "builtins")
(PUNCT ".")
(ID "__dict__")
(PUNCT "[")
(LIT "gettext")
(PUNCT "]")
(PUNCT "=")
(ID "builtins")
(PUNCT ".")
(ID "__dict__")
(PUNCT "[")
(LIT "_")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "ngettext")
(KEYWORD in)
(ID "names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "builtins")
(PUNCT ".")
(ID "__dict__")
(PUNCT "[")
(LIT "ngettext")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "ngettext")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "lgettext")
(KEYWORD in)
(ID "names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "builtins")
(PUNCT ".")
(ID "__dict__")
(PUNCT "[")
(LIT "lgettext")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "lgettext")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "lngettext")
(KEYWORD in)
(ID "names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "builtins")
(PUNCT ".")
(ID "__dict__")
(PUNCT "[")
(LIT "lngettext")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "lngettext")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "GNUTranslations")
(PUNCT "(")
(ID "NullTranslations")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "LE_MAGIC")
(PUNCT "=")
(LIT 2500072158)
(NEWLINE)
(ID "BE_MAGIC")
(PUNCT "=")
(LIT 3725722773)
(NEWLINE)
(KEYWORD def)
(ID "_parse")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fp")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Override this method to support alternative .mo formats.")
(NEWLINE)
(ID "unpack")
(PUNCT "=")
(ID "struct")
(PUNCT ".")
(ID "unpack")
(NEWLINE)
(ID "filename")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "fp")
(PUNCT ",")
(LIT "name")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_catalog")
(PUNCT "=")
(ID "catalog")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "plural")
(PUNCT "=")
(KEYWORD lambda)
(ID "n")
(PUNCT ":")
(ID "int")
(PUNCT "(")
(ID "n")
(PUNCT "!=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "buf")
(PUNCT "=")
(ID "fp")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "buflen")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "buf")
(PUNCT ")")
(NEWLINE)
(ID "magic")
(PUNCT "=")
(ID "unpack")
(PUNCT "(")
(LIT "<I")
(PUNCT ",")
(ID "buf")
(PUNCT "[")
(PUNCT ":")
(LIT 4)
(PUNCT "]")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "magic")
(PUNCT "==")
(ID "self")
(PUNCT ".")
(ID "LE_MAGIC")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "version")
(PUNCT ",")
(ID "msgcount")
(PUNCT ",")
(ID "masteridx")
(PUNCT ",")
(ID "transidx")
(PUNCT "=")
(ID "unpack")
(PUNCT "(")
(LIT "<4I")
(PUNCT ",")
(ID "buf")
(PUNCT "[")
(LIT 4)
(PUNCT ":")
(LIT 20)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "ii")
(PUNCT "=")
(LIT "<II")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "magic")
(PUNCT "==")
(ID "self")
(PUNCT ".")
(ID "BE_MAGIC")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "version")
(PUNCT ",")
(ID "msgcount")
(PUNCT ",")
(ID "masteridx")
(PUNCT ",")
(ID "transidx")
(PUNCT "=")
(ID "unpack")
(PUNCT "(")
(LIT ">4I")
(PUNCT ",")
(ID "buf")
(PUNCT "[")
(LIT 4)
(PUNCT ":")
(LIT 20)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "ii")
(PUNCT "=")
(LIT ">II")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT "Bad magic number")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "msgcount")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mlen")
(PUNCT ",")
(ID "moff")
(PUNCT "=")
(ID "unpack")
(PUNCT "(")
(ID "ii")
(PUNCT ",")
(ID "buf")
(PUNCT "[")
(ID "masteridx")
(PUNCT ":")
(ID "masteridx")
(PUNCT "+")
(LIT 8)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "mend")
(PUNCT "=")
(ID "moff")
(PUNCT "+")
(ID "mlen")
(NEWLINE)
(ID "tlen")
(PUNCT ",")
(ID "toff")
(PUNCT "=")
(ID "unpack")
(PUNCT "(")
(ID "ii")
(PUNCT ",")
(ID "buf")
(PUNCT "[")
(ID "transidx")
(PUNCT ":")
(ID "transidx")
(PUNCT "+")
(LIT 8)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "tend")
(PUNCT "=")
(ID "toff")
(PUNCT "+")
(ID "tlen")
(NEWLINE)
(KEYWORD if)
(ID "mend")
(PUNCT "<")
(ID "buflen")
(KEYWORD and)
(ID "tend")
(PUNCT "<")
(ID "buflen")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "buf")
(PUNCT "[")
(ID "moff")
(PUNCT ":")
(ID "mend")
(PUNCT "]")
(NEWLINE)
(ID "tmsg")
(PUNCT "=")
(ID "buf")
(PUNCT "[")
(ID "toff")
(PUNCT ":")
(ID "tend")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT "File is corrupt")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "mlen")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lastk")
(PUNCT "=")
(ID "k")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD for)
(ID "b_item")
(KEYWORD in)
(ID "tmsg")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "\n")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "ascii")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "item")
(PUNCT "=")
(ID "b_item")
(PUNCT ".")
(ID "decode")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "item")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT ":")
(KEYWORD in)
(ID "item")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT ",")
(ID "v")
(PUNCT "=")
(ID "item")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ":")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "k")
(PUNCT "=")
(ID "k")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "v")
(PUNCT "=")
(ID "v")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_info")
(PUNCT "[")
(ID "k")
(PUNCT "]")
(PUNCT "=")
(ID "v")
(NEWLINE)
(ID "lastk")
(PUNCT "=")
(ID "k")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "lastk")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_info")
(PUNCT "[")
(ID "lastk")
(PUNCT "]")
(PUNCT "+=")
(LIT "\n")
(PUNCT "+")
(ID "item")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "k")
(PUNCT "==")
(LIT "content-type")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_charset")
(PUNCT "=")
(ID "v")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "charset=")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "k")
(PUNCT "==")
(LIT "plural-forms")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "v")
(PUNCT "=")
(ID "v")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ";")
(PUNCT ")")
(NEWLINE)
(ID "plural")
(PUNCT "=")
(ID "v")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "plural=")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "plural")
(PUNCT "=")
(ID "c2py")
(PUNCT "(")
(ID "plural")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "charset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_charset")
(KEYWORD or)
(LIT "ascii")
(NEWLINE)
(KEYWORD if)
(LIT #"\0")
(KEYWORD in)
(ID "msg")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT "=")
(ID "msg")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT #"\0")
(PUNCT ")")
(NEWLINE)
(ID "tmsg")
(PUNCT "=")
(ID "tmsg")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT #"\0")
(PUNCT ")")
(NEWLINE)
(ID "msgid1")
(PUNCT "=")
(ID "str")
(PUNCT "(")
(ID "msgid1")
(PUNCT ",")
(ID "charset")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "x")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "tmsg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "catalog")
(PUNCT "[")
(PUNCT "(")
(ID "msgid1")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT "]")
(PUNCT "=")
(ID "str")
(PUNCT "(")
(ID "x")
(PUNCT ",")
(ID "charset")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "catalog")
(PUNCT "[")
(ID "str")
(PUNCT "(")
(ID "msg")
(PUNCT ",")
(ID "charset")
(PUNCT ")")
(PUNCT "]")
(PUNCT "=")
(ID "str")
(PUNCT "(")
(ID "tmsg")
(PUNCT ",")
(ID "charset")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "masteridx")
(PUNCT "+=")
(LIT 8)
(NEWLINE)
(ID "transidx")
(PUNCT "+=")
(LIT 8)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "lgettext")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "missing")
(PUNCT "=")
(ID "object")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "tmsg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_catalog")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "missing")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "tmsg")
(KEYWORD is)
(ID "missing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ".")
(ID "lgettext")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "message")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_output_charset")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "tmsg")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_output_charset")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "tmsg")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(ID "locale")
(PUNCT ".")
(ID "getpreferredencoding")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "lngettext")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tmsg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_catalog")
(PUNCT "[")
(PUNCT "(")
(ID "msgid1")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "plural")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_output_charset")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "tmsg")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_output_charset")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "tmsg")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(ID "locale")
(PUNCT ".")
(ID "getpreferredencoding")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ".")
(ID "lngettext")
(PUNCT "(")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "n")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "msgid1")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "msgid2")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "gettext")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "missing")
(PUNCT "=")
(ID "object")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "tmsg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_catalog")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "missing")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "tmsg")
(KEYWORD is)
(ID "missing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ".")
(ID "gettext")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "message")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "tmsg")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ngettext")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tmsg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_catalog")
(PUNCT "[")
(PUNCT "(")
(ID "msgid1")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "plural")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_fallback")
(PUNCT ".")
(ID "ngettext")
(PUNCT "(")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "n")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tmsg")
(PUNCT "=")
(ID "msgid1")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tmsg")
(PUNCT "=")
(ID "msgid2")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "tmsg")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "find")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "localedir")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "languages")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "all")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "localedir")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "localedir")
(PUNCT "=")
(ID "_default_localedir")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "languages")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "languages")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "envar")
(KEYWORD in)
(PUNCT "(")
(LIT "LANGUAGE")
(PUNCT ",")
(LIT "LC_ALL")
(PUNCT ",")
(LIT "LC_MESSAGES")
(PUNCT ",")
(LIT "LANG")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "val")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "envar")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "val")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "languages")
(PUNCT "=")
(ID "val")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ":")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(LIT "C")
(KEYWORD not)
(KEYWORD in)
(ID "languages")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "languages")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "C")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "nelangs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "lang")
(KEYWORD in)
(ID "languages")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "nelang")
(KEYWORD in)
(ID "_expand_lang")
(PUNCT "(")
(ID "lang")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "nelang")
(KEYWORD not)
(KEYWORD in)
(ID "nelangs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nelangs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "nelang")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "all")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "lang")
(KEYWORD in)
(ID "nelangs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "lang")
(PUNCT "==")
(LIT "C")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "mofile")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "localedir")
(PUNCT ",")
(ID "lang")
(PUNCT ",")
(LIT "LC_MESSAGES")
(PUNCT ",")
(LIT "%s.mo")
(PUNCT "%")
(ID "domain")
(PUNCT ")")
(NEWLINE)
(ID "mofile_lp")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(LIT "/usr/share/locale-langpack")
(PUNCT ",")
(ID "lang")
(PUNCT ",")
(LIT "LC_MESSAGES")
(PUNCT ",")
(LIT "%s.mo")
(PUNCT "%")
(ID "domain")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "mofile")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "all")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "mofile")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "mofile")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "mofile_lp")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "all")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "mofile_lp")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "mofile_lp")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(ID "_translations")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "translation")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "localedir")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "languages")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "class_")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "fallback")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "codeset")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "class_")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "class_")
(PUNCT "=")
(ID "GNUTranslations")
(NEWLINE)
(DEDENT)
(ID "mofiles")
(PUNCT "=")
(ID "find")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "localedir")
(PUNCT ",")
(ID "languages")
(PUNCT ",")
(ID "all")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "mofiles")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "fallback")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "NullTranslations")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(ID "ENOENT")
(PUNCT ",")
(LIT "No translation file found for domain")
(PUNCT ",")
(ID "domain")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD for)
(ID "mofile")
(KEYWORD in)
(ID "mofiles")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(PUNCT "(")
(ID "class_")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "abspath")
(PUNCT "(")
(ID "mofile")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "t")
(PUNCT "=")
(ID "_translations")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "t")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "mofile")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(KEYWORD as)
(ID "fp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "t")
(PUNCT "=")
(ID "_translations")
(PUNCT ".")
(ID "setdefault")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "class_")
(PUNCT "(")
(ID "fp")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "t")
(PUNCT "=")
(ID "copy")
(PUNCT ".")
(ID "copy")
(PUNCT "(")
(ID "t")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "codeset")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "t")
(PUNCT ".")
(ID "set_output_charset")
(PUNCT "(")
(ID "codeset")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "result")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "t")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT ".")
(ID "add_fallback")
(PUNCT "(")
(ID "t")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "install")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "localedir")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "codeset")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "names")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "t")
(PUNCT "=")
(ID "translation")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "localedir")
(PUNCT ",")
(ID "fallback")
(PUNCT "=")
(KEYWORD True)
(PUNCT ",")
(ID "codeset")
(PUNCT "=")
(ID "codeset")
(PUNCT ")")
(NEWLINE)
(ID "t")
(PUNCT ".")
(ID "install")
(PUNCT "(")
(ID "names")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "_localedirs")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "_localecodesets")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "_current_domain")
(PUNCT "=")
(LIT "messages")
(NEWLINE)
(KEYWORD def)
(ID "textdomain")
(PUNCT "(")
(ID "domain")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD global)
(ID "_current_domain")
(NEWLINE)
(KEYWORD if)
(ID "domain")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_current_domain")
(PUNCT "=")
(ID "domain")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_current_domain")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "bindtextdomain")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "localedir")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD global)
(ID "_localedirs")
(NEWLINE)
(KEYWORD if)
(ID "localedir")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_localedirs")
(PUNCT "[")
(ID "domain")
(PUNCT "]")
(PUNCT "=")
(ID "localedir")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_localedirs")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "_default_localedir")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "bind_textdomain_codeset")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "codeset")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD global)
(ID "_localecodesets")
(NEWLINE)
(KEYWORD if)
(ID "codeset")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_localecodesets")
(PUNCT "[")
(ID "domain")
(PUNCT "]")
(PUNCT "=")
(ID "codeset")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_localecodesets")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "domain")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dgettext")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "t")
(PUNCT "=")
(ID "translation")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "_localedirs")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ",")
(ID "codeset")
(PUNCT "=")
(ID "_localecodesets")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "domain")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "message")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "t")
(PUNCT ".")
(ID "gettext")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ldgettext")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "t")
(PUNCT "=")
(ID "translation")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "_localedirs")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ",")
(ID "codeset")
(PUNCT "=")
(ID "_localecodesets")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "domain")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "message")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "t")
(PUNCT ".")
(ID "lgettext")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dngettext")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "t")
(PUNCT "=")
(ID "translation")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "_localedirs")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ",")
(ID "codeset")
(PUNCT "=")
(ID "_localecodesets")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "domain")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "n")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "msgid1")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "msgid2")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "t")
(PUNCT ".")
(ID "ngettext")
(PUNCT "(")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ldngettext")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "t")
(PUNCT "=")
(ID "translation")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(ID "_localedirs")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "domain")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ",")
(ID "codeset")
(PUNCT "=")
(ID "_localecodesets")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "domain")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "n")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "msgid1")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "msgid2")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "t")
(PUNCT ".")
(ID "lngettext")
(PUNCT "(")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "gettext")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "dgettext")
(PUNCT "(")
(ID "_current_domain")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "lgettext")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "ldgettext")
(PUNCT "(")
(ID "_current_domain")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ngettext")
(PUNCT "(")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "dngettext")
(PUNCT "(")
(ID "_current_domain")
(PUNCT ",")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "lngettext")
(PUNCT "(")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "ldngettext")
(PUNCT "(")
(ID "_current_domain")
(PUNCT ",")
(ID "msgid1")
(PUNCT ",")
(ID "msgid2")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "Catalog")
(PUNCT "=")
(ID "translation")
(NEWLINE)
(ENDMARKER)
