(KEYWORD from)
(ID "tkinter")
(KEYWORD import)
(PUNCT "*")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(PUNCT ".")
(ID "EditorWindow")
(KEYWORD import)
(ID "EditorWindow")
(NEWLINE)
(KEYWORD import)
(ID "re")
(NEWLINE)
(KEYWORD import)
(ID "tkinter")
(PUNCT ".")
(ID "messagebox")
(KEYWORD as)
(ID "tkMessageBox")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "IOBinding")
(NEWLINE)
(KEYWORD class)
(ID "OutputWindow")
(PUNCT "(")
(ID "EditorWindow")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "An editor window that can serve as an output file.\n\n    Also the future base class for the Python shell window.\n    This class has no input facilities.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "EditorWindow")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<<goto-file-line>>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "goto_file_line")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ispythonsource")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "short_title")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "Output")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "maybesave")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "get_saved")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "yes")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "no")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "write")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "s")
(PUNCT ",")
(ID "tags")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "mark")
(PUNCT "=")
(LIT "insert")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(PUNCT "(")
(ID "bytes")
(PUNCT ",")
(ID "bytes")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT ".")
(ID "decode")
(PUNCT "(")
(ID "IOBinding")
(PUNCT ".")
(ID "encoding")
(PUNCT ",")
(LIT "replace")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(ID "mark")
(PUNCT ",")
(ID "s")
(PUNCT ",")
(ID "tags")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "see")
(PUNCT "(")
(ID "mark")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "writelines")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "lines")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "line")
(KEYWORD in)
(ID "lines")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "flush")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(ID "rmenu_specs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(LIT "Cut")
(PUNCT ",")
(LIT "<<cut>>")
(PUNCT ",")
(LIT "rmenu_check_cut")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "Copy")
(PUNCT ",")
(LIT "<<copy>>")
(PUNCT ",")
(LIT "rmenu_check_copy")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "Paste")
(PUNCT ",")
(LIT "<<paste>>")
(PUNCT ",")
(LIT "rmenu_check_paste")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "Go to file/line")
(PUNCT ",")
(LIT "<<goto-file-line>>")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(ID "file_line_pats")
(PUNCT "=")
(PUNCT "[")
(LIT "file \"([^\"]*)\", line (\\d+)")
(PUNCT ",")
(LIT "([^\\s]+)\\((\\d+)\\)")
(PUNCT ",")
(LIT "^(\\s*\\S.*?):\\s*(\\d+):")
(PUNCT ",")
(LIT "([^\\s]+):\\s*(\\d+):")
(PUNCT ",")
(LIT "^\\s*(\\S.*?):\\s*(\\d+):")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(ID "file_line_progs")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "goto_file_line")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "file_line_progs")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "l")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "pat")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "file_line_pats")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "l")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(ID "pat")
(PUNCT ",")
(ID "re")
(PUNCT ".")
(ID "IGNORECASE")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "file_line_progs")
(PUNCT "=")
(ID "l")
(NEWLINE)
(DEDENT)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "insert linestart")
(PUNCT ",")
(LIT "insert lineend")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file_line_helper")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "result")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "insert -1line linestart")
(PUNCT ",")
(LIT "insert -1line lineend")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file_line_helper")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "result")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(LIT "No special line")
(PUNCT ",")
(LIT "The line you point at doesn't look like ")
(LIT "a valid file name followed by a line number.")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT "=")
(ID "result")
(NEWLINE)
(ID "edit")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(ID "edit")
(PUNCT ".")
(ID "gotoline")
(PUNCT "(")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_file_line_helper")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "prog")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "file_line_progs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "match")
(PUNCT "=")
(ID "prog")
(PUNCT ".")
(ID "search")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "match")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(LIT "r")
(PUNCT ")")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "filename")
(PUNCT ",")
(ID "int")
(PUNCT "(")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "OnDemandOutputWindow")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tagdefs")
(PUNCT "=")
(PUNCT "{")
(LIT "stdout")
(PUNCT ":")
(PUNCT "{")
(LIT "foreground")
(PUNCT ":")
(LIT "blue")
(PUNCT "}")
(PUNCT ",")
(LIT "stderr")
(PUNCT ":")
(PUNCT "{")
(LIT "foreground")
(PUNCT ":")
(LIT "#007700")
(PUNCT "}")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "flist")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT "=")
(ID "flist")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "owin")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "write")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "s")
(PUNCT ",")
(ID "tags")
(PUNCT ",")
(ID "mark")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "owin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "setup")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "owin")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "tags")
(PUNCT ",")
(ID "mark")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setup")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "owin")
(PUNCT "=")
(ID "owin")
(PUNCT "=")
(ID "OutputWindow")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "flist")
(PUNCT ")")
(NEWLINE)
(ID "text")
(PUNCT "=")
(ID "owin")
(PUNCT ".")
(ID "text")
(NEWLINE)
(KEYWORD for)
(ID "tag")
(PUNCT ",")
(ID "cnf")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "tagdefs")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "cnf")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "text")
(PUNCT ".")
(ID "tag_configure")
(PUNCT "(")
(ID "tag")
(PUNCT ",")
(PUNCT "**")
(ID "cnf")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "text")
(PUNCT ".")
(ID "tag_raise")
(PUNCT "(")
(LIT "sel")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "write")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "owin")
(PUNCT ".")
(ID "write")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
