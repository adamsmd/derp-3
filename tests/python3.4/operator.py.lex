(LIT "\nOperator Interface\n\nThis module exports a set of functions corresponding to the intrinsic\noperators of Python.  For example, operator.add(x, y) is equivalent\nto the expression x+y.  The function names are those used for special\nmethods; variants without leading and trailing '__' are also provided\nfor convenience.\n\nThis is the pure Python implementation of the module.\n")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "abs")
(PUNCT ",")
(LIT "add")
(PUNCT ",")
(LIT "and_")
(PUNCT ",")
(LIT "attrgetter")
(PUNCT ",")
(LIT "concat")
(PUNCT ",")
(LIT "contains")
(PUNCT ",")
(LIT "countOf")
(PUNCT ",")
(LIT "delitem")
(PUNCT ",")
(LIT "eq")
(PUNCT ",")
(LIT "floordiv")
(PUNCT ",")
(LIT "ge")
(PUNCT ",")
(LIT "getitem")
(PUNCT ",")
(LIT "gt")
(PUNCT ",")
(LIT "iadd")
(PUNCT ",")
(LIT "iand")
(PUNCT ",")
(LIT "iconcat")
(PUNCT ",")
(LIT "ifloordiv")
(PUNCT ",")
(LIT "ilshift")
(PUNCT ",")
(LIT "imod")
(PUNCT ",")
(LIT "imul")
(PUNCT ",")
(LIT "index")
(PUNCT ",")
(LIT "indexOf")
(PUNCT ",")
(LIT "inv")
(PUNCT ",")
(LIT "invert")
(PUNCT ",")
(LIT "ior")
(PUNCT ",")
(LIT "ipow")
(PUNCT ",")
(LIT "irshift")
(PUNCT ",")
(LIT "is_")
(PUNCT ",")
(LIT "is_not")
(PUNCT ",")
(LIT "isub")
(PUNCT ",")
(LIT "itemgetter")
(PUNCT ",")
(LIT "itruediv")
(PUNCT ",")
(LIT "ixor")
(PUNCT ",")
(LIT "le")
(PUNCT ",")
(LIT "length_hint")
(PUNCT ",")
(LIT "lshift")
(PUNCT ",")
(LIT "lt")
(PUNCT ",")
(LIT "methodcaller")
(PUNCT ",")
(LIT "mod")
(PUNCT ",")
(LIT "mul")
(PUNCT ",")
(LIT "ne")
(PUNCT ",")
(LIT "neg")
(PUNCT ",")
(LIT "not_")
(PUNCT ",")
(LIT "or_")
(PUNCT ",")
(LIT "pos")
(PUNCT ",")
(LIT "pow")
(PUNCT ",")
(LIT "rshift")
(PUNCT ",")
(LIT "setitem")
(PUNCT ",")
(LIT "sub")
(PUNCT ",")
(LIT "truediv")
(PUNCT ",")
(LIT "truth")
(PUNCT ",")
(LIT "xor")
(PUNCT "]")
(NEWLINE)
(KEYWORD from)
(ID "builtins")
(KEYWORD import)
(ID "abs")
(KEYWORD as)
(ID "_abs")
(NEWLINE)
(KEYWORD def)
(ID "lt")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a < b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "<")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "le")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a <= b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "<=")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "eq")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a == b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "==")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ne")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a != b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "!=")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ge")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a >= b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT ">=")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "gt")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a > b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT ">")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "not_")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as not a.")
(NEWLINE)
(KEYWORD return)
(KEYWORD not)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "truth")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return True if a is true, False otherwise.")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(KEYWORD if)
(ID "a")
(KEYWORD else)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a is b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(KEYWORD is)
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_not")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a is not b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(KEYWORD is)
(KEYWORD not)
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "abs")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as abs(a).")
(NEWLINE)
(KEYWORD return)
(ID "_abs")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a + b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "+")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "and_")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a & b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "&")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "floordiv")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a // b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "//")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "index")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a.__index__().")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT ".")
(ID "__index__")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "inv")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as ~a.")
(NEWLINE)
(KEYWORD return)
(PUNCT "~")
(ID "a")
(NEWLINE)
(DEDENT)
(ID "invert")
(PUNCT "=")
(ID "inv")
(NEWLINE)
(KEYWORD def)
(ID "lshift")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a << b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "<<")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "mod")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a % b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "%")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "mul")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a * b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "*")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "neg")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as -a.")
(NEWLINE)
(KEYWORD return)
(PUNCT "-")
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "or_")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a | b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "|")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "pos")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as +a.")
(NEWLINE)
(KEYWORD return)
(PUNCT "+")
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "pow")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a ** b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "**")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "rshift")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a >> b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT ">>")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "sub")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a - b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "-")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "truediv")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a / b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "/")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "xor")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a ^ b.")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "^")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "concat")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a + b, for a and b sequences.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(LIT "__getitem__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(LIT "'%s' object can't be concatenated")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "a")
(PUNCT "+")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "contains")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as b in a (note reversed operands).")
(NEWLINE)
(KEYWORD return)
(ID "b")
(KEYWORD in)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "countOf")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the number of times b occurs in a.")
(NEWLINE)
(ID "count")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "a")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "i")
(PUNCT "==")
(ID "b")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "count")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "count")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "delitem")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as del a[b].")
(NEWLINE)
(KEYWORD del)
(ID "a")
(PUNCT "[")
(ID "b")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getitem")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a[b].")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "[")
(ID "b")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "indexOf")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the first index of b in a.")
(NEWLINE)
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "j")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "j")
(PUNCT "==")
(ID "b")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "i")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "sequence.index(x): x not in sequence")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "setitem")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ",")
(ID "c")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a[b] = c.")
(NEWLINE)
(ID "a")
(PUNCT "[")
(ID "b")
(PUNCT "]")
(PUNCT "=")
(ID "c")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "length_hint")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Return an estimate of the number of items in obj.\n    This is useful for presizing containers when building from an iterable.\n\n    If the object supports len(), the result will be exact. Otherwise, it may\n    over- or under-estimate by an arbitrary amount. The result will be an\n    integer >= 0.\n    ")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "default")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(PUNCT "(")
(LIT "'%s' object cannot be interpreted as an integer")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "default")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hint")
(PUNCT "=")
(ID "type")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ".")
(ID "__length_hint__")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "default")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "val")
(PUNCT "=")
(ID "hint")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "default")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "val")
(KEYWORD is)
(ID "NotImplemented")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "default")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "val")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(PUNCT "(")
(LIT "__length_hint__ must be integer, not %s")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "val")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(LIT "__length_hint__() should return >= 0")
(NEWLINE)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "val")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "attrgetter")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Return a callable object that fetches the given attribute(s) from its operand.\n    After f = attrgetter('name'), the call f(r) returns r.name.\n    After g = attrgetter('name', 'date'), the call g(r) returns (r.name, r.date).\n    After h = attrgetter('name.first', 'name.last'), the call h(r) returns\n    (r.name.first, r.name.last).\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attr")
(PUNCT ",")
(PUNCT "*")
(ID "attrs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "attrs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "attr")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "attribute name must be a string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "names")
(PUNCT "=")
(ID "attr")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "func")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "obj")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_call")
(PUNCT "=")
(ID "func")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "getters")
(PUNCT "=")
(ID "tuple")
(PUNCT "(")
(ID "map")
(PUNCT "(")
(ID "attrgetter")
(PUNCT ",")
(PUNCT "(")
(ID "attr")
(PUNCT ",")
(PUNCT ")")
(PUNCT "+")
(ID "attrs")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "func")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "tuple")
(PUNCT "(")
(ID "getter")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(KEYWORD for)
(ID "getter")
(KEYWORD in)
(ID "getters")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_call")
(PUNCT "=")
(ID "func")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_call")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "itemgetter")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Return a callable object that fetches the given item(s) from its operand.\n    After f = itemgetter(2), the call f(r) returns r[2].\n    After g = itemgetter(2, 5, 3), the call g(r) returns (r[2], r[5], r[3])\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "item")
(PUNCT ",")
(PUNCT "*")
(ID "items")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "items")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "func")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "obj")
(PUNCT "[")
(ID "item")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_call")
(PUNCT "=")
(ID "func")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "items")
(PUNCT "=")
(PUNCT "(")
(ID "item")
(PUNCT ",")
(PUNCT ")")
(PUNCT "+")
(ID "items")
(NEWLINE)
(KEYWORD def)
(ID "func")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "tuple")
(PUNCT "(")
(ID "obj")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "items")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_call")
(PUNCT "=")
(ID "func")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_call")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "methodcaller")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Return a callable object that calls the given method on its operand.\n    After f = methodcaller('name'), the call f(r) returns r.name().\n    After g = methodcaller('name', 'date', foo=1), the call g(r) returns\n    r.name('date', foo=1).\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT "<")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(LIT "methodcaller needs at least one argument, the method name")
(NEWLINE)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_name")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_args")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_kwargs")
(PUNCT "=")
(ID "kwargs")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "getattr")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_name")
(PUNCT ")")
(PUNCT "(")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_args")
(PUNCT ",")
(PUNCT "**")
(ID "self")
(PUNCT ".")
(ID "_kwargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "iadd")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a += b.")
(NEWLINE)
(ID "a")
(PUNCT "+=")
(ID "b")
(NEWLINE)
(KEYWORD return)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "iand")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a &= b.")
(NEWLINE)
(ID "a")
(PUNCT "&=")
(ID "b")
(NEWLINE)
(KEYWORD return)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "iconcat")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a += b, for a and b sequences.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(LIT "__getitem__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(LIT "'%s' object can't be concatenated")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "a")
(PUNCT "+=")
(ID "b")
(NEWLINE)
(KEYWORD return)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ifloordiv")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a //= b.")
(NEWLINE)
(ID "a")
(PUNCT "//=")
(ID "b")
(NEWLINE)
(KEYWORD return)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ilshift")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a <<= b.")
(NEWLINE)
(ID "a")
(PUNCT "<<=")
(ID "b")
(NEWLINE)
(KEYWORD return)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "imod")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a %= b.")
(NEWLINE)
(ID "a")
(PUNCT "%=")
(ID "b")
(NEWLINE)
(KEYWORD return)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "imul")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a *= b.")
(NEWLINE)
(ID "a")
(PUNCT "*=")
(ID "b")
(NEWLINE)
(KEYWORD return)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ior")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a |= b.")
(NEWLINE)
(ID "a")
(PUNCT "|=")
(ID "b")
(NEWLINE)
(KEYWORD return)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ipow")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a **= b.")
(NEWLINE)
(ID "a")
(PUNCT "**=")
(ID "b")
(NEWLINE)
(KEYWORD return)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "irshift")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a >>= b.")
(NEWLINE)
(ID "a")
(PUNCT ">>=")
(ID "b")
(NEWLINE)
(KEYWORD return)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "isub")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a -= b.")
(NEWLINE)
(ID "a")
(PUNCT "-=")
(ID "b")
(NEWLINE)
(KEYWORD return)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "itruediv")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a /= b.")
(NEWLINE)
(ID "a")
(PUNCT "/=")
(ID "b")
(NEWLINE)
(KEYWORD return)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ixor")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Same as a ^= b.")
(NEWLINE)
(ID "a")
(PUNCT "^=")
(ID "b")
(NEWLINE)
(KEYWORD return)
(ID "a")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "_operator")
(KEYWORD import)
(PUNCT "*")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "_operator")
(KEYWORD import)
(ID "__doc__")
(NEWLINE)
(DEDENT)
(ID "__lt__")
(PUNCT "=")
(ID "lt")
(NEWLINE)
(ID "__le__")
(PUNCT "=")
(ID "le")
(NEWLINE)
(ID "__eq__")
(PUNCT "=")
(ID "eq")
(NEWLINE)
(ID "__ne__")
(PUNCT "=")
(ID "ne")
(NEWLINE)
(ID "__ge__")
(PUNCT "=")
(ID "ge")
(NEWLINE)
(ID "__gt__")
(PUNCT "=")
(ID "gt")
(NEWLINE)
(ID "__not__")
(PUNCT "=")
(ID "not_")
(NEWLINE)
(ID "__abs__")
(PUNCT "=")
(ID "abs")
(NEWLINE)
(ID "__add__")
(PUNCT "=")
(ID "add")
(NEWLINE)
(ID "__and__")
(PUNCT "=")
(ID "and_")
(NEWLINE)
(ID "__floordiv__")
(PUNCT "=")
(ID "floordiv")
(NEWLINE)
(ID "__index__")
(PUNCT "=")
(ID "index")
(NEWLINE)
(ID "__inv__")
(PUNCT "=")
(ID "inv")
(NEWLINE)
(ID "__invert__")
(PUNCT "=")
(ID "invert")
(NEWLINE)
(ID "__lshift__")
(PUNCT "=")
(ID "lshift")
(NEWLINE)
(ID "__mod__")
(PUNCT "=")
(ID "mod")
(NEWLINE)
(ID "__mul__")
(PUNCT "=")
(ID "mul")
(NEWLINE)
(ID "__neg__")
(PUNCT "=")
(ID "neg")
(NEWLINE)
(ID "__or__")
(PUNCT "=")
(ID "or_")
(NEWLINE)
(ID "__pos__")
(PUNCT "=")
(ID "pos")
(NEWLINE)
(ID "__pow__")
(PUNCT "=")
(ID "pow")
(NEWLINE)
(ID "__rshift__")
(PUNCT "=")
(ID "rshift")
(NEWLINE)
(ID "__sub__")
(PUNCT "=")
(ID "sub")
(NEWLINE)
(ID "__truediv__")
(PUNCT "=")
(ID "truediv")
(NEWLINE)
(ID "__xor__")
(PUNCT "=")
(ID "xor")
(NEWLINE)
(ID "__concat__")
(PUNCT "=")
(ID "concat")
(NEWLINE)
(ID "__contains__")
(PUNCT "=")
(ID "contains")
(NEWLINE)
(ID "__delitem__")
(PUNCT "=")
(ID "delitem")
(NEWLINE)
(ID "__getitem__")
(PUNCT "=")
(ID "getitem")
(NEWLINE)
(ID "__setitem__")
(PUNCT "=")
(ID "setitem")
(NEWLINE)
(ID "__iadd__")
(PUNCT "=")
(ID "iadd")
(NEWLINE)
(ID "__iand__")
(PUNCT "=")
(ID "iand")
(NEWLINE)
(ID "__iconcat__")
(PUNCT "=")
(ID "iconcat")
(NEWLINE)
(ID "__ifloordiv__")
(PUNCT "=")
(ID "ifloordiv")
(NEWLINE)
(ID "__ilshift__")
(PUNCT "=")
(ID "ilshift")
(NEWLINE)
(ID "__imod__")
(PUNCT "=")
(ID "imod")
(NEWLINE)
(ID "__imul__")
(PUNCT "=")
(ID "imul")
(NEWLINE)
(ID "__ior__")
(PUNCT "=")
(ID "ior")
(NEWLINE)
(ID "__ipow__")
(PUNCT "=")
(ID "ipow")
(NEWLINE)
(ID "__irshift__")
(PUNCT "=")
(ID "irshift")
(NEWLINE)
(ID "__isub__")
(PUNCT "=")
(ID "isub")
(NEWLINE)
(ID "__itruediv__")
(PUNCT "=")
(ID "itruediv")
(NEWLINE)
(ID "__ixor__")
(PUNCT "=")
(ID "ixor")
(NEWLINE)
(ENDMARKER)
