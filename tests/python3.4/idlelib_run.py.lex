(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "io")
(NEWLINE)
(KEYWORD import)
(ID "linecache")
(NEWLINE)
(KEYWORD import)
(ID "time")
(NEWLINE)
(KEYWORD import)
(ID "socket")
(NEWLINE)
(KEYWORD import)
(ID "traceback")
(NEWLINE)
(KEYWORD import)
(ID "_thread")
(KEYWORD as)
(ID "thread")
(NEWLINE)
(KEYWORD import)
(ID "threading")
(NEWLINE)
(KEYWORD import)
(ID "queue")
(NEWLINE)
(KEYWORD import)
(ID "tkinter")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "CallTips")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "AutoComplete")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "RemoteDebugger")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "RemoteObjectBrowser")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "StackViewer")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "rpc")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "PyShell")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "IOBinding")
(NEWLINE)
(KEYWORD import)
(ID "__main__")
(NEWLINE)
(ID "LOCALHOST")
(PUNCT "=")
(LIT "127.0.0.1")
(NEWLINE)
(KEYWORD import)
(ID "warnings")
(NEWLINE)
(KEYWORD def)
(ID "idle_showwarning_subproc")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "category")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "line")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Show Idle-format warning after replacing warnings.showwarning.\n\n    The only difference is the formatter called.\n    ")
(NEWLINE)
(KEYWORD if)
(ID "file")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stderr")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "PyShell")
(PUNCT ".")
(ID "idle_formatwarning")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "category")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "IOError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "_warnings_showwarning")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "capture_warnings")
(PUNCT "(")
(ID "capture")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Replace warning.showwarning with idle_showwarning_subproc, or reverse.")
(NEWLINE)
(KEYWORD global)
(ID "_warnings_showwarning")
(NEWLINE)
(KEYWORD if)
(ID "capture")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "_warnings_showwarning")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_warnings_showwarning")
(PUNCT "=")
(ID "warnings")
(PUNCT ".")
(ID "showwarning")
(NEWLINE)
(ID "warnings")
(PUNCT ".")
(ID "showwarning")
(PUNCT "=")
(ID "idle_showwarning_subproc")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "_warnings_showwarning")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "warnings")
(PUNCT ".")
(ID "showwarning")
(PUNCT "=")
(ID "_warnings_showwarning")
(NEWLINE)
(ID "_warnings_showwarning")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "capture_warnings")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID "tcl")
(PUNCT "=")
(ID "tkinter")
(PUNCT ".")
(ID "Tcl")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "handle_tk_events")
(PUNCT "(")
(ID "tcl")
(PUNCT "=")
(ID "tcl")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Process any tk events that are ready to be dispatched if tkinter\n    has been imported, a tcl interpreter has been created and tk has been\n    loaded.")
(NEWLINE)
(ID "tcl")
(PUNCT ".")
(ID "eval")
(PUNCT "(")
(LIT "update")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "exit_now")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "quitting")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "interruptable")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID "main")
(PUNCT "(")
(ID "del_exitfunc")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Start the Python execution server in a subprocess\n\n    In the Python subprocess, RPCServer is instantiated with handlerclass\n    MyHandler, which inherits register/unregister methods from RPCHandler via\n    the mix-in class SocketIO.\n\n    When the RPCServer 'server' is instantiated, the TCPServer initialization\n    creates an instance of run.MyHandler and calls its handle() method.\n    handle() instantiates a run.Executive object, passing it a reference to the\n    MyHandler object.  That reference is saved as attribute rpchandler of the\n    Executive instance.  The Executive methods have access to the reference and\n    can pass it on to entities that they command\n    (e.g. RemoteDebugger.Debugger.start_debugger()).  The latter, in turn, can\n    call MyHandler(SocketIO) register/unregister methods via the reference to\n    register and unregister themselves.\n\n    ")
(NEWLINE)
(KEYWORD global)
(ID "exit_now")
(NEWLINE)
(KEYWORD global)
(ID "quitting")
(NEWLINE)
(KEYWORD global)
(ID "no_exitfunc")
(NEWLINE)
(ID "no_exitfunc")
(PUNCT "=")
(ID "del_exitfunc")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT ")")
(PUNCT ">")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "port")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "IDLE Subprocess: no IP port passed in sys.argv.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "capture_warnings")
(PUNCT "(")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(PUNCT "=")
(PUNCT "[")
(LIT "")
(PUNCT "]")
(NEWLINE)
(ID "sockthread")
(PUNCT "=")
(ID "threading")
(PUNCT ".")
(ID "Thread")
(PUNCT "(")
(ID "target")
(PUNCT "=")
(ID "manage_socket")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(LIT "SockThread")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(PUNCT "(")
(PUNCT "(")
(ID "LOCALHOST")
(PUNCT ",")
(ID "port")
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "sockthread")
(PUNCT ".")
(ID "daemon")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "sockthread")
(PUNCT ".")
(ID "start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "exit_now")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "exit")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyboardInterrupt")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "seq")
(PUNCT ",")
(ID "request")
(PUNCT "=")
(ID "rpc")
(PUNCT ".")
(ID "request_queue")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "block")
(PUNCT "=")
(KEYWORD True)
(PUNCT ",")
(ID "timeout")
(PUNCT "=")
(LIT 0.05)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "queue")
(PUNCT ".")
(ID "Empty")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "handle_tk_events")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "method")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT "=")
(ID "request")
(NEWLINE)
(ID "ret")
(PUNCT "=")
(ID "method")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(ID "rpc")
(PUNCT ".")
(ID "response_queue")
(PUNCT ".")
(ID "put")
(PUNCT "(")
(PUNCT "(")
(ID "seq")
(PUNCT ",")
(ID "ret")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyboardInterrupt")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "quitting")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "exit_now")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "SystemExit")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "capture_warnings")
(PUNCT "(")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "type")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "tb")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "exc_info")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print_exception")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "rpc")
(PUNCT ".")
(ID "response_queue")
(PUNCT ".")
(ID "put")
(PUNCT "(")
(PUNCT "(")
(ID "seq")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "traceback")
(PUNCT ".")
(ID "print_exception")
(PUNCT "(")
(ID "type")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "tb")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(PUNCT ")")
(NEWLINE)
(ID "exit")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "manage_socket")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 3)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "time")
(PUNCT ".")
(ID "sleep")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "server")
(PUNCT "=")
(ID "MyRPCServer")
(PUNCT "(")
(ID "address")
(PUNCT ",")
(ID "MyHandler")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "err")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "IDLE Subprocess: OSError: ")
(PUNCT "+")
(ID "err")
(PUNCT ".")
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "+")
(LIT ", retrying....")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(PUNCT ")")
(NEWLINE)
(ID "socket_error")
(PUNCT "=")
(ID "err")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "IDLE Subprocess: Connection to ")
(LIT "IDLE GUI failed, exiting.")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(PUNCT ")")
(NEWLINE)
(ID "show_socket_error")
(PUNCT "(")
(ID "socket_error")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(NEWLINE)
(KEYWORD global)
(ID "exit_now")
(NEWLINE)
(ID "exit_now")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "server")
(PUNCT ".")
(ID "handle_request")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "show_socket_error")
(PUNCT "(")
(ID "err")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "tkinter")
(NEWLINE)
(KEYWORD import)
(ID "tkinter")
(PUNCT ".")
(ID "messagebox")
(KEYWORD as)
(ID "tkMessageBox")
(NEWLINE)
(ID "root")
(PUNCT "=")
(ID "tkinter")
(PUNCT ".")
(ID "Tk")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "root")
(PUNCT ".")
(ID "withdraw")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "err")
(PUNCT ".")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(LIT 61)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(LIT "IDLE's subprocess can't connect to %s:%d.  This may be due ")
(LIT "to your personal firewall configuration.  It is safe to ")
(LIT "allow this internal connection because no data is visible on ")
(LIT "external ports.")
(PUNCT "%")
(ID "address")
(NEWLINE)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(LIT "IDLE Subprocess Error")
(PUNCT ",")
(ID "msg")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "root")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(LIT "IDLE Subprocess Error")
(PUNCT ",")
(LIT "Socket Error: %s")
(PUNCT "%")
(ID "err")
(PUNCT ".")
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "root")
(PUNCT ".")
(ID "destroy")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "print_exception")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "linecache")
(NEWLINE)
(ID "linecache")
(PUNCT ".")
(ID "checkcache")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "flush_stdout")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "efile")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stderr")
(NEWLINE)
(ID "typ")
(PUNCT ",")
(ID "val")
(PUNCT ",")
(ID "tb")
(PUNCT "=")
(ID "excinfo")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "exc_info")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "last_type")
(PUNCT ",")
(ID "sys")
(PUNCT ".")
(ID "last_value")
(PUNCT ",")
(ID "sys")
(PUNCT ".")
(ID "last_traceback")
(PUNCT "=")
(ID "excinfo")
(NEWLINE)
(ID "seen")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "print_exc")
(PUNCT "(")
(ID "typ")
(PUNCT ",")
(ID "exc")
(PUNCT ",")
(ID "tb")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "seen")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(ID "context")
(PUNCT "=")
(ID "exc")
(PUNCT ".")
(ID "__context__")
(NEWLINE)
(ID "cause")
(PUNCT "=")
(ID "exc")
(PUNCT ".")
(ID "__cause__")
(NEWLINE)
(KEYWORD if)
(ID "cause")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID "cause")
(KEYWORD not)
(KEYWORD in)
(ID "seen")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print_exc")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "cause")
(PUNCT ")")
(PUNCT ",")
(ID "cause")
(PUNCT ",")
(ID "cause")
(PUNCT ".")
(ID "__traceback__")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "\nThe above exception was the direct cause ")
(LIT "of the following exception:\n")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "efile")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(ID "context")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(KEYWORD not)
(ID "exc")
(PUNCT ".")
(ID "__suppress_context__")
(KEYWORD and)
(ID "context")
(KEYWORD not)
(KEYWORD in)
(ID "seen")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print_exc")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(PUNCT ",")
(ID "context")
(PUNCT ",")
(ID "context")
(PUNCT ".")
(ID "__traceback__")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "\nDuring handling of the above exception, ")
(LIT "another exception occurred:\n")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "efile")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "tb")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tbe")
(PUNCT "=")
(ID "traceback")
(PUNCT ".")
(ID "extract_tb")
(PUNCT "(")
(ID "tb")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Traceback (most recent call last):")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "efile")
(PUNCT ")")
(NEWLINE)
(ID "exclude")
(PUNCT "=")
(PUNCT "(")
(LIT "run.py")
(PUNCT ",")
(LIT "rpc.py")
(PUNCT ",")
(LIT "threading.py")
(PUNCT ",")
(LIT "queue.py")
(PUNCT ",")
(LIT "RemoteDebugger.py")
(PUNCT ",")
(LIT "bdb.py")
(PUNCT ")")
(NEWLINE)
(ID "cleanup_traceback")
(PUNCT "(")
(ID "tbe")
(PUNCT ",")
(ID "exclude")
(PUNCT ")")
(NEWLINE)
(ID "traceback")
(PUNCT ".")
(ID "print_list")
(PUNCT "(")
(ID "tbe")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "efile")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "lines")
(PUNCT "=")
(ID "traceback")
(PUNCT ".")
(ID "format_exception_only")
(PUNCT "(")
(ID "typ")
(PUNCT ",")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "line")
(KEYWORD in)
(ID "lines")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "line")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT "")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "efile")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "print_exc")
(PUNCT "(")
(ID "typ")
(PUNCT ",")
(ID "val")
(PUNCT ",")
(ID "tb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "cleanup_traceback")
(PUNCT "(")
(ID "tb")
(PUNCT ",")
(ID "exclude")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Remove excluded traces from beginning/end of tb; get cached lines")
(NEWLINE)
(ID "orig_tb")
(PUNCT "=")
(ID "tb")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(ID "tb")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "rpcfile")
(KEYWORD in)
(ID "exclude")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "tb")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "count")
(PUNCT "(")
(ID "rpcfile")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD del)
(ID "tb")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(ID "tb")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "rpcfile")
(KEYWORD in)
(ID "exclude")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "tb")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "count")
(PUNCT "(")
(ID "rpcfile")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD del)
(ID "tb")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "tb")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tb")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(PUNCT "=")
(ID "orig_tb")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "** IDLE Internal Exception: ")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stderr")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "rpchandler")
(PUNCT "=")
(ID "rpc")
(PUNCT ".")
(ID "objecttable")
(PUNCT "[")
(LIT "exec")
(PUNCT "]")
(PUNCT ".")
(ID "rpchandler")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "tb")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fn")
(PUNCT ",")
(ID "ln")
(PUNCT ",")
(ID "nm")
(PUNCT ",")
(ID "line")
(PUNCT "=")
(ID "tb")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "nm")
(PUNCT "==")
(LIT "?")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nm")
(PUNCT "=")
(LIT "-toplevel-")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "line")
(KEYWORD and)
(ID "fn")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "<pyshell#")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "rpchandler")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(LIT "linecache")
(PUNCT ",")
(LIT "getline")
(PUNCT ",")
(PUNCT "(")
(ID "fn")
(PUNCT ",")
(ID "ln")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "tb")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT "=")
(ID "fn")
(PUNCT ",")
(ID "ln")
(PUNCT ",")
(ID "nm")
(PUNCT ",")
(ID "line")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "flush_stdout")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "XXX How to do this now?")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "exit")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Exit subprocess, possibly after first clearing exit functions.\n\n    If config-main.cfg/.def 'General' 'delete-exitfunc' is True, then any\n    functions registered with atexit will be removed before exiting.\n    (VPython support)\n\n    ")
(NEWLINE)
(KEYWORD if)
(ID "no_exitfunc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "atexit")
(NEWLINE)
(ID "atexit")
(PUNCT ".")
(ID "_clear")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "capture_warnings")
(PUNCT "(")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "MyRPCServer")
(PUNCT "(")
(ID "rpc")
(PUNCT ".")
(ID "RPCServer")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "handle_error")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "request")
(PUNCT ",")
(ID "client_address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Override RPCServer method for IDLE\n\n        Interrupt the MainThread and exit server if link is dropped.\n\n        ")
(NEWLINE)
(KEYWORD global)
(ID "quitting")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "SystemExit")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "EOFError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD global)
(ID "exit_now")
(NEWLINE)
(ID "exit_now")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "thread")
(PUNCT ".")
(ID "interrupt_main")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "erf")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "__stderr__")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "\n")
(PUNCT "+")
(LIT "-")
(PUNCT "*")
(LIT 40)
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Unhandled server exception!")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Thread: %s")
(PUNCT "%")
(ID "threading")
(PUNCT ".")
(ID "current_thread")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "name")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Client Address: ")
(PUNCT ",")
(ID "client_address")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Request: ")
(PUNCT ",")
(ID "repr")
(PUNCT "(")
(ID "request")
(PUNCT ")")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "traceback")
(PUNCT ".")
(ID "print_exc")
(PUNCT "(")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "\n*** Unrecoverable, server exiting!")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "-")
(PUNCT "*")
(LIT 40)
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "erf")
(PUNCT ")")
(NEWLINE)
(ID "quitting")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "thread")
(PUNCT ".")
(ID "interrupt_main")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "MyHandler")
(PUNCT "(")
(ID "rpc")
(PUNCT ".")
(ID "RPCHandler")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "handle")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Override base method")
(NEWLINE)
(ID "executive")
(PUNCT "=")
(ID "Executive")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(LIT "exec")
(PUNCT ",")
(ID "executive")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "console")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_remote_proxy")
(PUNCT "(")
(LIT "console")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT "=")
(ID "PyShell")
(PUNCT ".")
(ID "PseudoInputFile")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "console")
(PUNCT ",")
(LIT "stdin")
(PUNCT ",")
(ID "IOBinding")
(PUNCT ".")
(ID "encoding")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT "=")
(ID "PyShell")
(PUNCT ".")
(ID "PseudoOutputFile")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "console")
(PUNCT ",")
(LIT "stdout")
(PUNCT ",")
(ID "IOBinding")
(PUNCT ".")
(ID "encoding")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "stderr")
(PUNCT "=")
(ID "PyShell")
(PUNCT ".")
(ID "PseudoOutputFile")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "console")
(PUNCT ",")
(LIT "stderr")
(PUNCT ",")
(ID "IOBinding")
(PUNCT ".")
(ID "encoding")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "displayhook")
(PUNCT "=")
(ID "rpc")
(PUNCT ".")
(ID "displayhook")
(NEWLINE)
(KEYWORD import)
(ID "pydoc")
(NEWLINE)
(ID "pydoc")
(PUNCT ".")
(ID "pager")
(PUNCT "=")
(ID "pydoc")
(PUNCT ".")
(ID "plainpager")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_keep_stdin")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdin")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "interp")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_remote_proxy")
(PUNCT "(")
(LIT "interp")
(PUNCT ")")
(NEWLINE)
(ID "rpc")
(PUNCT ".")
(ID "RPCHandler")
(PUNCT ".")
(ID "getresponse")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "myseq")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "wait")
(PUNCT "=")
(LIT 0.05)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "exithook")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "override SocketIO method - wait for MainThread to shut us down")
(NEWLINE)
(ID "time")
(PUNCT ".")
(ID "sleep")
(PUNCT "(")
(LIT 10)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "EOFhook")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Override SocketIO method - terminate wait on callback and exit thread")
(NEWLINE)
(KEYWORD global)
(ID "quitting")
(NEWLINE)
(ID "quitting")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "thread")
(PUNCT ".")
(ID "interrupt_main")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "decode_interrupthook")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "interrupt awakened thread")
(NEWLINE)
(KEYWORD global)
(ID "quitting")
(NEWLINE)
(ID "quitting")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "thread")
(PUNCT ".")
(ID "interrupt_main")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Executive")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "rpchandler")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "rpchandler")
(PUNCT "=")
(ID "rpchandler")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "locals")
(PUNCT "=")
(ID "__main__")
(PUNCT ".")
(ID "__dict__")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "calltip")
(PUNCT "=")
(ID "CallTips")
(PUNCT ".")
(ID "CallTips")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "autocomplete")
(PUNCT "=")
(ID "AutoComplete")
(PUNCT ".")
(ID "AutoComplete")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "runcode")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "code")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD global)
(ID "interruptable")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "usr_exc_info")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "interruptable")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "exec")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "locals")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "interruptable")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "SystemExit")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "usr_exc_info")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "exc_info")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "quitting")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "exit")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print_exception")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "jit")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "rpchandler")
(PUNCT ".")
(ID "console")
(PUNCT ".")
(ID "getvar")
(PUNCT "(")
(LIT "<<toggle-jit-stack-viewer>>")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "jit")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "rpchandler")
(PUNCT ".")
(ID "interp")
(PUNCT ".")
(ID "open_remote_stack_viewer")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flush_stdout")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "interrupt_the_server")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "interruptable")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "thread")
(PUNCT ".")
(ID "interrupt_main")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "start_the_debugger")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "gui_adap_oid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "RemoteDebugger")
(PUNCT ".")
(ID "start_debugger")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "rpchandler")
(PUNCT ",")
(ID "gui_adap_oid")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "stop_the_debugger")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "idb_adap_oid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Unregister the Idb Adapter.  Link objects and Idb then subject to GC")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "rpchandler")
(PUNCT ".")
(ID "unregister")
(PUNCT "(")
(ID "idb_adap_oid")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_the_calltip")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "calltip")
(PUNCT ".")
(ID "fetch_tip")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_the_completion_list")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "what")
(PUNCT ",")
(ID "mode")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "autocomplete")
(PUNCT ".")
(ID "fetch_completions")
(PUNCT "(")
(ID "what")
(PUNCT ",")
(ID "mode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "stackviewer")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "flist_oid")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "usr_exc_info")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "typ")
(PUNCT ",")
(ID "val")
(PUNCT ",")
(ID "tb")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "usr_exc_info")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "flist")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "flist_oid")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flist")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "rpchandler")
(PUNCT ".")
(ID "get_remote_proxy")
(PUNCT "(")
(ID "flist_oid")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(ID "tb")
(KEYWORD and)
(ID "tb")
(PUNCT ".")
(ID "tb_frame")
(PUNCT ".")
(ID "f_globals")
(PUNCT "[")
(LIT "__name__")
(PUNCT "]")
(KEYWORD in)
(PUNCT "[")
(LIT "rpc")
(PUNCT ",")
(LIT "run")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tb")
(PUNCT "=")
(ID "tb")
(PUNCT ".")
(ID "tb_next")
(NEWLINE)
(DEDENT)
(ID "sys")
(PUNCT ".")
(ID "last_type")
(PUNCT "=")
(ID "typ")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "last_value")
(PUNCT "=")
(ID "val")
(NEWLINE)
(ID "item")
(PUNCT "=")
(ID "StackViewer")
(PUNCT ".")
(ID "StackTreeItem")
(PUNCT "(")
(ID "flist")
(PUNCT ",")
(ID "tb")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "RemoteObjectBrowser")
(PUNCT ".")
(ID "remote_object_tree_item")
(PUNCT "(")
(ID "item")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "capture_warnings")
(PUNCT "(")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ENDMARKER)
