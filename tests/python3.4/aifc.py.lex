(LIT "Stuff to parse AIFF-C and AIFF files.\n\nUnless explicitly stated otherwise, the description below is true\nboth for AIFF-C files and AIFF files.\n\nAn AIFF-C file has the following structure.\n\n  +-----------------+\n  | FORM            |\n  +-----------------+\n  | <size>          |\n  +----+------------+\n  |    | AIFC       |\n  |    +------------+\n  |    | <chunks>   |\n  |    |    .       |\n  |    |    .       |\n  |    |    .       |\n  +----+------------+\n\nAn AIFF file has the string \"AIFF\" instead of \"AIFC\".\n\nA chunk consists of an identifier (4 bytes) followed by a size (4 bytes,\nbig endian order), followed by the data.  The size field does not include\nthe size of the 8 byte header.\n\nThe following chunk types are recognized.\n\n  FVER\n      <version number of AIFF-C defining document> (AIFF-C only).\n  MARK\n      <# of markers> (2 bytes)\n      list of markers:\n          <marker ID> (2 bytes, must be > 0)\n          <position> (4 bytes)\n          <marker name> (\"pstring\")\n  COMM\n      <# of channels> (2 bytes)\n      <# of sound frames> (4 bytes)\n      <size of the samples> (2 bytes)\n      <sampling frequency> (10 bytes, IEEE 80-bit extended\n          floating point)\n      in AIFF-C files only:\n      <compression type> (4 bytes)\n      <human-readable version of compression type> (\"pstring\")\n  SSND\n      <offset> (4 bytes, not used by this program)\n      <blocksize> (4 bytes, not used by this program)\n      <sound data>\n\nA pstring consists of 1 byte length, a string of characters, and 0 or 1\nbyte pad to make the total length even.\n\nUsage.\n\nReading AIFF files:\n  f = aifc.open(file, 'r')\nwhere file is either the name of a file or an open file pointer.\nThe open file pointer must have methods read(), seek(), and close().\nIn some types of audio files, if the setpos() method is not used,\nthe seek() method is not necessary.\n\nThis returns an instance of a class with the following public methods:\n  getnchannels()  -- returns number of audio channels (1 for\n             mono, 2 for stereo)\n  getsampwidth()  -- returns sample width in bytes\n  getframerate()  -- returns sampling frequency\n  getnframes()    -- returns number of audio frames\n  getcomptype()   -- returns compression type ('NONE' for AIFF files)\n  getcompname()   -- returns human-readable version of\n             compression type ('not compressed' for AIFF files)\n  getparams() -- returns a namedtuple consisting of all of the\n             above in the above order\n  getmarkers()    -- get the list of marks in the audio file or None\n             if there are no marks\n  getmark(id) -- get mark with the specified id (raises an error\n             if the mark does not exist)\n  readframes(n)   -- returns at most n frames of audio\n  rewind()    -- rewind to the beginning of the audio stream\n  setpos(pos) -- seek to the specified position\n  tell()      -- return the current position\n  close()     -- close the instance (make it unusable)\nThe position returned by tell(), the position given to setpos() and\nthe position of marks are all compatible and have nothing to do with\nthe actual position in the file.\nThe close() method is called automatically when the class instance\nis destroyed.\n\nWriting AIFF files:\n  f = aifc.open(file, 'w')\nwhere file is either the name of a file or an open file pointer.\nThe open file pointer must have methods write(), tell(), seek(), and\nclose().\n\nThis returns an instance of a class with the following public methods:\n  aiff()      -- create an AIFF file (AIFF-C default)\n  aifc()      -- create an AIFF-C file\n  setnchannels(n) -- set the number of channels\n  setsampwidth(n) -- set the sample width\n  setframerate(n) -- set the frame rate\n  setnframes(n)   -- set the number of frames\n  setcomptype(type, name)\n          -- set the compression type and the\n             human-readable compression type\n  setparams(tuple)\n          -- set all parameters at once\n  setmark(id, pos, name)\n          -- add specified mark to the list of marks\n  tell()      -- return current position in output file (useful\n             in combination with setmark())\n  writeframesraw(data)\n          -- write audio frames without pathing up the\n             file header\n  writeframes(data)\n          -- write audio frames and patch up the file header\n  close()     -- patch up the file header and close the\n             output file\nYou should set the parameters before the first writeframesraw or\nwriteframes.  The total number of frames does not need to be set,\nbut when it is set to the correct value, the header does not have to\nbe patched up.\nIt is best to first set all parameters, perhaps possibly the\ncompression type, and then write audio frames using writeframesraw.\nWhen all frames have been written, either call writeframes('') or\nclose() to patch up the sizes in the header.\nMarks can be added anytime.  If there are any marks, you must call\nclose() after all frames have been written.\nThe close() method is called automatically when the class instance\nis destroyed.\n\nWhen a file is opened with the extension '.aiff', an AIFF file is\nwritten, otherwise an AIFF-C file is written.  This default can be\nchanged by calling aiff() or aifc() before the first writeframes or\nwriteframesraw.\n")
(NEWLINE)
(KEYWORD import)
(ID "struct")
(NEWLINE)
(KEYWORD import)
(ID "builtins")
(NEWLINE)
(KEYWORD import)
(ID "warnings")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "Error")
(PUNCT ",")
(LIT "open")
(PUNCT ",")
(LIT "openfp")
(PUNCT "]")
(NEWLINE)
(KEYWORD class)
(ID "Error")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(ID "_AIFC_version")
(PUNCT "=")
(LIT 2726318400)
(NEWLINE)
(KEYWORD def)
(ID "_read_long")
(PUNCT "(")
(ID "file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "struct")
(PUNCT ".")
(ID "unpack")
(PUNCT "(")
(LIT ">l")
(PUNCT ",")
(ID "file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 4)
(PUNCT ")")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "struct")
(PUNCT ".")
(ID "error")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "EOFError")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_read_ulong")
(PUNCT "(")
(ID "file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "struct")
(PUNCT ".")
(ID "unpack")
(PUNCT "(")
(LIT ">L")
(PUNCT ",")
(ID "file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 4)
(PUNCT ")")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "struct")
(PUNCT ".")
(ID "error")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "EOFError")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_read_short")
(PUNCT "(")
(ID "file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "struct")
(PUNCT ".")
(ID "unpack")
(PUNCT "(")
(LIT ">h")
(PUNCT ",")
(ID "file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 2)
(PUNCT ")")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "struct")
(PUNCT ".")
(ID "error")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "EOFError")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_read_ushort")
(PUNCT "(")
(ID "file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "struct")
(PUNCT ".")
(ID "unpack")
(PUNCT "(")
(LIT ">H")
(PUNCT ",")
(ID "file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 2)
(PUNCT ")")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "struct")
(PUNCT ".")
(ID "error")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "EOFError")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_read_string")
(PUNCT "(")
(ID "file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "length")
(PUNCT "=")
(ID "ord")
(PUNCT "(")
(ID "file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "length")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(LIT #"")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "length")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "length")
(PUNCT "&")
(LIT 1)
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dummy")
(PUNCT "=")
(ID "file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "data")
(NEWLINE)
(DEDENT)
(ID "_HUGE_VAL")
(PUNCT "=")
(LIT 1.79769313486231e+308)
(NEWLINE)
(KEYWORD def)
(ID "_read_float")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "expon")
(PUNCT "=")
(ID "_read_short")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(ID "sign")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "expon")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sign")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(ID "expon")
(PUNCT "=")
(ID "expon")
(PUNCT "+")
(LIT 32768)
(NEWLINE)
(DEDENT)
(ID "himant")
(PUNCT "=")
(ID "_read_ulong")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(ID "lomant")
(PUNCT "=")
(ID "_read_ulong")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "expon")
(PUNCT "==")
(ID "himant")
(PUNCT "==")
(ID "lomant")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(LIT 0.0)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "expon")
(PUNCT "==")
(LIT 32767)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "_HUGE_VAL")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "expon")
(PUNCT "=")
(ID "expon")
(PUNCT "-")
(LIT 16383)
(NEWLINE)
(ID "f")
(PUNCT "=")
(PUNCT "(")
(ID "himant")
(PUNCT "*")
(LIT 4294967296)
(PUNCT "+")
(ID "lomant")
(PUNCT ")")
(PUNCT "*")
(ID "pow")
(PUNCT "(")
(LIT 2.0)
(PUNCT ",")
(ID "expon")
(PUNCT "-")
(LIT 63)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "sign")
(PUNCT "*")
(ID "f")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_write_short")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "struct")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(LIT ">h")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_write_ushort")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "struct")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(LIT ">H")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_write_long")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "struct")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(LIT ">l")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_write_ulong")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "struct")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(LIT ">L")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_write_string")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ">")
(LIT 255)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "string exceeds maximum pstring length")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "struct")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(LIT "B")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT "&")
(LIT 1)
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"\0")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_write_float")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "math")
(NEWLINE)
(KEYWORD if)
(ID "x")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sign")
(PUNCT "=")
(LIT 32768)
(NEWLINE)
(ID "x")
(PUNCT "=")
(ID "x")
(PUNCT "*")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sign")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "x")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "expon")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "himant")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "lomant")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fmant")
(PUNCT ",")
(ID "expon")
(PUNCT "=")
(ID "math")
(PUNCT ".")
(ID "frexp")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "expon")
(PUNCT ">")
(LIT 16384)
(KEYWORD or)
(ID "fmant")
(PUNCT ">=")
(LIT 1)
(KEYWORD or)
(ID "fmant")
(PUNCT "!=")
(ID "fmant")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "expon")
(PUNCT "=")
(ID "sign")
(PUNCT "|")
(LIT 32767)
(NEWLINE)
(ID "himant")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "lomant")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "expon")
(PUNCT "=")
(ID "expon")
(PUNCT "+")
(LIT 16382)
(NEWLINE)
(KEYWORD if)
(ID "expon")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fmant")
(PUNCT "=")
(ID "math")
(PUNCT ".")
(ID "ldexp")
(PUNCT "(")
(ID "fmant")
(PUNCT ",")
(ID "expon")
(PUNCT ")")
(NEWLINE)
(ID "expon")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(ID "expon")
(PUNCT "=")
(ID "expon")
(PUNCT "|")
(ID "sign")
(NEWLINE)
(ID "fmant")
(PUNCT "=")
(ID "math")
(PUNCT ".")
(ID "ldexp")
(PUNCT "(")
(ID "fmant")
(PUNCT ",")
(LIT 32)
(PUNCT ")")
(NEWLINE)
(ID "fsmant")
(PUNCT "=")
(ID "math")
(PUNCT ".")
(ID "floor")
(PUNCT "(")
(ID "fmant")
(PUNCT ")")
(NEWLINE)
(ID "himant")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "fsmant")
(PUNCT ")")
(NEWLINE)
(ID "fmant")
(PUNCT "=")
(ID "math")
(PUNCT ".")
(ID "ldexp")
(PUNCT "(")
(ID "fmant")
(PUNCT "-")
(ID "fsmant")
(PUNCT ",")
(LIT 32)
(PUNCT ")")
(NEWLINE)
(ID "fsmant")
(PUNCT "=")
(ID "math")
(PUNCT ".")
(ID "floor")
(PUNCT "(")
(ID "fmant")
(PUNCT ")")
(NEWLINE)
(ID "lomant")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "fsmant")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "_write_ushort")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "expon")
(PUNCT ")")
(NEWLINE)
(ID "_write_ulong")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "himant")
(PUNCT ")")
(NEWLINE)
(ID "_write_ulong")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "lomant")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD from)
(ID "chunk")
(KEYWORD import)
(ID "Chunk")
(NEWLINE)
(KEYWORD from)
(ID "collections")
(KEYWORD import)
(ID "namedtuple")
(NEWLINE)
(ID "_aifc_params")
(PUNCT "=")
(ID "namedtuple")
(PUNCT "(")
(LIT "_aifc_params")
(PUNCT ",")
(LIT "nchannels sampwidth framerate nframes comptype compname")
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "Aifc_read")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "initfp")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_version")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_convert")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_soundpos")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT "=")
(ID "file")
(NEWLINE)
(ID "chunk")
(PUNCT "=")
(ID "Chunk")
(PUNCT "(")
(ID "file")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "chunk")
(PUNCT ".")
(ID "getname")
(PUNCT "(")
(PUNCT ")")
(PUNCT "!=")
(LIT #"FORM")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "file does not start with FORM id")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "formdata")
(PUNCT "=")
(ID "chunk")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 4)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "formdata")
(PUNCT "==")
(LIT #"AIFF")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_aifc")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "formdata")
(PUNCT "==")
(LIT #"AIFC")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_aifc")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "not an AIFF or AIFF-C file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_comm_chunk_read")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_ssnd_seek_needed")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "chunk")
(PUNCT "=")
(ID "Chunk")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "EOFError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "chunkname")
(PUNCT "=")
(ID "chunk")
(PUNCT ".")
(ID "getname")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "chunkname")
(PUNCT "==")
(LIT #"COMM")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_read_comm_chunk")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_comm_chunk_read")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "chunkname")
(PUNCT "==")
(LIT #"SSND")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_ssnd_chunk")
(PUNCT "=")
(ID "chunk")
(NEWLINE)
(ID "dummy")
(PUNCT "=")
(ID "chunk")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 8)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_ssnd_seek_needed")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "chunkname")
(PUNCT "==")
(LIT #"FVER")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_version")
(PUNCT "=")
(ID "_read_ulong")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "chunkname")
(PUNCT "==")
(LIT #"MARK")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_readmark")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "chunk")
(PUNCT ".")
(ID "skip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_comm_chunk_read")
(KEYWORD or)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_ssnd_chunk")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "COMM chunk and/or SSND chunk missing")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "builtins")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "initfp")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__enter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__exit__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getfp")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_file")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "rewind")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_ssnd_seek_needed")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_soundpos")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tell")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_soundpos")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getnchannels")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getnframes")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_nframes")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getsampwidth")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getframerate")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_framerate")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getcomptype")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getcompname")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_compname")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getparams")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_aifc_params")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "getnchannels")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "getsampwidth")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "getframerate")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "getnframes")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "getcomptype")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "getcompname")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getmarkers")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_markers")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getmark")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "id")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "marker")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "id")
(PUNCT "==")
(ID "marker")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "marker")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "marker {0!r} does not exist")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "id")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setpos")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "pos")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "pos")
(PUNCT "<")
(LIT 0)
(KEYWORD or)
(ID "pos")
(PUNCT ">")
(ID "self")
(PUNCT ".")
(ID "_nframes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "position not in range")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_soundpos")
(PUNCT "=")
(ID "pos")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_ssnd_seek_needed")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "readframes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "nframes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_ssnd_seek_needed")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_ssnd_chunk")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "dummy")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_ssnd_chunk")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 8)
(PUNCT ")")
(NEWLINE)
(ID "pos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_soundpos")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_framesize")
(NEWLINE)
(KEYWORD if)
(ID "pos")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_ssnd_chunk")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "pos")
(PUNCT "+")
(LIT 8)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_ssnd_seek_needed")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "nframes")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT #"")
(NEWLINE)
(DEDENT)
(ID "data")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_ssnd_chunk")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "nframes")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_framesize")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_convert")
(KEYWORD and)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_convert")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_soundpos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_soundpos")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT "//")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "data")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_alaw2lin")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "audioop")
(NEWLINE)
(KEYWORD return)
(ID "audioop")
(PUNCT ".")
(ID "alaw2lin")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_ulaw2lin")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "audioop")
(NEWLINE)
(KEYWORD return)
(ID "audioop")
(PUNCT ".")
(ID "ulaw2lin")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_adpcm2lin")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "audioop")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "_adpcmstate")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_adpcmstate")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "data")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_adpcmstate")
(PUNCT "=")
(ID "audioop")
(PUNCT ".")
(ID "adpcm2lin")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(LIT 2)
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_adpcmstate")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "data")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_read_comm_chunk")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "chunk")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(PUNCT "=")
(ID "_read_short")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_nframes")
(PUNCT "=")
(ID "_read_long")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(PUNCT "=")
(PUNCT "(")
(ID "_read_short")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(PUNCT "+")
(LIT 7)
(PUNCT ")")
(PUNCT "//")
(LIT 8)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_framerate")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "_read_float")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_framesize")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_aifc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kludge")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "chunk")
(PUNCT ".")
(ID "chunksize")
(PUNCT "==")
(LIT 18)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kludge")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "Warning: bad COMM chunk size")
(PUNCT ")")
(NEWLINE)
(ID "chunk")
(PUNCT ".")
(ID "chunksize")
(PUNCT "=")
(LIT 23)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(PUNCT "=")
(ID "chunk")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 4)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "kludge")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "length")
(PUNCT "=")
(ID "ord")
(PUNCT "(")
(ID "chunk")
(PUNCT ".")
(ID "file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "length")
(PUNCT "&")
(LIT 1)
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "length")
(PUNCT "=")
(ID "length")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "chunk")
(PUNCT ".")
(ID "chunksize")
(PUNCT "=")
(ID "chunk")
(PUNCT ".")
(ID "chunksize")
(PUNCT "+")
(ID "length")
(NEWLINE)
(ID "chunk")
(PUNCT ".")
(ID "file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(PUNCT "-")
(LIT 1)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_compname")
(PUNCT "=")
(ID "_read_string")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(PUNCT "!=")
(LIT #"NONE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(PUNCT "==")
(LIT #"G722")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_convert")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_adpcm2lin")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(KEYWORD in)
(PUNCT "(")
(LIT #"ulaw")
(PUNCT ",")
(LIT #"ULAW")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_convert")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_ulaw2lin")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(KEYWORD in)
(PUNCT "(")
(LIT #"alaw")
(PUNCT ",")
(LIT #"ALAW")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_convert")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_alaw2lin")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "unsupported compression type")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(PUNCT "=")
(LIT 2)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(PUNCT "=")
(LIT #"NONE")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_compname")
(PUNCT "=")
(LIT #"not compressed")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_readmark")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "chunk")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nmarkers")
(PUNCT "=")
(ID "_read_short")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "nmarkers")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "id")
(PUNCT "=")
(ID "_read_short")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(ID "pos")
(PUNCT "=")
(ID "_read_long")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(ID "name")
(PUNCT "=")
(ID "_read_string")
(PUNCT "(")
(ID "chunk")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "pos")
(KEYWORD or)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "id")
(PUNCT ",")
(ID "pos")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "EOFError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "w")
(PUNCT "=")
(PUNCT "(")
(LIT "Warning: MARK chunk contains only %s marker%s instead of %s")
(PUNCT "%")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT ")")
(PUNCT ",")
(LIT "")
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(KEYWORD else)
(LIT "s")
(PUNCT ",")
(ID "nmarkers")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(ID "w")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Aifc_write")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(ID "f")
(NEWLINE)
(ID "f")
(PUNCT "=")
(ID "builtins")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(LIT "wb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(LIT "???")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "initfp")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "filename")
(PUNCT "[")
(PUNCT "-")
(LIT 5)
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(LIT ".aiff")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_aifc")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_aifc")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "initfp")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT "=")
(ID "file")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_version")
(PUNCT "=")
(ID "_AIFC_version")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(PUNCT "=")
(LIT #"NONE")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_compname")
(PUNCT "=")
(LIT #"not compressed")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_convert")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_framerate")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_nframes")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_datawritten")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_marklength")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_aifc")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__del__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__enter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__exit__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "aiff")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "cannot change parameters after starting to write")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_aifc")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "aifc")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "cannot change parameters after starting to write")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_aifc")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setnchannels")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "nchannels")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "cannot change parameters after starting to write")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "nchannels")
(PUNCT "<")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "bad # of channels")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(PUNCT "=")
(ID "nchannels")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getnchannels")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "number of channels not set")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setsampwidth")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sampwidth")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "cannot change parameters after starting to write")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "sampwidth")
(PUNCT "<")
(LIT 1)
(KEYWORD or)
(ID "sampwidth")
(PUNCT ">")
(LIT 4)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "bad sample width")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(PUNCT "=")
(ID "sampwidth")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getsampwidth")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "sample width not set")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setframerate")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "framerate")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "cannot change parameters after starting to write")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "framerate")
(PUNCT "<=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "bad frame rate")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_framerate")
(PUNCT "=")
(ID "framerate")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getframerate")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_framerate")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "frame rate not set")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_framerate")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setnframes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "nframes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "cannot change parameters after starting to write")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_nframes")
(PUNCT "=")
(ID "nframes")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getnframes")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setcomptype")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "comptype")
(PUNCT ",")
(ID "compname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "cannot change parameters after starting to write")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "comptype")
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(LIT #"NONE")
(PUNCT ",")
(LIT #"ulaw")
(PUNCT ",")
(LIT #"ULAW")
(PUNCT ",")
(LIT #"alaw")
(PUNCT ",")
(LIT #"ALAW")
(PUNCT ",")
(LIT #"G722")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "unsupported compression type")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(PUNCT "=")
(ID "comptype")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_compname")
(PUNCT "=")
(ID "compname")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getcomptype")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getcompname")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_compname")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setparams")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "params")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nchannels")
(PUNCT ",")
(ID "sampwidth")
(PUNCT ",")
(ID "framerate")
(PUNCT ",")
(ID "nframes")
(PUNCT ",")
(ID "comptype")
(PUNCT ",")
(ID "compname")
(PUNCT "=")
(ID "params")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "cannot change parameters after starting to write")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "comptype")
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(LIT #"NONE")
(PUNCT ",")
(LIT #"ulaw")
(PUNCT ",")
(LIT #"ULAW")
(PUNCT ",")
(LIT #"alaw")
(PUNCT ",")
(LIT #"ALAW")
(PUNCT ",")
(LIT #"G722")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "unsupported compression type")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "setnchannels")
(PUNCT "(")
(ID "nchannels")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "setsampwidth")
(PUNCT "(")
(ID "sampwidth")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "setframerate")
(PUNCT "(")
(ID "framerate")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "setnframes")
(PUNCT "(")
(ID "nframes")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "setcomptype")
(PUNCT "(")
(ID "comptype")
(PUNCT ",")
(ID "compname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getparams")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(KEYWORD or)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(KEYWORD or)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_framerate")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "not all parameters set")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_aifc_params")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_framerate")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_nframes")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_comptype")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_compname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setmark")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "id")
(PUNCT ",")
(ID "pos")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "id")
(PUNCT "<=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "marker ID must be > 0")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "pos")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "marker position must be >= 0")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "bytes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "marker name must be bytes")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "id")
(PUNCT "==")
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT "=")
(ID "id")
(PUNCT ",")
(ID "pos")
(PUNCT ",")
(ID "name")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "id")
(PUNCT ",")
(ID "pos")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getmark")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "id")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "marker")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "id")
(PUNCT "==")
(ID "marker")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "marker")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "marker {0!r} does not exist")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "id")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getmarkers")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_markers")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tell")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "writeframesraw")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(PUNCT "(")
(ID "bytes")
(PUNCT ",")
(ID "bytearray")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "memoryview")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ".")
(ID "cast")
(PUNCT "(")
(LIT "B")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_ensure_header_written")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "nframes")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT "//")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_convert")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_convert")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT "+")
(ID "nframes")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_datawritten")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_datawritten")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "writeframes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "writeframesraw")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT "!=")
(ID "self")
(PUNCT ".")
(ID "_nframes")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "!=")
(ID "self")
(PUNCT ".")
(ID "_datawritten")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_patchheader")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_file")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_ensure_header_written")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_datawritten")
(PUNCT "&")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"\0")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_datawritten")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_datawritten")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_writemarkers")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT "!=")
(ID "self")
(PUNCT ".")
(ID "_nframes")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "!=")
(ID "self")
(PUNCT ".")
(ID "_datawritten")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "_marklength")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_patchheader")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_convert")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "f")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_lin2alaw")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "audioop")
(NEWLINE)
(KEYWORD return)
(ID "audioop")
(PUNCT ".")
(ID "lin2alaw")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_lin2ulaw")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "audioop")
(NEWLINE)
(KEYWORD return)
(ID "audioop")
(PUNCT ".")
(ID "lin2ulaw")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_lin2adpcm")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "audioop")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "_adpcmstate")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_adpcmstate")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "data")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_adpcmstate")
(PUNCT "=")
(ID "audioop")
(PUNCT ".")
(ID "lin2adpcm")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(LIT 2)
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_adpcmstate")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "data")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_ensure_header_written")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "datasize")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(KEYWORD in)
(PUNCT "(")
(LIT #"ULAW")
(PUNCT ",")
(LIT #"ulaw")
(PUNCT ",")
(LIT #"ALAW")
(PUNCT ",")
(LIT #"alaw")
(PUNCT ",")
(LIT #"G722")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(PUNCT "=")
(LIT 2)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(PUNCT "!=")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "sample width must be 2 when compressing ")
(LIT "with ulaw/ULAW, alaw/ALAW or G7.22 (ADPCM)")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "# channels not specified")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "sample width not specified")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_framerate")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "sampling rate not specified")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_write_header")
(PUNCT "(")
(ID "datasize")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_init_compression")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(PUNCT "==")
(LIT #"G722")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_convert")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_lin2adpcm")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(KEYWORD in)
(PUNCT "(")
(LIT #"ulaw")
(PUNCT ",")
(LIT #"ULAW")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_convert")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_lin2ulaw")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(KEYWORD in)
(PUNCT "(")
(LIT #"alaw")
(PUNCT ",")
(LIT #"ALAW")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_convert")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_lin2alaw")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_write_header")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "initlength")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_aifc")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(PUNCT "!=")
(LIT #"NONE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_init_compression")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"FORM")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_nframes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_nframes")
(PUNCT "=")
(ID "initlength")
(PUNCT "//")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_nframes")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "&")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_aifc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(KEYWORD in)
(PUNCT "(")
(LIT #"ulaw")
(PUNCT ",")
(LIT #"ULAW")
(PUNCT ",")
(LIT #"alaw")
(PUNCT ",")
(LIT #"ALAW")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "//")
(LIT 2)
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "&")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(PUNCT "==")
(LIT #"G722")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "+")
(LIT 3)
(PUNCT ")")
(PUNCT "//")
(LIT 4)
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "&")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_form_length_pos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "AttributeError")
(PUNCT ",")
(ID "OSError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_form_length_pos")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "commlength")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_write_form_length")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_aifc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"AIFC")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"FVER")
(PUNCT ")")
(NEWLINE)
(ID "_write_ulong")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(LIT 4)
(PUNCT ")")
(NEWLINE)
(ID "_write_ulong")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_version")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"AIFF")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"COMM")
(PUNCT ")")
(NEWLINE)
(ID "_write_ulong")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "commlength")
(PUNCT ")")
(NEWLINE)
(ID "_write_short")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_nchannels")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_form_length_pos")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_nframes_pos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "_write_ulong")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_nframes")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_comptype")
(KEYWORD in)
(PUNCT "(")
(LIT #"ULAW")
(PUNCT ",")
(LIT #"ulaw")
(PUNCT ",")
(LIT #"ALAW")
(PUNCT ",")
(LIT #"alaw")
(PUNCT ",")
(LIT #"G722")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_write_short")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(LIT 8)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_write_short")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_sampwidth")
(PUNCT "*")
(LIT 8)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "_write_float")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_framerate")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_aifc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_comptype")
(PUNCT ")")
(NEWLINE)
(ID "_write_string")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_compname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"SSND")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_form_length_pos")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_ssnd_length_pos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "_write_ulong")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "+")
(LIT 8)
(PUNCT ")")
(NEWLINE)
(ID "_write_ulong")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "_write_ulong")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_write_form_length")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "datalength")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_aifc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "commlength")
(PUNCT "=")
(LIT 18)
(PUNCT "+")
(LIT 5)
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_compname")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "commlength")
(PUNCT "&")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "commlength")
(PUNCT "=")
(ID "commlength")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "verslength")
(PUNCT "=")
(LIT 12)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "commlength")
(PUNCT "=")
(LIT 18)
(NEWLINE)
(ID "verslength")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(ID "_write_ulong")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(LIT 4)
(PUNCT "+")
(ID "verslength")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "_marklength")
(PUNCT "+")
(LIT 8)
(PUNCT "+")
(ID "commlength")
(PUNCT "+")
(LIT 16)
(PUNCT "+")
(ID "datalength")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "commlength")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_patchheader")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "curpos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_datawritten")
(PUNCT "&")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "datalength")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_datawritten")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"\0")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "datalength")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_datawritten")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "datalength")
(PUNCT "==")
(ID "self")
(PUNCT ".")
(ID "_datalength")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_nframes")
(PUNCT "==")
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_marklength")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "curpos")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_form_length_pos")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "dummy")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_write_form_length")
(PUNCT "(")
(ID "datalength")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_nframes_pos")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "_write_ulong")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_ssnd_length_pos")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "_write_ulong")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "datalength")
(PUNCT "+")
(LIT 8)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "curpos")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_nframes")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_nframeswritten")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_datalength")
(PUNCT "=")
(ID "datalength")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_writemarkers")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"MARK")
(PUNCT ")")
(NEWLINE)
(ID "length")
(PUNCT "=")
(LIT 2)
(NEWLINE)
(KEYWORD for)
(ID "marker")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "id")
(PUNCT ",")
(ID "pos")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(ID "marker")
(NEWLINE)
(ID "length")
(PUNCT "=")
(ID "length")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(PUNCT "+")
(LIT 6)
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT "&")
(LIT 1)
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "length")
(PUNCT "=")
(ID "length")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "_write_ulong")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "length")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_marklength")
(PUNCT "=")
(ID "length")
(PUNCT "+")
(LIT 8)
(NEWLINE)
(ID "_write_short")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "marker")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_markers")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "id")
(PUNCT ",")
(ID "pos")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(ID "marker")
(NEWLINE)
(ID "_write_short")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "id")
(PUNCT ")")
(NEWLINE)
(ID "_write_ulong")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "pos")
(PUNCT ")")
(NEWLINE)
(ID "_write_string")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "open")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "mode")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "mode")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(LIT "mode")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mode")
(PUNCT "=")
(ID "f")
(PUNCT ".")
(ID "mode")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mode")
(PUNCT "=")
(LIT "rb")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "mode")
(KEYWORD in)
(PUNCT "(")
(LIT "r")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "Aifc_read")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "mode")
(KEYWORD in)
(PUNCT "(")
(LIT "w")
(PUNCT ",")
(LIT "wb")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "Aifc_write")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "mode must be 'r', 'rb', 'w', or 'wb'")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "openfp")
(PUNCT "=")
(ID "open")
(NEWLINE)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "/usr/demos/data/audio/bach.aiff")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "fn")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "fn")
(PUNCT ",")
(LIT "r")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Reading")
(PUNCT ",")
(ID "fn")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "nchannels =")
(PUNCT ",")
(ID "f")
(PUNCT ".")
(ID "getnchannels")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "nframes   =")
(PUNCT ",")
(ID "f")
(PUNCT ".")
(ID "getnframes")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "sampwidth =")
(PUNCT ",")
(ID "f")
(PUNCT ".")
(ID "getsampwidth")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "framerate =")
(PUNCT ",")
(ID "f")
(PUNCT ".")
(ID "getframerate")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "comptype  =")
(PUNCT ",")
(ID "f")
(PUNCT ".")
(ID "getcomptype")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "compname  =")
(PUNCT ",")
(ID "f")
(PUNCT ".")
(ID "getcompname")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "gn")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Writing")
(PUNCT ",")
(ID "gn")
(PUNCT ")")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "gn")
(PUNCT ",")
(LIT "w")
(PUNCT ")")
(KEYWORD as)
(ID "g")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "g")
(PUNCT ".")
(ID "setparams")
(PUNCT "(")
(ID "f")
(PUNCT ".")
(ID "getparams")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "f")
(PUNCT ".")
(ID "readframes")
(PUNCT "(")
(LIT 1024)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "g")
(PUNCT ".")
(ID "writeframes")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "print")
(PUNCT "(")
(LIT "Done.")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ENDMARKER)
