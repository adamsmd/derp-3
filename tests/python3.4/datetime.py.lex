(LIT "Concrete date/time and related types.\n\nSee http://www.iana.org/time-zones/repository/tz-link.html for\ntime zone and DST data sources.\n")
(NEWLINE)
(KEYWORD import)
(ID "time")
(KEYWORD as)
(ID "_time")
(NEWLINE)
(KEYWORD import)
(ID "math")
(KEYWORD as)
(ID "_math")
(NEWLINE)
(KEYWORD def)
(ID "_cmp")
(PUNCT "(")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 0)
(KEYWORD if)
(ID "x")
(PUNCT "==")
(ID "y")
(KEYWORD else)
(LIT 1)
(KEYWORD if)
(ID "x")
(PUNCT ">")
(ID "y")
(KEYWORD else)
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "MINYEAR")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "MAXYEAR")
(PUNCT "=")
(LIT 9999)
(NEWLINE)
(ID "_MAXORDINAL")
(PUNCT "=")
(LIT 3652059)
(NEWLINE)
(ID "_DAYS_IN_MONTH")
(PUNCT "=")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT ",")
(LIT 31)
(PUNCT ",")
(LIT 28)
(PUNCT ",")
(LIT 31)
(PUNCT ",")
(LIT 30)
(PUNCT ",")
(LIT 31)
(PUNCT ",")
(LIT 30)
(PUNCT ",")
(LIT 31)
(PUNCT ",")
(LIT 31)
(PUNCT ",")
(LIT 30)
(PUNCT ",")
(LIT 31)
(PUNCT ",")
(LIT 30)
(PUNCT ",")
(LIT 31)
(PUNCT "]")
(NEWLINE)
(ID "_DAYS_BEFORE_MONTH")
(PUNCT "=")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "dbm")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD for)
(ID "dim")
(KEYWORD in)
(ID "_DAYS_IN_MONTH")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_DAYS_BEFORE_MONTH")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "dbm")
(PUNCT ")")
(NEWLINE)
(ID "dbm")
(PUNCT "+=")
(ID "dim")
(NEWLINE)
(DEDENT)
(KEYWORD del)
(ID "dbm")
(PUNCT ",")
(ID "dim")
(NEWLINE)
(KEYWORD def)
(ID "_is_leap")
(PUNCT "(")
(ID "year")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "year -> 1 if leap year, else 0.")
(NEWLINE)
(KEYWORD return)
(ID "year")
(PUNCT "%")
(LIT 4)
(PUNCT "==")
(LIT 0)
(KEYWORD and)
(PUNCT "(")
(ID "year")
(PUNCT "%")
(LIT 100)
(PUNCT "!=")
(LIT 0)
(KEYWORD or)
(ID "year")
(PUNCT "%")
(LIT 400)
(PUNCT "==")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_days_before_year")
(PUNCT "(")
(ID "year")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "year -> number of days before January 1st of year.")
(NEWLINE)
(ID "y")
(PUNCT "=")
(ID "year")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(KEYWORD return)
(ID "y")
(PUNCT "*")
(LIT 365)
(PUNCT "+")
(ID "y")
(PUNCT "//")
(LIT 4)
(PUNCT "-")
(ID "y")
(PUNCT "//")
(LIT 100)
(PUNCT "+")
(ID "y")
(PUNCT "//")
(LIT 400)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_days_in_month")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "year, month -> number of days in that month in that year.")
(NEWLINE)
(KEYWORD assert)
(LIT 1)
(PUNCT "<=")
(ID "month")
(PUNCT "<=")
(LIT 12)
(PUNCT ",")
(ID "month")
(NEWLINE)
(KEYWORD if)
(ID "month")
(PUNCT "==")
(LIT 2)
(KEYWORD and)
(ID "_is_leap")
(PUNCT "(")
(ID "year")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 29)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_DAYS_IN_MONTH")
(PUNCT "[")
(ID "month")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_days_before_month")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "year, month -> number of days in year preceding first day of month.")
(NEWLINE)
(KEYWORD assert)
(LIT 1)
(PUNCT "<=")
(ID "month")
(PUNCT "<=")
(LIT 12)
(PUNCT ",")
(LIT "month must be in 1..12")
(NEWLINE)
(KEYWORD return)
(ID "_DAYS_BEFORE_MONTH")
(PUNCT "[")
(ID "month")
(PUNCT "]")
(PUNCT "+")
(PUNCT "(")
(ID "month")
(PUNCT ">")
(LIT 2)
(KEYWORD and)
(ID "_is_leap")
(PUNCT "(")
(ID "year")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_ymd2ord")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(ID "day")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "year, month, day -> ordinal, considering 01-Jan-0001 as day 1.")
(NEWLINE)
(KEYWORD assert)
(LIT 1)
(PUNCT "<=")
(ID "month")
(PUNCT "<=")
(LIT 12)
(PUNCT ",")
(LIT "month must be in 1..12")
(NEWLINE)
(ID "dim")
(PUNCT "=")
(ID "_days_in_month")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(LIT 1)
(PUNCT "<=")
(ID "day")
(PUNCT "<=")
(ID "dim")
(PUNCT ",")
(PUNCT "(")
(LIT "day must be in 1..%d")
(PUNCT "%")
(ID "dim")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID "_days_before_year")
(PUNCT "(")
(ID "year")
(PUNCT ")")
(PUNCT "+")
(ID "_days_before_month")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(PUNCT "+")
(ID "day")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "_DI400Y")
(PUNCT "=")
(ID "_days_before_year")
(PUNCT "(")
(LIT 401)
(PUNCT ")")
(NEWLINE)
(ID "_DI100Y")
(PUNCT "=")
(ID "_days_before_year")
(PUNCT "(")
(LIT 101)
(PUNCT ")")
(NEWLINE)
(ID "_DI4Y")
(PUNCT "=")
(ID "_days_before_year")
(PUNCT "(")
(LIT 5)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "_DI4Y")
(PUNCT "==")
(LIT 4)
(PUNCT "*")
(LIT 365)
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD assert)
(ID "_DI400Y")
(PUNCT "==")
(LIT 4)
(PUNCT "*")
(ID "_DI100Y")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD assert)
(ID "_DI100Y")
(PUNCT "==")
(LIT 25)
(PUNCT "*")
(ID "_DI4Y")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(KEYWORD def)
(ID "_ord2ymd")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "ordinal -> (year, month, day), considering 01-Jan-0001 as day 1.")
(NEWLINE)
(ID "n")
(PUNCT "-=")
(LIT 1)
(NEWLINE)
(ID "n400")
(PUNCT ",")
(ID "n")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "n")
(PUNCT ",")
(ID "_DI400Y")
(PUNCT ")")
(NEWLINE)
(ID "year")
(PUNCT "=")
(ID "n400")
(PUNCT "*")
(LIT 400)
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "n100")
(PUNCT ",")
(ID "n")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "n")
(PUNCT ",")
(ID "_DI100Y")
(PUNCT ")")
(NEWLINE)
(ID "n4")
(PUNCT ",")
(ID "n")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "n")
(PUNCT ",")
(ID "_DI4Y")
(PUNCT ")")
(NEWLINE)
(ID "n1")
(PUNCT ",")
(ID "n")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "n")
(PUNCT ",")
(LIT 365)
(PUNCT ")")
(NEWLINE)
(ID "year")
(PUNCT "+=")
(ID "n100")
(PUNCT "*")
(LIT 100)
(PUNCT "+")
(ID "n4")
(PUNCT "*")
(LIT 4)
(PUNCT "+")
(ID "n1")
(NEWLINE)
(KEYWORD if)
(ID "n1")
(PUNCT "==")
(LIT 4)
(KEYWORD or)
(ID "n100")
(PUNCT "==")
(LIT 4)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "n")
(PUNCT "==")
(LIT 0)
(NEWLINE)
(KEYWORD return)
(ID "year")
(PUNCT "-")
(LIT 1)
(PUNCT ",")
(LIT 12)
(PUNCT ",")
(LIT 31)
(NEWLINE)
(DEDENT)
(ID "leapyear")
(PUNCT "=")
(ID "n1")
(PUNCT "==")
(LIT 3)
(KEYWORD and)
(PUNCT "(")
(ID "n4")
(PUNCT "!=")
(LIT 24)
(KEYWORD or)
(ID "n100")
(PUNCT "==")
(LIT 3)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "leapyear")
(PUNCT "==")
(ID "_is_leap")
(PUNCT "(")
(ID "year")
(PUNCT ")")
(NEWLINE)
(ID "month")
(PUNCT "=")
(PUNCT "(")
(ID "n")
(PUNCT "+")
(LIT 50)
(PUNCT ")")
(PUNCT ">>")
(LIT 5)
(NEWLINE)
(ID "preceding")
(PUNCT "=")
(ID "_DAYS_BEFORE_MONTH")
(PUNCT "[")
(ID "month")
(PUNCT "]")
(PUNCT "+")
(PUNCT "(")
(ID "month")
(PUNCT ">")
(LIT 2)
(KEYWORD and)
(ID "leapyear")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "preceding")
(PUNCT ">")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "month")
(PUNCT "-=")
(LIT 1)
(NEWLINE)
(ID "preceding")
(PUNCT "-=")
(ID "_DAYS_IN_MONTH")
(PUNCT "[")
(ID "month")
(PUNCT "]")
(PUNCT "+")
(PUNCT "(")
(ID "month")
(PUNCT "==")
(LIT 2)
(KEYWORD and)
(ID "leapyear")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "n")
(PUNCT "-=")
(ID "preceding")
(NEWLINE)
(KEYWORD assert)
(LIT 0)
(PUNCT "<=")
(ID "n")
(PUNCT "<")
(ID "_days_in_month")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(ID "n")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "_MONTHNAMES")
(PUNCT "=")
(PUNCT "[")
(KEYWORD None)
(PUNCT ",")
(LIT "Jan")
(PUNCT ",")
(LIT "Feb")
(PUNCT ",")
(LIT "Mar")
(PUNCT ",")
(LIT "Apr")
(PUNCT ",")
(LIT "May")
(PUNCT ",")
(LIT "Jun")
(PUNCT ",")
(LIT "Jul")
(PUNCT ",")
(LIT "Aug")
(PUNCT ",")
(LIT "Sep")
(PUNCT ",")
(LIT "Oct")
(PUNCT ",")
(LIT "Nov")
(PUNCT ",")
(LIT "Dec")
(PUNCT "]")
(NEWLINE)
(ID "_DAYNAMES")
(PUNCT "=")
(PUNCT "[")
(KEYWORD None)
(PUNCT ",")
(LIT "Mon")
(PUNCT ",")
(LIT "Tue")
(PUNCT ",")
(LIT "Wed")
(PUNCT ",")
(LIT "Thu")
(PUNCT ",")
(LIT "Fri")
(PUNCT ",")
(LIT "Sat")
(PUNCT ",")
(LIT "Sun")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "_build_struct_time")
(PUNCT "(")
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT ",")
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT ",")
(ID "ss")
(PUNCT ",")
(ID "dstflag")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "wday")
(PUNCT "=")
(PUNCT "(")
(ID "_ymd2ord")
(PUNCT "(")
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT ")")
(PUNCT "+")
(LIT 6)
(PUNCT ")")
(PUNCT "%")
(LIT 7)
(NEWLINE)
(ID "dnum")
(PUNCT "=")
(ID "_days_before_month")
(PUNCT "(")
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(PUNCT "+")
(ID "d")
(NEWLINE)
(KEYWORD return)
(ID "_time")
(PUNCT ".")
(ID "struct_time")
(PUNCT "(")
(PUNCT "(")
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT ",")
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT ",")
(ID "ss")
(PUNCT ",")
(ID "wday")
(PUNCT ",")
(ID "dnum")
(PUNCT ",")
(ID "dstflag")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_format_time")
(PUNCT "(")
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT ",")
(ID "ss")
(PUNCT ",")
(ID "us")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(LIT "%02d:%02d:%02d")
(PUNCT "%")
(PUNCT "(")
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT ",")
(ID "ss")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "us")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "+=")
(LIT ".%06d")
(PUNCT "%")
(ID "us")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_wrap_strftime")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(ID "format")
(PUNCT ",")
(ID "timetuple")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "freplace")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "zreplace")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "Zreplace")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "newformat")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "push")
(PUNCT "=")
(ID "newformat")
(PUNCT ".")
(ID "append")
(NEWLINE)
(ID "i")
(PUNCT ",")
(ID "n")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "format")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "i")
(PUNCT "<")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ch")
(PUNCT "=")
(ID "format")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(ID "i")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "ch")
(PUNCT "==")
(LIT "%")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "i")
(PUNCT "<")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ch")
(PUNCT "=")
(ID "format")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(ID "i")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "ch")
(PUNCT "==")
(LIT "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "freplace")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "freplace")
(PUNCT "=")
(LIT "%06d")
(PUNCT "%")
(ID "getattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(LIT "microsecond")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "newformat")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "freplace")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "ch")
(PUNCT "==")
(LIT "z")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "zreplace")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "zreplace")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(LIT "utcoffset")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "offset")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "offset")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sign")
(PUNCT "=")
(LIT "+")
(NEWLINE)
(KEYWORD if)
(ID "offset")
(PUNCT ".")
(ID "days")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "offset")
(PUNCT "=")
(PUNCT "-")
(ID "offset")
(NEWLINE)
(ID "sign")
(PUNCT "=")
(LIT "-")
(NEWLINE)
(DEDENT)
(ID "h")
(PUNCT ",")
(ID "m")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "offset")
(PUNCT ",")
(ID "timedelta")
(PUNCT "(")
(ID "hours")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(KEYWORD not)
(ID "m")
(PUNCT "%")
(ID "timedelta")
(PUNCT "(")
(ID "minutes")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(LIT "whole minute")
(NEWLINE)
(ID "m")
(PUNCT "//=")
(ID "timedelta")
(PUNCT "(")
(ID "minutes")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "zreplace")
(PUNCT "=")
(LIT "%c%02d%02d")
(PUNCT "%")
(PUNCT "(")
(ID "sign")
(PUNCT ",")
(ID "h")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD assert)
(LIT "%")
(KEYWORD not)
(KEYWORD in)
(ID "zreplace")
(NEWLINE)
(ID "newformat")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "zreplace")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "ch")
(PUNCT "==")
(LIT "Z")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "Zreplace")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "Zreplace")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "object")
(PUNCT ",")
(LIT "tzname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "tzname")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "s")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "Zreplace")
(PUNCT "=")
(ID "s")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "%")
(PUNCT ",")
(LIT "%%")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "newformat")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "Zreplace")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(LIT "%")
(PUNCT ")")
(NEWLINE)
(ID "push")
(PUNCT "(")
(ID "ch")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(LIT "%")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push")
(PUNCT "(")
(ID "ch")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "newformat")
(PUNCT "=")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "newformat")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "_time")
(PUNCT ".")
(ID "strftime")
(PUNCT "(")
(ID "newformat")
(PUNCT ",")
(ID "timetuple")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_call_tzinfo_method")
(PUNCT "(")
(ID "tzinfo")
(PUNCT ",")
(ID "methname")
(PUNCT ",")
(ID "tzinfoarg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "tzinfo")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "getattr")
(PUNCT "(")
(ID "tzinfo")
(PUNCT ",")
(ID "methname")
(PUNCT ")")
(PUNCT "(")
(ID "tzinfoarg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_check_tzname")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "tzinfo.tzname() must return None or string, ")
(LIT "not '%s'")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_check_utc_offset")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "offset")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "name")
(KEYWORD in)
(PUNCT "(")
(LIT "utcoffset")
(PUNCT ",")
(LIT "dst")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "offset")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "offset")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "tzinfo.%s() must return None ")
(LIT "or timedelta, not '%s'")
(PUNCT "%")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "type")
(PUNCT "(")
(ID "offset")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "offset")
(PUNCT "%")
(ID "timedelta")
(PUNCT "(")
(ID "minutes")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(KEYWORD or)
(ID "offset")
(PUNCT ".")
(ID "microseconds")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "tzinfo.%s() must return a whole number ")
(LIT "of minutes, got %s")
(PUNCT "%")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "offset")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "-")
(ID "timedelta")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(PUNCT "<")
(ID "offset")
(PUNCT "<")
(ID "timedelta")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "%s()=%s, must be must be strictly between")
(LIT " -timedelta(hours=24) and timedelta(hours=24)")
(PUNCT "%")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "offset")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_check_date_fields")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(ID "day")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "int expected")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "MINYEAR")
(PUNCT "<=")
(ID "year")
(PUNCT "<=")
(ID "MAXYEAR")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "year must be in %d..%d")
(PUNCT "%")
(PUNCT "(")
(ID "MINYEAR")
(PUNCT ",")
(ID "MAXYEAR")
(PUNCT ")")
(PUNCT ",")
(ID "year")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(LIT 1)
(PUNCT "<=")
(ID "month")
(PUNCT "<=")
(LIT 12)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "month must be in 1..12")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "dim")
(PUNCT "=")
(ID "_days_in_month")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(LIT 1)
(PUNCT "<=")
(ID "day")
(PUNCT "<=")
(ID "dim")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "day must be in 1..%d")
(PUNCT "%")
(ID "dim")
(PUNCT ",")
(ID "day")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_check_time_fields")
(PUNCT "(")
(ID "hour")
(PUNCT ",")
(ID "minute")
(PUNCT ",")
(ID "second")
(PUNCT ",")
(ID "microsecond")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "hour")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "int expected")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(LIT 0)
(PUNCT "<=")
(ID "hour")
(PUNCT "<=")
(LIT 23)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "hour must be in 0..23")
(PUNCT ",")
(ID "hour")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(LIT 0)
(PUNCT "<=")
(ID "minute")
(PUNCT "<=")
(LIT 59)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "minute must be in 0..59")
(PUNCT ",")
(ID "minute")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(LIT 0)
(PUNCT "<=")
(ID "second")
(PUNCT "<=")
(LIT 59)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "second must be in 0..59")
(PUNCT ",")
(ID "second")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(LIT 0)
(PUNCT "<=")
(ID "microsecond")
(PUNCT "<=")
(LIT 999999)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "microsecond must be in 0..999999")
(PUNCT ",")
(ID "microsecond")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_check_tzinfo_arg")
(PUNCT "(")
(ID "tz")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "tz")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "tz")
(PUNCT ",")
(ID "tzinfo")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "tzinfo argument must be None or of a tzinfo subclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_cmperror")
(PUNCT "(")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "can't compare '%s' to '%s'")
(PUNCT "%")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "type")
(PUNCT "(")
(ID "y")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "timedelta")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Represent the difference between two datetime objects.\n\n    Supported operators:\n\n    - add, subtract timedelta\n    - unary plus, minus, abs\n    - compare to timedelta\n    - multiply, divide by int\n\n    In addition, datetime supports subtraction of two datetime objects\n    returning a timedelta, and addition or subtraction of a datetime\n    and a timedelta giving a datetime.\n\n    Representation: (days, seconds, microseconds).  Why?  Because I\n    felt like it.\n    ")
(NEWLINE)
(ID "__slots__")
(PUNCT "=")
(LIT "_days")
(PUNCT ",")
(LIT "_seconds")
(PUNCT ",")
(LIT "_microseconds")
(NEWLINE)
(KEYWORD def)
(ID "__new__")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "days")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "seconds")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "microseconds")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "milliseconds")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "minutes")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "hours")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "weeks")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "d")
(PUNCT "=")
(ID "s")
(PUNCT "=")
(ID "us")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "days")
(PUNCT "+=")
(ID "weeks")
(PUNCT "*")
(LIT 7)
(NEWLINE)
(ID "seconds")
(PUNCT "+=")
(ID "minutes")
(PUNCT "*")
(LIT 60)
(PUNCT "+")
(ID "hours")
(PUNCT "*")
(LIT 3600)
(NEWLINE)
(ID "microseconds")
(PUNCT "+=")
(ID "milliseconds")
(PUNCT "*")
(LIT 1000)
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "days")
(PUNCT ",")
(ID "float")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dayfrac")
(PUNCT ",")
(ID "days")
(PUNCT "=")
(ID "_math")
(PUNCT ".")
(ID "modf")
(PUNCT "(")
(ID "days")
(PUNCT ")")
(NEWLINE)
(ID "daysecondsfrac")
(PUNCT ",")
(ID "daysecondswhole")
(PUNCT "=")
(ID "_math")
(PUNCT ".")
(ID "modf")
(PUNCT "(")
(ID "dayfrac")
(PUNCT "*")
(PUNCT "(")
(LIT 24.0)
(PUNCT "*")
(LIT 3600.0)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "daysecondswhole")
(PUNCT "==")
(ID "int")
(PUNCT "(")
(ID "daysecondswhole")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "daysecondswhole")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "days")
(PUNCT "==")
(ID "int")
(PUNCT "(")
(ID "days")
(PUNCT ")")
(NEWLINE)
(ID "d")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "days")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "daysecondsfrac")
(PUNCT "=")
(LIT 0.0)
(NEWLINE)
(ID "d")
(PUNCT "=")
(ID "days")
(NEWLINE)
(DEDENT)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "daysecondsfrac")
(PUNCT ",")
(ID "float")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "abs")
(PUNCT "(")
(ID "daysecondsfrac")
(PUNCT ")")
(PUNCT "<=")
(LIT 1.0)
(NEWLINE)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "d")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "abs")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT "<=")
(LIT 24)
(PUNCT "*")
(LIT 3600)
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "seconds")
(PUNCT ",")
(ID "float")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "secondsfrac")
(PUNCT ",")
(ID "seconds")
(PUNCT "=")
(ID "_math")
(PUNCT ".")
(ID "modf")
(PUNCT "(")
(ID "seconds")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "seconds")
(PUNCT "==")
(ID "int")
(PUNCT "(")
(ID "seconds")
(PUNCT ")")
(NEWLINE)
(ID "seconds")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "seconds")
(PUNCT ")")
(NEWLINE)
(ID "secondsfrac")
(PUNCT "+=")
(ID "daysecondsfrac")
(NEWLINE)
(KEYWORD assert)
(ID "abs")
(PUNCT "(")
(ID "secondsfrac")
(PUNCT ")")
(PUNCT "<=")
(LIT 2.0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "secondsfrac")
(PUNCT "=")
(ID "daysecondsfrac")
(NEWLINE)
(DEDENT)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "secondsfrac")
(PUNCT ",")
(ID "float")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "abs")
(PUNCT "(")
(ID "secondsfrac")
(PUNCT ")")
(PUNCT "<=")
(LIT 2.0)
(NEWLINE)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "seconds")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(NEWLINE)
(ID "days")
(PUNCT ",")
(ID "seconds")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "seconds")
(PUNCT ",")
(LIT 24)
(PUNCT "*")
(LIT 3600)
(PUNCT ")")
(NEWLINE)
(ID "d")
(PUNCT "+=")
(ID "days")
(NEWLINE)
(ID "s")
(PUNCT "+=")
(ID "int")
(PUNCT "(")
(ID "seconds")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "abs")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT "<=")
(LIT 2)
(PUNCT "*")
(LIT 24)
(PUNCT "*")
(LIT 3600)
(NEWLINE)
(ID "usdouble")
(PUNCT "=")
(ID "secondsfrac")
(PUNCT "*")
(LIT 1000000.0)
(NEWLINE)
(KEYWORD assert)
(ID "abs")
(PUNCT "(")
(ID "usdouble")
(PUNCT ")")
(PUNCT "<")
(LIT 2100000.0)
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "microseconds")
(PUNCT ",")
(ID "float")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "microseconds")
(PUNCT "+=")
(ID "usdouble")
(NEWLINE)
(ID "microseconds")
(PUNCT "=")
(ID "round")
(PUNCT "(")
(ID "microseconds")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "seconds")
(PUNCT ",")
(ID "microseconds")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "microseconds")
(PUNCT ",")
(LIT 1000000.0)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "microseconds")
(PUNCT "==")
(ID "int")
(PUNCT "(")
(ID "microseconds")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "seconds")
(PUNCT "==")
(ID "int")
(PUNCT "(")
(ID "seconds")
(PUNCT ")")
(NEWLINE)
(ID "days")
(PUNCT ",")
(ID "seconds")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "seconds")
(PUNCT ",")
(LIT 24.0)
(PUNCT "*")
(LIT 3600.0)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "days")
(PUNCT "==")
(ID "int")
(PUNCT "(")
(ID "days")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "seconds")
(PUNCT "==")
(ID "int")
(PUNCT "(")
(ID "seconds")
(PUNCT ")")
(NEWLINE)
(ID "d")
(PUNCT "+=")
(ID "int")
(PUNCT "(")
(ID "days")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "+=")
(ID "int")
(PUNCT "(")
(ID "seconds")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "abs")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT "<=")
(LIT 3)
(PUNCT "*")
(LIT 24)
(PUNCT "*")
(LIT 3600)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "seconds")
(PUNCT ",")
(ID "microseconds")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "microseconds")
(PUNCT ",")
(LIT 1000000)
(PUNCT ")")
(NEWLINE)
(ID "days")
(PUNCT ",")
(ID "seconds")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "seconds")
(PUNCT ",")
(LIT 24)
(PUNCT "*")
(LIT 3600)
(PUNCT ")")
(NEWLINE)
(ID "d")
(PUNCT "+=")
(ID "days")
(NEWLINE)
(ID "s")
(PUNCT "+=")
(ID "int")
(PUNCT "(")
(ID "seconds")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "abs")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT "<=")
(LIT 3)
(PUNCT "*")
(LIT 24)
(PUNCT "*")
(LIT 3600)
(NEWLINE)
(ID "microseconds")
(PUNCT "=")
(ID "float")
(PUNCT "(")
(ID "microseconds")
(PUNCT ")")
(NEWLINE)
(ID "microseconds")
(PUNCT "+=")
(ID "usdouble")
(NEWLINE)
(ID "microseconds")
(PUNCT "=")
(ID "round")
(PUNCT "(")
(ID "microseconds")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD assert)
(ID "abs")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT "<=")
(LIT 3)
(PUNCT "*")
(LIT 24)
(PUNCT "*")
(LIT 3600)
(NEWLINE)
(KEYWORD assert)
(ID "abs")
(PUNCT "(")
(ID "microseconds")
(PUNCT ")")
(PUNCT "<")
(LIT 3100000.0)
(NEWLINE)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "microseconds")
(PUNCT ",")
(ID "float")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "int")
(PUNCT "(")
(ID "microseconds")
(PUNCT ")")
(PUNCT "==")
(ID "microseconds")
(NEWLINE)
(ID "us")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "microseconds")
(PUNCT ")")
(NEWLINE)
(ID "seconds")
(PUNCT ",")
(ID "us")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "us")
(PUNCT ",")
(LIT 1000000)
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "+=")
(ID "seconds")
(NEWLINE)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(NEWLINE)
(ID "days")
(PUNCT ",")
(ID "s")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(LIT 24)
(PUNCT "*")
(LIT 3600)
(PUNCT ")")
(NEWLINE)
(ID "d")
(PUNCT "+=")
(ID "days")
(NEWLINE)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "d")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(KEYWORD and)
(LIT 0)
(PUNCT "<=")
(ID "s")
(PUNCT "<")
(LIT 24)
(PUNCT "*")
(LIT 3600)
(NEWLINE)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "us")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(KEYWORD and)
(LIT 0)
(PUNCT "<=")
(ID "us")
(PUNCT "<")
(LIT 1000000)
(NEWLINE)
(ID "self")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__new__")
(PUNCT "(")
(ID "cls")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT "=")
(ID "d")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_seconds")
(PUNCT "=")
(ID "s")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_microseconds")
(PUNCT "=")
(ID "us")
(NEWLINE)
(KEYWORD if)
(ID "abs")
(PUNCT "(")
(ID "d")
(PUNCT ")")
(PUNCT ">")
(LIT 999999999)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OverflowError")
(PUNCT "(")
(LIT "timedelta # of days is too large: %d")
(PUNCT "%")
(ID "d")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_microseconds")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "%s(%d, %d, %d)")
(PUNCT "%")
(PUNCT "(")
(LIT "datetime.")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_seconds")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_microseconds")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_seconds")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "%s(%d, %d)")
(PUNCT "%")
(PUNCT "(")
(LIT "datetime.")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_seconds")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "%s(%d)")
(PUNCT "%")
(PUNCT "(")
(LIT "datetime.")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__str__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mm")
(PUNCT ",")
(ID "ss")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_seconds")
(PUNCT ",")
(LIT 60)
(PUNCT ")")
(NEWLINE)
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "mm")
(PUNCT ",")
(LIT 60)
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(LIT "%d:%02d:%02d")
(PUNCT "%")
(PUNCT "(")
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT ",")
(ID "ss")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "plural")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "n")
(PUNCT ",")
(ID "abs")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(PUNCT "!=")
(LIT 1)
(KEYWORD and)
(LIT "s")
(KEYWORD or)
(LIT "")
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(PUNCT "(")
(LIT "%d day%s, ")
(PUNCT "%")
(ID "plural")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT ")")
(PUNCT ")")
(PUNCT "+")
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_microseconds")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "+")
(LIT ".%06d")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "_microseconds")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "total_seconds")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Total seconds in the duration.")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "days")
(PUNCT "*")
(LIT 86400)
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "seconds")
(PUNCT ")")
(PUNCT "*")
(LIT 10)
(PUNCT "**")
(LIT 6)
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "microseconds")
(PUNCT ")")
(PUNCT "/")
(LIT 10)
(PUNCT "**")
(LIT 6)
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "days")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "days")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_days")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "seconds")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "seconds")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_seconds")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "microseconds")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "microseconds")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_microseconds")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__add__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "timedelta")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT "+")
(ID "other")
(PUNCT ".")
(ID "_days")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_seconds")
(PUNCT "+")
(ID "other")
(PUNCT ".")
(ID "_seconds")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_microseconds")
(PUNCT "+")
(ID "other")
(PUNCT ".")
(ID "_microseconds")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(ID "__radd__")
(PUNCT "=")
(ID "__add__")
(NEWLINE)
(KEYWORD def)
(ID "__sub__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "timedelta")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT "-")
(ID "other")
(PUNCT ".")
(ID "_days")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_seconds")
(PUNCT "-")
(ID "other")
(PUNCT ".")
(ID "_seconds")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_microseconds")
(PUNCT "-")
(ID "other")
(PUNCT ".")
(ID "_microseconds")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__rsub__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "-")
(ID "self")
(PUNCT "+")
(ID "other")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__neg__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "timedelta")
(PUNCT "(")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT ",")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_seconds")
(PUNCT ",")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_microseconds")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__pos__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__abs__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "-")
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__mul__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "timedelta")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT "*")
(ID "other")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_seconds")
(PUNCT "*")
(ID "other")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_microseconds")
(PUNCT "*")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "float")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT "=")
(ID "other")
(PUNCT ".")
(ID "as_integer_ratio")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT "*")
(ID "a")
(PUNCT "/")
(ID "b")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(ID "__rmul__")
(PUNCT "=")
(ID "__mul__")
(NEWLINE)
(KEYWORD def)
(ID "_to_microseconds")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT "*")
(PUNCT "(")
(LIT 24)
(PUNCT "*")
(LIT 3600)
(PUNCT ")")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "_seconds")
(PUNCT ")")
(PUNCT "*")
(LIT 1000000)
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "_microseconds")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__floordiv__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(PUNCT "(")
(ID "int")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(ID "usec")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_to_microseconds")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "usec")
(PUNCT "//")
(ID "other")
(PUNCT ".")
(ID "_to_microseconds")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "timedelta")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "usec")
(PUNCT "//")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__truediv__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(PUNCT "(")
(ID "int")
(PUNCT ",")
(ID "float")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(ID "usec")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_to_microseconds")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "usec")
(PUNCT "/")
(ID "other")
(PUNCT ".")
(ID "_to_microseconds")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "timedelta")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "usec")
(PUNCT "/")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "float")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT "=")
(ID "other")
(PUNCT ".")
(ID "as_integer_ratio")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "timedelta")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "b")
(PUNCT "*")
(ID "usec")
(PUNCT "/")
(ID "a")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__mod__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "r")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_to_microseconds")
(PUNCT "(")
(PUNCT ")")
(PUNCT "%")
(ID "other")
(PUNCT ".")
(ID "_to_microseconds")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "timedelta")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "r")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__divmod__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "q")
(PUNCT ",")
(ID "r")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_to_microseconds")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_to_microseconds")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "q")
(PUNCT ",")
(ID "timedelta")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "r")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__eq__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__ne__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT "!=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__le__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT "<=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_cmperror")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__lt__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT "<")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_cmperror")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__ge__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT ">=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_cmperror")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__gt__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT ">")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_cmperror")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_cmp")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "_cmp")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_getstate")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_getstate")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__hash__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "hash")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_getstate")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__bool__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT "!=")
(LIT 0)
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "_seconds")
(PUNCT "!=")
(LIT 0)
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "_microseconds")
(PUNCT "!=")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_getstate")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_days")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_seconds")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_microseconds")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__reduce__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_getstate")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "timedelta")
(PUNCT ".")
(ID "min")
(PUNCT "=")
(ID "timedelta")
(PUNCT "(")
(PUNCT "-")
(LIT 999999999)
(PUNCT ")")
(NEWLINE)
(ID "timedelta")
(PUNCT ".")
(ID "max")
(PUNCT "=")
(ID "timedelta")
(PUNCT "(")
(ID "days")
(PUNCT "=")
(LIT 999999999)
(PUNCT ",")
(ID "hours")
(PUNCT "=")
(LIT 23)
(PUNCT ",")
(ID "minutes")
(PUNCT "=")
(LIT 59)
(PUNCT ",")
(ID "seconds")
(PUNCT "=")
(LIT 59)
(PUNCT ",")
(ID "microseconds")
(PUNCT "=")
(LIT 999999)
(PUNCT ")")
(NEWLINE)
(ID "timedelta")
(PUNCT ".")
(ID "resolution")
(PUNCT "=")
(ID "timedelta")
(PUNCT "(")
(ID "microseconds")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "date")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Concrete date type.\n\n    Constructors:\n\n    __new__()\n    fromtimestamp()\n    today()\n    fromordinal()\n\n    Operators:\n\n    __repr__, __str__\n    __cmp__, __hash__\n    __add__, __radd__, __sub__ (add/radd only with timedelta arg)\n\n    Methods:\n\n    timetuple()\n    toordinal()\n    weekday()\n    isoweekday(), isocalendar(), isoformat()\n    ctime()\n    strftime()\n\n    Properties (readonly):\n    year, month, day\n    ")
(NEWLINE)
(ID "__slots__")
(PUNCT "=")
(LIT "_year")
(PUNCT ",")
(LIT "_month")
(PUNCT ",")
(LIT "_day")
(NEWLINE)
(KEYWORD def)
(ID "__new__")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "day")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Constructor.\n\n        Arguments:\n\n        year, month, day (required, base 1)\n        ")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID "isinstance")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "bytes")
(PUNCT ")")
(KEYWORD and)
(ID "len")
(PUNCT "(")
(ID "year")
(PUNCT ")")
(PUNCT "==")
(LIT 4)
(KEYWORD and)
(LIT 1)
(PUNCT "<=")
(ID "year")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(PUNCT "<=")
(LIT 12)
(KEYWORD and)
(ID "month")
(KEYWORD is)
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__new__")
(PUNCT "(")
(ID "cls")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__setstate")
(PUNCT "(")
(ID "year")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(ID "_check_date_fields")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(ID "day")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__new__")
(PUNCT "(")
(ID "cls")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT "=")
(ID "year")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT "=")
(ID "month")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT "=")
(ID "day")
(NEWLINE)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "fromtimestamp")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "t")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Construct a date from a POSIX timestamp (like time.time()).")
(NEWLINE)
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT ",")
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT ",")
(ID "ss")
(PUNCT ",")
(ID "weekday")
(PUNCT ",")
(ID "jday")
(PUNCT ",")
(ID "dst")
(PUNCT "=")
(ID "_time")
(PUNCT ".")
(ID "localtime")
(PUNCT "(")
(ID "t")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "cls")
(PUNCT "(")
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "today")
(PUNCT "(")
(ID "cls")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Construct a date from time.time().")
(NEWLINE)
(ID "t")
(PUNCT "=")
(ID "_time")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "cls")
(PUNCT ".")
(ID "fromtimestamp")
(PUNCT "(")
(ID "t")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "fromordinal")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Contruct a date from a proleptic Gregorian ordinal.\n\n        January 1 of year 1 is day 1.  Only the year, month and day are\n        non-zero in the result.\n        ")
(NEWLINE)
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT "=")
(ID "_ord2ymd")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "cls")
(PUNCT "(")
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Convert to formal string, for repr().\n\n        >>> dt = datetime(2010, 1, 1)\n        >>> repr(dt)\n        'datetime.datetime(2010, 1, 1, 0, 0)'\n\n        >>> dt = datetime(2010, 1, 1, tzinfo=timezone.utc)\n        >>> repr(dt)\n        'datetime.datetime(2010, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)'\n        ")
(NEWLINE)
(KEYWORD return)
(LIT "%s(%d, %d, %d)")
(PUNCT "%")
(PUNCT "(")
(LIT "datetime.")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ctime")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return ctime() style string.")
(NEWLINE)
(ID "weekday")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "toordinal")
(PUNCT "(")
(PUNCT ")")
(PUNCT "%")
(LIT 7)
(KEYWORD or)
(LIT 7)
(NEWLINE)
(KEYWORD return)
(LIT "%s %s %2d 00:00:00 %04d")
(PUNCT "%")
(PUNCT "(")
(ID "_DAYNAMES")
(PUNCT "[")
(ID "weekday")
(PUNCT "]")
(PUNCT ",")
(ID "_MONTHNAMES")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT "]")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "strftime")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fmt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format using strftime().")
(NEWLINE)
(KEYWORD return)
(ID "_wrap_strftime")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fmt")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "timetuple")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__format__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fmt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "fmt")
(PUNCT ")")
(PUNCT "!=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "strftime")
(PUNCT "(")
(ID "fmt")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "str")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "isoformat")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the date formatted according to ISO.\n\n        This is 'YYYY-MM-DD'.\n\n        References:\n        - http://www.w3.org/TR/NOTE-datetime\n        - http://www.cl.cam.ac.uk/~mgk25/iso-time.html\n        ")
(NEWLINE)
(KEYWORD return)
(LIT "%04d-%02d-%02d")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "__str__")
(PUNCT "=")
(ID "isoformat")
(NEWLINE)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "year")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "year (1-9999)")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_year")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "month")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "month (1-12)")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_month")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "day")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "day (1-31)")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_day")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "timetuple")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return local time tuple compatible with time.localtime().")
(NEWLINE)
(KEYWORD return)
(ID "_build_struct_time")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "toordinal")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return proleptic Gregorian ordinal for the year, month and day.\n\n        January 1 of year 1 is day 1.  Only the year, month and day values\n        contribute to the result.\n        ")
(NEWLINE)
(KEYWORD return)
(ID "_ymd2ord")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "replace")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "year")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "month")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "day")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a new date with new values for the specified fields.")
(NEWLINE)
(KEYWORD if)
(ID "year")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "year")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_year")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "month")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "month")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_month")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "day")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "day")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_day")
(NEWLINE)
(DEDENT)
(ID "_check_date_fields")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(ID "day")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "date")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(ID "day")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__eq__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__ne__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT "!=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__le__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT "<=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__lt__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT "<")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__ge__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT ">=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__gt__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT ">")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_cmp")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(NEWLINE)
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(NEWLINE)
(ID "y2")
(PUNCT ",")
(ID "m2")
(PUNCT ",")
(ID "d2")
(PUNCT "=")
(ID "other")
(PUNCT ".")
(ID "_year")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_day")
(NEWLINE)
(KEYWORD return)
(ID "_cmp")
(PUNCT "(")
(PUNCT "(")
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(ID "y2")
(PUNCT ",")
(ID "m2")
(PUNCT ",")
(ID "d2")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__hash__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Hash.")
(NEWLINE)
(KEYWORD return)
(ID "hash")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_getstate")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__add__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Add a date to a timedelta.")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "o")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "toordinal")
(PUNCT "(")
(PUNCT ")")
(PUNCT "+")
(ID "other")
(PUNCT ".")
(ID "days")
(NEWLINE)
(KEYWORD if)
(LIT 0)
(PUNCT "<")
(ID "o")
(PUNCT "<=")
(ID "_MAXORDINAL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "date")
(PUNCT ".")
(ID "fromordinal")
(PUNCT "(")
(ID "o")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "OverflowError")
(PUNCT "(")
(LIT "result out of range")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(ID "__radd__")
(PUNCT "=")
(ID "__add__")
(NEWLINE)
(KEYWORD def)
(ID "__sub__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Subtract two dates, or a date and a timedelta.")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT "+")
(ID "timedelta")
(PUNCT "(")
(PUNCT "-")
(ID "other")
(PUNCT ".")
(ID "days")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "days1")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "toordinal")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "days2")
(PUNCT "=")
(ID "other")
(PUNCT ".")
(ID "toordinal")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "timedelta")
(PUNCT "(")
(ID "days1")
(PUNCT "-")
(ID "days2")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "weekday")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return day of the week, where Monday == 0 ... Sunday == 6.")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "toordinal")
(PUNCT "(")
(PUNCT ")")
(PUNCT "+")
(LIT 6)
(PUNCT ")")
(PUNCT "%")
(LIT 7)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "isoweekday")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return day of the week, where Monday == 1 ... Sunday == 7.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "toordinal")
(PUNCT "(")
(PUNCT ")")
(PUNCT "%")
(LIT 7)
(KEYWORD or)
(LIT 7)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "isocalendar")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a 3-tuple containing ISO year, week number, and weekday.\n\n        The first ISO week of the year is the (Mon-Sun) week\n        containing the year's first Thursday; everything else derives\n        from that.\n\n        The first week is 1; Monday is 1 ... Sunday is 7.\n\n        ISO calendar algorithm taken from\n        http://www.phys.uu.nl/~vgent/calendar/isocalendar.htm\n        ")
(NEWLINE)
(ID "year")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_year")
(NEWLINE)
(ID "week1monday")
(PUNCT "=")
(ID "_isoweek1monday")
(PUNCT "(")
(ID "year")
(PUNCT ")")
(NEWLINE)
(ID "today")
(PUNCT "=")
(ID "_ymd2ord")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT ")")
(NEWLINE)
(ID "week")
(PUNCT ",")
(ID "day")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "today")
(PUNCT "-")
(ID "week1monday")
(PUNCT ",")
(LIT 7)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "week")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "year")
(PUNCT "-=")
(LIT 1)
(NEWLINE)
(ID "week1monday")
(PUNCT "=")
(ID "_isoweek1monday")
(PUNCT "(")
(ID "year")
(PUNCT ")")
(NEWLINE)
(ID "week")
(PUNCT ",")
(ID "day")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "today")
(PUNCT "-")
(ID "week1monday")
(PUNCT ",")
(LIT 7)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "week")
(PUNCT ">=")
(LIT 52)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "today")
(PUNCT ">=")
(ID "_isoweek1monday")
(PUNCT "(")
(ID "year")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "year")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(ID "week")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "year")
(PUNCT ",")
(ID "week")
(PUNCT "+")
(LIT 1)
(PUNCT ",")
(ID "day")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_getstate")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "yhi")
(PUNCT ",")
(ID "ylo")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT ",")
(LIT 256)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "bytes")
(PUNCT "(")
(PUNCT "[")
(ID "yhi")
(PUNCT ",")
(ID "ylo")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__setstate")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "string")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "string")
(PUNCT ")")
(PUNCT "!=")
(LIT 4)
(KEYWORD or)
(KEYWORD not)
(PUNCT "(")
(LIT 1)
(PUNCT "<=")
(ID "string")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(PUNCT "<=")
(LIT 12)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "not enough arguments")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "yhi")
(PUNCT ",")
(ID "ylo")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT "=")
(ID "string")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT "=")
(ID "yhi")
(PUNCT "*")
(LIT 256)
(PUNCT "+")
(ID "ylo")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__reduce__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_getstate")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "_date_class")
(PUNCT "=")
(ID "date")
(NEWLINE)
(ID "date")
(PUNCT ".")
(ID "min")
(PUNCT "=")
(ID "date")
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(LIT 1)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "date")
(PUNCT ".")
(ID "max")
(PUNCT "=")
(ID "date")
(PUNCT "(")
(LIT 9999)
(PUNCT ",")
(LIT 12)
(PUNCT ",")
(LIT 31)
(PUNCT ")")
(NEWLINE)
(ID "date")
(PUNCT ".")
(ID "resolution")
(PUNCT "=")
(ID "timedelta")
(PUNCT "(")
(ID "days")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "tzinfo")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Abstract base class for time zone info classes.\n\n    Subclasses must override the name(), utcoffset() and dst() methods.\n    ")
(NEWLINE)
(ID "__slots__")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "tzname")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "datetime -> string name of time zone.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "tzinfo subclass must override tzname()")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "utcoffset")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "datetime -> minutes east of UTC (negative for west of UTC)")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "tzinfo subclass must override utcoffset()")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dst")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "datetime -> DST offset in minutes east of UTC.\n\n        Return 0 if DST not in effect.  utcoffset() must include the DST\n        offset.\n        ")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "tzinfo subclass must override dst()")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "fromutc")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "datetime in UTC -> datetime in local time.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "dt")
(PUNCT ",")
(ID "datetime")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "fromutc() requires a datetime argument")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "dt")
(PUNCT ".")
(ID "tzinfo")
(KEYWORD is)
(KEYWORD not)
(ID "self")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "dt.tzinfo is not self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "dtoff")
(PUNCT "=")
(ID "dt")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "dtoff")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "fromutc() requires a non-None utcoffset() ")
(LIT "result")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "dtdst")
(PUNCT "=")
(ID "dt")
(PUNCT ".")
(ID "dst")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "dtdst")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "fromutc() requires a non-None dst() result")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "delta")
(PUNCT "=")
(ID "dtoff")
(PUNCT "-")
(ID "dtdst")
(NEWLINE)
(KEYWORD if)
(ID "delta")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dt")
(PUNCT "+=")
(ID "delta")
(NEWLINE)
(ID "dtdst")
(PUNCT "=")
(ID "dt")
(PUNCT ".")
(ID "dst")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "dtdst")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "fromutc(): dt.dst gave inconsistent ")
(LIT "results; cannot convert")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "dt")
(PUNCT "+")
(ID "dtdst")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__reduce__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "getinitargs")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "__getinitargs__")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "getinitargs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(ID "getinitargs")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "getstate")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "__getstate__")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "getstate")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "state")
(PUNCT "=")
(ID "getstate")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "state")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "__dict__")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(KEYWORD or)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "state")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ",")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "state")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "_tzinfo_class")
(PUNCT "=")
(ID "tzinfo")
(NEWLINE)
(KEYWORD class)
(ID "time")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Time with time zone.\n\n    Constructors:\n\n    __new__()\n\n    Operators:\n\n    __repr__, __str__\n    __cmp__, __hash__\n\n    Methods:\n\n    strftime()\n    isoformat()\n    utcoffset()\n    tzname()\n    dst()\n\n    Properties (readonly):\n    hour, minute, second, microsecond, tzinfo\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__new__")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "hour")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "minute")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "second")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "microsecond")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "tzinfo")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Constructor.\n\n        Arguments:\n\n        hour, minute (required)\n        second, microsecond (default to zero)\n        tzinfo (default to None)\n        ")
(NEWLINE)
(ID "self")
(PUNCT "=")
(ID "object")
(PUNCT ".")
(ID "__new__")
(PUNCT "(")
(ID "cls")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "hour")
(PUNCT ",")
(ID "bytes")
(PUNCT ")")
(KEYWORD and)
(ID "len")
(PUNCT "(")
(ID "hour")
(PUNCT ")")
(PUNCT "==")
(LIT 6)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "__setstate")
(PUNCT "(")
(ID "hour")
(PUNCT ",")
(ID "minute")
(KEYWORD or)
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(ID "_check_tzinfo_arg")
(PUNCT "(")
(ID "tzinfo")
(PUNCT ")")
(NEWLINE)
(ID "_check_time_fields")
(PUNCT "(")
(ID "hour")
(PUNCT ",")
(ID "minute")
(PUNCT ",")
(ID "second")
(PUNCT ",")
(ID "microsecond")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT "=")
(ID "hour")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT "=")
(ID "minute")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT "=")
(ID "second")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT "=")
(ID "microsecond")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT "=")
(ID "tzinfo")
(NEWLINE)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "hour")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "hour (0-23)")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_hour")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "minute")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "minute (0-59)")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_minute")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "second")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "second (0-59)")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_second")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "microsecond")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "microsecond (0-999999)")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "tzinfo")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "timezone info object")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__eq__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "time")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "allow_mixed")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__ne__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "time")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "allow_mixed")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT "!=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__le__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "time")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT "<=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_cmperror")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__lt__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "time")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT "<")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_cmperror")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__ge__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "time")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT ">=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_cmperror")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__gt__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "time")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT ">")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_cmperror")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_cmp")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ",")
(ID "allow_mixed")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "time")
(PUNCT ")")
(NEWLINE)
(ID "mytz")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(NEWLINE)
(ID "ottz")
(PUNCT "=")
(ID "other")
(PUNCT ".")
(ID "_tzinfo")
(NEWLINE)
(ID "myoff")
(PUNCT "=")
(ID "otoff")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "mytz")
(KEYWORD is)
(ID "ottz")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "base_compare")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "myoff")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "otoff")
(PUNCT "=")
(ID "other")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "base_compare")
(PUNCT "=")
(ID "myoff")
(PUNCT "==")
(ID "otoff")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "base_compare")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_cmp")
(PUNCT "(")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(ID "other")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_microsecond")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "myoff")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID "otoff")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "allow_mixed")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 2)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "cannot compare naive and aware times")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "myhhmm")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT "*")
(LIT 60)
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT "-")
(ID "myoff")
(PUNCT "//")
(ID "timedelta")
(PUNCT "(")
(ID "minutes")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "othhmm")
(PUNCT "=")
(ID "other")
(PUNCT ".")
(ID "_hour")
(PUNCT "*")
(LIT 60)
(PUNCT "+")
(ID "other")
(PUNCT ".")
(ID "_minute")
(PUNCT "-")
(ID "otoff")
(PUNCT "//")
(ID "timedelta")
(PUNCT "(")
(ID "minutes")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "_cmp")
(PUNCT "(")
(PUNCT "(")
(ID "myhhmm")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(ID "othhmm")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_microsecond")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__hash__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Hash.")
(NEWLINE)
(ID "tzoff")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "tzoff")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "hash")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_getstate")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "h")
(PUNCT ",")
(ID "m")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "timedelta")
(PUNCT "(")
(ID "hours")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "hour")
(PUNCT ",")
(ID "minutes")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "minute")
(PUNCT ")")
(PUNCT "-")
(ID "tzoff")
(PUNCT ",")
(ID "timedelta")
(PUNCT "(")
(ID "hours")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(KEYWORD not)
(ID "m")
(PUNCT "%")
(ID "timedelta")
(PUNCT "(")
(ID "minutes")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(LIT "whole minute")
(NEWLINE)
(ID "m")
(PUNCT "//=")
(ID "timedelta")
(PUNCT "(")
(ID "minutes")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT 0)
(PUNCT "<=")
(ID "h")
(PUNCT "<")
(LIT 24)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "hash")
(PUNCT "(")
(ID "time")
(PUNCT "(")
(ID "h")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "second")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "microsecond")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "hash")
(PUNCT "(")
(PUNCT "(")
(ID "h")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "second")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "microsecond")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_tzstr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sep")
(PUNCT "=")
(LIT ":")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return formatted timezone offset (+xx:xx) or None.")
(NEWLINE)
(ID "off")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "off")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "off")
(PUNCT ".")
(ID "days")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sign")
(PUNCT "=")
(LIT "-")
(NEWLINE)
(ID "off")
(PUNCT "=")
(PUNCT "-")
(ID "off")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sign")
(PUNCT "=")
(LIT "+")
(NEWLINE)
(DEDENT)
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "off")
(PUNCT ",")
(ID "timedelta")
(PUNCT "(")
(ID "hours")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(KEYWORD not)
(ID "mm")
(PUNCT "%")
(ID "timedelta")
(PUNCT "(")
(ID "minutes")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(LIT "whole minute")
(NEWLINE)
(ID "mm")
(PUNCT "//=")
(ID "timedelta")
(PUNCT "(")
(ID "minutes")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(LIT 0)
(PUNCT "<=")
(ID "hh")
(PUNCT "<")
(LIT 24)
(NEWLINE)
(ID "off")
(PUNCT "=")
(LIT "%s%02d%s%02d")
(PUNCT "%")
(PUNCT "(")
(ID "sign")
(PUNCT ",")
(ID "hh")
(PUNCT ",")
(ID "sep")
(PUNCT ",")
(ID "mm")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "off")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Convert to formal string, for repr().")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT "!=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT ", %d, %d")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT "!=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT ", %d")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "_second")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(LIT "%s(%d, %d%s)")
(PUNCT "%")
(PUNCT "(")
(LIT "datetime.")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "s")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(LIT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "+")
(LIT ", tzinfo=%r")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT "+")
(LIT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "isoformat")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the time formatted according to ISO.\n\n        This is 'HH:MM:SS.mmmmmm+zz:zz', or 'HH:MM:SS+zz:zz' if\n        self.microsecond == 0.\n        ")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "_format_time")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT ")")
(NEWLINE)
(ID "tz")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_tzstr")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "tz")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "+=")
(ID "tz")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "s")
(NEWLINE)
(DEDENT)
(ID "__str__")
(PUNCT "=")
(ID "isoformat")
(NEWLINE)
(KEYWORD def)
(ID "strftime")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fmt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format using strftime().  The date part of the timestamp passed\n        to underlying strftime should not be used.\n        ")
(NEWLINE)
(ID "timetuple")
(PUNCT "=")
(PUNCT "(")
(LIT 1900)
(PUNCT ",")
(LIT 1)
(PUNCT ",")
(LIT 1)
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(LIT 1)
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "_wrap_strftime")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fmt")
(PUNCT ",")
(ID "timetuple")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__format__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fmt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "fmt")
(PUNCT ")")
(PUNCT "!=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "strftime")
(PUNCT "(")
(ID "fmt")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "str")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "utcoffset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the timezone offset in minutes east of UTC (negative west of\n        UTC).")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "offset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "_check_utc_offset")
(PUNCT "(")
(LIT "utcoffset")
(PUNCT ",")
(ID "offset")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "offset")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tzname")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the timezone name.\n\n        Note that the name is 100% informational -- there's no requirement that\n        it mean anything in particular. For example, \"GMT\", \"UTC\", \"-500\",\n        \"-5:00\", \"EDT\", \"US/Eastern\", \"America/New York\" are all valid replies.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "name")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT ".")
(ID "tzname")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "_check_tzname")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dst")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return 0 if DST is not in effect, or the DST offset (in minutes\n        eastward) if DST is in effect.\n\n        This is purely informational; the DST offset has already been added to\n        the UTC offset returned by utcoffset() if applicable, so there's no\n        need to consult dst() unless you're interested in displaying the DST\n        info.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "offset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT ".")
(ID "dst")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "_check_utc_offset")
(PUNCT "(")
(LIT "dst")
(PUNCT ",")
(ID "offset")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "offset")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "replace")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "hour")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "minute")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "second")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "microsecond")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "tzinfo")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a new time with new values for the specified fields.")
(NEWLINE)
(KEYWORD if)
(ID "hour")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hour")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "hour")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "minute")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "minute")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "minute")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "second")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "second")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "second")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "microsecond")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "microsecond")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "microsecond")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "tzinfo")
(KEYWORD is)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tzinfo")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tzinfo")
(NEWLINE)
(DEDENT)
(ID "_check_time_fields")
(PUNCT "(")
(ID "hour")
(PUNCT ",")
(ID "minute")
(PUNCT ",")
(ID "second")
(PUNCT ",")
(ID "microsecond")
(PUNCT ")")
(NEWLINE)
(ID "_check_tzinfo_arg")
(PUNCT "(")
(ID "tzinfo")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "time")
(PUNCT "(")
(ID "hour")
(PUNCT ",")
(ID "minute")
(PUNCT ",")
(ID "second")
(PUNCT ",")
(ID "microsecond")
(PUNCT ",")
(ID "tzinfo")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__bool__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "second")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "microsecond")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID "offset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID "timedelta")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "timedelta")
(PUNCT "(")
(ID "hours")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "hour")
(PUNCT ",")
(ID "minutes")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "minute")
(PUNCT ")")
(PUNCT "!=")
(ID "offset")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_getstate")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "us2")
(PUNCT ",")
(ID "us3")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT ",")
(LIT 256)
(PUNCT ")")
(NEWLINE)
(ID "us1")
(PUNCT ",")
(ID "us2")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "us2")
(PUNCT ",")
(LIT 256)
(PUNCT ")")
(NEWLINE)
(ID "basestate")
(PUNCT "=")
(ID "bytes")
(PUNCT "(")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "us1")
(PUNCT ",")
(ID "us2")
(PUNCT ",")
(ID "us3")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "basestate")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "basestate")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__setstate")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "string")
(PUNCT ",")
(ID "tzinfo")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "string")
(PUNCT ")")
(PUNCT "!=")
(LIT 6)
(KEYWORD or)
(ID "string")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ">=")
(LIT 24)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "an integer is required")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "us1")
(PUNCT ",")
(ID "us2")
(PUNCT ",")
(ID "us3")
(PUNCT ")")
(PUNCT "=")
(ID "string")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT "=")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(ID "us1")
(PUNCT "<<")
(LIT 8)
(PUNCT ")")
(PUNCT "|")
(ID "us2")
(PUNCT ")")
(PUNCT "<<")
(LIT 8)
(PUNCT ")")
(PUNCT "|")
(ID "us3")
(NEWLINE)
(KEYWORD if)
(ID "tzinfo")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID "isinstance")
(PUNCT "(")
(ID "tzinfo")
(PUNCT ",")
(ID "_tzinfo_class")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT "=")
(ID "tzinfo")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "bad tzinfo state arg %r")
(PUNCT "%")
(ID "tzinfo")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__reduce__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "time")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_getstate")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "_time_class")
(PUNCT "=")
(ID "time")
(NEWLINE)
(ID "time")
(PUNCT ".")
(ID "min")
(PUNCT "=")
(ID "time")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "time")
(PUNCT ".")
(ID "max")
(PUNCT "=")
(ID "time")
(PUNCT "(")
(LIT 23)
(PUNCT ",")
(LIT 59)
(PUNCT ",")
(LIT 59)
(PUNCT ",")
(LIT 999999)
(PUNCT ")")
(NEWLINE)
(ID "time")
(PUNCT ".")
(ID "resolution")
(PUNCT "=")
(ID "timedelta")
(PUNCT "(")
(ID "microseconds")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "datetime")
(PUNCT "(")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]])\n\n    The year, month and day arguments are required. tzinfo may be None, or an\n    instance of a tzinfo subclass. The remaining arguments may be ints.\n    ")
(NEWLINE)
(ID "__slots__")
(PUNCT "=")
(ID "date")
(PUNCT ".")
(ID "__slots__")
(PUNCT "+")
(PUNCT "(")
(LIT "_hour")
(PUNCT ",")
(LIT "_minute")
(PUNCT ",")
(LIT "_second")
(PUNCT ",")
(LIT "_microsecond")
(PUNCT ",")
(LIT "_tzinfo")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "__new__")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "day")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "hour")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "minute")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "second")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "microsecond")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "tzinfo")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "bytes")
(PUNCT ")")
(KEYWORD and)
(ID "len")
(PUNCT "(")
(ID "year")
(PUNCT ")")
(PUNCT "==")
(LIT 10)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT "=")
(ID "date")
(PUNCT ".")
(ID "__new__")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "year")
(PUNCT "[")
(PUNCT ":")
(LIT 4)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__setstate")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(ID "_check_tzinfo_arg")
(PUNCT "(")
(ID "tzinfo")
(PUNCT ")")
(NEWLINE)
(ID "_check_time_fields")
(PUNCT "(")
(ID "hour")
(PUNCT ",")
(ID "minute")
(PUNCT ",")
(ID "second")
(PUNCT ",")
(ID "microsecond")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT "=")
(ID "date")
(PUNCT ".")
(ID "__new__")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(ID "day")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT "=")
(ID "hour")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT "=")
(ID "minute")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT "=")
(ID "second")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT "=")
(ID "microsecond")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT "=")
(ID "tzinfo")
(NEWLINE)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "hour")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "hour (0-23)")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_hour")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "minute")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "minute (0-59)")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_minute")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "second")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "second (0-59)")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_second")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "microsecond")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "microsecond (0-999999)")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "tzinfo")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "timezone info object")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "fromtimestamp")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "t")
(PUNCT ",")
(ID "tz")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Construct a datetime from a POSIX timestamp (like time.time()).\n\n        A timezone info object may be passed in as well.\n        ")
(NEWLINE)
(ID "_check_tzinfo_arg")
(PUNCT "(")
(ID "tz")
(PUNCT ")")
(NEWLINE)
(ID "converter")
(PUNCT "=")
(ID "_time")
(PUNCT ".")
(ID "localtime")
(KEYWORD if)
(ID "tz")
(KEYWORD is)
(KEYWORD None)
(KEYWORD else)
(ID "_time")
(PUNCT ".")
(ID "gmtime")
(NEWLINE)
(ID "t")
(PUNCT ",")
(ID "frac")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "t")
(PUNCT ",")
(LIT 1.0)
(PUNCT ")")
(NEWLINE)
(ID "us")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "frac")
(PUNCT "*")
(LIT 1000000.0)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "us")
(PUNCT "==")
(LIT 1000000)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "t")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(ID "us")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT ",")
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT ",")
(ID "ss")
(PUNCT ",")
(ID "weekday")
(PUNCT ",")
(ID "jday")
(PUNCT ",")
(ID "dst")
(PUNCT "=")
(ID "converter")
(PUNCT "(")
(ID "t")
(PUNCT ")")
(NEWLINE)
(ID "ss")
(PUNCT "=")
(ID "min")
(PUNCT "(")
(ID "ss")
(PUNCT ",")
(LIT 59)
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "cls")
(PUNCT "(")
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT ",")
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT ",")
(ID "ss")
(PUNCT ",")
(ID "us")
(PUNCT ",")
(ID "tz")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "tz")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "tz")
(PUNCT ".")
(ID "fromutc")
(PUNCT "(")
(ID "result")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "utcfromtimestamp")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "t")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Construct a UTC datetime from a POSIX timestamp (like time.time()).")
(NEWLINE)
(ID "t")
(PUNCT ",")
(ID "frac")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "t")
(PUNCT ",")
(LIT 1.0)
(PUNCT ")")
(NEWLINE)
(ID "us")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "frac")
(PUNCT "*")
(LIT 1000000.0)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "us")
(PUNCT "==")
(LIT 1000000)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "t")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(ID "us")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT ",")
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT ",")
(ID "ss")
(PUNCT ",")
(ID "weekday")
(PUNCT ",")
(ID "jday")
(PUNCT ",")
(ID "dst")
(PUNCT "=")
(ID "_time")
(PUNCT ".")
(ID "gmtime")
(PUNCT "(")
(ID "t")
(PUNCT ")")
(NEWLINE)
(ID "ss")
(PUNCT "=")
(ID "min")
(PUNCT "(")
(ID "ss")
(PUNCT ",")
(LIT 59)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "cls")
(PUNCT "(")
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT ",")
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT ",")
(ID "ss")
(PUNCT ",")
(ID "us")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "now")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "tz")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Construct a datetime from time.time() and optional time zone info.")
(NEWLINE)
(ID "t")
(PUNCT "=")
(ID "_time")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "cls")
(PUNCT ".")
(ID "fromtimestamp")
(PUNCT "(")
(ID "t")
(PUNCT ",")
(ID "tz")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "utcnow")
(PUNCT "(")
(ID "cls")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Construct a UTC datetime from time.time().")
(NEWLINE)
(ID "t")
(PUNCT "=")
(ID "_time")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "cls")
(PUNCT ".")
(ID "utcfromtimestamp")
(PUNCT "(")
(ID "t")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "combine")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "date")
(PUNCT ",")
(ID "time")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Construct a datetime from a given date and a given time.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "date")
(PUNCT ",")
(ID "_date_class")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "date argument must be a date instance")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "time")
(PUNCT ",")
(ID "_time_class")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "time argument must be a time instance")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "cls")
(PUNCT "(")
(ID "date")
(PUNCT ".")
(ID "year")
(PUNCT ",")
(ID "date")
(PUNCT ".")
(ID "month")
(PUNCT ",")
(ID "date")
(PUNCT ".")
(ID "day")
(PUNCT ",")
(ID "time")
(PUNCT ".")
(ID "hour")
(PUNCT ",")
(ID "time")
(PUNCT ".")
(ID "minute")
(PUNCT ",")
(ID "time")
(PUNCT ".")
(ID "second")
(PUNCT ",")
(ID "time")
(PUNCT ".")
(ID "microsecond")
(PUNCT ",")
(ID "time")
(PUNCT ".")
(ID "tzinfo")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "timetuple")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return local time tuple compatible with time.localtime().")
(NEWLINE)
(ID "dst")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "dst")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "dst")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dst")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "dst")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dst")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dst")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_build_struct_time")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "year")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "day")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "second")
(PUNCT ",")
(ID "dst")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "timestamp")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return POSIX timestamp as float")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_time")
(PUNCT ".")
(ID "mktime")
(PUNCT "(")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "year")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "day")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "second")
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "microsecond")
(PUNCT "/")
(LIT 1000000.0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "self")
(PUNCT "-")
(ID "_EPOCH")
(PUNCT ")")
(PUNCT ".")
(ID "total_seconds")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "utctimetuple")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return UTC time tuple compatible with time.gmtime().")
(NEWLINE)
(ID "offset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "offset")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT "-=")
(ID "offset")
(NEWLINE)
(DEDENT)
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "year")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "day")
(NEWLINE)
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT ",")
(ID "ss")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "second")
(NEWLINE)
(KEYWORD return)
(ID "_build_struct_time")
(PUNCT "(")
(ID "y")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "d")
(PUNCT ",")
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT ",")
(ID "ss")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "date")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the date part.")
(NEWLINE)
(KEYWORD return)
(ID "date")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "time")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the time part, with tzinfo None.")
(NEWLINE)
(KEYWORD return)
(ID "time")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "second")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "microsecond")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "timetz")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the time part, with same tzinfo.")
(NEWLINE)
(KEYWORD return)
(ID "time")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "second")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "microsecond")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "replace")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "year")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "month")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "day")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "hour")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "minute")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "second")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "microsecond")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "tzinfo")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a new datetime with new values for the specified fields.")
(NEWLINE)
(KEYWORD if)
(ID "year")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "year")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "year")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "month")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "month")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "month")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "day")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "day")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "day")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "hour")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hour")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "hour")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "minute")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "minute")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "minute")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "second")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "second")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "second")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "microsecond")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "microsecond")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "microsecond")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "tzinfo")
(KEYWORD is)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tzinfo")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tzinfo")
(NEWLINE)
(DEDENT)
(ID "_check_date_fields")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(ID "day")
(PUNCT ")")
(NEWLINE)
(ID "_check_time_fields")
(PUNCT "(")
(ID "hour")
(PUNCT ",")
(ID "minute")
(PUNCT ",")
(ID "second")
(PUNCT ",")
(ID "microsecond")
(PUNCT ")")
(NEWLINE)
(ID "_check_tzinfo_arg")
(PUNCT "(")
(ID "tzinfo")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "datetime")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(ID "month")
(PUNCT ",")
(ID "day")
(PUNCT ",")
(ID "hour")
(PUNCT ",")
(ID "minute")
(PUNCT ",")
(ID "second")
(PUNCT ",")
(ID "microsecond")
(PUNCT ",")
(ID "tzinfo")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "astimezone")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "tz")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "tz")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "tzinfo")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "astimezone() requires an aware datetime")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "ts")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT "-")
(ID "_EPOCH")
(PUNCT ")")
(PUNCT "//")
(ID "timedelta")
(PUNCT "(")
(ID "seconds")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "localtm")
(PUNCT "=")
(ID "_time")
(PUNCT ".")
(ID "localtime")
(PUNCT "(")
(ID "ts")
(PUNCT ")")
(NEWLINE)
(ID "local")
(PUNCT "=")
(ID "datetime")
(PUNCT "(")
(PUNCT "*")
(ID "localtm")
(PUNCT "[")
(PUNCT ":")
(LIT 6)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "gmtoff")
(PUNCT "=")
(ID "localtm")
(PUNCT ".")
(ID "tm_gmtoff")
(NEWLINE)
(ID "zone")
(PUNCT "=")
(ID "localtm")
(PUNCT ".")
(ID "tm_zone")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "delta")
(PUNCT "=")
(ID "local")
(PUNCT "-")
(ID "datetime")
(PUNCT "(")
(PUNCT "*")
(ID "_time")
(PUNCT ".")
(ID "gmtime")
(PUNCT "(")
(ID "ts")
(PUNCT ")")
(PUNCT "[")
(PUNCT ":")
(LIT 6)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "dst")
(PUNCT "=")
(ID "_time")
(PUNCT ".")
(ID "daylight")
(KEYWORD and)
(ID "localtm")
(PUNCT ".")
(ID "tm_isdst")
(PUNCT ">")
(LIT 0)
(NEWLINE)
(ID "gmtoff")
(PUNCT "=")
(PUNCT "-")
(PUNCT "(")
(ID "_time")
(PUNCT ".")
(ID "altzone")
(KEYWORD if)
(ID "dst")
(KEYWORD else)
(ID "_time")
(PUNCT ".")
(ID "timezone")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "delta")
(PUNCT "==")
(ID "timedelta")
(PUNCT "(")
(ID "seconds")
(PUNCT "=")
(ID "gmtoff")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tz")
(PUNCT "=")
(ID "timezone")
(PUNCT "(")
(ID "delta")
(PUNCT ",")
(ID "_time")
(PUNCT ".")
(ID "tzname")
(PUNCT "[")
(ID "dst")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tz")
(PUNCT "=")
(ID "timezone")
(PUNCT "(")
(ID "delta")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tz")
(PUNCT "=")
(ID "timezone")
(PUNCT "(")
(ID "timedelta")
(PUNCT "(")
(ID "seconds")
(PUNCT "=")
(ID "gmtoff")
(PUNCT ")")
(PUNCT ",")
(ID "zone")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "tz")
(PUNCT ",")
(ID "tzinfo")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "tz argument must be an instance of tzinfo")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "mytz")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tzinfo")
(NEWLINE)
(KEYWORD if)
(ID "mytz")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "astimezone() requires an aware datetime")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "tz")
(KEYWORD is)
(ID "mytz")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(ID "myoffset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "myoffset")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "astimezone() requires an aware datetime")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "utc")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT "-")
(ID "myoffset")
(PUNCT ")")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "tzinfo")
(PUNCT "=")
(ID "tz")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "tz")
(PUNCT ".")
(ID "fromutc")
(PUNCT "(")
(ID "utc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ctime")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return ctime() style string.")
(NEWLINE)
(ID "weekday")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "toordinal")
(PUNCT "(")
(PUNCT ")")
(PUNCT "%")
(LIT 7)
(KEYWORD or)
(LIT 7)
(NEWLINE)
(KEYWORD return)
(LIT "%s %s %2d %02d:%02d:%02d %04d")
(PUNCT "%")
(PUNCT "(")
(ID "_DAYNAMES")
(PUNCT "[")
(ID "weekday")
(PUNCT "]")
(PUNCT ",")
(ID "_MONTHNAMES")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT "]")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "isoformat")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sep")
(PUNCT "=")
(LIT "T")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the time formatted according to ISO.\n\n        This is 'YYYY-MM-DD HH:MM:SS.mmmmmm', or 'YYYY-MM-DD HH:MM:SS' if\n        self.microsecond == 0.\n\n        If self.tzinfo is not None, the UTC offset is also attached, giving\n        'YYYY-MM-DD HH:MM:SS.mmmmmm+HH:MM' or 'YYYY-MM-DD HH:MM:SS+HH:MM'.\n\n        Optional argument sep specifies the separator between date and\n        time, default 'T'.\n        ")
(NEWLINE)
(ID "s")
(PUNCT "=")
(PUNCT "(")
(LIT "%04d-%02d-%02d%c")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT ",")
(ID "sep")
(PUNCT ")")
(PUNCT "+")
(ID "_format_time")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "off")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "off")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "off")
(PUNCT ".")
(ID "days")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sign")
(PUNCT "=")
(LIT "-")
(NEWLINE)
(ID "off")
(PUNCT "=")
(PUNCT "-")
(ID "off")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sign")
(PUNCT "=")
(LIT "+")
(NEWLINE)
(DEDENT)
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "off")
(PUNCT ",")
(ID "timedelta")
(PUNCT "(")
(ID "hours")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(KEYWORD not)
(ID "mm")
(PUNCT "%")
(ID "timedelta")
(PUNCT "(")
(ID "minutes")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(LIT "whole minute")
(NEWLINE)
(ID "mm")
(PUNCT "//=")
(ID "timedelta")
(PUNCT "(")
(ID "minutes")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "+=")
(LIT "%s%02d:%02d")
(PUNCT "%")
(PUNCT "(")
(ID "sign")
(PUNCT ",")
(ID "hh")
(PUNCT ",")
(ID "mm")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Convert to formal string, for repr().")
(NEWLINE)
(ID "L")
(PUNCT "=")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "L")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "L")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "L")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "L")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "map")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "L")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(LIT "%s(%s)")
(PUNCT "%")
(PUNCT "(")
(LIT "datetime.")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "s")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(LIT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "+")
(LIT ", tzinfo=%r")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT "+")
(LIT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__str__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Convert to string, for str().")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "isoformat")
(PUNCT "(")
(ID "sep")
(PUNCT "=")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "strptime")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "date_string")
(PUNCT ",")
(ID "format")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "string, format -> new datetime parsed from a string (like time.strptime()).")
(NEWLINE)
(KEYWORD import)
(ID "_strptime")
(NEWLINE)
(KEYWORD return)
(ID "_strptime")
(PUNCT ".")
(ID "_strptime_datetime")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "date_string")
(PUNCT ",")
(ID "format")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "utcoffset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the timezone offset in minutes east of UTC (negative west of\n        UTC).")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "offset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "_check_utc_offset")
(PUNCT "(")
(LIT "utcoffset")
(PUNCT ",")
(ID "offset")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "offset")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tzname")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the timezone name.\n\n        Note that the name is 100% informational -- there's no requirement that\n        it mean anything in particular. For example, \"GMT\", \"UTC\", \"-500\",\n        \"-5:00\", \"EDT\", \"US/Eastern\", \"America/New York\" are all valid replies.\n        ")
(NEWLINE)
(ID "name")
(PUNCT "=")
(ID "_call_tzinfo_method")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT ",")
(LIT "tzname")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "_check_tzname")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dst")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return 0 if DST is not in effect, or the DST offset (in minutes\n        eastward) if DST is in effect.\n\n        This is purely informational; the DST offset has already been added to\n        the UTC offset returned by utcoffset() if applicable, so there's no\n        need to consult dst() unless you're interested in displaying the DST\n        info.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "offset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT ".")
(ID "dst")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "_check_utc_offset")
(PUNCT "(")
(LIT "dst")
(PUNCT ",")
(ID "offset")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "offset")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__eq__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "datetime")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "allow_mixed")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__ne__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "datetime")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "allow_mixed")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT "!=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__le__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "datetime")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT "<=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_cmperror")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__lt__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "datetime")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT "<")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_cmperror")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__ge__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "datetime")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT ">=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_cmperror")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__gt__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "datetime")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_cmp")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT ">")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_cmperror")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_cmp")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ",")
(ID "allow_mixed")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "datetime")
(PUNCT ")")
(NEWLINE)
(ID "mytz")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(NEWLINE)
(ID "ottz")
(PUNCT "=")
(ID "other")
(PUNCT ".")
(ID "_tzinfo")
(NEWLINE)
(ID "myoff")
(PUNCT "=")
(ID "otoff")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "mytz")
(KEYWORD is)
(ID "ottz")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "base_compare")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "myoff")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "otoff")
(PUNCT "=")
(ID "other")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "base_compare")
(PUNCT "=")
(ID "myoff")
(PUNCT "==")
(ID "otoff")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "base_compare")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_cmp")
(PUNCT "(")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(ID "other")
(PUNCT ".")
(ID "_year")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_day")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "other")
(PUNCT ".")
(ID "_microsecond")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "myoff")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID "otoff")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "allow_mixed")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 2)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "cannot compare naive and aware datetimes")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "diff")
(PUNCT "=")
(ID "self")
(PUNCT "-")
(ID "other")
(NEWLINE)
(KEYWORD if)
(ID "diff")
(PUNCT ".")
(ID "days")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "diff")
(KEYWORD and)
(LIT 1)
(KEYWORD or)
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__add__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Add a datetime and a timedelta.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(ID "delta")
(PUNCT "=")
(ID "timedelta")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "toordinal")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "hours")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "minutes")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "seconds")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "microseconds")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT ")")
(NEWLINE)
(ID "delta")
(PUNCT "+=")
(ID "other")
(NEWLINE)
(ID "hour")
(PUNCT ",")
(ID "rem")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "delta")
(PUNCT ".")
(ID "seconds")
(PUNCT ",")
(LIT 3600)
(PUNCT ")")
(NEWLINE)
(ID "minute")
(PUNCT ",")
(ID "second")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "rem")
(PUNCT ",")
(LIT 60)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT 0)
(PUNCT "<")
(ID "delta")
(PUNCT ".")
(ID "days")
(PUNCT "<=")
(ID "_MAXORDINAL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "datetime")
(PUNCT ".")
(ID "combine")
(PUNCT "(")
(ID "date")
(PUNCT ".")
(ID "fromordinal")
(PUNCT "(")
(ID "delta")
(PUNCT ".")
(ID "days")
(PUNCT ")")
(PUNCT ",")
(ID "time")
(PUNCT "(")
(ID "hour")
(PUNCT ",")
(ID "minute")
(PUNCT ",")
(ID "second")
(PUNCT ",")
(ID "delta")
(PUNCT ".")
(ID "microseconds")
(PUNCT ",")
(ID "tzinfo")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "OverflowError")
(PUNCT "(")
(LIT "result out of range")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "__radd__")
(PUNCT "=")
(ID "__add__")
(NEWLINE)
(KEYWORD def)
(ID "__sub__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Subtract two datetimes, or a datetime and a timedelta.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "datetime")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT "+")
(PUNCT "-")
(ID "other")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "NotImplemented")
(NEWLINE)
(DEDENT)
(ID "days1")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "toordinal")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "days2")
(PUNCT "=")
(ID "other")
(PUNCT ".")
(ID "toordinal")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "secs1")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT "*")
(LIT 60)
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT "*")
(LIT 3600)
(NEWLINE)
(ID "secs2")
(PUNCT "=")
(ID "other")
(PUNCT ".")
(ID "_second")
(PUNCT "+")
(ID "other")
(PUNCT ".")
(ID "_minute")
(PUNCT "*")
(LIT 60)
(PUNCT "+")
(ID "other")
(PUNCT ".")
(ID "_hour")
(PUNCT "*")
(LIT 3600)
(NEWLINE)
(ID "base")
(PUNCT "=")
(ID "timedelta")
(PUNCT "(")
(ID "days1")
(PUNCT "-")
(ID "days2")
(PUNCT ",")
(ID "secs1")
(PUNCT "-")
(ID "secs2")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT "-")
(ID "other")
(PUNCT ".")
(ID "_microsecond")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(KEYWORD is)
(ID "other")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "base")
(NEWLINE)
(DEDENT)
(ID "myoff")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "otoff")
(PUNCT "=")
(ID "other")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "myoff")
(PUNCT "==")
(ID "otoff")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "base")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "myoff")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID "otoff")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "cannot mix naive and timezone-aware time")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "base")
(PUNCT "+")
(ID "otoff")
(PUNCT "-")
(ID "myoff")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__hash__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tzoff")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "utcoffset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "tzoff")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "hash")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_getstate")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "days")
(PUNCT "=")
(ID "_ymd2ord")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "year")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "day")
(PUNCT ")")
(NEWLINE)
(ID "seconds")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "hour")
(PUNCT "*")
(LIT 3600)
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "minute")
(PUNCT "*")
(LIT 60)
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "second")
(NEWLINE)
(KEYWORD return)
(ID "hash")
(PUNCT "(")
(ID "timedelta")
(PUNCT "(")
(ID "days")
(PUNCT ",")
(ID "seconds")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "microsecond")
(PUNCT ")")
(PUNCT "-")
(ID "tzoff")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_getstate")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "yhi")
(PUNCT ",")
(ID "ylo")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT ",")
(LIT 256)
(PUNCT ")")
(NEWLINE)
(ID "us2")
(PUNCT ",")
(ID "us3")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT ",")
(LIT 256)
(PUNCT ")")
(NEWLINE)
(ID "us1")
(PUNCT ",")
(ID "us2")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "us2")
(PUNCT ",")
(LIT 256)
(PUNCT ")")
(NEWLINE)
(ID "basestate")
(PUNCT "=")
(ID "bytes")
(PUNCT "(")
(PUNCT "[")
(ID "yhi")
(PUNCT ",")
(ID "ylo")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "us1")
(PUNCT ",")
(ID "us2")
(PUNCT ",")
(ID "us3")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "basestate")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "basestate")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__setstate")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "string")
(PUNCT ",")
(ID "tzinfo")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(PUNCT "(")
(ID "yhi")
(PUNCT ",")
(ID "ylo")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_month")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_day")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_hour")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_minute")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_second")
(PUNCT ",")
(ID "us1")
(PUNCT ",")
(ID "us2")
(PUNCT ",")
(ID "us3")
(PUNCT ")")
(PUNCT "=")
(ID "string")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_year")
(PUNCT "=")
(ID "yhi")
(PUNCT "*")
(LIT 256)
(PUNCT "+")
(ID "ylo")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_microsecond")
(PUNCT "=")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(ID "us1")
(PUNCT "<<")
(LIT 8)
(PUNCT ")")
(PUNCT "|")
(ID "us2")
(PUNCT ")")
(PUNCT "<<")
(LIT 8)
(PUNCT ")")
(PUNCT "|")
(ID "us3")
(NEWLINE)
(KEYWORD if)
(ID "tzinfo")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID "isinstance")
(PUNCT "(")
(ID "tzinfo")
(PUNCT ",")
(ID "_tzinfo_class")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_tzinfo")
(PUNCT "=")
(ID "tzinfo")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "bad tzinfo state arg %r")
(PUNCT "%")
(ID "tzinfo")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__reduce__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_getstate")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "datetime")
(PUNCT ".")
(ID "min")
(PUNCT "=")
(ID "datetime")
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(LIT 1)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "datetime")
(PUNCT ".")
(ID "max")
(PUNCT "=")
(ID "datetime")
(PUNCT "(")
(LIT 9999)
(PUNCT ",")
(LIT 12)
(PUNCT ",")
(LIT 31)
(PUNCT ",")
(LIT 23)
(PUNCT ",")
(LIT 59)
(PUNCT ",")
(LIT 59)
(PUNCT ",")
(LIT 999999)
(PUNCT ")")
(NEWLINE)
(ID "datetime")
(PUNCT ".")
(ID "resolution")
(PUNCT "=")
(ID "timedelta")
(PUNCT "(")
(ID "microseconds")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "_isoweek1monday")
(PUNCT "(")
(ID "year")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "THURSDAY")
(PUNCT "=")
(LIT 3)
(NEWLINE)
(ID "firstday")
(PUNCT "=")
(ID "_ymd2ord")
(PUNCT "(")
(ID "year")
(PUNCT ",")
(LIT 1)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "firstweekday")
(PUNCT "=")
(PUNCT "(")
(ID "firstday")
(PUNCT "+")
(LIT 6)
(PUNCT ")")
(PUNCT "%")
(LIT 7)
(NEWLINE)
(ID "week1monday")
(PUNCT "=")
(ID "firstday")
(PUNCT "-")
(ID "firstweekday")
(NEWLINE)
(KEYWORD if)
(ID "firstweekday")
(PUNCT ">")
(ID "THURSDAY")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "week1monday")
(PUNCT "+=")
(LIT 7)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "week1monday")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "timezone")
(PUNCT "(")
(ID "tzinfo")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "__slots__")
(PUNCT "=")
(LIT "_offset")
(PUNCT ",")
(LIT "_name")
(NEWLINE)
(ID "_Omitted")
(PUNCT "=")
(ID "object")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "__new__")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "offset")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(ID "_Omitted")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "offset")
(PUNCT ",")
(ID "timedelta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "offset must be a timedelta")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "name")
(KEYWORD is)
(ID "cls")
(PUNCT ".")
(ID "_Omitted")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "offset")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "cls")
(PUNCT ".")
(ID "utc")
(NEWLINE)
(DEDENT)
(ID "name")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "name must be a string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "cls")
(PUNCT ".")
(ID "_minoffset")
(PUNCT "<=")
(ID "offset")
(PUNCT "<=")
(ID "cls")
(PUNCT ".")
(ID "_maxoffset")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "offset must be a timedelta")
(LIT " strictly between -timedelta(hours=24) and")
(LIT " timedelta(hours=24).")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(PUNCT "(")
(ID "offset")
(PUNCT ".")
(ID "microseconds")
(PUNCT "!=")
(LIT 0)
(KEYWORD or)
(ID "offset")
(PUNCT ".")
(ID "seconds")
(PUNCT "%")
(LIT 60)
(PUNCT "!=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "offset must be a timedelta")
(LIT " representing a whole number of minutes")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "cls")
(PUNCT ".")
(ID "_create")
(PUNCT "(")
(ID "offset")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "_create")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "offset")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT "=")
(ID "tzinfo")
(PUNCT ".")
(ID "__new__")
(PUNCT "(")
(ID "cls")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_offset")
(PUNCT "=")
(ID "offset")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_name")
(PUNCT "=")
(ID "name")
(NEWLINE)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getinitargs__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "pickle support")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_name")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_offset")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_offset")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__eq__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "type")
(PUNCT "(")
(ID "other")
(PUNCT ")")
(PUNCT "!=")
(ID "timezone")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_offset")
(PUNCT "==")
(ID "other")
(PUNCT ".")
(ID "_offset")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__hash__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "hash")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_offset")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Convert to formal string, for repr().\n\n        >>> tz = timezone.utc\n        >>> repr(tz)\n        'datetime.timezone.utc'\n        >>> tz = timezone(timedelta(hours=-5), 'EST')\n        >>> repr(tz)\n        \"datetime.timezone(datetime.timedelta(-1, 68400), 'EST')\"\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(KEYWORD is)
(ID "self")
(PUNCT ".")
(ID "utc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "datetime.timezone.utc")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_name")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "%s(%r)")
(PUNCT "%")
(PUNCT "(")
(LIT "datetime.")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_offset")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "%s(%r, %r)")
(PUNCT "%")
(PUNCT "(")
(LIT "datetime.")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_offset")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__str__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tzname")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "utcoffset")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "dt")
(PUNCT ",")
(ID "datetime")
(PUNCT ")")
(KEYWORD or)
(ID "dt")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_offset")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "utcoffset() argument must be a datetime instance")
(LIT " or None")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tzname")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "dt")
(PUNCT ",")
(ID "datetime")
(PUNCT ")")
(KEYWORD or)
(ID "dt")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_name")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_name_from_offset")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_offset")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_name")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "tzname() argument must be a datetime instance")
(LIT " or None")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dst")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "dt")
(PUNCT ",")
(ID "datetime")
(PUNCT ")")
(KEYWORD or)
(ID "dt")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "dst() argument must be a datetime instance")
(LIT " or None")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "fromutc")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "dt")
(PUNCT ",")
(ID "datetime")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "dt")
(PUNCT ".")
(ID "tzinfo")
(KEYWORD is)
(KEYWORD not)
(ID "self")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "fromutc: dt.tzinfo ")
(LIT "is not self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "dt")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "_offset")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "fromutc() argument must be a datetime instance")
(LIT " or None")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "_maxoffset")
(PUNCT "=")
(ID "timedelta")
(PUNCT "(")
(ID "hours")
(PUNCT "=")
(LIT 23)
(PUNCT ",")
(ID "minutes")
(PUNCT "=")
(LIT 59)
(PUNCT ")")
(NEWLINE)
(ID "_minoffset")
(PUNCT "=")
(PUNCT "-")
(ID "_maxoffset")
(NEWLINE)
(PUNCT "@")
(ID "staticmethod")
(NEWLINE)
(KEYWORD def)
(ID "_name_from_offset")
(PUNCT "(")
(ID "delta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "delta")
(PUNCT "<")
(ID "timedelta")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sign")
(PUNCT "=")
(LIT "-")
(NEWLINE)
(ID "delta")
(PUNCT "=")
(PUNCT "-")
(ID "delta")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sign")
(PUNCT "=")
(LIT "+")
(NEWLINE)
(DEDENT)
(ID "hours")
(PUNCT ",")
(ID "rest")
(PUNCT "=")
(ID "divmod")
(PUNCT "(")
(ID "delta")
(PUNCT ",")
(ID "timedelta")
(PUNCT "(")
(ID "hours")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "minutes")
(PUNCT "=")
(ID "rest")
(PUNCT "//")
(ID "timedelta")
(PUNCT "(")
(ID "minutes")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "UTC{}{:02d}:{:02d}")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "sign")
(PUNCT ",")
(ID "hours")
(PUNCT ",")
(ID "minutes")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "timezone")
(PUNCT ".")
(ID "utc")
(PUNCT "=")
(ID "timezone")
(PUNCT ".")
(ID "_create")
(PUNCT "(")
(ID "timedelta")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "timezone")
(PUNCT ".")
(ID "min")
(PUNCT "=")
(ID "timezone")
(PUNCT ".")
(ID "_create")
(PUNCT "(")
(ID "timezone")
(PUNCT ".")
(ID "_minoffset")
(PUNCT ")")
(NEWLINE)
(ID "timezone")
(PUNCT ".")
(ID "max")
(PUNCT "=")
(ID "timezone")
(PUNCT ".")
(ID "_create")
(PUNCT "(")
(ID "timezone")
(PUNCT ".")
(ID "_maxoffset")
(PUNCT ")")
(NEWLINE)
(ID "_EPOCH")
(PUNCT "=")
(ID "datetime")
(PUNCT "(")
(LIT 1970)
(PUNCT ",")
(LIT 1)
(PUNCT ",")
(LIT 1)
(PUNCT ",")
(ID "tzinfo")
(PUNCT "=")
(ID "timezone")
(PUNCT ".")
(ID "utc")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "_datetime")
(KEYWORD import)
(PUNCT "*")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(PUNCT "(")
(ID "_DAYNAMES")
(PUNCT ",")
(ID "_DAYS_BEFORE_MONTH")
(PUNCT ",")
(ID "_DAYS_IN_MONTH")
(PUNCT ",")
(ID "_DI100Y")
(PUNCT ",")
(ID "_DI400Y")
(PUNCT ",")
(ID "_DI4Y")
(PUNCT ",")
(ID "_MAXORDINAL")
(PUNCT ",")
(ID "_MONTHNAMES")
(PUNCT ",")
(ID "_build_struct_time")
(PUNCT ",")
(ID "_call_tzinfo_method")
(PUNCT ",")
(ID "_check_date_fields")
(PUNCT ",")
(ID "_check_time_fields")
(PUNCT ",")
(ID "_check_tzinfo_arg")
(PUNCT ",")
(ID "_check_tzname")
(PUNCT ",")
(ID "_check_utc_offset")
(PUNCT ",")
(ID "_cmp")
(PUNCT ",")
(ID "_cmperror")
(PUNCT ",")
(ID "_date_class")
(PUNCT ",")
(ID "_days_before_month")
(PUNCT ",")
(ID "_days_before_year")
(PUNCT ",")
(ID "_days_in_month")
(PUNCT ",")
(ID "_format_time")
(PUNCT ",")
(ID "_is_leap")
(PUNCT ",")
(ID "_isoweek1monday")
(PUNCT ",")
(ID "_math")
(PUNCT ",")
(ID "_ord2ymd")
(PUNCT ",")
(ID "_time")
(PUNCT ",")
(ID "_time_class")
(PUNCT ",")
(ID "_tzinfo_class")
(PUNCT ",")
(ID "_wrap_strftime")
(PUNCT ",")
(ID "_ymd2ord")
(PUNCT ")")
(NEWLINE)
(KEYWORD from)
(ID "_datetime")
(KEYWORD import)
(ID "__doc__")
(NEWLINE)
(DEDENT)
(ENDMARKER)
