(LIT "A dumb and slow but simple dbm clone.\n\nFor database spam, spam.dir contains the index (a text file),\nspam.bak *may* contain a backup of the index (also a text file),\nwhile spam.dat contains the data (a binary file).\n\nXXX TO DO:\n\n- seems to contain a bug when updating...\n\n- reclaim free space (currently, space once occupied by deleted or expanded\nitems is never reused)\n\n- support concurrent access (currently, if two processes take turns making\nupdates, they can mess up the index)\n\n- support efficient access to large databases (currently, the whole index\nis read when the database is opened, and some updates rewrite the whole index)\n\n- support opening for read-only (flag = 'm')\n\n")
(NEWLINE)
(KEYWORD import)
(ID "io")
(KEYWORD as)
(ID "_io")
(NEWLINE)
(KEYWORD import)
(ID "os")
(KEYWORD as)
(ID "_os")
(NEWLINE)
(KEYWORD import)
(ID "collections")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "error")
(PUNCT ",")
(LIT "open")
(PUNCT "]")
(NEWLINE)
(ID "_BLOCKSIZE")
(PUNCT "=")
(LIT 512)
(NEWLINE)
(ID "error")
(PUNCT "=")
(ID "OSError")
(NEWLINE)
(KEYWORD class)
(ID "_Database")
(PUNCT "(")
(ID "collections")
(PUNCT ".")
(ID "MutableMapping")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_os")
(PUNCT "=")
(ID "_os")
(NEWLINE)
(ID "_io")
(PUNCT "=")
(ID "_io")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filebasename")
(PUNCT ",")
(ID "mode")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_mode")
(PUNCT "=")
(ID "mode")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_dirfile")
(PUNCT "=")
(ID "filebasename")
(PUNCT "+")
(LIT ".dir")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_datfile")
(PUNCT "=")
(ID "filebasename")
(PUNCT "+")
(LIT ".dat")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_bakfile")
(PUNCT "=")
(ID "filebasename")
(PUNCT "+")
(LIT ".bak")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "_io")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_datfile")
(PUNCT ",")
(LIT "r")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(LIT "Latin-1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "_io")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_datfile")
(PUNCT ",")
(LIT "w")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(LIT "Latin-1")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_chmod")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_datfile")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_update")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_update")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "_io")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_dirfile")
(PUNCT ",")
(LIT "r")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(LIT "Latin-1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "line")
(KEYWORD in)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "key")
(PUNCT ",")
(ID "pos_and_siz_pair")
(PUNCT "=")
(ID "eval")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(ID "key")
(PUNCT "=")
(ID "key")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "Latin-1")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "pos_and_siz_pair")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_commit")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_index")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_os")
(PUNCT ".")
(ID "unlink")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_bakfile")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_os")
(PUNCT ".")
(ID "rename")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_dirfile")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_bakfile")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD with)
(ID "self")
(PUNCT ".")
(ID "_io")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_dirfile")
(PUNCT ",")
(LIT "w")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(LIT "Latin-1")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_chmod")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_dirfile")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "pos_and_siz_pair")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "entry")
(PUNCT "=")
(LIT "%r, %r\n")
(PUNCT "%")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "decode")
(PUNCT "(")
(LIT "Latin-1")
(PUNCT ")")
(PUNCT ",")
(ID "pos_and_siz_pair")
(PUNCT ")")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "sync")
(PUNCT "=")
(ID "_commit")
(NEWLINE)
(KEYWORD def)
(ID "_verify_open")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_index")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "DBM object has already been closed")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__getitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "key")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "utf-8")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_verify_open")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "pos")
(PUNCT ",")
(ID "siz")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(KEYWORD with)
(ID "_io")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_datfile")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "pos")
(PUNCT ")")
(NEWLINE)
(ID "dat")
(PUNCT "=")
(ID "f")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "siz")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "dat")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_addval")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "val")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "_io")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_datfile")
(PUNCT ",")
(LIT "rb+")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(ID "pos")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "f")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "npos")
(PUNCT "=")
(PUNCT "(")
(PUNCT "(")
(ID "pos")
(PUNCT "+")
(ID "_BLOCKSIZE")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT "//")
(ID "_BLOCKSIZE")
(PUNCT ")")
(PUNCT "*")
(ID "_BLOCKSIZE")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"\0")
(PUNCT "*")
(PUNCT "(")
(ID "npos")
(PUNCT "-")
(ID "pos")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "pos")
(PUNCT "=")
(ID "npos")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(PUNCT "(")
(ID "pos")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_setval")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "pos")
(PUNCT ",")
(ID "val")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "_io")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_datfile")
(PUNCT ",")
(LIT "rb+")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "pos")
(PUNCT ")")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(PUNCT "(")
(ID "pos")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_addkey")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "pos_and_siz_pair")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "pos_and_siz_pair")
(NEWLINE)
(KEYWORD with)
(ID "_io")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_dirfile")
(PUNCT ",")
(LIT "a")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(LIT "Latin-1")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_chmod")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_dirfile")
(PUNCT ")")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "%r, %r\n")
(PUNCT "%")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "decode")
(PUNCT "(")
(LIT "Latin-1")
(PUNCT ")")
(PUNCT ",")
(ID "pos_and_siz_pair")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__setitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "val")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "key")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "utf-8")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(PUNCT "(")
(ID "bytes")
(PUNCT ",")
(ID "bytearray")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "keys must be bytes or strings")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "val")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "val")
(PUNCT "=")
(ID "val")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "utf-8")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "val")
(PUNCT ",")
(PUNCT "(")
(ID "bytes")
(PUNCT ",")
(ID "bytearray")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "values must be bytes or strings")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_verify_open")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "key")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_addkey")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_addval")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pos")
(PUNCT ",")
(ID "siz")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(ID "oldblocks")
(PUNCT "=")
(PUNCT "(")
(ID "siz")
(PUNCT "+")
(ID "_BLOCKSIZE")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT "//")
(ID "_BLOCKSIZE")
(NEWLINE)
(ID "newblocks")
(PUNCT "=")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(PUNCT "+")
(ID "_BLOCKSIZE")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT "//")
(ID "_BLOCKSIZE")
(NEWLINE)
(KEYWORD if)
(ID "newblocks")
(PUNCT "<=")
(ID "oldblocks")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_setval")
(PUNCT "(")
(ID "pos")
(PUNCT ",")
(ID "val")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_addval")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__delitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "key")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "utf-8")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_verify_open")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_commit")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "keys")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "DBM object has already been closed")
(PUNCT ")")
(KEYWORD from)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "items")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_verify_open")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "self")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT ")")
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__contains__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "key")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "utf-8")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_index")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_index")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "DBM object has already been closed")
(PUNCT ")")
(KEYWORD from)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "iterkeys")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "iter")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "DBM object has already been closed")
(PUNCT ")")
(KEYWORD from)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "__iter__")
(PUNCT "=")
(ID "iterkeys")
(NEWLINE)
(KEYWORD def)
(ID "__len__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "DBM object has already been closed")
(PUNCT ")")
(KEYWORD from)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_commit")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_index")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_datfile")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_dirfile")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_bakfile")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "__del__")
(PUNCT "=")
(ID "close")
(NEWLINE)
(KEYWORD def)
(ID "_chmod")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_os")
(PUNCT ",")
(LIT "chmod")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_os")
(PUNCT ".")
(ID "chmod")
(PUNCT "(")
(ID "file")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_mode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__enter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__exit__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "open")
(PUNCT "(")
(ID "file")
(PUNCT ",")
(ID "flag")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mode")
(PUNCT "=")
(LIT 438)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Open the database file, filename, and return corresponding object.\n\n    The flag argument, used to control how the database is opened in the\n    other DBM implementations, is ignored in the dbm.dumb module; the\n    database is always opened for update, and will be created if it does\n    not exist.\n\n    The optional mode argument is the UNIX mode of the file, used only when\n    the database has to be created.  It defaults to octal code 0o666 (and\n    will be modified by the prevailing umask).\n\n    ")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "um")
(PUNCT "=")
(ID "_os")
(PUNCT ".")
(ID "umask")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "_os")
(PUNCT ".")
(ID "umask")
(PUNCT "(")
(ID "um")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mode")
(PUNCT "=")
(ID "mode")
(PUNCT "&")
(PUNCT "(")
(PUNCT "~")
(ID "um")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_Database")
(PUNCT "(")
(ID "file")
(PUNCT ",")
(ID "mode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
