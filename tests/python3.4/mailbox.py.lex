(LIT "Read/write support for Maildir, mbox, MH, Babyl, and MMDF mailboxes.")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "time")
(NEWLINE)
(KEYWORD import)
(ID "calendar")
(NEWLINE)
(KEYWORD import)
(ID "socket")
(NEWLINE)
(KEYWORD import)
(ID "errno")
(NEWLINE)
(KEYWORD import)
(ID "copy")
(NEWLINE)
(KEYWORD import)
(ID "warnings")
(NEWLINE)
(KEYWORD import)
(ID "email")
(NEWLINE)
(KEYWORD import)
(ID "email")
(PUNCT ".")
(ID "message")
(NEWLINE)
(KEYWORD import)
(ID "email")
(PUNCT ".")
(ID "generator")
(NEWLINE)
(KEYWORD import)
(ID "io")
(NEWLINE)
(KEYWORD import)
(ID "contextlib")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "fcntl")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fcntl")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "Mailbox")
(PUNCT ",")
(LIT "Maildir")
(PUNCT ",")
(LIT "mbox")
(PUNCT ",")
(LIT "MH")
(PUNCT ",")
(LIT "Babyl")
(PUNCT ",")
(LIT "MMDF")
(PUNCT ",")
(LIT "Message")
(PUNCT ",")
(LIT "MaildirMessage")
(PUNCT ",")
(LIT "mboxMessage")
(PUNCT ",")
(LIT "MHMessage")
(PUNCT ",")
(LIT "BabylMessage")
(PUNCT ",")
(LIT "MMDFMessage")
(PUNCT "]")
(NEWLINE)
(ID "linesep")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "linesep")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "ascii")
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "Mailbox")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "A group of messages in a particular place.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "factory")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "create")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize a Mailbox instance.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "abspath")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "expanduser")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_factory")
(PUNCT "=")
(ID "factory")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Add message and return assigned key.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "Method must be implemented by subclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "remove")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Remove the keyed message; raise KeyError if it doesn't exist.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "Method must be implemented by subclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__delitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "discard")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "If the keyed message exists, remove it.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__setitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Replace the keyed message; raise KeyError if it doesn't exist.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "Method must be implemented by subclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the keyed message, or default if it doesn't exist.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "__getitem__")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "default")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__getitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the keyed message; raise KeyError if it doesn't exist.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_factory")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "get_message")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "contextlib")
(PUNCT ".")
(ID "closing")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_file")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(KEYWORD as)
(ID "file")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_factory")
(PUNCT "(")
(ID "file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_message")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a Message representation or raise a KeyError.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "Method must be implemented by subclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_string")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a string representation or raise a KeyError.\n\n        Uses email.message.Message to create a 7bit clean string\n        representation of the message.")
(NEWLINE)
(KEYWORD return)
(ID "email")
(PUNCT ".")
(ID "message_from_bytes")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_bytes")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(PUNCT ".")
(ID "as_string")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_bytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a byte string representation or raise a KeyError.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "Method must be implemented by subclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_file")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a file-like representation or raise a KeyError.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "Method must be implemented by subclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "iterkeys")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return an iterator over keys.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "Method must be implemented by subclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "keys")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a list of keys.")
(NEWLINE)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "iterkeys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "itervalues")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return an iterator over all messages.")
(NEWLINE)
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "iterkeys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "self")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD yield)
(ID "value")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__iter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "itervalues")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "values")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a list of messages. Memory intensive.")
(NEWLINE)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "itervalues")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "iteritems")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return an iterator over (key, message) tuples.")
(NEWLINE)
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "iterkeys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "self")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD yield)
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "items")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a list of (key, message) tuples. Memory intensive.")
(NEWLINE)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "iteritems")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__contains__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return True if the keyed message exists, False otherwise.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "Method must be implemented by subclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__len__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a count of messages in the mailbox.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "Method must be implemented by subclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "clear")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Delete all messages.")
(NEWLINE)
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "discard")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "pop")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Delete the keyed message and return it, or default.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "self")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "default")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "discard")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "popitem")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Delete an arbitrary (key, message) pair and return it.")
(NEWLINE)
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "iterkeys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(LIT "No messages in mailbox")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "update")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "arg")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Change the messages that correspond to certain keys.")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "arg")
(PUNCT ",")
(LIT "iteritems")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "source")
(PUNCT "=")
(ID "arg")
(PUNCT ".")
(ID "iteritems")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "hasattr")
(PUNCT "(")
(ID "arg")
(PUNCT ",")
(LIT "items")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "source")
(PUNCT "=")
(ID "arg")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "source")
(PUNCT "=")
(ID "arg")
(NEWLINE)
(DEDENT)
(ID "bad_key")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "message")
(KEYWORD in)
(ID "source")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "message")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bad_key")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "bad_key")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(LIT "No message with key(s)")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "flush")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Write any pending changes to the disk.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "Method must be implemented by subclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "lock")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Lock the mailbox.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "Method must be implemented by subclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "unlock")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Unlock the mailbox if it is locked.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "Method must be implemented by subclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Flush and close the mailbox.")
(NEWLINE)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "Method must be implemented by subclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_string_to_bytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "message")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "ascii")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "UnicodeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "String input must be ASCII-only; ")
(LIT "use bytes or a Message instead")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "_append_newline")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD def)
(ID "_dump_message")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ",")
(ID "target")
(PUNCT ",")
(ID "mangle_from_")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Dump message contents to target file.")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "email")
(PUNCT ".")
(ID "message")
(PUNCT ".")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "buffer")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "gen")
(PUNCT "=")
(ID "email")
(PUNCT ".")
(ID "generator")
(PUNCT ".")
(ID "BytesGenerator")
(PUNCT "(")
(ID "buffer")
(PUNCT ",")
(ID "mangle_from_")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "gen")
(PUNCT ".")
(ID "flatten")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(ID "buffer")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "data")
(PUNCT "=")
(ID "buffer")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "data")
(PUNCT "=")
(ID "data")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT #"\n")
(PUNCT ",")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(ID "target")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_append_newline")
(KEYWORD and)
(KEYWORD not)
(ID "data")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(ID "linesep")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "target")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "bytes")
(PUNCT ",")
(ID "io")
(PUNCT ".")
(ID "StringIO")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "io")
(PUNCT ".")
(ID "StringIO")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "Use of StringIO input is deprecated, ")
(LIT "use BytesIO instead")
(PUNCT ",")
(ID "DeprecationWarning")
(PUNCT ",")
(LIT 3)
(PUNCT ")")
(NEWLINE)
(ID "message")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "getvalue")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_string_to_bytes")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "mangle_from_")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT #"\nFrom ")
(PUNCT ",")
(LIT #"\n>From ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "message")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT #"\n")
(PUNCT ",")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(ID "target")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_append_newline")
(KEYWORD and)
(KEYWORD not)
(ID "message")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(ID "linesep")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "target")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "hasattr")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(LIT "read")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(LIT "buffer")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "Use of text mode files is deprecated, ")
(LIT "use a binary mode file instead")
(PUNCT ",")
(ID "DeprecationWarning")
(PUNCT ",")
(LIT 3)
(PUNCT ")")
(NEWLINE)
(ID "message")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "buffer")
(NEWLINE)
(DEDENT)
(ID "lastline")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT #"\r\n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 2)
(PUNCT "]")
(PUNCT "+")
(LIT #"\n")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "line")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT #"\r")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "+")
(LIT #"\n")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "mangle_from_")
(KEYWORD and)
(ID "line")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT #"From ")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(LIT #">From ")
(PUNCT "+")
(ID "line")
(PUNCT "[")
(LIT 5)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT #"\n")
(PUNCT ",")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(ID "target")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(ID "lastline")
(PUNCT "=")
(ID "line")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_append_newline")
(KEYWORD and)
(ID "lastline")
(KEYWORD and)
(KEYWORD not)
(ID "lastline")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(ID "linesep")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "target")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "Invalid message type: %s")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Maildir")
(PUNCT "(")
(ID "Mailbox")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "A qmail-style Maildir mailbox.")
(NEWLINE)
(ID "colon")
(PUNCT "=")
(LIT ":")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dirname")
(PUNCT ",")
(ID "factory")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "create")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize a Maildir instance.")
(NEWLINE)
(ID "Mailbox")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dirname")
(PUNCT ",")
(ID "factory")
(PUNCT ",")
(ID "create")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_paths")
(PUNCT "=")
(PUNCT "{")
(LIT "tmp")
(PUNCT ":")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT "tmp")
(PUNCT ")")
(PUNCT ",")
(LIT "new")
(PUNCT ":")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT "new")
(PUNCT ")")
(PUNCT ",")
(LIT "cur")
(PUNCT ":")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT "cur")
(PUNCT ")")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "create")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "mkdir")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT 448)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "path")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_paths")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "mkdir")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(LIT 448)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "NoSuchMailboxError")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_toc_mtimes")
(PUNCT "=")
(PUNCT "{")
(LIT "cur")
(PUNCT ":")
(LIT 0)
(PUNCT ",")
(LIT "new")
(PUNCT ":")
(LIT 0)
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_last_read")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_skewfactor")
(PUNCT "=")
(LIT 0.1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Add message and return assigned key.")
(NEWLINE)
(ID "tmp_file")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_create_tmp")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_dump_message")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "tmp_file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "BaseException")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tmp_file")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "tmp_file")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(ID "_sync_close")
(PUNCT "(")
(ID "tmp_file")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "MaildirMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subdir")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "get_subdir")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "suffix")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "colon")
(PUNCT "+")
(ID "message")
(PUNCT ".")
(ID "get_info")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "suffix")
(PUNCT "==")
(ID "self")
(PUNCT ".")
(ID "colon")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "suffix")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subdir")
(PUNCT "=")
(LIT "new")
(NEWLINE)
(ID "suffix")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "uniq")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "basename")
(PUNCT "(")
(ID "tmp_file")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "colon")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "dest")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "subdir")
(PUNCT ",")
(ID "uniq")
(PUNCT "+")
(ID "suffix")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "MaildirMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "utime")
(PUNCT "(")
(ID "tmp_file")
(PUNCT ".")
(ID "name")
(PUNCT ",")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "getatime")
(PUNCT "(")
(ID "tmp_file")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(PUNCT ",")
(ID "message")
(PUNCT ".")
(ID "get_date")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "os")
(PUNCT ",")
(LIT "link")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "link")
(PUNCT "(")
(ID "tmp_file")
(PUNCT ".")
(ID "name")
(PUNCT ",")
(ID "dest")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "tmp_file")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "rename")
(PUNCT "(")
(ID "tmp_file")
(PUNCT ".")
(ID "name")
(PUNCT ",")
(ID "dest")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "tmp_file")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "errno")
(PUNCT "==")
(ID "errno")
(PUNCT ".")
(ID "EEXIST")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ExternalClashError")
(PUNCT "(")
(LIT "Name clash with existing message: %s")
(PUNCT "%")
(ID "dest")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "uniq")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "remove")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Remove the keyed message; raise KeyError if it doesn't exist.")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "discard")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "If the keyed message exists, remove it.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "KeyError")
(PUNCT ",")
(ID "FileNotFoundError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__setitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Replace the keyed message; raise KeyError if it doesn't exist.")
(NEWLINE)
(ID "old_subpath")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(ID "temp_key")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(ID "temp_subpath")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(ID "temp_key")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "MaildirMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dominant_subpath")
(PUNCT "=")
(ID "temp_subpath")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dominant_subpath")
(PUNCT "=")
(ID "old_subpath")
(NEWLINE)
(DEDENT)
(ID "subdir")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "dirname")
(PUNCT "(")
(ID "dominant_subpath")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "colon")
(KEYWORD in)
(ID "dominant_subpath")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "suffix")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "colon")
(PUNCT "+")
(ID "dominant_subpath")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "colon")
(PUNCT ")")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "suffix")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "discard")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(ID "tmp_path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "temp_subpath")
(PUNCT ")")
(NEWLINE)
(ID "new_path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "subdir")
(PUNCT ",")
(ID "key")
(PUNCT "+")
(ID "suffix")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "MaildirMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "utime")
(PUNCT "(")
(ID "tmp_path")
(PUNCT ",")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "getatime")
(PUNCT "(")
(ID "tmp_path")
(PUNCT ")")
(PUNCT ",")
(ID "message")
(PUNCT ".")
(ID "get_date")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "os")
(PUNCT ".")
(ID "rename")
(PUNCT "(")
(ID "tmp_path")
(PUNCT ",")
(ID "new_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_message")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a Message representation or raise a KeyError.")
(NEWLINE)
(ID "subpath")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "subpath")
(PUNCT ")")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_factory")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_factory")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "MaildirMessage")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "subdir")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "subpath")
(PUNCT ")")
(NEWLINE)
(ID "msg")
(PUNCT ".")
(ID "set_subdir")
(PUNCT "(")
(ID "subdir")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "colon")
(KEYWORD in)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT ".")
(ID "set_info")
(PUNCT "(")
(ID "name")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "colon")
(PUNCT ")")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "msg")
(PUNCT ".")
(ID "set_date")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "getmtime")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "subpath")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "msg")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_bytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a bytes representation or raise a KeyError.")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "f")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "linesep")
(PUNCT ",")
(LIT #"\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_file")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a file-like representation or raise a KeyError.")
(NEWLINE)
(ID "f")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "_ProxyFile")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "iterkeys")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return an iterator over keys.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_refresh")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD yield)
(ID "key")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__contains__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return True if the keyed message exists, False otherwise.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_refresh")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_toc")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__len__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a count of messages in the mailbox.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_refresh")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "flush")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Write any pending changes to disk.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "lock")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Lock the mailbox.")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "unlock")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Unlock the mailbox if it is locked.")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Flush and close the mailbox.")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "list_folders")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a list of folder names.")
(NEWLINE)
(ID "result")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "os")
(PUNCT ".")
(ID "listdir")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "entry")
(PUNCT ")")
(PUNCT ">")
(LIT 1)
(KEYWORD and)
(ID "entry")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(LIT ".")
(KEYWORD and)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isdir")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "entry")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_folder")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "folder")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a Maildir instance for the named folder.")
(NEWLINE)
(KEYWORD return)
(ID "Maildir")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT ".")
(PUNCT "+")
(ID "folder")
(PUNCT ")")
(PUNCT ",")
(ID "factory")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_factory")
(PUNCT ",")
(ID "create")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_folder")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "folder")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create a folder and return a Maildir instance representing it.")
(NEWLINE)
(ID "path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT ".")
(PUNCT "+")
(ID "folder")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "Maildir")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "factory")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_factory")
(PUNCT ")")
(NEWLINE)
(ID "maildirfolder_path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(LIT "maildirfolder")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "maildirfolder_path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "maildirfolder_path")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "O_CREAT")
(PUNCT "|")
(ID "os")
(PUNCT ".")
(ID "O_WRONLY")
(PUNCT ",")
(LIT 438)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "remove_folder")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "folder")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Delete the named folder, which must be empty.")
(NEWLINE)
(ID "path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT ".")
(PUNCT "+")
(ID "folder")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "os")
(PUNCT ".")
(ID "listdir")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(LIT "new")
(PUNCT ")")
(PUNCT ")")
(PUNCT "+")
(ID "os")
(PUNCT ".")
(ID "listdir")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(LIT "cur")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "entry")
(PUNCT ")")
(PUNCT "<")
(LIT 1)
(KEYWORD or)
(ID "entry")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "!=")
(LIT ".")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "NotEmptyError")
(PUNCT "(")
(LIT "Folder contains message(s): %s")
(PUNCT "%")
(ID "folder")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "os")
(PUNCT ".")
(ID "listdir")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "entry")
(PUNCT "!=")
(LIT "new")
(KEYWORD and)
(ID "entry")
(PUNCT "!=")
(LIT "cur")
(KEYWORD and)
(ID "entry")
(PUNCT "!=")
(LIT "tmp")
(KEYWORD and)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isdir")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "NotEmptyError")
(PUNCT "(")
(LIT "Folder contains subdirectory '%s': %s")
(PUNCT "%")
(PUNCT "(")
(ID "folder")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "root")
(PUNCT ",")
(ID "dirs")
(PUNCT ",")
(ID "files")
(KEYWORD in)
(ID "os")
(PUNCT ".")
(ID "walk")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "topdown")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "files")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "root")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "dirs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "rmdir")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "root")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "os")
(PUNCT ".")
(ID "rmdir")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "clean")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Delete old files in \"tmp\".")
(NEWLINE)
(ID "now")
(PUNCT "=")
(ID "time")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "os")
(PUNCT ".")
(ID "listdir")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT "tmp")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT "tmp")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "now")
(PUNCT "-")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "getatime")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(PUNCT ">")
(LIT 129600)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "_count")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(KEYWORD def)
(ID "_create_tmp")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create a file in the tmp subdirectory and open and return it.")
(NEWLINE)
(ID "now")
(PUNCT "=")
(ID "time")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "hostname")
(PUNCT "=")
(ID "socket")
(PUNCT ".")
(ID "gethostname")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "/")
(KEYWORD in)
(ID "hostname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hostname")
(PUNCT "=")
(ID "hostname")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "/")
(PUNCT ",")
(LIT "\\057")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT ":")
(KEYWORD in)
(ID "hostname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hostname")
(PUNCT "=")
(ID "hostname")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT ":")
(PUNCT ",")
(LIT "\\072")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "uniq")
(PUNCT "=")
(LIT "%s.M%sP%sQ%s.%s")
(PUNCT "%")
(PUNCT "(")
(ID "int")
(PUNCT "(")
(ID "now")
(PUNCT ")")
(PUNCT ",")
(ID "int")
(PUNCT "(")
(ID "now")
(PUNCT "%")
(LIT 1)
(PUNCT "*")
(LIT 1000000.0)
(PUNCT ")")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "getpid")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "Maildir")
(PUNCT ".")
(ID "_count")
(PUNCT ",")
(ID "hostname")
(PUNCT ")")
(NEWLINE)
(ID "path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT "tmp")
(PUNCT ",")
(ID "uniq")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "FileNotFoundError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "Maildir")
(PUNCT ".")
(ID "_count")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_create_carefully")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "FileExistsError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD raise)
(ID "ExternalClashError")
(PUNCT "(")
(LIT "Name clash prevented file creation: %s")
(PUNCT "%")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_refresh")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Update table of contents mapping.")
(NEWLINE)
(KEYWORD if)
(ID "time")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_last_read")
(PUNCT ">")
(LIT 2)
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "_skewfactor")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "refresh")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD for)
(ID "subdir")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_toc_mtimes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mtime")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "getmtime")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_paths")
(PUNCT "[")
(ID "subdir")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "mtime")
(PUNCT ">")
(ID "self")
(PUNCT ".")
(ID "_toc_mtimes")
(PUNCT "[")
(ID "subdir")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "refresh")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_toc_mtimes")
(PUNCT "[")
(ID "subdir")
(PUNCT "]")
(PUNCT "=")
(ID "mtime")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "refresh")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "subdir")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_toc_mtimes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "path")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_paths")
(PUNCT "[")
(ID "subdir")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "os")
(PUNCT ".")
(ID "listdir")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "p")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isdir")
(PUNCT "(")
(ID "p")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "uniq")
(PUNCT "=")
(ID "entry")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "colon")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "[")
(ID "uniq")
(PUNCT "]")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "subdir")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_last_read")
(PUNCT "=")
(ID "time")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_lookup")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Use TOC to return subpath for given key, or raise a KeyError.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_refresh")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(LIT "No message with key: %s")
(PUNCT "%")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "next")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the next message in a one-time iteration.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "_onetime_keys")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_onetime_keys")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "iterkeys")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT "[")
(ID "next")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_onetime_keys")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "StopIteration")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_singlefileMailbox")
(PUNCT "(")
(ID "Mailbox")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "A single-file mailbox.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "factory")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "create")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize a single-file mailbox.")
(NEWLINE)
(ID "Mailbox")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "factory")
(PUNCT ",")
(ID "create")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT "rb+")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "errno")
(PUNCT "==")
(ID "errno")
(PUNCT ".")
(ID "ENOENT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "create")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT "wb+")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "NoSuchMailboxError")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "e")
(PUNCT ".")
(ID "errno")
(KEYWORD in)
(PUNCT "(")
(ID "errno")
(PUNCT ".")
(ID "EACCES")
(PUNCT ",")
(ID "errno")
(PUNCT ".")
(ID "EROFS")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT "=")
(ID "f")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_next_key")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pending")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pending_sync")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file_length")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Add message and return assigned key.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_next_key")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_append_message")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_next_key")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pending_sync")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_next_key")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "remove")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Remove the keyed message; raise KeyError if it doesn't exist.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pending")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__setitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Replace the keyed message; raise KeyError if it doesn't exist.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_append_message")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pending")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "iterkeys")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return an iterator over keys.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD yield)
(KEYWORD from)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__contains__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return True if the keyed message exists, False otherwise.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_toc")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__len__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a count of messages in the mailbox.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "lock")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Lock the mailbox.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_lock_file")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "unlock")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Unlock the mailbox if it is locked.")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_unlock_file")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "flush")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Write any pending changes to disk.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_pending")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_pending_sync")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_sync_flush")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pending_sync")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD assert)
(ID "self")
(PUNCT ".")
(ID "_toc")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(ID "cur_len")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "cur_len")
(PUNCT "!=")
(ID "self")
(PUNCT ".")
(ID "_file_length")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ExternalClashError")
(PUNCT "(")
(LIT "Size of mailbox file changed ")
(LIT "(expected %i, found %i)")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file_length")
(PUNCT ",")
(ID "cur_len")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "new_file")
(PUNCT "=")
(ID "_create_temporary")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_toc")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pre_mailbox_hook")
(PUNCT "(")
(ID "new_file")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "sorted")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "start")
(PUNCT ",")
(ID "stop")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "start")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pre_message_hook")
(PUNCT "(")
(ID "new_file")
(PUNCT ")")
(NEWLINE)
(ID "new_start")
(PUNCT "=")
(ID "new_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "buffer")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "min")
(PUNCT "(")
(LIT 4096)
(PUNCT ",")
(ID "stop")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "new_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "buffer")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "new_toc")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(PUNCT "(")
(ID "new_start")
(PUNCT ",")
(ID "new_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_post_message_hook")
(PUNCT "(")
(ID "new_file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file_length")
(PUNCT "=")
(ID "new_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_file")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "new_file")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(ID "_sync_close")
(PUNCT "(")
(ID "new_file")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "mode")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ")")
(PUNCT ".")
(ID "st_mode")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "chmod")
(PUNCT "(")
(ID "new_file")
(PUNCT ".")
(ID "name")
(PUNCT ",")
(ID "mode")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "rename")
(PUNCT "(")
(ID "new_file")
(PUNCT ".")
(ID "name")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "FileExistsError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "rename")
(PUNCT "(")
(ID "new_file")
(PUNCT ".")
(ID "name")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT "rb+")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "=")
(ID "new_toc")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pending")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pending_sync")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_lock_file")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "dotlock")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_pre_mailbox_hook")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Called before writing the mailbox to file f.")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_pre_message_hook")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Called before writing each message to file f.")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_post_message_hook")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Called after writing each message to file f.")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Flush and close the mailbox.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "flush")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "unlock")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_lookup")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return (start, stop) or raise KeyError.")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_toc")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_generate_toc")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "key")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(LIT "No message with key: %s")
(PUNCT "%")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_append_message")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Append message to mailbox and return (start, stop) offsets.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(ID "before")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(KEYWORD and)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_pending")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_pre_mailbox_hook")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_pre_message_hook")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ")")
(NEWLINE)
(ID "offsets")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_install_message")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_post_message_hook")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "BaseException")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "truncate")
(PUNCT "(")
(ID "before")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "flush")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file_length")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "offsets")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_mboxMMDF")
(PUNCT "(")
(ID "_singlefileMailbox")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "An mbox or MMDF mailbox.")
(NEWLINE)
(ID "_mangle_from_")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID "get_message")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a Message representation or raise a KeyError.")
(NEWLINE)
(ID "start")
(PUNCT ",")
(ID "stop")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "start")
(PUNCT ")")
(NEWLINE)
(ID "from_line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "linesep")
(PUNCT ",")
(LIT #"")
(PUNCT ")")
(NEWLINE)
(ID "string")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "stop")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "msg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_message_factory")
(PUNCT "(")
(ID "string")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "linesep")
(PUNCT ",")
(LIT #"\n")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "msg")
(PUNCT ".")
(ID "set_from")
(PUNCT "(")
(ID "from_line")
(PUNCT "[")
(LIT 5)
(PUNCT ":")
(PUNCT "]")
(PUNCT ".")
(ID "decode")
(PUNCT "(")
(LIT "ascii")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "msg")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_string")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "from_")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a string representation or raise a KeyError.")
(NEWLINE)
(KEYWORD return)
(ID "email")
(PUNCT ".")
(ID "message_from_bytes")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_bytes")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(PUNCT ".")
(ID "as_string")
(PUNCT "(")
(ID "unixfrom")
(PUNCT "=")
(ID "from_")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_bytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "from_")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a string representation or raise a KeyError.")
(NEWLINE)
(ID "start")
(PUNCT ",")
(ID "stop")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "start")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "from_")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "string")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "stop")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "string")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "linesep")
(PUNCT ",")
(LIT #"\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_file")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "from_")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a file-like representation or raise a KeyError.")
(NEWLINE)
(ID "start")
(PUNCT ",")
(ID "stop")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "start")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "from_")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_PartialFile")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "stop")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_install_message")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Format a message and blindly write to self._file.")
(NEWLINE)
(ID "from_line")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_string_to_bytes")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "bytes")
(PUNCT ")")
(KEYWORD and)
(ID "message")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT #"From ")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "newline")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT #"\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "newline")
(PUNCT "!=")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "from_line")
(PUNCT "=")
(ID "message")
(PUNCT "[")
(PUNCT ":")
(ID "newline")
(PUNCT "]")
(NEWLINE)
(ID "message")
(PUNCT "=")
(ID "message")
(PUNCT "[")
(ID "newline")
(PUNCT "+")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "from_line")
(PUNCT "=")
(ID "message")
(NEWLINE)
(ID "message")
(PUNCT "=")
(LIT #"")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "_mboxMMDFMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "author")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "get_from")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "ascii")
(PUNCT ")")
(NEWLINE)
(ID "from_line")
(PUNCT "=")
(LIT #"From ")
(PUNCT "+")
(ID "author")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "email")
(PUNCT ".")
(ID "message")
(PUNCT ".")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "from_line")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "get_unixfrom")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "from_line")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "from_line")
(PUNCT "=")
(ID "from_line")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "ascii")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "from_line")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "from_line")
(PUNCT "=")
(LIT #"From MAILER-DAEMON ")
(PUNCT "+")
(ID "time")
(PUNCT ".")
(ID "asctime")
(PUNCT "(")
(ID "time")
(PUNCT ".")
(ID "gmtime")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "start")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "from_line")
(PUNCT "+")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_dump_message")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_mangle_from_")
(PUNCT ")")
(NEWLINE)
(ID "stop")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID "start")
(PUNCT ",")
(ID "stop")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "mbox")
(PUNCT "(")
(ID "_mboxMMDF")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "A classic mbox mailbox.")
(NEWLINE)
(ID "_mangle_from_")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "_append_newline")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "factory")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "create")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize an mbox mailbox.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_message_factory")
(PUNCT "=")
(ID "mboxMessage")
(NEWLINE)
(ID "_mboxMMDF")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "factory")
(PUNCT ",")
(ID "create")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_post_message_hook")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Called after writing each message to file f.")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_generate_toc")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Generate key-to-(start, stop) table of contents.")
(NEWLINE)
(ID "starts")
(PUNCT ",")
(ID "stops")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "last_was_empty")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line_pos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT #"From ")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "stops")
(PUNCT ")")
(PUNCT "<")
(ID "len")
(PUNCT "(")
(ID "starts")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "last_was_empty")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stops")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "line_pos")
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stops")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "line_pos")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "starts")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "line_pos")
(PUNCT ")")
(NEWLINE)
(ID "last_was_empty")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "last_was_empty")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stops")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "line_pos")
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stops")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "line_pos")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "line")
(PUNCT "==")
(ID "linesep")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "last_was_empty")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "last_was_empty")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "=")
(ID "dict")
(PUNCT "(")
(ID "enumerate")
(PUNCT "(")
(ID "zip")
(PUNCT "(")
(ID "starts")
(PUNCT ",")
(ID "stops")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_next_key")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file_length")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "MMDF")
(PUNCT "(")
(ID "_mboxMMDF")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "An MMDF mailbox.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "factory")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "create")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize an MMDF mailbox.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_message_factory")
(PUNCT "=")
(ID "MMDFMessage")
(NEWLINE)
(ID "_mboxMMDF")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "factory")
(PUNCT ",")
(ID "create")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_pre_message_hook")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Called before writing each message to file f.")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"\1\1\1\1")
(PUNCT "+")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_post_message_hook")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Called after writing each message to file f.")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "linesep")
(PUNCT "+")
(LIT #"\1\1\1\1")
(PUNCT "+")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_generate_toc")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Generate key-to-(start, stop) table of contents.")
(NEWLINE)
(ID "starts")
(PUNCT ",")
(ID "stops")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "next_pos")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line_pos")
(PUNCT "=")
(ID "next_pos")
(NEWLINE)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "next_pos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT #"\1\1\1\1")
(PUNCT "+")
(ID "linesep")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "starts")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "next_pos")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line_pos")
(PUNCT "=")
(ID "next_pos")
(NEWLINE)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "next_pos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT "==")
(LIT #"\1\1\1\1")
(PUNCT "+")
(ID "linesep")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stops")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "line_pos")
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stops")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "line_pos")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "=")
(ID "dict")
(PUNCT "(")
(ID "enumerate")
(PUNCT "(")
(ID "zip")
(PUNCT "(")
(ID "starts")
(PUNCT ",")
(ID "stops")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_next_key")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file_length")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "MH")
(PUNCT "(")
(ID "Mailbox")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "An MH mailbox.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "factory")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "create")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize an MH instance.")
(NEWLINE)
(ID "Mailbox")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "factory")
(PUNCT ",")
(ID "create")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "create")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "mkdir")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT 448)
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT ".mh_sequences")
(PUNCT ")")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "O_CREAT")
(PUNCT "|")
(ID "os")
(PUNCT ".")
(ID "O_EXCL")
(PUNCT "|")
(ID "os")
(PUNCT ".")
(ID "O_WRONLY")
(PUNCT ",")
(LIT 384)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "NoSuchMailboxError")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Add message and return assigned key.")
(NEWLINE)
(ID "keys")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "keys")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_key")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_key")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(ID "keys")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "new_path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "new_key")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "f")
(PUNCT "=")
(ID "_create_carefully")
(PUNCT "(")
(ID "new_path")
(PUNCT ")")
(NEWLINE)
(ID "closed")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_lock_file")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_dump_message")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "BaseException")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_unlock_file")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "_sync_close")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(ID "closed")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "new_path")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "MHMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_dump_sequences")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "new_key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_unlock_file")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "closed")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_sync_close")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "new_key")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "remove")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Remove the keyed message; raise KeyError if it doesn't exist.")
(NEWLINE)
(ID "path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(LIT "rb+")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "errno")
(PUNCT "==")
(ID "errno")
(PUNCT ".")
(ID "ENOENT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(LIT "No message with key: %s")
(PUNCT "%")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__setitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Replace the keyed message; raise KeyError if it doesn't exist.")
(NEWLINE)
(ID "path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(LIT "rb+")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "errno")
(PUNCT "==")
(ID "errno")
(PUNCT ".")
(ID "ENOENT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(LIT "No message with key: %s")
(PUNCT "%")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_lock_file")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "O_WRONLY")
(PUNCT "|")
(ID "os")
(PUNCT ".")
(ID "O_TRUNC")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_dump_message")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "MHMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_dump_sequences")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_unlock_file")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_sync_close")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_message")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a Message representation or raise a KeyError.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "rb+")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "errno")
(PUNCT "==")
(ID "errno")
(PUNCT ".")
(ID "ENOENT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(LIT "No message with key: %s")
(PUNCT "%")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD with)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_lock_file")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "MHMessage")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_unlock_file")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "key_list")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "get_sequences")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "key")
(KEYWORD in)
(ID "key_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT ".")
(ID "add_sequence")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "msg")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_bytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a bytes representation or raise a KeyError.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "rb+")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "errno")
(PUNCT "==")
(ID "errno")
(PUNCT ".")
(ID "ENOENT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(LIT "No message with key: %s")
(PUNCT "%")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD with)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_lock_file")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "f")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "linesep")
(PUNCT ",")
(LIT #"\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_unlock_file")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_file")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a file-like representation or raise a KeyError.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "errno")
(PUNCT "==")
(ID "errno")
(PUNCT ".")
(ID "ENOENT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(LIT "No message with key: %s")
(PUNCT "%")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "_ProxyFile")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "iterkeys")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return an iterator over keys.")
(NEWLINE)
(KEYWORD return)
(ID "iter")
(PUNCT "(")
(ID "sorted")
(PUNCT "(")
(ID "int")
(PUNCT "(")
(ID "entry")
(PUNCT ")")
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "os")
(PUNCT ".")
(ID "listdir")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ")")
(KEYWORD if)
(ID "entry")
(PUNCT ".")
(ID "isdigit")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__contains__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return True if the keyed message exists, False otherwise.")
(NEWLINE)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__len__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a count of messages in the mailbox.")
(NEWLINE)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "iterkeys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "lock")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Lock the mailbox.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT ".mh_sequences")
(PUNCT ")")
(PUNCT ",")
(LIT "rb+")
(PUNCT ")")
(NEWLINE)
(ID "_lock_file")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "unlock")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Unlock the mailbox if it is locked.")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_unlock_file")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ")")
(NEWLINE)
(ID "_sync_close")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_file")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "flush")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Write any pending changes to the disk.")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Flush and close the mailbox.")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_locked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "unlock")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "list_folders")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a list of folder names.")
(NEWLINE)
(ID "result")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "os")
(PUNCT ".")
(ID "listdir")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isdir")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_folder")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "folder")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return an MH instance for the named folder.")
(NEWLINE)
(KEYWORD return)
(ID "MH")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "folder")
(PUNCT ")")
(PUNCT ",")
(ID "factory")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_factory")
(PUNCT ",")
(ID "create")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_folder")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "folder")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create a folder and return an MH instance representing it.")
(NEWLINE)
(KEYWORD return)
(ID "MH")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "folder")
(PUNCT ")")
(PUNCT ",")
(ID "factory")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_factory")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "remove_folder")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "folder")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Delete the named folder, which must be empty.")
(NEWLINE)
(ID "path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "folder")
(PUNCT ")")
(NEWLINE)
(ID "entries")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "listdir")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "entries")
(PUNCT "==")
(PUNCT "[")
(LIT ".mh_sequences")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(LIT ".mh_sequences")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "entries")
(PUNCT "==")
(PUNCT "[")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "NotEmptyError")
(PUNCT "(")
(LIT "Folder not empty: %s")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "os")
(PUNCT ".")
(ID "rmdir")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_sequences")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a name-to-key-list dictionary to define each sequence.")
(NEWLINE)
(ID "results")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT ".mh_sequences")
(PUNCT ")")
(PUNCT ",")
(LIT "r")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(LIT "ASCII")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "all_keys")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "line")
(KEYWORD in)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT ",")
(ID "contents")
(PUNCT "=")
(ID "line")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ":")
(PUNCT ")")
(NEWLINE)
(ID "keys")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "spec")
(KEYWORD in)
(ID "contents")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "spec")
(PUNCT ".")
(ID "isdigit")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "keys")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "int")
(PUNCT "(")
(ID "spec")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "start")
(PUNCT ",")
(ID "stop")
(PUNCT "=")
(PUNCT "(")
(ID "int")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(KEYWORD for)
(ID "x")
(KEYWORD in)
(ID "spec")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "-")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "keys")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "range")
(PUNCT "(")
(ID "start")
(PUNCT ",")
(ID "stop")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "results")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(PUNCT "[")
(ID "key")
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "sorted")
(PUNCT "(")
(ID "keys")
(PUNCT ")")
(KEYWORD if)
(ID "key")
(KEYWORD in)
(ID "all_keys")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "results")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "results")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "FormatError")
(PUNCT "(")
(LIT "Invalid sequence specification: %s")
(PUNCT "%")
(ID "line")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "results")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_sequences")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sequences")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set sequences using the given name-to-key-list dictionary.")
(NEWLINE)
(ID "f")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(LIT ".mh_sequences")
(PUNCT ")")
(PUNCT ",")
(LIT "r+")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(LIT "ASCII")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "f")
(PUNCT ".")
(ID "name")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "O_WRONLY")
(PUNCT "|")
(ID "os")
(PUNCT ".")
(ID "O_TRUNC")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "keys")
(KEYWORD in)
(ID "sequences")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "keys")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "name")
(PUNCT "+")
(LIT ":")
(PUNCT ")")
(NEWLINE)
(ID "prev")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "completing")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "sorted")
(PUNCT "(")
(ID "set")
(PUNCT "(")
(ID "keys")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "key")
(PUNCT "-")
(LIT 1)
(PUNCT "==")
(ID "prev")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "completing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "completing")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "-")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "completing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "completing")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "%s %s")
(PUNCT "%")
(PUNCT "(")
(ID "prev")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT " %s")
(PUNCT "%")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "prev")
(PUNCT "=")
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "completing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "str")
(PUNCT "(")
(ID "prev")
(PUNCT ")")
(PUNCT "+")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_sync_close")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "pack")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Re-name messages to eliminate numbering gaps. Invalidates keys.")
(NEWLINE)
(ID "sequences")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_sequences")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "prev")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "changes")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "iterkeys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "key")
(PUNCT "-")
(LIT 1)
(PUNCT "!=")
(ID "prev")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "changes")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "prev")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "os")
(PUNCT ",")
(LIT "link")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "link")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "prev")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "unlink")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "rename")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_path")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "prev")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "prev")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_next_key")
(PUNCT "=")
(ID "prev")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "changes")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "key_list")
(KEYWORD in)
(ID "sequences")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "old")
(PUNCT ",")
(ID "new")
(KEYWORD in)
(ID "changes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "old")
(KEYWORD in)
(ID "key_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key_list")
(PUNCT "[")
(ID "key_list")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(ID "old")
(PUNCT ")")
(PUNCT "]")
(PUNCT "=")
(ID "new")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "set_sequences")
(PUNCT "(")
(ID "sequences")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_dump_sequences")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Inspect a new MHMessage and update sequences appropriately.")
(NEWLINE)
(ID "pending_sequences")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "get_sequences")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "all_sequences")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_sequences")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "key_list")
(KEYWORD in)
(ID "all_sequences")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(KEYWORD in)
(ID "pending_sequences")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key_list")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "key")
(KEYWORD in)
(ID "key_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "key_list")
(PUNCT "[")
(ID "key_list")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "sequence")
(KEYWORD in)
(ID "pending_sequences")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "sequence")
(KEYWORD not)
(KEYWORD in)
(ID "all_sequences")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "all_sequences")
(PUNCT "[")
(ID "sequence")
(PUNCT "]")
(PUNCT "=")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "set_sequences")
(PUNCT "(")
(ID "all_sequences")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Babyl")
(PUNCT "(")
(ID "_singlefileMailbox")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "An Rmail-style Babyl mailbox.")
(NEWLINE)
(ID "_special_labels")
(PUNCT "=")
(ID "frozenset")
(PUNCT "(")
(PUNCT "(")
(LIT "unseen")
(PUNCT ",")
(LIT "deleted")
(PUNCT ",")
(LIT "filed")
(PUNCT ",")
(LIT "answered")
(PUNCT ",")
(LIT "forwarded")
(PUNCT ",")
(LIT "edited")
(PUNCT ",")
(LIT "resent")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "factory")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "create")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize a Babyl mailbox.")
(NEWLINE)
(ID "_singlefileMailbox")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "factory")
(PUNCT ",")
(ID "create")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Add message and return assigned key.")
(NEWLINE)
(ID "key")
(PUNCT "=")
(ID "_singlefileMailbox")
(PUNCT ".")
(ID "add")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "BabylMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "get_labels")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "remove")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Remove the keyed message; raise KeyError if it doesn't exist.")
(NEWLINE)
(ID "_singlefileMailbox")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__setitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Replace the keyed message; raise KeyError if it doesn't exist.")
(NEWLINE)
(ID "_singlefileMailbox")
(PUNCT ".")
(ID "__setitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "BabylMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "get_labels")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_message")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a Message representation or raise a KeyError.")
(NEWLINE)
(ID "start")
(PUNCT ",")
(ID "stop")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "start")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "original_headers")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT "==")
(LIT #"*** EOOH ***")
(PUNCT "+")
(ID "linesep")
(KEYWORD or)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "original_headers")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "line")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "linesep")
(PUNCT ",")
(LIT #"\n")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "visible_headers")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT "==")
(ID "linesep")
(KEYWORD or)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "visible_headers")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "line")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "linesep")
(PUNCT ",")
(LIT #"\n")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "n")
(PUNCT "=")
(ID "stop")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "n")
(PUNCT ">=")
(LIT 0)
(NEWLINE)
(ID "body")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(NEWLINE)
(ID "body")
(PUNCT "=")
(ID "body")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "linesep")
(PUNCT ",")
(LIT #"\n")
(PUNCT ")")
(NEWLINE)
(ID "msg")
(PUNCT "=")
(ID "BabylMessage")
(PUNCT "(")
(ID "original_headers")
(PUNCT ".")
(ID "getvalue")
(PUNCT "(")
(PUNCT ")")
(PUNCT "+")
(ID "body")
(PUNCT ")")
(NEWLINE)
(ID "msg")
(PUNCT ".")
(ID "set_visible")
(PUNCT "(")
(ID "visible_headers")
(PUNCT ".")
(ID "getvalue")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "key")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT ".")
(ID "set_labels")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "msg")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_bytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a string representation or raise a KeyError.")
(NEWLINE)
(ID "start")
(PUNCT ",")
(ID "stop")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "start")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "original_headers")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT "==")
(LIT #"*** EOOH ***")
(PUNCT "+")
(ID "linesep")
(KEYWORD or)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "original_headers")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "line")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "linesep")
(PUNCT ",")
(LIT #"\n")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT "==")
(ID "linesep")
(KEYWORD or)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "headers")
(PUNCT "=")
(ID "original_headers")
(PUNCT ".")
(ID "getvalue")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "n")
(PUNCT "=")
(ID "stop")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "n")
(PUNCT ">=")
(LIT 0)
(NEWLINE)
(ID "data")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(NEWLINE)
(ID "data")
(PUNCT "=")
(ID "data")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "linesep")
(PUNCT ",")
(LIT #"\n")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "headers")
(PUNCT "+")
(ID "data")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_file")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a file-like representation or raise a KeyError.")
(NEWLINE)
(KEYWORD return)
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_bytes")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT #"\n")
(PUNCT ",")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_labels")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a list of user-defined labels in the mailbox.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_lookup")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "labels")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "label_list")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "labels")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "label_list")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "labels")
(PUNCT ".")
(ID "difference_update")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_special_labels")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "labels")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_generate_toc")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Generate key-to-(start, stop) table of contents.")
(NEWLINE)
(ID "starts")
(PUNCT ",")
(ID "stops")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "next_pos")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "label_lists")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line_pos")
(PUNCT "=")
(ID "next_pos")
(NEWLINE)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "next_pos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT "==")
(LIT #"\37\f")
(PUNCT "+")
(ID "linesep")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "stops")
(PUNCT ")")
(PUNCT "<")
(ID "len")
(PUNCT "(")
(ID "starts")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stops")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "line_pos")
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "starts")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "next_pos")
(PUNCT ")")
(NEWLINE)
(ID "labels")
(PUNCT "=")
(PUNCT "[")
(ID "label")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID "label")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT #",")
(PUNCT ")")
(KEYWORD if)
(ID "label")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(ID "label_lists")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "labels")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "line")
(PUNCT "==")
(LIT #"\37")
(KEYWORD or)
(ID "line")
(PUNCT "==")
(LIT #"\37")
(PUNCT "+")
(ID "linesep")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "stops")
(PUNCT ")")
(PUNCT "<")
(ID "len")
(PUNCT "(")
(ID "starts")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stops")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "line_pos")
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stops")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "line_pos")
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT "=")
(ID "dict")
(PUNCT "(")
(ID "enumerate")
(PUNCT "(")
(ID "zip")
(PUNCT "(")
(ID "starts")
(PUNCT ",")
(ID "stops")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT "=")
(ID "dict")
(PUNCT "(")
(ID "enumerate")
(PUNCT "(")
(ID "label_lists")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_next_key")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_toc")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file_length")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_pre_mailbox_hook")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Called before writing the mailbox to file f.")
(NEWLINE)
(ID "babyl")
(PUNCT "=")
(LIT #"BABYL OPTIONS:")
(PUNCT "+")
(ID "linesep")
(NEWLINE)
(ID "babyl")
(PUNCT "+=")
(LIT #"Version: 5")
(PUNCT "+")
(ID "linesep")
(NEWLINE)
(ID "labels")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_labels")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "labels")
(PUNCT "=")
(PUNCT "(")
(ID "label")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID "label")
(KEYWORD in)
(ID "labels")
(PUNCT ")")
(NEWLINE)
(ID "babyl")
(PUNCT "+=")
(LIT #"Labels:")
(PUNCT "+")
(LIT #",")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "labels")
(PUNCT ")")
(PUNCT "+")
(ID "linesep")
(NEWLINE)
(ID "babyl")
(PUNCT "+=")
(LIT #"\37")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "babyl")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_pre_message_hook")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Called before writing each message to file f.")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"\f")
(PUNCT "+")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_post_message_hook")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Called after writing each message to file f.")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "linesep")
(PUNCT "+")
(LIT #"\37")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_install_message")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Write message contents and return (start, stop).")
(NEWLINE)
(ID "start")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "BabylMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "special_labels")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "labels")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "label")
(KEYWORD in)
(ID "message")
(PUNCT ".")
(ID "get_labels")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "label")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_special_labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "special_labels")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "label")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "labels")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "label")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"1")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "label")
(KEYWORD in)
(ID "special_labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #", ")
(PUNCT "+")
(ID "label")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #",,")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "label")
(KEYWORD in)
(ID "labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #" ")
(PUNCT "+")
(ID "label")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(PUNCT ")")
(PUNCT "+")
(LIT #",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"1,,")
(PUNCT "+")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "email")
(PUNCT ".")
(ID "message")
(PUNCT ".")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "orig_buffer")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "orig_generator")
(PUNCT "=")
(ID "email")
(PUNCT ".")
(ID "generator")
(PUNCT ".")
(ID "BytesGenerator")
(PUNCT "(")
(ID "orig_buffer")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "orig_generator")
(PUNCT ".")
(ID "flatten")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(ID "orig_buffer")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "orig_buffer")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "line")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT #"\n")
(PUNCT ",")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT "==")
(LIT #"\n")
(KEYWORD or)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"*** EOOH ***")
(PUNCT "+")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "BabylMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "vis_buffer")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "vis_generator")
(PUNCT "=")
(ID "email")
(PUNCT ".")
(ID "generator")
(PUNCT ".")
(ID "BytesGenerator")
(PUNCT "(")
(ID "vis_buffer")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "vis_generator")
(PUNCT ".")
(ID "flatten")
(PUNCT "(")
(ID "message")
(PUNCT ".")
(ID "get_visible")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "vis_buffer")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "line")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT #"\n")
(PUNCT ",")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT "==")
(LIT #"\n")
(KEYWORD or)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "orig_buffer")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "orig_buffer")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "line")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT #"\n")
(PUNCT ",")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT "==")
(LIT #"\n")
(KEYWORD or)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "buffer")
(PUNCT "=")
(ID "orig_buffer")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 4096)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "buffer")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT #"\n")
(PUNCT ",")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(PUNCT "(")
(ID "bytes")
(PUNCT ",")
(ID "str")
(PUNCT ",")
(ID "io")
(PUNCT ".")
(ID "StringIO")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "io")
(PUNCT ".")
(ID "StringIO")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "Use of StringIO input is deprecated, ")
(LIT "use BytesIO instead")
(PUNCT ",")
(ID "DeprecationWarning")
(PUNCT ",")
(LIT 3)
(PUNCT ")")
(NEWLINE)
(ID "message")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "getvalue")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_string_to_bytes")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "body_start")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT #"\n\n")
(PUNCT ")")
(PUNCT "+")
(LIT 2)
(NEWLINE)
(KEYWORD if)
(ID "body_start")
(PUNCT "-")
(LIT 2)
(PUNCT "!=")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "message")
(PUNCT "[")
(PUNCT ":")
(ID "body_start")
(PUNCT "]")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT #"\n")
(PUNCT ",")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"*** EOOH ***")
(PUNCT "+")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "message")
(PUNCT "[")
(PUNCT ":")
(ID "body_start")
(PUNCT "]")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT #"\n")
(PUNCT ",")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "message")
(PUNCT "[")
(ID "body_start")
(PUNCT ":")
(PUNCT "]")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT #"\n")
(PUNCT ",")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"*** EOOH ***")
(PUNCT "+")
(ID "linesep")
(PUNCT "+")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "message")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT #"\n")
(PUNCT ",")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "hasattr")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(LIT "readline")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(LIT "buffer")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "Use of text mode files is deprecated, ")
(LIT "use a binary mode file instead")
(PUNCT ",")
(ID "DeprecationWarning")
(PUNCT ",")
(LIT 3)
(PUNCT ")")
(NEWLINE)
(ID "message")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "buffer")
(NEWLINE)
(DEDENT)
(ID "original_pos")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "first_pass")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT #"\r\n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 2)
(PUNCT "]")
(PUNCT "+")
(LIT #"\n")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "line")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT #"\r")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "+")
(LIT #"\n")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "line")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT #"\n")
(PUNCT ",")
(ID "linesep")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT "==")
(LIT #"\n")
(KEYWORD or)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "first_pass")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "first_pass")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #"*** EOOH ***")
(PUNCT "+")
(ID "linesep")
(PUNCT ")")
(NEWLINE)
(ID "message")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "original_pos")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "line")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT #"\r\n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 2)
(PUNCT "]")
(PUNCT "+")
(ID "linesep")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "line")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT #"\r")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "+")
(ID "linesep")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "line")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT #"\n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "+")
(ID "linesep")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "Invalid message type: %s")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "stop")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID "start")
(PUNCT ",")
(ID "stop")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Message")
(PUNCT "(")
(ID "email")
(PUNCT ".")
(ID "message")
(PUNCT ".")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Message with mailbox-format-specific properties.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize a Message instance.")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "email")
(PUNCT ".")
(ID "message")
(PUNCT ".")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_become_message")
(PUNCT "(")
(ID "copy")
(PUNCT ".")
(ID "deepcopy")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "_explain_to")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "bytes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_become_message")
(PUNCT "(")
(ID "email")
(PUNCT ".")
(ID "message_from_bytes")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_become_message")
(PUNCT "(")
(ID "email")
(PUNCT ".")
(ID "message_from_string")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "io")
(PUNCT ".")
(ID "TextIOWrapper")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_become_message")
(PUNCT "(")
(ID "email")
(PUNCT ".")
(ID "message_from_file")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "hasattr")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(LIT "read")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_become_message")
(PUNCT "(")
(ID "email")
(PUNCT ".")
(ID "message_from_binary_file")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "message")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "email")
(PUNCT ".")
(ID "message")
(PUNCT ".")
(ID "Message")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "Invalid message type: %s")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_become_message")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Assume the non-format-specific state of message.")
(NEWLINE)
(ID "type_specific")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(LIT "_type_specific_attributes")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "message")
(PUNCT ".")
(ID "__dict__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(KEYWORD not)
(KEYWORD in)
(ID "type_specific")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "__dict__")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "__dict__")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_explain_to")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Copy format-specific state to message insofar as possible.")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "Cannot convert to specified type")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "MaildirMessage")
(PUNCT "(")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Message with Maildir-specific properties.")
(NEWLINE)
(ID "_type_specific_attributes")
(PUNCT "=")
(PUNCT "[")
(LIT "_subdir")
(PUNCT ",")
(LIT "_info")
(PUNCT ",")
(LIT "_date")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize a MaildirMessage instance.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_subdir")
(PUNCT "=")
(LIT "new")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_info")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_date")
(PUNCT "=")
(ID "time")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "Message")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_subdir")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return 'new' or 'cur'.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_subdir")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_subdir")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "subdir")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set subdir to 'new' or 'cur'.")
(NEWLINE)
(KEYWORD if)
(ID "subdir")
(PUNCT "==")
(LIT "new")
(KEYWORD or)
(ID "subdir")
(PUNCT "==")
(LIT "cur")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_subdir")
(PUNCT "=")
(ID "subdir")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "subdir must be 'new' or 'cur': %s")
(PUNCT "%")
(ID "subdir")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_flags")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return as a string the flags that are set.")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_info")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "2,")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_info")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "set_flags")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "flags")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set the given flags and unset all others.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_info")
(PUNCT "=")
(LIT "2,")
(PUNCT "+")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "sorted")
(PUNCT "(")
(ID "flags")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_flag")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "flag")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set the given flag(s) without changing others.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "set_flags")
(PUNCT "(")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_flags")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT "|")
(ID "set")
(PUNCT "(")
(ID "flag")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "remove_flag")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "flag")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Unset the given string flag(s) without changing others.")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "get_flags")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "set_flags")
(PUNCT "(")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_flags")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT "-")
(ID "set")
(PUNCT "(")
(ID "flag")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_date")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return delivery date of message, in seconds since the epoch.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_date")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_date")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "date")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set delivery date of message, in seconds since the epoch.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_date")
(PUNCT "=")
(ID "float")
(PUNCT "(")
(ID "date")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "can't convert to float: %s")
(PUNCT "%")
(ID "date")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_info")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Get the message's \"info\" as a string.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_info")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_info")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "info")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set the message's \"info\" string.")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "info")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_info")
(PUNCT "=")
(ID "info")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "info must be a string: %s")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "info")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_explain_to")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Copy Maildir-specific state to message insofar as possible.")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "MaildirMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "set_flags")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_flags")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "message")
(PUNCT ".")
(ID "set_subdir")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_subdir")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "message")
(PUNCT ".")
(ID "set_date")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_date")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "_mboxMMDFMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_flags")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "S")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "R")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "get_subdir")
(PUNCT "(")
(PUNCT ")")
(PUNCT "==")
(LIT "cur")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "O")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "T")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "D")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "F")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "F")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "R")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "A")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "message")
(PUNCT ".")
(ID "set_from")
(PUNCT "(")
(LIT "MAILER-DAEMON")
(PUNCT ",")
(ID "time")
(PUNCT ".")
(ID "gmtime")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_date")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "MHMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_flags")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "S")
(KEYWORD not)
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_sequence")
(PUNCT "(")
(LIT "unseen")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "R")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_sequence")
(PUNCT "(")
(LIT "replied")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "F")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_sequence")
(PUNCT "(")
(LIT "flagged")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "BabylMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_flags")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "S")
(KEYWORD not)
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_label")
(PUNCT "(")
(LIT "unseen")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "T")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_label")
(PUNCT "(")
(LIT "deleted")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "R")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_label")
(PUNCT "(")
(LIT "answered")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "P")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_label")
(PUNCT "(")
(LIT "forwarded")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "Cannot convert to specified type: %s")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_mboxMMDFMessage")
(PUNCT "(")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Message with mbox- or MMDF-specific properties.")
(NEWLINE)
(ID "_type_specific_attributes")
(PUNCT "=")
(PUNCT "[")
(LIT "_from")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize an mboxMMDFMessage instance.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "set_from")
(PUNCT "(")
(LIT "MAILER-DAEMON")
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "email")
(PUNCT ".")
(ID "message")
(PUNCT ".")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "unixfrom")
(PUNCT "=")
(ID "message")
(PUNCT ".")
(ID "get_unixfrom")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "unixfrom")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID "unixfrom")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "From ")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "set_from")
(PUNCT "(")
(ID "unixfrom")
(PUNCT "[")
(LIT 5)
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "Message")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_from")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return contents of \"From \" line.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_from")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_from")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "from_")
(PUNCT ",")
(ID "time_")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set \"From \" line, formatting and appending time_ if specified.")
(NEWLINE)
(KEYWORD if)
(ID "time_")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "time_")
(KEYWORD is)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "time_")
(PUNCT "=")
(ID "time")
(PUNCT ".")
(ID "gmtime")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "from_")
(PUNCT "+=")
(LIT " ")
(PUNCT "+")
(ID "time")
(PUNCT ".")
(ID "asctime")
(PUNCT "(")
(ID "time_")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_from")
(PUNCT "=")
(ID "from_")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_flags")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return as a string the flags that are set.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "Status")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "X-Status")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_flags")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "flags")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set the given flags and unset all others.")
(NEWLINE)
(ID "flags")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "flags")
(PUNCT ")")
(NEWLINE)
(ID "status_flags")
(PUNCT ",")
(ID "xstatus_flags")
(PUNCT "=")
(LIT "")
(PUNCT ",")
(LIT "")
(NEWLINE)
(KEYWORD for)
(ID "flag")
(KEYWORD in)
(PUNCT "(")
(LIT "R")
(PUNCT ",")
(LIT "O")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "flag")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "status_flags")
(PUNCT "+=")
(ID "flag")
(NEWLINE)
(ID "flags")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "flag")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "flag")
(KEYWORD in)
(PUNCT "(")
(LIT "D")
(PUNCT ",")
(LIT "F")
(PUNCT ",")
(LIT "A")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "flag")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "xstatus_flags")
(PUNCT "+=")
(ID "flag")
(NEWLINE)
(ID "flags")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "flag")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "xstatus_flags")
(PUNCT "+=")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "sorted")
(PUNCT "(")
(ID "flags")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "replace_header")
(PUNCT "(")
(LIT "Status")
(PUNCT ",")
(ID "status_flags")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "add_header")
(PUNCT "(")
(LIT "Status")
(PUNCT ",")
(ID "status_flags")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "replace_header")
(PUNCT "(")
(LIT "X-Status")
(PUNCT ",")
(ID "xstatus_flags")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "add_header")
(PUNCT "(")
(LIT "X-Status")
(PUNCT ",")
(ID "xstatus_flags")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "add_flag")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "flag")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set the given flag(s) without changing others.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "set_flags")
(PUNCT "(")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_flags")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT "|")
(ID "set")
(PUNCT "(")
(ID "flag")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "remove_flag")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "flag")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Unset the given string flag(s) without changing others.")
(NEWLINE)
(KEYWORD if)
(LIT "Status")
(KEYWORD in)
(ID "self")
(KEYWORD or)
(LIT "X-Status")
(KEYWORD in)
(ID "self")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "set_flags")
(PUNCT "(")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_flags")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT "-")
(ID "set")
(PUNCT "(")
(ID "flag")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_explain_to")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Copy mbox- or MMDF-specific state to message insofar as possible.")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "MaildirMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_flags")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "O")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "set_subdir")
(PUNCT "(")
(LIT "cur")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "F")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "F")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "A")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "R")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "R")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "S")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "D")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "T")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD del)
(ID "message")
(PUNCT "[")
(LIT "status")
(PUNCT "]")
(NEWLINE)
(KEYWORD del)
(ID "message")
(PUNCT "[")
(LIT "x-status")
(PUNCT "]")
(NEWLINE)
(ID "maybe_date")
(PUNCT "=")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_from")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(PUNCT "-")
(LIT 5)
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "set_date")
(PUNCT "(")
(ID "calendar")
(PUNCT ".")
(ID "timegm")
(PUNCT "(")
(ID "time")
(PUNCT ".")
(ID "strptime")
(PUNCT "(")
(ID "maybe_date")
(PUNCT ",")
(LIT "%a %b %d %H:%M:%S %Y")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "ValueError")
(PUNCT ",")
(ID "OverflowError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "_mboxMMDFMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "set_flags")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_flags")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "message")
(PUNCT ".")
(ID "set_from")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_from")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "MHMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_flags")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "R")
(KEYWORD not)
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_sequence")
(PUNCT "(")
(LIT "unseen")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "A")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_sequence")
(PUNCT "(")
(LIT "replied")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "F")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_sequence")
(PUNCT "(")
(LIT "flagged")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD del)
(ID "message")
(PUNCT "[")
(LIT "status")
(PUNCT "]")
(NEWLINE)
(KEYWORD del)
(ID "message")
(PUNCT "[")
(LIT "x-status")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "BabylMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_flags")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "R")
(KEYWORD not)
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_label")
(PUNCT "(")
(LIT "unseen")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "D")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_label")
(PUNCT "(")
(LIT "deleted")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "A")
(KEYWORD in)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_label")
(PUNCT "(")
(LIT "answered")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD del)
(ID "message")
(PUNCT "[")
(LIT "status")
(PUNCT "]")
(NEWLINE)
(KEYWORD del)
(ID "message")
(PUNCT "[")
(LIT "x-status")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "Cannot convert to specified type: %s")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "mboxMessage")
(PUNCT "(")
(ID "_mboxMMDFMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Message with mbox-specific properties.")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "MHMessage")
(PUNCT "(")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Message with MH-specific properties.")
(NEWLINE)
(ID "_type_specific_attributes")
(PUNCT "=")
(PUNCT "[")
(LIT "_sequences")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize an MHMessage instance.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_sequences")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "Message")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_sequences")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a list of sequences that include the message.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_sequences")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_sequences")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sequences")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set the list of sequences that include the message.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_sequences")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "sequences")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_sequence")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sequence")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Add sequence to list of sequences including the message.")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "sequence")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "sequence")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_sequences")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_sequences")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "sequence")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "sequence type must be str: %s")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "sequence")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "remove_sequence")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sequence")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Remove sequence from the list of sequences including the message.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_sequences")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "sequence")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_explain_to")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Copy MH-specific state to message insofar as possible.")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "MaildirMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sequences")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_sequences")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "unseen")
(KEYWORD in)
(ID "sequences")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "set_subdir")
(PUNCT "(")
(LIT "cur")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "set_subdir")
(PUNCT "(")
(LIT "cur")
(PUNCT ")")
(NEWLINE)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "S")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "flagged")
(KEYWORD in)
(ID "sequences")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "F")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "replied")
(KEYWORD in)
(ID "sequences")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "R")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "_mboxMMDFMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sequences")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_sequences")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "unseen")
(KEYWORD not)
(KEYWORD in)
(ID "sequences")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "RO")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "O")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "flagged")
(KEYWORD in)
(ID "sequences")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "F")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "replied")
(KEYWORD in)
(ID "sequences")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "A")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "MHMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "sequence")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "get_sequences")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_sequence")
(PUNCT "(")
(ID "sequence")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "BabylMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sequences")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_sequences")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "unseen")
(KEYWORD in)
(ID "sequences")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_label")
(PUNCT "(")
(LIT "unseen")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "replied")
(KEYWORD in)
(ID "sequences")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_label")
(PUNCT "(")
(LIT "answered")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "Cannot convert to specified type: %s")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "BabylMessage")
(PUNCT "(")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Message with Babyl-specific properties.")
(NEWLINE)
(ID "_type_specific_attributes")
(PUNCT "=")
(PUNCT "[")
(LIT "_labels")
(PUNCT ",")
(LIT "_visible")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize an BabylMessage instance.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_visible")
(PUNCT "=")
(ID "Message")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "Message")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_labels")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a list of labels on the message.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_labels")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "labels")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set the list of labels on the message.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "labels")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_label")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "label")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Add label to list of labels on the message.")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "label")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "label")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "label")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "label must be a string: %s")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "label")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "remove_label")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "label")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Remove label from the list of labels on the message.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_labels")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "label")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_visible")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a Message representation of visible headers.")
(NEWLINE)
(KEYWORD return)
(ID "Message")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_visible")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_visible")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "visible")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set the Message representation of visible headers.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_visible")
(PUNCT "=")
(ID "Message")
(PUNCT "(")
(ID "visible")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "update_visible")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Update and/or sensibly generate a set of visible headers.")
(NEWLINE)
(KEYWORD for)
(ID "header")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_visible")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "header")
(KEYWORD in)
(ID "self")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_visible")
(PUNCT ".")
(ID "replace_header")
(PUNCT "(")
(ID "header")
(PUNCT ",")
(ID "self")
(PUNCT "[")
(ID "header")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_visible")
(PUNCT "[")
(ID "header")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "header")
(KEYWORD in)
(PUNCT "(")
(LIT "Date")
(PUNCT ",")
(LIT "From")
(PUNCT ",")
(LIT "Reply-To")
(PUNCT ",")
(LIT "To")
(PUNCT ",")
(LIT "CC")
(PUNCT ",")
(LIT "Subject")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "header")
(KEYWORD in)
(ID "self")
(KEYWORD and)
(ID "header")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_visible")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_visible")
(PUNCT "[")
(ID "header")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT "[")
(ID "header")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_explain_to")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Copy Babyl-specific state to message insofar as possible.")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "MaildirMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "labels")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_labels")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "unseen")
(KEYWORD in)
(ID "labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "set_subdir")
(PUNCT "(")
(LIT "cur")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "set_subdir")
(PUNCT "(")
(LIT "cur")
(PUNCT ")")
(NEWLINE)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "S")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "forwarded")
(KEYWORD in)
(ID "labels")
(KEYWORD or)
(LIT "resent")
(KEYWORD in)
(ID "labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "P")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "answered")
(KEYWORD in)
(ID "labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "R")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "deleted")
(KEYWORD in)
(ID "labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "T")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "_mboxMMDFMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "labels")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_labels")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "unseen")
(KEYWORD not)
(KEYWORD in)
(ID "labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "RO")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "O")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "deleted")
(KEYWORD in)
(ID "labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "D")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "answered")
(KEYWORD in)
(ID "labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_flag")
(PUNCT "(")
(LIT "A")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "MHMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "labels")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_labels")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "unseen")
(KEYWORD in)
(ID "labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_sequence")
(PUNCT "(")
(LIT "unseen")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "answered")
(KEYWORD in)
(ID "labels")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_sequence")
(PUNCT "(")
(LIT "replied")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "BabylMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "set_visible")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_visible")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "label")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "get_labels")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "message")
(PUNCT ".")
(ID "add_label")
(PUNCT "(")
(ID "label")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "Message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "Cannot convert to specified type: %s")
(PUNCT "%")
(ID "type")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "MMDFMessage")
(PUNCT "(")
(ID "_mboxMMDFMessage")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Message with MMDF-specific properties.")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "_ProxyFile")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "A read-only wrapper of a file.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ",")
(ID "pos")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize a _ProxyFile.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT "=")
(ID "f")
(NEWLINE)
(KEYWORD if)
(ID "pos")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_pos")
(PUNCT "=")
(ID "f")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_pos")
(PUNCT "=")
(ID "pos")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "read")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "size")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Read bytes.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "(")
(ID "size")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "read")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "read1")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "size")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Read bytes.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "(")
(ID "size")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "read1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "readline")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "size")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Read a line.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_read")
(PUNCT "(")
(ID "size")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readline")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "readlines")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sizehint")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Read multiple lines.")
(NEWLINE)
(ID "result")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "line")
(KEYWORD in)
(ID "self")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sizehint")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sizehint")
(PUNCT "-=")
(ID "len")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sizehint")
(PUNCT "<=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__iter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Iterate over lines.")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "StopIteration")
(NEWLINE)
(DEDENT)
(KEYWORD yield)
(ID "line")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "tell")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the position.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_pos")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "seek")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "offset")
(PUNCT ",")
(ID "whence")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Change position.")
(NEWLINE)
(KEYWORD if)
(ID "whence")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_pos")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "offset")
(PUNCT ",")
(ID "whence")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Close the file.")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "_file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(LIT "close")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_file")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_read")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "size")
(PUNCT ",")
(ID "read_method")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Read size bytes using read_method.")
(NEWLINE)
(KEYWORD if)
(ID "size")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "size")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_pos")
(PUNCT ")")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "read_method")
(PUNCT "(")
(ID "size")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__enter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Context management protocol support.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__exit__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "exc")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "readable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "readable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "writable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "writable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "seekable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "seekable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "flush")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "flush")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "closed")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "_file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ",")
(LIT "closed")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_file")
(PUNCT ".")
(ID "closed")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_PartialFile")
(PUNCT "(")
(ID "_ProxyFile")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "A read-only wrapper of part of a file.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ",")
(ID "start")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "stop")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize a _PartialFile.")
(NEWLINE)
(ID "_ProxyFile")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ",")
(ID "start")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_start")
(PUNCT "=")
(ID "start")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_stop")
(PUNCT "=")
(ID "stop")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tell")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the position with respect to start.")
(NEWLINE)
(KEYWORD return)
(ID "_ProxyFile")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_start")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "seek")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "offset")
(PUNCT ",")
(ID "whence")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Change position, possibly with respect to start or stop.")
(NEWLINE)
(KEYWORD if)
(ID "whence")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_pos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_start")
(NEWLINE)
(ID "whence")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "whence")
(PUNCT "==")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_pos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_stop")
(NEWLINE)
(ID "whence")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "_ProxyFile")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "offset")
(PUNCT ",")
(ID "whence")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_read")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "size")
(PUNCT ",")
(ID "read_method")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Read size bytes using read_method, honoring start and stop.")
(NEWLINE)
(ID "remaining")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_stop")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "_pos")
(NEWLINE)
(KEYWORD if)
(ID "remaining")
(PUNCT "<=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT #"")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "size")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID "size")
(PUNCT "<")
(LIT 0)
(KEYWORD or)
(ID "size")
(PUNCT ">")
(ID "remaining")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "size")
(PUNCT "=")
(ID "remaining")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_ProxyFile")
(PUNCT ".")
(ID "_read")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "size")
(PUNCT ",")
(ID "read_method")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "_file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_file")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_lock_file")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "dotlock")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Lock file f using lockf and dot locking.")
(NEWLINE)
(ID "dotlock_done")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "fcntl")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fcntl")
(PUNCT ".")
(ID "lockf")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "fcntl")
(PUNCT ".")
(ID "LOCK_EX")
(PUNCT "|")
(ID "fcntl")
(PUNCT ".")
(ID "LOCK_NB")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "errno")
(KEYWORD in)
(PUNCT "(")
(ID "errno")
(PUNCT ".")
(ID "EAGAIN")
(PUNCT ",")
(ID "errno")
(PUNCT ".")
(ID "EACCES")
(PUNCT ",")
(ID "errno")
(PUNCT ".")
(ID "EROFS")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ExternalClashError")
(PUNCT "(")
(LIT "lockf: lock unavailable: %s")
(PUNCT "%")
(ID "f")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "dotlock")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pre_lock")
(PUNCT "=")
(ID "_create_temporary")
(PUNCT "(")
(ID "f")
(PUNCT ".")
(ID "name")
(PUNCT "+")
(LIT ".lock")
(PUNCT ")")
(NEWLINE)
(ID "pre_lock")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "errno")
(KEYWORD in)
(PUNCT "(")
(ID "errno")
(PUNCT ".")
(ID "EACCES")
(PUNCT ",")
(ID "errno")
(PUNCT ".")
(ID "EROFS")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "os")
(PUNCT ",")
(LIT "link")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "link")
(PUNCT "(")
(ID "pre_lock")
(PUNCT ".")
(ID "name")
(PUNCT ",")
(ID "f")
(PUNCT ".")
(ID "name")
(PUNCT "+")
(LIT ".lock")
(PUNCT ")")
(NEWLINE)
(ID "dotlock_done")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "unlink")
(PUNCT "(")
(ID "pre_lock")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "rename")
(PUNCT "(")
(ID "pre_lock")
(PUNCT ".")
(ID "name")
(PUNCT ",")
(ID "f")
(PUNCT ".")
(ID "name")
(PUNCT "+")
(LIT ".lock")
(PUNCT ")")
(NEWLINE)
(ID "dotlock_done")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "FileExistsError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "pre_lock")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ExternalClashError")
(PUNCT "(")
(LIT "dot lock unavailable: %s")
(PUNCT "%")
(ID "f")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "fcntl")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fcntl")
(PUNCT ".")
(ID "lockf")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "fcntl")
(PUNCT ".")
(ID "LOCK_UN")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "dotlock_done")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "f")
(PUNCT ".")
(ID "name")
(PUNCT "+")
(LIT ".lock")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_unlock_file")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Unlock file f using lockf and dot locking.")
(NEWLINE)
(KEYWORD if)
(ID "fcntl")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fcntl")
(PUNCT ".")
(ID "lockf")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "fcntl")
(PUNCT ".")
(ID "LOCK_UN")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "f")
(PUNCT ".")
(ID "name")
(PUNCT "+")
(LIT ".lock")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "f")
(PUNCT ".")
(ID "name")
(PUNCT "+")
(LIT ".lock")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_create_carefully")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create a file if it doesn't exist and open for reading and writing.")
(NEWLINE)
(ID "fd")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "O_CREAT")
(PUNCT "|")
(ID "os")
(PUNCT ".")
(ID "O_EXCL")
(PUNCT "|")
(ID "os")
(PUNCT ".")
(ID "O_RDWR")
(PUNCT ",")
(LIT 438)
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "open")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(LIT "rb+")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_create_temporary")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create a temp file based on path and open for reading and writing.")
(NEWLINE)
(KEYWORD return)
(ID "_create_carefully")
(PUNCT "(")
(LIT "%s.%s.%s.%s")
(PUNCT "%")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "int")
(PUNCT "(")
(ID "time")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "gethostname")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "getpid")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_sync_flush")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Ensure changes to file f are physically on disk.")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "flush")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "os")
(PUNCT ",")
(LIT "fsync")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "fsync")
(PUNCT "(")
(ID "f")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_sync_close")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Close file f, ensuring all changes are physically on disk.")
(NEWLINE)
(ID "_sync_flush")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(ID "f")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "Error")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Raised for module-specific errors.")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "NoSuchMailboxError")
(PUNCT "(")
(ID "Error")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "The specified mailbox does not exist and won't be created.")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "NotEmptyError")
(PUNCT "(")
(ID "Error")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "The specified mailbox is not empty and deletion was requested.")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "ExternalClashError")
(PUNCT "(")
(ID "Error")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Another process caused an action to fail.")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "FormatError")
(PUNCT "(")
(ID "Error")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "A file appears to have an invalid format.")
(NEWLINE)
(DEDENT)
(ENDMARKER)
