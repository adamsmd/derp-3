(LIT "A parser of RFC 2822 and MIME email messages.")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "Parser")
(PUNCT ",")
(LIT "HeaderParser")
(PUNCT ",")
(LIT "BytesParser")
(PUNCT ",")
(LIT "BytesHeaderParser")
(PUNCT ",")
(LIT "FeedParser")
(PUNCT ",")
(LIT "BytesFeedParser")
(PUNCT "]")
(NEWLINE)
(KEYWORD from)
(ID "io")
(KEYWORD import)
(ID "StringIO")
(PUNCT ",")
(ID "TextIOWrapper")
(NEWLINE)
(KEYWORD from)
(ID "email")
(PUNCT ".")
(ID "feedparser")
(KEYWORD import)
(ID "FeedParser")
(PUNCT ",")
(ID "BytesFeedParser")
(NEWLINE)
(KEYWORD from)
(ID "email")
(PUNCT ".")
(ID "_policybase")
(KEYWORD import)
(ID "compat32")
(NEWLINE)
(KEYWORD class)
(ID "Parser")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "_class")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "*")
(PUNCT ",")
(ID "policy")
(PUNCT "=")
(ID "compat32")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Parser of RFC 2822 and MIME email messages.\n\n        Creates an in-memory object tree representing the email message, which\n        can then be manipulated and turned over to a Generator to return the\n        textual representation of the message.\n\n        The string must be formatted as a block of RFC 2822 headers and header\n        continuation lines, optionally preceeded by a `Unix-from' header.  The\n        header block is terminated either by the end of the string or by a\n        blank line.\n\n        _class is the class to instantiate for new message objects when they\n        must be created.  This class must have a constructor that can take\n        zero arguments.  Default is Message.Message.\n\n        The policy keyword specifies a policy object that controls a number of\n        aspects of the parser's operation.  The default policy maintains\n        backward compatibility.\n\n        ")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_class")
(PUNCT "=")
(ID "_class")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "policy")
(PUNCT "=")
(ID "policy")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parse")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fp")
(PUNCT ",")
(ID "headersonly")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create a message structure from the data in a file.\n\n        Reads all the data from the file and returns the root of the message\n        structure.  Optional headersonly is a flag specifying whether to stop\n        parsing after reading the headers or not.  The default is False,\n        meaning it parses the entire contents of the file.\n        ")
(NEWLINE)
(ID "feedparser")
(PUNCT "=")
(ID "FeedParser")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_class")
(PUNCT ",")
(ID "policy")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "policy")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "headersonly")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "feedparser")
(PUNCT ".")
(ID "_set_headersonly")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "fp")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 8192)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "feedparser")
(PUNCT ".")
(ID "feed")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "feedparser")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parsestr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(ID "headersonly")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create a message structure from a string.\n\n        Returns the root of the message structure.  Optional headersonly is a\n        flag specifying whether to stop parsing after reading the headers or\n        not.  The default is False, meaning it parses the entire contents of\n        the file.\n        ")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "parse")
(PUNCT "(")
(ID "StringIO")
(PUNCT "(")
(ID "text")
(PUNCT ")")
(PUNCT ",")
(ID "headersonly")
(PUNCT "=")
(ID "headersonly")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "HeaderParser")
(PUNCT "(")
(ID "Parser")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "parse")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fp")
(PUNCT ",")
(ID "headersonly")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "Parser")
(PUNCT ".")
(ID "parse")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fp")
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parsestr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(ID "headersonly")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "Parser")
(PUNCT ".")
(ID "parsestr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "BytesParser")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Parser of binary RFC 2822 and MIME email messages.\n\n        Creates an in-memory object tree representing the email message, which\n        can then be manipulated and turned over to a Generator to return the\n        textual representation of the message.\n\n        The input must be formatted as a block of RFC 2822 headers and header\n        continuation lines, optionally preceeded by a `Unix-from' header.  The\n        header block is terminated either by the end of the input or by a\n        blank line.\n\n        _class is the class to instantiate for new message objects when they\n        must be created.  This class must have a constructor that can take\n        zero arguments.  Default is Message.Message.\n        ")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "parser")
(PUNCT "=")
(ID "Parser")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parse")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fp")
(PUNCT ",")
(ID "headersonly")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create a message structure from the data in a binary file.\n\n        Reads all the data from the file and returns the root of the message\n        structure.  Optional headersonly is a flag specifying whether to stop\n        parsing after reading the headers or not.  The default is False,\n        meaning it parses the entire contents of the file.\n        ")
(NEWLINE)
(ID "fp")
(PUNCT "=")
(ID "TextIOWrapper")
(PUNCT "(")
(ID "fp")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(LIT "ascii")
(PUNCT ",")
(ID "errors")
(PUNCT "=")
(LIT "surrogateescape")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "parser")
(PUNCT ".")
(ID "parse")
(PUNCT "(")
(ID "fp")
(PUNCT ",")
(ID "headersonly")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fp")
(PUNCT ".")
(ID "detach")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "parsebytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(ID "headersonly")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create a message structure from a byte string.\n\n        Returns the root of the message structure.  Optional headersonly is a\n        flag specifying whether to stop parsing after reading the headers or\n        not.  The default is False, meaning it parses the entire contents of\n        the file.\n        ")
(NEWLINE)
(ID "text")
(PUNCT "=")
(ID "text")
(PUNCT ".")
(ID "decode")
(PUNCT "(")
(LIT "ASCII")
(PUNCT ",")
(ID "errors")
(PUNCT "=")
(LIT "surrogateescape")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "parser")
(PUNCT ".")
(ID "parsestr")
(PUNCT "(")
(ID "text")
(PUNCT ",")
(ID "headersonly")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "BytesHeaderParser")
(PUNCT "(")
(ID "BytesParser")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "parse")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fp")
(PUNCT ",")
(ID "headersonly")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "BytesParser")
(PUNCT ".")
(ID "parse")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fp")
(PUNCT ",")
(ID "headersonly")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parsebytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(ID "headersonly")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "BytesParser")
(PUNCT ".")
(ID "parsebytes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "text")
(PUNCT ",")
(ID "headersonly")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
