(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "pickle")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "runpy")
(NEWLINE)
(KEYWORD import)
(ID "types")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "get_start_method")
(PUNCT ",")
(ID "set_start_method")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "process")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "util")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "_main")
(PUNCT ",")
(LIT "freeze_support")
(PUNCT ",")
(LIT "set_executable")
(PUNCT ",")
(LIT "get_executable")
(PUNCT ",")
(LIT "get_preparation_data")
(PUNCT ",")
(LIT "get_command_line")
(PUNCT ",")
(LIT "import_main_path")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "!=")
(LIT "win32")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "WINEXE")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "WINSERVICE")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "WINEXE")
(PUNCT "=")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(KEYWORD and)
(ID "getattr")
(PUNCT "(")
(ID "sys")
(PUNCT ",")
(LIT "frozen")
(PUNCT ",")
(KEYWORD False)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "WINSERVICE")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "executable")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT "pythonservice.exe")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "WINSERVICE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_python_exe")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "exec_prefix")
(PUNCT ",")
(LIT "python.exe")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_python_exe")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "executable")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_executable")
(PUNCT "(")
(ID "exe")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD global)
(ID "_python_exe")
(NEWLINE)
(ID "_python_exe")
(PUNCT "=")
(ID "exe")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_executable")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_python_exe")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_forking")
(PUNCT "(")
(ID "argv")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Return whether commandline indicates we are forking\n    ")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "argv")
(PUNCT ")")
(PUNCT ">=")
(LIT 2)
(KEYWORD and)
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "--multiprocessing-fork")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "freeze_support")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Run code for process object if this in not the main process\n    ")
(NEWLINE)
(KEYWORD if)
(ID "is_forking")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kwds")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "arg")
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT ",")
(ID "value")
(PUNCT "=")
(ID "arg")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "=")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "value")
(PUNCT "==")
(LIT "None")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kwds")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "kwds")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "spawn_main")
(PUNCT "(")
(PUNCT "**")
(ID "kwds")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_command_line")
(PUNCT "(")
(PUNCT "**")
(ID "kwds")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Returns prefix of command line used for spawning a child process\n    ")
(NEWLINE)
(KEYWORD if)
(ID "getattr")
(PUNCT "(")
(ID "sys")
(PUNCT ",")
(LIT "frozen")
(PUNCT ",")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(PUNCT "[")
(ID "sys")
(PUNCT ".")
(ID "executable")
(PUNCT ",")
(LIT "--multiprocessing-fork")
(PUNCT "]")
(PUNCT "+")
(PUNCT "[")
(LIT "%s=%r")
(PUNCT "%")
(ID "item")
(KEYWORD for)
(ID "item")
(KEYWORD in)
(ID "kwds")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "prog")
(PUNCT "=")
(LIT "from multiprocessing.spawn import spawn_main; spawn_main(%s)")
(NEWLINE)
(ID "prog")
(PUNCT "%=")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(LIT "%s=%r")
(PUNCT "%")
(ID "item")
(KEYWORD for)
(ID "item")
(KEYWORD in)
(ID "kwds")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "opts")
(PUNCT "=")
(ID "util")
(PUNCT ".")
(ID "_args_from_interpreter_flags")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(ID "_python_exe")
(PUNCT "]")
(PUNCT "+")
(ID "opts")
(PUNCT "+")
(PUNCT "[")
(LIT "-c")
(PUNCT ",")
(ID "prog")
(PUNCT ",")
(LIT "--multiprocessing-fork")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "spawn_main")
(PUNCT "(")
(ID "pipe_handle")
(PUNCT ",")
(ID "parent_pid")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "tracker_fd")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Run code specifed by data received over pipe\n    ")
(NEWLINE)
(KEYWORD assert)
(ID "is_forking")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "msvcrt")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID "reduction")
(KEYWORD import)
(ID "steal_handle")
(NEWLINE)
(ID "new_handle")
(PUNCT "=")
(ID "steal_handle")
(PUNCT "(")
(ID "parent_pid")
(PUNCT ",")
(ID "pipe_handle")
(PUNCT ")")
(NEWLINE)
(ID "fd")
(PUNCT "=")
(ID "msvcrt")
(PUNCT ".")
(ID "open_osfhandle")
(PUNCT "(")
(ID "new_handle")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "O_RDONLY")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "semaphore_tracker")
(NEWLINE)
(ID "semaphore_tracker")
(PUNCT ".")
(ID "_semaphore_tracker")
(PUNCT ".")
(ID "_fd")
(PUNCT "=")
(ID "tracker_fd")
(NEWLINE)
(ID "fd")
(PUNCT "=")
(ID "pipe_handle")
(NEWLINE)
(DEDENT)
(ID "exitcode")
(PUNCT "=")
(ID "_main")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(ID "exitcode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_main")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "os")
(PUNCT ".")
(ID "fdopen")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(LIT "rb")
(PUNCT ",")
(ID "closefd")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(KEYWORD as)
(ID "from_parent")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "process")
(PUNCT ".")
(ID "current_process")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "_inheriting")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "preparation_data")
(PUNCT "=")
(ID "pickle")
(PUNCT ".")
(ID "load")
(PUNCT "(")
(ID "from_parent")
(PUNCT ")")
(NEWLINE)
(ID "prepare")
(PUNCT "(")
(ID "preparation_data")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT "=")
(ID "pickle")
(PUNCT ".")
(ID "load")
(PUNCT "(")
(ID "from_parent")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "process")
(PUNCT ".")
(ID "current_process")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "_inheriting")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_bootstrap")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_check_not_importing_main")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "getattr")
(PUNCT "(")
(ID "process")
(PUNCT ".")
(ID "current_process")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(LIT "_inheriting")
(PUNCT ",")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "\n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_preparation_data")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Return info about parent needed by child to unpickle process object\n    ")
(NEWLINE)
(ID "_check_not_importing_main")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "d")
(PUNCT "=")
(ID "dict")
(PUNCT "(")
(ID "log_to_stderr")
(PUNCT "=")
(ID "util")
(PUNCT ".")
(ID "_log_to_stderr")
(PUNCT ",")
(ID "authkey")
(PUNCT "=")
(ID "process")
(PUNCT ".")
(ID "current_process")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "authkey")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "util")
(PUNCT ".")
(ID "_logger")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "d")
(PUNCT "[")
(LIT "log_level")
(PUNCT "]")
(PUNCT "=")
(ID "util")
(PUNCT ".")
(ID "_logger")
(PUNCT ".")
(ID "getEffectiveLevel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "sys_path")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "copy")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "sys_path")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys_path")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT "=")
(ID "process")
(PUNCT ".")
(ID "ORIGINAL_DIR")
(NEWLINE)
(DEDENT)
(ID "d")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "name")
(PUNCT "=")
(ID "name")
(PUNCT ",")
(ID "sys_path")
(PUNCT "=")
(ID "sys_path")
(PUNCT ",")
(ID "sys_argv")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT ",")
(ID "orig_dir")
(PUNCT "=")
(ID "process")
(PUNCT ".")
(ID "ORIGINAL_DIR")
(PUNCT ",")
(ID "dir")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "getcwd")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "start_method")
(PUNCT "=")
(ID "get_start_method")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(ID "main_module")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(LIT "__main__")
(PUNCT "]")
(NEWLINE)
(ID "main_mod_name")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "main_module")
(PUNCT ".")
(ID "__spec__")
(PUNCT ",")
(LIT "name")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "main_mod_name")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "d")
(PUNCT "[")
(LIT "init_main_from_name")
(PUNCT "]")
(PUNCT "=")
(ID "main_mod_name")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "!=")
(LIT "win32")
(KEYWORD or)
(PUNCT "(")
(KEYWORD not)
(ID "WINEXE")
(KEYWORD and)
(KEYWORD not)
(ID "WINSERVICE")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "main_path")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "main_module")
(PUNCT ",")
(LIT "__file__")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "main_path")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(KEYWORD not)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isabs")
(PUNCT "(")
(ID "main_path")
(PUNCT ")")
(KEYWORD and)
(ID "process")
(PUNCT ".")
(ID "ORIGINAL_DIR")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "main_path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "process")
(PUNCT ".")
(ID "ORIGINAL_DIR")
(PUNCT ",")
(ID "main_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "d")
(PUNCT "[")
(LIT "init_main_from_path")
(PUNCT "]")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normpath")
(PUNCT "(")
(ID "main_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "d")
(NEWLINE)
(DEDENT)
(ID "old_main_modules")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "prepare")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Try to get current process ready to unpickle process object\n    ")
(NEWLINE)
(KEYWORD if)
(LIT "name")
(KEYWORD in)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "process")
(PUNCT ".")
(ID "current_process")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "name")
(PUNCT "=")
(ID "data")
(PUNCT "[")
(LIT "name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "authkey")
(KEYWORD in)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "process")
(PUNCT ".")
(ID "current_process")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "authkey")
(PUNCT "=")
(ID "data")
(PUNCT "[")
(LIT "authkey")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "log_to_stderr")
(KEYWORD in)
(ID "data")
(KEYWORD and)
(ID "data")
(PUNCT "[")
(LIT "log_to_stderr")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "log_to_stderr")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "log_level")
(KEYWORD in)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "util")
(PUNCT ".")
(ID "get_logger")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "setLevel")
(PUNCT "(")
(ID "data")
(PUNCT "[")
(LIT "log_level")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "sys_path")
(KEYWORD in)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "path")
(PUNCT "=")
(ID "data")
(PUNCT "[")
(LIT "sys_path")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "sys_argv")
(KEYWORD in)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "=")
(ID "data")
(PUNCT "[")
(LIT "sys_argv")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "dir")
(KEYWORD in)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "chdir")
(PUNCT "(")
(ID "data")
(PUNCT "[")
(LIT "dir")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "orig_dir")
(KEYWORD in)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "process")
(PUNCT ".")
(ID "ORIGINAL_DIR")
(PUNCT "=")
(ID "data")
(PUNCT "[")
(LIT "orig_dir")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "start_method")
(KEYWORD in)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "set_start_method")
(PUNCT "(")
(ID "data")
(PUNCT "[")
(LIT "start_method")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "init_main_from_name")
(KEYWORD in)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_fixup_main_from_name")
(PUNCT "(")
(ID "data")
(PUNCT "[")
(LIT "init_main_from_name")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(LIT "init_main_from_path")
(KEYWORD in)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_fixup_main_from_path")
(PUNCT "(")
(ID "data")
(PUNCT "[")
(LIT "init_main_from_path")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_fixup_main_from_name")
(PUNCT "(")
(ID "mod_name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "current_main")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(LIT "__main__")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "mod_name")
(PUNCT "==")
(LIT "__main__")
(KEYWORD or)
(ID "mod_name")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT ".__main__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "getattr")
(PUNCT "(")
(ID "current_main")
(PUNCT ".")
(ID "__spec__")
(PUNCT ",")
(LIT "name")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT "==")
(ID "mod_name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "old_main_modules")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "current_main")
(PUNCT ")")
(NEWLINE)
(ID "main_module")
(PUNCT "=")
(ID "types")
(PUNCT ".")
(ID "ModuleType")
(PUNCT "(")
(LIT "__mp_main__")
(PUNCT ")")
(NEWLINE)
(ID "main_content")
(PUNCT "=")
(ID "runpy")
(PUNCT ".")
(ID "run_module")
(PUNCT "(")
(ID "mod_name")
(PUNCT ",")
(ID "run_name")
(PUNCT "=")
(LIT "__mp_main__")
(PUNCT ",")
(ID "alter_sys")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID "main_module")
(PUNCT ".")
(ID "__dict__")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "main_content")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(LIT "__main__")
(PUNCT "]")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(LIT "__mp_main__")
(PUNCT "]")
(PUNCT "=")
(ID "main_module")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_fixup_main_from_path")
(PUNCT "(")
(ID "main_path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "current_main")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(LIT "__main__")
(PUNCT "]")
(NEWLINE)
(ID "main_name")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "splitext")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "basename")
(PUNCT "(")
(ID "main_path")
(PUNCT ")")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "main_name")
(PUNCT "==")
(LIT "ipython")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "getattr")
(PUNCT "(")
(ID "current_main")
(PUNCT ",")
(LIT "__file__")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT "==")
(ID "main_path")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "old_main_modules")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "current_main")
(PUNCT ")")
(NEWLINE)
(ID "main_module")
(PUNCT "=")
(ID "types")
(PUNCT ".")
(ID "ModuleType")
(PUNCT "(")
(LIT "__mp_main__")
(PUNCT ")")
(NEWLINE)
(ID "main_content")
(PUNCT "=")
(ID "runpy")
(PUNCT ".")
(ID "run_path")
(PUNCT "(")
(ID "main_path")
(PUNCT ",")
(ID "run_name")
(PUNCT "=")
(LIT "__mp_main__")
(PUNCT ")")
(NEWLINE)
(ID "main_module")
(PUNCT ".")
(ID "__dict__")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "main_content")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(LIT "__main__")
(PUNCT "]")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(LIT "__mp_main__")
(PUNCT "]")
(PUNCT "=")
(ID "main_module")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "import_main_path")
(PUNCT "(")
(ID "main_path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    Set sys.modules['__main__'] to module at main_path\n    ")
(NEWLINE)
(ID "_fixup_main_from_path")
(PUNCT "(")
(ID "main_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
