(LIT "Mailcap file handling.  See RFC 1524.")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "getcaps")
(PUNCT ",")
(LIT "findmatch")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "getcaps")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a dictionary containing the mailcap database.\n\n    The dictionary maps a MIME type (in all lowercase, e.g. 'text/plain')\n    to a list of dictionaries corresponding to mailcap entries.  The list\n    collects all the entries for that MIME type from all available mailcap\n    files.  Each dictionary contains key-value pairs for that MIME type,\n    where the viewing command is stored with the key \"view\".\n\n    ")
(NEWLINE)
(ID "caps")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "mailcap")
(KEYWORD in)
(ID "listmailcapfiles")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fp")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "mailcap")
(PUNCT ",")
(LIT "r")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD with)
(ID "fp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "morecaps")
(PUNCT "=")
(ID "readmailcapfile")
(PUNCT "(")
(ID "fp")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "morecaps")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "key")
(KEYWORD in)
(ID "caps")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "caps")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "value")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "caps")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "caps")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "+")
(ID "value")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "caps")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "listmailcapfiles")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a list of all mailcap files found on the system.")
(NEWLINE)
(KEYWORD if)
(LIT "MAILCAPS")
(KEYWORD in)
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pathstr")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT "[")
(LIT "MAILCAPS")
(PUNCT "]")
(NEWLINE)
(ID "mailcaps")
(PUNCT "=")
(ID "pathstr")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "pathsep")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "HOME")
(KEYWORD in)
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "home")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT "[")
(LIT "HOME")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "home")
(PUNCT "=")
(LIT ".")
(NEWLINE)
(DEDENT)
(ID "mailcaps")
(PUNCT "=")
(PUNCT "[")
(ID "home")
(PUNCT "+")
(LIT "/.mailcap")
(PUNCT ",")
(LIT "/etc/mailcap")
(PUNCT ",")
(LIT "/usr/etc/mailcap")
(PUNCT ",")
(LIT "/usr/local/etc/mailcap")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "mailcaps")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "readmailcapfile")
(PUNCT "(")
(ID "fp")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Read a mailcap file and return a dictionary keyed by MIME type.\n\n    Each MIME type is mapped to an entry consisting of a list of\n    dictionaries; the list will contain more than one such dictionary\n    if a given MIME type appears more than once in the mailcap file.\n    Each dictionary contains key-value pairs for that MIME type, where\n    the viewing command is stored with the key \"view\".\n    ")
(NEWLINE)
(ID "caps")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "line")
(PUNCT "=")
(ID "fp")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(KEYWORD break)
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(LIT "#")
(KEYWORD or)
(ID "line")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(PUNCT "==")
(LIT "")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "nextline")
(PUNCT "=")
(ID "line")
(NEWLINE)
(KEYWORD while)
(ID "nextline")
(PUNCT "[")
(PUNCT "-")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(LIT "\\\n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nextline")
(PUNCT "=")
(ID "fp")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "nextline")
(PUNCT ":")
(ID "nextline")
(PUNCT "=")
(LIT "\n")
(NEWLINE)
(ID "line")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 2)
(PUNCT "]")
(PUNCT "+")
(ID "nextline")
(NEWLINE)
(DEDENT)
(ID "key")
(PUNCT ",")
(ID "fields")
(PUNCT "=")
(ID "parseline")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID "key")
(KEYWORD and)
(ID "fields")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "types")
(PUNCT "=")
(ID "key")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "/")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "j")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "types")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "types")
(PUNCT "[")
(ID "j")
(PUNCT "]")
(PUNCT "=")
(ID "types")
(PUNCT "[")
(ID "j")
(PUNCT "]")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "key")
(PUNCT "=")
(LIT "/")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "types")
(PUNCT ")")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "key")
(KEYWORD in)
(ID "caps")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "caps")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "fields")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "caps")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(PUNCT "[")
(ID "fields")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "caps")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parseline")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Parse one entry in a mailcap file and return a dictionary.\n\n    The viewing command is stored as the value with the key \"view\",\n    and the rest of the fields produce key-value pairs in the dict.\n    ")
(NEWLINE)
(ID "fields")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "i")
(PUNCT ",")
(ID "n")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "i")
(PUNCT "<")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "field")
(PUNCT ",")
(ID "i")
(PUNCT "=")
(ID "parsefield")
(PUNCT "(")
(ID "line")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(NEWLINE)
(ID "fields")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "field")
(PUNCT ")")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "fields")
(PUNCT ")")
(PUNCT "<")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "key")
(PUNCT ",")
(ID "view")
(PUNCT ",")
(ID "rest")
(PUNCT "=")
(ID "fields")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(ID "fields")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ",")
(ID "fields")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "fields")
(PUNCT "=")
(PUNCT "{")
(LIT "view")
(PUNCT ":")
(ID "view")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "field")
(KEYWORD in)
(ID "rest")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "field")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT "=")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "i")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fkey")
(PUNCT "=")
(ID "field")
(NEWLINE)
(ID "fvalue")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fkey")
(PUNCT "=")
(ID "field")
(PUNCT "[")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "fvalue")
(PUNCT "=")
(ID "field")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "fkey")
(KEYWORD in)
(ID "fields")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fields")
(PUNCT "[")
(ID "fkey")
(PUNCT "]")
(PUNCT "=")
(ID "fvalue")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "key")
(PUNCT ",")
(ID "fields")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parsefield")
(PUNCT "(")
(ID "line")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Separate one key-value pair in a mailcap entry.")
(NEWLINE)
(ID "start")
(PUNCT "=")
(ID "i")
(NEWLINE)
(KEYWORD while)
(ID "i")
(PUNCT "<")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "line")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "c")
(PUNCT "==")
(LIT ";")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(PUNCT "==")
(LIT "\\")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 2)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "line")
(PUNCT "[")
(ID "start")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "i")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "findmatch")
(PUNCT "(")
(ID "caps")
(PUNCT ",")
(ID "MIMEtype")
(PUNCT ",")
(ID "key")
(PUNCT "=")
(LIT "view")
(PUNCT ",")
(ID "filename")
(PUNCT "=")
(LIT "/dev/null")
(PUNCT ",")
(ID "plist")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Find a match for a mailcap entry.\n\n    Return a tuple containing the command line, and the mailcap entry\n    used; (None, None) if no match is found.  This may invoke the\n    'test' command of several matching entries before deciding which\n    entry to use.\n\n    ")
(NEWLINE)
(ID "entries")
(PUNCT "=")
(ID "lookup")
(PUNCT "(")
(ID "caps")
(PUNCT ",")
(ID "MIMEtype")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "e")
(KEYWORD in)
(ID "entries")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "test")
(KEYWORD in)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "test")
(PUNCT "=")
(ID "subst")
(PUNCT "(")
(ID "e")
(PUNCT "[")
(LIT "test")
(PUNCT "]")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "plist")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "test")
(KEYWORD and)
(ID "os")
(PUNCT ".")
(ID "system")
(PUNCT "(")
(ID "test")
(PUNCT ")")
(PUNCT "!=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "command")
(PUNCT "=")
(ID "subst")
(PUNCT "(")
(ID "e")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT ",")
(ID "MIMEtype")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "plist")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "command")
(PUNCT ",")
(ID "e")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "lookup")
(PUNCT "(")
(ID "caps")
(PUNCT ",")
(ID "MIMEtype")
(PUNCT ",")
(ID "key")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "entries")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "MIMEtype")
(KEYWORD in)
(ID "caps")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "entries")
(PUNCT "=")
(ID "entries")
(PUNCT "+")
(ID "caps")
(PUNCT "[")
(ID "MIMEtype")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "MIMEtypes")
(PUNCT "=")
(ID "MIMEtype")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "/")
(PUNCT ")")
(NEWLINE)
(ID "MIMEtype")
(PUNCT "=")
(ID "MIMEtypes")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "+")
(LIT "/*")
(NEWLINE)
(KEYWORD if)
(ID "MIMEtype")
(KEYWORD in)
(ID "caps")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "entries")
(PUNCT "=")
(ID "entries")
(PUNCT "+")
(ID "caps")
(PUNCT "[")
(ID "MIMEtype")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "key")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "entries")
(PUNCT "=")
(PUNCT "[")
(ID "e")
(KEYWORD for)
(ID "e")
(KEYWORD in)
(ID "entries")
(KEYWORD if)
(ID "key")
(KEYWORD in)
(ID "e")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "entries")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "subst")
(PUNCT "(")
(ID "field")
(PUNCT ",")
(ID "MIMEtype")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "plist")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "res")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "i")
(PUNCT ",")
(ID "n")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "field")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "i")
(PUNCT "<")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "field")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ";")
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "c")
(PUNCT "!=")
(LIT "%")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "c")
(PUNCT "==")
(LIT "\\")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "field")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(PUNCT ";")
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "res")
(PUNCT "=")
(ID "res")
(PUNCT "+")
(ID "c")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "field")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ";")
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "c")
(PUNCT "==")
(LIT "%")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "res")
(PUNCT "=")
(ID "res")
(PUNCT "+")
(ID "c")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(PUNCT "==")
(LIT "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "res")
(PUNCT "=")
(ID "res")
(PUNCT "+")
(ID "filename")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(PUNCT "==")
(LIT "t")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "res")
(PUNCT "=")
(ID "res")
(PUNCT "+")
(ID "MIMEtype")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(PUNCT "==")
(LIT "{")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "start")
(PUNCT "=")
(ID "i")
(NEWLINE)
(KEYWORD while)
(ID "i")
(PUNCT "<")
(ID "n")
(KEYWORD and)
(ID "field")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT "!=")
(LIT "}")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "name")
(PUNCT "=")
(ID "field")
(PUNCT "[")
(ID "start")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "res")
(PUNCT "=")
(ID "res")
(PUNCT "+")
(ID "findparam")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "plist")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "res")
(PUNCT "=")
(ID "res")
(PUNCT "+")
(LIT "%")
(PUNCT "+")
(ID "c")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "res")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "findparam")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "plist")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "name")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(PUNCT "+")
(LIT "=")
(NEWLINE)
(ID "n")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "p")
(KEYWORD in)
(ID "plist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "p")
(PUNCT "[")
(PUNCT ":")
(ID "n")
(PUNCT "]")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(PUNCT "==")
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "p")
(PUNCT "[")
(ID "n")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "test")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(ID "caps")
(PUNCT "=")
(ID "getcaps")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "show")
(PUNCT "(")
(ID "caps")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT ")")
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT "<")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "usage: mailcap [MIMEtype file] ...")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "MIMEtype")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "file")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "command")
(PUNCT ",")
(ID "e")
(PUNCT "=")
(ID "findmatch")
(PUNCT "(")
(ID "caps")
(PUNCT ",")
(ID "MIMEtype")
(PUNCT ",")
(LIT "view")
(PUNCT ",")
(ID "file")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "command")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "No viewer found for")
(PUNCT ",")
(ID "type")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Executing:")
(PUNCT ",")
(ID "command")
(PUNCT ")")
(NEWLINE)
(ID "sts")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "system")
(PUNCT "(")
(ID "command")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sts")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Exit status:")
(PUNCT ",")
(ID "sts")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "show")
(PUNCT "(")
(ID "caps")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Mailcap files:")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "fn")
(KEYWORD in)
(ID "listmailcapfiles")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(ID "print")
(PUNCT "(")
(LIT "\t")
(PUNCT "+")
(ID "fn")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "caps")
(PUNCT ":")
(ID "caps")
(PUNCT "=")
(ID "getcaps")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Mailcap entries:")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "ckeys")
(PUNCT "=")
(ID "sorted")
(PUNCT "(")
(ID "caps")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "type")
(KEYWORD in)
(ID "ckeys")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "type")
(PUNCT ")")
(NEWLINE)
(ID "entries")
(PUNCT "=")
(ID "caps")
(PUNCT "[")
(ID "type")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "e")
(KEYWORD in)
(ID "entries")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "keys")
(PUNCT "=")
(ID "sorted")
(PUNCT "(")
(ID "e")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "k")
(KEYWORD in)
(ID "keys")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "  %-15s")
(PUNCT "%")
(ID "k")
(PUNCT ",")
(ID "e")
(PUNCT "[")
(ID "k")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "test")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
