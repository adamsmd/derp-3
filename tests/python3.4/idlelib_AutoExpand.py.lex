(LIT "Complete the current word before the cursor with words in the editor.\n\nEach menu selection or shortcut key selection replaces the word with a\ndifferent word with the same prefix. The search for matches begins\nbefore the target and moves toward the top of the editor. It then starts\nafter the cursor and moves down. It then returns to the original word and\nthe cycle starts again.\n\nChanging the current text line or leaving the cursor in a different\nplace before requesting the next selection causes AutoExpand to reset\nits state.\n\nThis is an extension file and there is only one instance of AutoExpand.\n")
(NEWLINE)
(KEYWORD import)
(ID "string")
(NEWLINE)
(KEYWORD import)
(ID "re")
(NEWLINE)
(KEYWORD class)
(ID "AutoExpand")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "menudefs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(LIT "edit")
(PUNCT ",")
(PUNCT "[")
(PUNCT "(")
(LIT "E_xpand Word")
(PUNCT ",")
(LIT "<<expand-word>>")
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(ID "wordchars")
(PUNCT "=")
(ID "string")
(PUNCT ".")
(ID "ascii_letters")
(PUNCT "+")
(ID "string")
(PUNCT ".")
(ID "digits")
(PUNCT "+")
(LIT "_")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "editwin")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT "=")
(ID "editwin")
(PUNCT ".")
(ID "text")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "state")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "expand_word_event")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Replace the current word with the next expansion.")
(NEWLINE)
(ID "curinsert")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(ID "curline")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "insert linestart")
(PUNCT ",")
(LIT "insert lineend")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "state")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "words")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getwords")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "index")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "words")
(PUNCT ",")
(ID "index")
(PUNCT ",")
(ID "insert")
(PUNCT ",")
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "state")
(NEWLINE)
(KEYWORD if)
(ID "insert")
(PUNCT "!=")
(ID "curinsert")
(KEYWORD or)
(ID "line")
(PUNCT "!=")
(ID "curline")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "words")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getwords")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "index")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "words")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "bell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(ID "word")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getprevword")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "delete")
(PUNCT "(")
(LIT "insert - %d chars")
(PUNCT "%")
(ID "len")
(PUNCT "(")
(ID "word")
(PUNCT ")")
(PUNCT ",")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(ID "newword")
(PUNCT "=")
(ID "words")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(NEWLINE)
(ID "index")
(PUNCT "=")
(PUNCT "(")
(ID "index")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT "%")
(ID "len")
(PUNCT "(")
(ID "words")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "index")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "bell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT "insert")
(PUNCT ",")
(ID "newword")
(PUNCT ")")
(NEWLINE)
(ID "curinsert")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(ID "curline")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "insert linestart")
(PUNCT ",")
(LIT "insert lineend")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "state")
(PUNCT "=")
(ID "words")
(PUNCT ",")
(ID "index")
(PUNCT ",")
(ID "curinsert")
(PUNCT ",")
(ID "curline")
(NEWLINE)
(KEYWORD return)
(LIT "break")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getwords")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a list of words that match the prefix before the cursor.")
(NEWLINE)
(ID "word")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getprevword")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "word")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "before")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "1.0")
(PUNCT ",")
(LIT "insert wordstart")
(PUNCT ")")
(NEWLINE)
(ID "wbefore")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "findall")
(PUNCT "(")
(LIT "\\b")
(PUNCT "+")
(ID "word")
(PUNCT "+")
(LIT "\\w+\\b")
(PUNCT ",")
(ID "before")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "before")
(NEWLINE)
(ID "after")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "insert wordend")
(PUNCT ",")
(LIT "end")
(PUNCT ")")
(NEWLINE)
(ID "wafter")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "findall")
(PUNCT "(")
(LIT "\\b")
(PUNCT "+")
(ID "word")
(PUNCT "+")
(LIT "\\w+\\b")
(PUNCT ",")
(ID "after")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "after")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "wbefore")
(KEYWORD and)
(KEYWORD not)
(ID "wafter")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "words")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "dict")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "wbefore")
(PUNCT ".")
(ID "reverse")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "w")
(KEYWORD in)
(ID "wbefore")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "dict")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "w")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "words")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "w")
(PUNCT ")")
(NEWLINE)
(ID "dict")
(PUNCT "[")
(ID "w")
(PUNCT "]")
(PUNCT "=")
(ID "w")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "w")
(KEYWORD in)
(ID "wafter")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "dict")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "w")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "words")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "w")
(PUNCT ")")
(NEWLINE)
(ID "dict")
(PUNCT "[")
(ID "w")
(PUNCT "]")
(PUNCT "=")
(ID "w")
(NEWLINE)
(DEDENT)
(ID "words")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "word")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "words")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getprevword")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the word prefix before the cursor.")
(NEWLINE)
(ID "line")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "text")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "insert linestart")
(PUNCT ",")
(LIT "insert")
(PUNCT ")")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "i")
(PUNCT ">")
(LIT 0)
(KEYWORD and)
(ID "line")
(PUNCT "[")
(ID "i")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "wordchars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "line")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "unittest")
(NEWLINE)
(ID "unittest")
(PUNCT ".")
(ID "main")
(PUNCT "(")
(LIT "idlelib.idle_test.test_autoexpand")
(PUNCT ",")
(ID "verbosity")
(PUNCT "=")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
