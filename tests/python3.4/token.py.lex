(LIT "Token constants (from \"token.h\").")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "tok_name")
(PUNCT ",")
(LIT "ISTERMINAL")
(PUNCT ",")
(LIT "ISNONTERMINAL")
(PUNCT ",")
(LIT "ISEOF")
(PUNCT "]")
(NEWLINE)
(ID "ENDMARKER")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "NAME")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "NUMBER")
(PUNCT "=")
(LIT 2)
(NEWLINE)
(ID "STRING")
(PUNCT "=")
(LIT 3)
(NEWLINE)
(ID "NEWLINE")
(PUNCT "=")
(LIT 4)
(NEWLINE)
(ID "INDENT")
(PUNCT "=")
(LIT 5)
(NEWLINE)
(ID "DEDENT")
(PUNCT "=")
(LIT 6)
(NEWLINE)
(ID "LPAR")
(PUNCT "=")
(LIT 7)
(NEWLINE)
(ID "RPAR")
(PUNCT "=")
(LIT 8)
(NEWLINE)
(ID "LSQB")
(PUNCT "=")
(LIT 9)
(NEWLINE)
(ID "RSQB")
(PUNCT "=")
(LIT 10)
(NEWLINE)
(ID "COLON")
(PUNCT "=")
(LIT 11)
(NEWLINE)
(ID "COMMA")
(PUNCT "=")
(LIT 12)
(NEWLINE)
(ID "SEMI")
(PUNCT "=")
(LIT 13)
(NEWLINE)
(ID "PLUS")
(PUNCT "=")
(LIT 14)
(NEWLINE)
(ID "MINUS")
(PUNCT "=")
(LIT 15)
(NEWLINE)
(ID "STAR")
(PUNCT "=")
(LIT 16)
(NEWLINE)
(ID "SLASH")
(PUNCT "=")
(LIT 17)
(NEWLINE)
(ID "VBAR")
(PUNCT "=")
(LIT 18)
(NEWLINE)
(ID "AMPER")
(PUNCT "=")
(LIT 19)
(NEWLINE)
(ID "LESS")
(PUNCT "=")
(LIT 20)
(NEWLINE)
(ID "GREATER")
(PUNCT "=")
(LIT 21)
(NEWLINE)
(ID "EQUAL")
(PUNCT "=")
(LIT 22)
(NEWLINE)
(ID "DOT")
(PUNCT "=")
(LIT 23)
(NEWLINE)
(ID "PERCENT")
(PUNCT "=")
(LIT 24)
(NEWLINE)
(ID "LBRACE")
(PUNCT "=")
(LIT 25)
(NEWLINE)
(ID "RBRACE")
(PUNCT "=")
(LIT 26)
(NEWLINE)
(ID "EQEQUAL")
(PUNCT "=")
(LIT 27)
(NEWLINE)
(ID "NOTEQUAL")
(PUNCT "=")
(LIT 28)
(NEWLINE)
(ID "LESSEQUAL")
(PUNCT "=")
(LIT 29)
(NEWLINE)
(ID "GREATEREQUAL")
(PUNCT "=")
(LIT 30)
(NEWLINE)
(ID "TILDE")
(PUNCT "=")
(LIT 31)
(NEWLINE)
(ID "CIRCUMFLEX")
(PUNCT "=")
(LIT 32)
(NEWLINE)
(ID "LEFTSHIFT")
(PUNCT "=")
(LIT 33)
(NEWLINE)
(ID "RIGHTSHIFT")
(PUNCT "=")
(LIT 34)
(NEWLINE)
(ID "DOUBLESTAR")
(PUNCT "=")
(LIT 35)
(NEWLINE)
(ID "PLUSEQUAL")
(PUNCT "=")
(LIT 36)
(NEWLINE)
(ID "MINEQUAL")
(PUNCT "=")
(LIT 37)
(NEWLINE)
(ID "STAREQUAL")
(PUNCT "=")
(LIT 38)
(NEWLINE)
(ID "SLASHEQUAL")
(PUNCT "=")
(LIT 39)
(NEWLINE)
(ID "PERCENTEQUAL")
(PUNCT "=")
(LIT 40)
(NEWLINE)
(ID "AMPEREQUAL")
(PUNCT "=")
(LIT 41)
(NEWLINE)
(ID "VBAREQUAL")
(PUNCT "=")
(LIT 42)
(NEWLINE)
(ID "CIRCUMFLEXEQUAL")
(PUNCT "=")
(LIT 43)
(NEWLINE)
(ID "LEFTSHIFTEQUAL")
(PUNCT "=")
(LIT 44)
(NEWLINE)
(ID "RIGHTSHIFTEQUAL")
(PUNCT "=")
(LIT 45)
(NEWLINE)
(ID "DOUBLESTAREQUAL")
(PUNCT "=")
(LIT 46)
(NEWLINE)
(ID "DOUBLESLASH")
(PUNCT "=")
(LIT 47)
(NEWLINE)
(ID "DOUBLESLASHEQUAL")
(PUNCT "=")
(LIT 48)
(NEWLINE)
(ID "AT")
(PUNCT "=")
(LIT 49)
(NEWLINE)
(ID "RARROW")
(PUNCT "=")
(LIT 50)
(NEWLINE)
(ID "ELLIPSIS")
(PUNCT "=")
(LIT 51)
(NEWLINE)
(ID "OP")
(PUNCT "=")
(LIT 52)
(NEWLINE)
(ID "ERRORTOKEN")
(PUNCT "=")
(LIT 53)
(NEWLINE)
(ID "N_TOKENS")
(PUNCT "=")
(LIT 54)
(NEWLINE)
(ID "NT_OFFSET")
(PUNCT "=")
(LIT 256)
(NEWLINE)
(ID "tok_name")
(PUNCT "=")
(PUNCT "{")
(ID "value")
(PUNCT ":")
(ID "name")
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "globals")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID "name")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "_")
(PUNCT ")")
(PUNCT "}")
(NEWLINE)
(ID "__all__")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "tok_name")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "ISTERMINAL")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "x")
(PUNCT "<")
(ID "NT_OFFSET")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ISNONTERMINAL")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "x")
(PUNCT ">=")
(ID "NT_OFFSET")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ISEOF")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "x")
(PUNCT "==")
(ID "ENDMARKER")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_main")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "re")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(ID "args")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "inFileName")
(PUNCT "=")
(ID "args")
(KEYWORD and)
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD or)
(LIT "Include/token.h")
(NEWLINE)
(ID "outFileName")
(PUNCT "=")
(LIT "Lib/token.py")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT ">")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "outFileName")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fp")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "inFileName")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "err")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "I/O error: %s\n")
(PUNCT "%")
(ID "str")
(PUNCT "(")
(ID "err")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "lines")
(PUNCT "=")
(ID "fp")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "fp")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "prog")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "#define[ \t][ \t]*([A-Z0-9][A-Z0-9_]*)[ \t][ \t]*([0-9][0-9]*)")
(PUNCT ",")
(ID "re")
(PUNCT ".")
(ID "IGNORECASE")
(PUNCT ")")
(NEWLINE)
(ID "tokens")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "line")
(KEYWORD in)
(ID "lines")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "match")
(PUNCT "=")
(ID "prog")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "line")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "match")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT ",")
(ID "val")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(ID "val")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(NEWLINE)
(ID "tokens")
(PUNCT "[")
(ID "val")
(PUNCT "]")
(PUNCT "=")
(ID "name")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "keys")
(PUNCT "=")
(ID "sorted")
(PUNCT "(")
(ID "tokens")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fp")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "outFileName")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "err")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "stderr")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "I/O error: %s\n")
(PUNCT "%")
(ID "str")
(PUNCT "(")
(ID "err")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "format")
(PUNCT "=")
(ID "fp")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "fp")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "start")
(PUNCT "=")
(ID "format")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "#--start constants--")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "end")
(PUNCT "=")
(ID "format")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "#--end constants--")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "stderr")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "target does not contain format markers")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 3)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "lines")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "val")
(KEYWORD in)
(ID "keys")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lines")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "%s = %d")
(PUNCT "%")
(PUNCT "(")
(ID "tokens")
(PUNCT "[")
(ID "val")
(PUNCT "]")
(PUNCT ",")
(ID "val")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "format")
(PUNCT "[")
(ID "start")
(PUNCT ":")
(ID "end")
(PUNCT "]")
(PUNCT "=")
(ID "lines")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fp")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "outFileName")
(PUNCT ",")
(LIT "w")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "err")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "stderr")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "I/O error: %s\n")
(PUNCT "%")
(ID "str")
(PUNCT "(")
(ID "err")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 4)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "fp")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "\n")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "format")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "fp")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_main")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
