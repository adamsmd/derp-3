(LIT "\nDialog for building Tkinter accelerator key bindings\n")
(NEWLINE)
(KEYWORD from)
(ID "tkinter")
(KEYWORD import)
(PUNCT "*")
(NEWLINE)
(KEYWORD import)
(ID "tkinter")
(PUNCT ".")
(ID "messagebox")
(KEYWORD as)
(ID "tkMessageBox")
(NEWLINE)
(KEYWORD import)
(ID "string")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD class)
(ID "GetKeysDialog")
(PUNCT "(")
(ID "Toplevel")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parent")
(PUNCT ",")
(ID "title")
(PUNCT ",")
(ID "action")
(PUNCT ",")
(ID "currentKeySequences")
(PUNCT ",")
(ID "_htest")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n        action - string, the name of the virtual event these keys will be\n                 mapped to\n        currentKeys - list, a list of all key sequence lists currently mapped\n                 to virtual events, for overlap checking\n        _htest - bool, change box location when running htest\n        ")
(NEWLINE)
(ID "Toplevel")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parent")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "configure")
(PUNCT "(")
(ID "borderwidth")
(PUNCT "=")
(LIT 5)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "resizable")
(PUNCT "(")
(ID "height")
(PUNCT "=")
(ID "FALSE")
(PUNCT ",")
(ID "width")
(PUNCT "=")
(ID "FALSE")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "title")
(PUNCT "(")
(ID "title")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "transient")
(PUNCT "(")
(ID "parent")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "grab_set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "protocol")
(PUNCT "(")
(LIT "WM_DELETE_WINDOW")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "Cancel")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "parent")
(PUNCT "=")
(ID "parent")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "action")
(PUNCT "=")
(ID "action")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "currentKeySequences")
(PUNCT "=")
(ID "currentKeySequences")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "result")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "keyString")
(PUNCT "=")
(ID "StringVar")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "keyString")
(PUNCT ".")
(ID "set")
(PUNCT "(")
(LIT "")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "SetModifiersForPlatform")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "modifier_vars")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "modifier")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "modifiers")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "variable")
(PUNCT "=")
(ID "StringVar")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "variable")
(PUNCT ".")
(ID "set")
(PUNCT "(")
(LIT "")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "modifier_vars")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "variable")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "advanced")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "CreateWidgets")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "LoadFinalKeyList")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "withdraw")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "update_idletasks")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "geometry")
(PUNCT "(")
(LIT "+%d+%d")
(PUNCT "%")
(PUNCT "(")
(ID "parent")
(PUNCT ".")
(ID "winfo_rootx")
(PUNCT "(")
(PUNCT ")")
(PUNCT "+")
(PUNCT "(")
(ID "parent")
(PUNCT ".")
(ID "winfo_width")
(PUNCT "(")
(PUNCT ")")
(PUNCT "/")
(LIT 2)
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "winfo_reqwidth")
(PUNCT "(")
(PUNCT ")")
(PUNCT "/")
(LIT 2)
(PUNCT ")")
(PUNCT ",")
(ID "parent")
(PUNCT ".")
(ID "winfo_rooty")
(PUNCT "(")
(PUNCT ")")
(PUNCT "+")
(PUNCT "(")
(PUNCT "(")
(ID "parent")
(PUNCT ".")
(ID "winfo_height")
(PUNCT "(")
(PUNCT ")")
(PUNCT "/")
(LIT 2)
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "winfo_reqheight")
(PUNCT "(")
(PUNCT ")")
(PUNCT "/")
(LIT 2)
(PUNCT ")")
(KEYWORD if)
(KEYWORD not)
(ID "_htest")
(KEYWORD else)
(LIT 150)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "deiconify")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "wait_window")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "CreateWidgets")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "frameMain")
(PUNCT "=")
(ID "Frame")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "borderwidth")
(PUNCT "=")
(LIT 2)
(PUNCT ",")
(ID "relief")
(PUNCT "=")
(ID "SUNKEN")
(PUNCT ")")
(NEWLINE)
(ID "frameMain")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(ID "side")
(PUNCT "=")
(ID "TOP")
(PUNCT ",")
(ID "expand")
(PUNCT "=")
(ID "TRUE")
(PUNCT ",")
(ID "fill")
(PUNCT "=")
(ID "BOTH")
(PUNCT ")")
(NEWLINE)
(ID "frameButtons")
(PUNCT "=")
(ID "Frame")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "frameButtons")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(ID "side")
(PUNCT "=")
(ID "BOTTOM")
(PUNCT ",")
(ID "fill")
(PUNCT "=")
(ID "X")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "buttonOK")
(PUNCT "=")
(ID "Button")
(PUNCT "(")
(ID "frameButtons")
(PUNCT ",")
(ID "text")
(PUNCT "=")
(LIT "OK")
(PUNCT ",")
(ID "width")
(PUNCT "=")
(LIT 8)
(PUNCT ",")
(ID "command")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "OK")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "buttonOK")
(PUNCT ".")
(ID "grid")
(PUNCT "(")
(ID "row")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "column")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "padx")
(PUNCT "=")
(LIT 5)
(PUNCT ",")
(ID "pady")
(PUNCT "=")
(LIT 5)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "buttonCancel")
(PUNCT "=")
(ID "Button")
(PUNCT "(")
(ID "frameButtons")
(PUNCT ",")
(ID "text")
(PUNCT "=")
(LIT "Cancel")
(PUNCT ",")
(ID "width")
(PUNCT "=")
(LIT 8)
(PUNCT ",")
(ID "command")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "Cancel")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "buttonCancel")
(PUNCT ".")
(ID "grid")
(PUNCT "(")
(ID "row")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "column")
(PUNCT "=")
(LIT 1)
(PUNCT ",")
(ID "padx")
(PUNCT "=")
(LIT 5)
(PUNCT ",")
(ID "pady")
(PUNCT "=")
(LIT 5)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frameKeySeqBasic")
(PUNCT "=")
(ID "Frame")
(PUNCT "(")
(ID "frameMain")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frameKeySeqAdvanced")
(PUNCT "=")
(ID "Frame")
(PUNCT "(")
(ID "frameMain")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frameControlsBasic")
(PUNCT "=")
(ID "Frame")
(PUNCT "(")
(ID "frameMain")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frameHelpAdvanced")
(PUNCT "=")
(ID "Frame")
(PUNCT "(")
(ID "frameMain")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frameKeySeqAdvanced")
(PUNCT ".")
(ID "grid")
(PUNCT "(")
(ID "row")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "column")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "sticky")
(PUNCT "=")
(ID "NSEW")
(PUNCT ",")
(ID "padx")
(PUNCT "=")
(LIT 5)
(PUNCT ",")
(ID "pady")
(PUNCT "=")
(LIT 5)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frameKeySeqBasic")
(PUNCT ".")
(ID "grid")
(PUNCT "(")
(ID "row")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "column")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "sticky")
(PUNCT "=")
(ID "NSEW")
(PUNCT ",")
(ID "padx")
(PUNCT "=")
(LIT 5)
(PUNCT ",")
(ID "pady")
(PUNCT "=")
(LIT 5)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frameKeySeqBasic")
(PUNCT ".")
(ID "lift")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frameHelpAdvanced")
(PUNCT ".")
(ID "grid")
(PUNCT "(")
(ID "row")
(PUNCT "=")
(LIT 1)
(PUNCT ",")
(ID "column")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "sticky")
(PUNCT "=")
(ID "NSEW")
(PUNCT ",")
(ID "padx")
(PUNCT "=")
(LIT 5)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frameControlsBasic")
(PUNCT ".")
(ID "grid")
(PUNCT "(")
(ID "row")
(PUNCT "=")
(LIT 1)
(PUNCT ",")
(ID "column")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "sticky")
(PUNCT "=")
(ID "NSEW")
(PUNCT ",")
(ID "padx")
(PUNCT "=")
(LIT 5)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frameControlsBasic")
(PUNCT ".")
(ID "lift")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "buttonLevel")
(PUNCT "=")
(ID "Button")
(PUNCT "(")
(ID "frameMain")
(PUNCT ",")
(ID "command")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "ToggleLevel")
(PUNCT ",")
(ID "text")
(PUNCT "=")
(LIT "Advanced Key Binding Entry >>")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "buttonLevel")
(PUNCT ".")
(ID "grid")
(PUNCT "(")
(ID "row")
(PUNCT "=")
(LIT 2)
(PUNCT ",")
(ID "column")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "stick")
(PUNCT "=")
(ID "EW")
(PUNCT ",")
(ID "padx")
(PUNCT "=")
(LIT 5)
(PUNCT ",")
(ID "pady")
(PUNCT "=")
(LIT 5)
(PUNCT ")")
(NEWLINE)
(ID "labelTitleBasic")
(PUNCT "=")
(ID "Label")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "frameKeySeqBasic")
(PUNCT ",")
(ID "text")
(PUNCT "=")
(LIT "New keys for  '")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "action")
(PUNCT "+")
(LIT "' :")
(PUNCT ")")
(NEWLINE)
(ID "labelTitleBasic")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(ID "anchor")
(PUNCT "=")
(ID "W")
(PUNCT ")")
(NEWLINE)
(ID "labelKeysBasic")
(PUNCT "=")
(ID "Label")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "frameKeySeqBasic")
(PUNCT ",")
(ID "justify")
(PUNCT "=")
(ID "LEFT")
(PUNCT ",")
(ID "textvariable")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "keyString")
(PUNCT ",")
(ID "relief")
(PUNCT "=")
(ID "GROOVE")
(PUNCT ",")
(ID "borderwidth")
(PUNCT "=")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(ID "labelKeysBasic")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(ID "ipadx")
(PUNCT "=")
(LIT 5)
(PUNCT ",")
(ID "ipady")
(PUNCT "=")
(LIT 5)
(PUNCT ",")
(ID "fill")
(PUNCT "=")
(ID "X")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "modifier_checkbuttons")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "column")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD for)
(ID "modifier")
(PUNCT ",")
(ID "variable")
(KEYWORD in)
(ID "zip")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "modifiers")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "modifier_vars")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "label")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "modifier_label")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "modifier")
(PUNCT ",")
(ID "modifier")
(PUNCT ")")
(NEWLINE)
(ID "check")
(PUNCT "=")
(ID "Checkbutton")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "frameControlsBasic")
(PUNCT ",")
(ID "command")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "BuildKeyString")
(PUNCT ",")
(ID "text")
(PUNCT "=")
(ID "label")
(PUNCT ",")
(ID "variable")
(PUNCT "=")
(ID "variable")
(PUNCT ",")
(ID "onvalue")
(PUNCT "=")
(ID "modifier")
(PUNCT ",")
(ID "offvalue")
(PUNCT "=")
(LIT "")
(PUNCT ")")
(NEWLINE)
(ID "check")
(PUNCT ".")
(ID "grid")
(PUNCT "(")
(ID "row")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "column")
(PUNCT "=")
(ID "column")
(PUNCT ",")
(ID "padx")
(PUNCT "=")
(LIT 2)
(PUNCT ",")
(ID "sticky")
(PUNCT "=")
(ID "W")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "modifier_checkbuttons")
(PUNCT "[")
(ID "modifier")
(PUNCT "]")
(PUNCT "=")
(ID "check")
(NEWLINE)
(ID "column")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "labelFnAdvice")
(PUNCT "=")
(ID "Label")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "frameControlsBasic")
(PUNCT ",")
(ID "justify")
(PUNCT "=")
(ID "LEFT")
(PUNCT ",")
(ID "text")
(PUNCT "=")
(LIT "Select the desired modifier keys\n")
(PUNCT "+")
(LIT "above, and the final key from the\n")
(PUNCT "+")
(LIT "list on the right.\n\n")
(PUNCT "+")
(LIT "Use upper case Symbols when using\n")
(PUNCT "+")
(LIT "the Shift modifier.  (Letters will be\n")
(PUNCT "+")
(LIT "converted automatically.)")
(PUNCT ")")
(NEWLINE)
(ID "labelFnAdvice")
(PUNCT ".")
(ID "grid")
(PUNCT "(")
(ID "row")
(PUNCT "=")
(LIT 1)
(PUNCT ",")
(ID "column")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "columnspan")
(PUNCT "=")
(LIT 4)
(PUNCT ",")
(ID "padx")
(PUNCT "=")
(LIT 2)
(PUNCT ",")
(ID "sticky")
(PUNCT "=")
(ID "W")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "listKeysFinal")
(PUNCT "=")
(ID "Listbox")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "frameControlsBasic")
(PUNCT ",")
(ID "width")
(PUNCT "=")
(LIT 15)
(PUNCT ",")
(ID "height")
(PUNCT "=")
(LIT 10)
(PUNCT ",")
(ID "selectmode")
(PUNCT "=")
(ID "SINGLE")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "listKeysFinal")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(LIT "<ButtonRelease-1>")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "FinalKeySelected")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "listKeysFinal")
(PUNCT ".")
(ID "grid")
(PUNCT "(")
(ID "row")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "column")
(PUNCT "=")
(LIT 4)
(PUNCT ",")
(ID "rowspan")
(PUNCT "=")
(LIT 4)
(PUNCT ",")
(ID "sticky")
(PUNCT "=")
(ID "NS")
(PUNCT ")")
(NEWLINE)
(ID "scrollKeysFinal")
(PUNCT "=")
(ID "Scrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "frameControlsBasic")
(PUNCT ",")
(ID "orient")
(PUNCT "=")
(ID "VERTICAL")
(PUNCT ",")
(ID "command")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "listKeysFinal")
(PUNCT ".")
(ID "yview")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "listKeysFinal")
(PUNCT ".")
(ID "config")
(PUNCT "(")
(ID "yscrollcommand")
(PUNCT "=")
(ID "scrollKeysFinal")
(PUNCT ".")
(ID "set")
(PUNCT ")")
(NEWLINE)
(ID "scrollKeysFinal")
(PUNCT ".")
(ID "grid")
(PUNCT "(")
(ID "row")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "column")
(PUNCT "=")
(LIT 5)
(PUNCT ",")
(ID "rowspan")
(PUNCT "=")
(LIT 4)
(PUNCT ",")
(ID "sticky")
(PUNCT "=")
(ID "NS")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "buttonClear")
(PUNCT "=")
(ID "Button")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "frameControlsBasic")
(PUNCT ",")
(ID "text")
(PUNCT "=")
(LIT "Clear Keys")
(PUNCT ",")
(ID "command")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "ClearKeySeq")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "buttonClear")
(PUNCT ".")
(ID "grid")
(PUNCT "(")
(ID "row")
(PUNCT "=")
(LIT 2)
(PUNCT ",")
(ID "column")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "columnspan")
(PUNCT "=")
(LIT 4)
(PUNCT ")")
(NEWLINE)
(ID "labelTitleAdvanced")
(PUNCT "=")
(ID "Label")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "frameKeySeqAdvanced")
(PUNCT ",")
(ID "justify")
(PUNCT "=")
(ID "LEFT")
(PUNCT ",")
(ID "text")
(PUNCT "=")
(LIT "Enter new binding(s) for  '")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "action")
(PUNCT "+")
(LIT "' :\n")
(PUNCT "+")
(LIT "(These bindings will not be checked for validity!)")
(PUNCT ")")
(NEWLINE)
(ID "labelTitleAdvanced")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(ID "anchor")
(PUNCT "=")
(ID "W")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "entryKeysAdvanced")
(PUNCT "=")
(ID "Entry")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "frameKeySeqAdvanced")
(PUNCT ",")
(ID "textvariable")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "keyString")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "entryKeysAdvanced")
(PUNCT ".")
(ID "pack")
(PUNCT "(")
(ID "fill")
(PUNCT "=")
(ID "X")
(PUNCT ")")
(NEWLINE)
(ID "labelHelpAdvanced")
(PUNCT "=")
(ID "Label")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "frameHelpAdvanced")
(PUNCT ",")
(ID "justify")
(PUNCT "=")
(ID "LEFT")
(PUNCT ",")
(ID "text")
(PUNCT "=")
(LIT "Key bindings are specified using Tkinter keysyms as\n")
(PUNCT "+")
(LIT "in these samples: <Control-f>, <Shift-F2>, <F12>,\n")
(LIT "<Control-space>, <Meta-less>, <Control-Alt-Shift-X>.\n")
(LIT "Upper case is used when the Shift modifier is present!\n\n")
(PUNCT "+")
(LIT "'Emacs style' multi-keystroke bindings are specified as\n")
(PUNCT "+")
(LIT "follows: <Control-x><Control-y>, where the first key\n")
(PUNCT "+")
(LIT "is the 'do-nothing' keybinding.\n\n")
(PUNCT "+")
(LIT "Multiple separate bindings for one action should be\n")
(PUNCT "+")
(LIT "separated by a space, eg., <Alt-v> <Meta-v>.")
(PUNCT ")")
(NEWLINE)
(ID "labelHelpAdvanced")
(PUNCT ".")
(ID "grid")
(PUNCT "(")
(ID "row")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "column")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "sticky")
(PUNCT "=")
(ID "NSEW")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "SetModifiersForPlatform")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Determine list of names of key modifiers for this platform.\n\n        The names are used to build Tk bindings -- it doesn't matter if the\n        keyboard has these keys, it matters if Tk understands them. The\n        order is also important: key binding equality depends on it, so\n        config-keys.def must use the same ordering.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "darwin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "modifiers")
(PUNCT "=")
(PUNCT "[")
(LIT "Shift")
(PUNCT ",")
(LIT "Control")
(PUNCT ",")
(LIT "Option")
(PUNCT ",")
(LIT "Command")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "modifiers")
(PUNCT "=")
(PUNCT "[")
(LIT "Control")
(PUNCT ",")
(LIT "Alt")
(PUNCT ",")
(LIT "Shift")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "modifier_label")
(PUNCT "=")
(PUNCT "{")
(LIT "Control")
(PUNCT ":")
(LIT "Ctrl")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ToggleLevel")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "buttonLevel")
(PUNCT ".")
(ID "cget")
(PUNCT "(")
(LIT "text")
(PUNCT ")")
(PUNCT "[")
(PUNCT ":")
(LIT 8)
(PUNCT "]")
(PUNCT "==")
(LIT "Advanced")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "ClearKeySeq")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "buttonLevel")
(PUNCT ".")
(ID "config")
(PUNCT "(")
(ID "text")
(PUNCT "=")
(LIT "<< Basic Key Binding Entry")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frameKeySeqAdvanced")
(PUNCT ".")
(ID "lift")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frameHelpAdvanced")
(PUNCT ".")
(ID "lift")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "entryKeysAdvanced")
(PUNCT ".")
(ID "focus_set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "advanced")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "ClearKeySeq")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "buttonLevel")
(PUNCT ".")
(ID "config")
(PUNCT "(")
(ID "text")
(PUNCT "=")
(LIT "Advanced Key Binding Entry >>")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frameKeySeqBasic")
(PUNCT ".")
(ID "lift")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frameControlsBasic")
(PUNCT ".")
(ID "lift")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "advanced")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "FinalKeySelected")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "BuildKeyString")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "BuildKeyString")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "keyList")
(PUNCT "=")
(ID "modifiers")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "GetModifiers")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "finalKey")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "listKeysFinal")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "ANCHOR")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "finalKey")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "finalKey")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "TranslateKey")
(PUNCT "(")
(ID "finalKey")
(PUNCT ",")
(ID "modifiers")
(PUNCT ")")
(NEWLINE)
(ID "keyList")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "finalKey")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "keyString")
(PUNCT ".")
(ID "set")
(PUNCT "(")
(LIT "<")
(PUNCT "+")
(LIT "-")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "keyList")
(PUNCT ")")
(PUNCT "+")
(LIT ">")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "GetModifiers")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modList")
(PUNCT "=")
(PUNCT "[")
(ID "variable")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID "variable")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "modifier_vars")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(ID "mod")
(KEYWORD for)
(ID "mod")
(KEYWORD in)
(ID "modList")
(KEYWORD if)
(ID "mod")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ClearKeySeq")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "listKeysFinal")
(PUNCT ".")
(ID "select_clear")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "END")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "listKeysFinal")
(PUNCT ".")
(ID "yview")
(PUNCT "(")
(ID "MOVETO")
(PUNCT ",")
(LIT "0.0")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "variable")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "modifier_vars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "variable")
(PUNCT ".")
(ID "set")
(PUNCT "(")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "keyString")
(PUNCT ".")
(ID "set")
(PUNCT "(")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "LoadFinalKeyList")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "functionKeys")
(PUNCT "=")
(PUNCT "(")
(LIT "F1")
(PUNCT ",")
(LIT "F2")
(PUNCT ",")
(LIT "F2")
(PUNCT ",")
(LIT "F4")
(PUNCT ",")
(LIT "F5")
(PUNCT ",")
(LIT "F6")
(PUNCT ",")
(LIT "F7")
(PUNCT ",")
(LIT "F8")
(PUNCT ",")
(LIT "F9")
(PUNCT ",")
(LIT "F10")
(PUNCT ",")
(LIT "F11")
(PUNCT ",")
(LIT "F12")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "alphanumKeys")
(PUNCT "=")
(ID "tuple")
(PUNCT "(")
(ID "string")
(PUNCT ".")
(ID "ascii_lowercase")
(PUNCT "+")
(ID "string")
(PUNCT ".")
(ID "digits")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "punctuationKeys")
(PUNCT "=")
(ID "tuple")
(PUNCT "(")
(LIT "~!@#%^&*()_-+={}[]|;:,.<>/?")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "whitespaceKeys")
(PUNCT "=")
(PUNCT "(")
(LIT "Tab")
(PUNCT ",")
(LIT "Space")
(PUNCT ",")
(LIT "Return")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "editKeys")
(PUNCT "=")
(PUNCT "(")
(LIT "BackSpace")
(PUNCT ",")
(LIT "Delete")
(PUNCT ",")
(LIT "Insert")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "moveKeys")
(PUNCT "=")
(PUNCT "(")
(LIT "Home")
(PUNCT ",")
(LIT "End")
(PUNCT ",")
(LIT "Page Up")
(PUNCT ",")
(LIT "Page Down")
(PUNCT ",")
(LIT "Left Arrow")
(PUNCT ",")
(LIT "Right Arrow")
(PUNCT ",")
(LIT "Up Arrow")
(PUNCT ",")
(LIT "Down Arrow")
(PUNCT ")")
(NEWLINE)
(ID "keys")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "alphanumKeys")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "punctuationKeys")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "functionKeys")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "whitespaceKeys")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "editKeys")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "moveKeys")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "listKeysFinal")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(ID "END")
(PUNCT ",")
(PUNCT "*")
(ID "keys")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "TranslateKey")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "modifiers")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Translate from keycap symbol to the Tkinter keysym")
(NEWLINE)
(ID "translateDict")
(PUNCT "=")
(PUNCT "{")
(LIT "Space")
(PUNCT ":")
(LIT "space")
(PUNCT ",")
(LIT "~")
(PUNCT ":")
(LIT "asciitilde")
(PUNCT ",")
(LIT "!")
(PUNCT ":")
(LIT "exclam")
(PUNCT ",")
(LIT "@")
(PUNCT ":")
(LIT "at")
(PUNCT ",")
(LIT "#")
(PUNCT ":")
(LIT "numbersign")
(PUNCT ",")
(LIT "%")
(PUNCT ":")
(LIT "percent")
(PUNCT ",")
(LIT "^")
(PUNCT ":")
(LIT "asciicircum")
(PUNCT ",")
(LIT "&")
(PUNCT ":")
(LIT "ampersand")
(PUNCT ",")
(LIT "*")
(PUNCT ":")
(LIT "asterisk")
(PUNCT ",")
(LIT "(")
(PUNCT ":")
(LIT "parenleft")
(PUNCT ",")
(LIT ")")
(PUNCT ":")
(LIT "parenright")
(PUNCT ",")
(LIT "_")
(PUNCT ":")
(LIT "underscore")
(PUNCT ",")
(LIT "-")
(PUNCT ":")
(LIT "minus")
(PUNCT ",")
(LIT "+")
(PUNCT ":")
(LIT "plus")
(PUNCT ",")
(LIT "=")
(PUNCT ":")
(LIT "equal")
(PUNCT ",")
(LIT "{")
(PUNCT ":")
(LIT "braceleft")
(PUNCT ",")
(LIT "}")
(PUNCT ":")
(LIT "braceright")
(PUNCT ",")
(LIT "[")
(PUNCT ":")
(LIT "bracketleft")
(PUNCT ",")
(LIT "]")
(PUNCT ":")
(LIT "bracketright")
(PUNCT ",")
(LIT "|")
(PUNCT ":")
(LIT "bar")
(PUNCT ",")
(LIT ";")
(PUNCT ":")
(LIT "semicolon")
(PUNCT ",")
(LIT ":")
(PUNCT ":")
(LIT "colon")
(PUNCT ",")
(LIT ",")
(PUNCT ":")
(LIT "comma")
(PUNCT ",")
(LIT ".")
(PUNCT ":")
(LIT "period")
(PUNCT ",")
(LIT "<")
(PUNCT ":")
(LIT "less")
(PUNCT ",")
(LIT ">")
(PUNCT ":")
(LIT "greater")
(PUNCT ",")
(LIT "/")
(PUNCT ":")
(LIT "slash")
(PUNCT ",")
(LIT "?")
(PUNCT ":")
(LIT "question")
(PUNCT ",")
(LIT "Page Up")
(PUNCT ":")
(LIT "Prior")
(PUNCT ",")
(LIT "Page Down")
(PUNCT ":")
(LIT "Next")
(PUNCT ",")
(LIT "Left Arrow")
(PUNCT ":")
(LIT "Left")
(PUNCT ",")
(LIT "Right Arrow")
(PUNCT ":")
(LIT "Right")
(PUNCT ",")
(LIT "Up Arrow")
(PUNCT ":")
(LIT "Up")
(PUNCT ",")
(LIT "Down Arrow")
(PUNCT ":")
(LIT "Down")
(PUNCT ",")
(LIT "Tab")
(PUNCT ":")
(LIT "Tab")
(PUNCT "}")
(NEWLINE)
(KEYWORD if)
(ID "key")
(KEYWORD in)
(ID "translateDict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "translateDict")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "Shift")
(KEYWORD in)
(ID "modifiers")
(KEYWORD and)
(ID "key")
(KEYWORD in)
(ID "string")
(PUNCT ".")
(ID "ascii_lowercase")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "key")
(PUNCT ".")
(ID "upper")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "key")
(PUNCT "=")
(LIT "Key-")
(PUNCT "+")
(ID "key")
(NEWLINE)
(KEYWORD return)
(ID "key")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "OK")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "advanced")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "KeysOK")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "result")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "keyString")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "destroy")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "Cancel")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "result")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "destroy")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "KeysOK")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Validity check on user's 'basic' keybinding selection.\n\n        Doesn't check the string produced by the advanced dialog because\n        'modifiers' isn't set.\n\n        ")
(NEWLINE)
(ID "keys")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "keyString")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "keys")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "finalKey")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "listKeysFinal")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "ANCHOR")
(PUNCT ")")
(NEWLINE)
(ID "modifiers")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "GetModifiers")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "keySequence")
(PUNCT "=")
(ID "keys")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "keysOK")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "title")
(PUNCT "=")
(LIT "Key Sequence Error")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "keys")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(ID "title")
(PUNCT "=")
(ID "title")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT "=")
(LIT "No keys specified.")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "keys")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT ">")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(ID "title")
(PUNCT "=")
(ID "title")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT "=")
(LIT "Missing the final Key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(KEYWORD not)
(ID "modifiers")
(KEYWORD and)
(ID "finalKey")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "functionKeys")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "moveKeys")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(ID "title")
(PUNCT "=")
(ID "title")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT "=")
(LIT "No modifier key(s) specified.")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(ID "modifiers")
(PUNCT "==")
(PUNCT "[")
(LIT "Shift")
(PUNCT "]")
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID "finalKey")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "functionKeys")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "moveKeys")
(PUNCT "+")
(PUNCT "(")
(LIT "Tab")
(PUNCT ",")
(LIT "Space")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(LIT "The shift modifier by itself may not be used with")
(LIT " this key symbol.")
(NEWLINE)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(ID "title")
(PUNCT "=")
(ID "title")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT "=")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "keySequence")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "currentKeySequences")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(LIT "This key combination is already in use.")
(NEWLINE)
(ID "tkMessageBox")
(PUNCT ".")
(ID "showerror")
(PUNCT "(")
(ID "title")
(PUNCT "=")
(ID "title")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT "=")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "keysOK")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "keysOK")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "idlelib")
(PUNCT ".")
(ID "idle_test")
(PUNCT ".")
(ID "htest")
(KEYWORD import)
(ID "run")
(NEWLINE)
(ID "run")
(PUNCT "(")
(ID "GetKeysDialog")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
