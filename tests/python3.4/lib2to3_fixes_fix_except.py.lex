(LIT "Fixer for except statements with named exceptions.\n\nThe following cases will be converted:\n\n- \"except E, T:\" where T is a name:\n\n    except E as T:\n\n- \"except E, T:\" where T is not a name, tuple or list:\n\n        except E as t:\n            T = t\n\n    This is done because the target of an \"except\" clause must be a\n    name.\n\n- \"except E, T:\" where T is a tuple or list literal:\n\n        except E as t:\n            T = t.args\n")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(KEYWORD import)
(ID "pytree")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(ID "pgen2")
(KEYWORD import)
(ID "token")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(KEYWORD import)
(ID "fixer_base")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(ID "fixer_util")
(KEYWORD import)
(ID "Assign")
(PUNCT ",")
(ID "Attr")
(PUNCT ",")
(ID "Name")
(PUNCT ",")
(ID "is_tuple")
(PUNCT ",")
(ID "is_list")
(PUNCT ",")
(ID "syms")
(NEWLINE)
(KEYWORD def)
(ID "find_excepts")
(PUNCT "(")
(ID "nodes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "n")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "nodes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "n")
(PUNCT ".")
(ID "type")
(PUNCT "==")
(ID "syms")
(PUNCT ".")
(ID "except_clause")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "n")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ".")
(ID "value")
(PUNCT "==")
(LIT "except")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(PUNCT "(")
(ID "n")
(PUNCT ",")
(ID "nodes")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "FixExcept")
(PUNCT "(")
(ID "fixer_base")
(PUNCT ".")
(ID "BaseFix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "BM_compatible")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "PATTERN")
(PUNCT "=")
(LIT "\n    try_stmt< 'try' ':' (simple_stmt | suite)\n                  cleanup=(except_clause ':' (simple_stmt | suite))+\n                  tail=(['except' ':' (simple_stmt | suite)]\n                        ['else' ':' (simple_stmt | suite)]\n                        ['finally' ':' (simple_stmt | suite)]) >\n    ")
(NEWLINE)
(KEYWORD def)
(ID "transform")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "syms")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "syms")
(NEWLINE)
(ID "tail")
(PUNCT "=")
(PUNCT "[")
(ID "n")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID "n")
(KEYWORD in)
(ID "results")
(PUNCT "[")
(LIT "tail")
(PUNCT "]")
(PUNCT "]")
(NEWLINE)
(ID "try_cleanup")
(PUNCT "=")
(PUNCT "[")
(ID "ch")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID "ch")
(KEYWORD in)
(ID "results")
(PUNCT "[")
(LIT "cleanup")
(PUNCT "]")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "except_clause")
(PUNCT ",")
(ID "e_suite")
(KEYWORD in)
(ID "find_excepts")
(PUNCT "(")
(ID "try_cleanup")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "except_clause")
(PUNCT ".")
(ID "children")
(PUNCT ")")
(PUNCT "==")
(LIT 4)
(PUNCT ":")
(NEWLINE)
(INDENT)
(PUNCT "(")
(ID "E")
(PUNCT ",")
(ID "comma")
(PUNCT ",")
(ID "N")
(PUNCT ")")
(PUNCT "=")
(ID "except_clause")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(LIT 4)
(PUNCT "]")
(NEWLINE)
(ID "comma")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "Name")
(PUNCT "(")
(LIT "as")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(LIT " ")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "N")
(PUNCT ".")
(ID "type")
(PUNCT "!=")
(ID "token")
(PUNCT ".")
(ID "NAME")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_N")
(PUNCT "=")
(ID "Name")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "new_name")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(ID "target")
(PUNCT "=")
(ID "N")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "target")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "N")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "new_N")
(PUNCT ")")
(NEWLINE)
(ID "new_N")
(PUNCT "=")
(ID "new_N")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "suite_stmts")
(PUNCT "=")
(ID "e_suite")
(PUNCT ".")
(ID "children")
(NEWLINE)
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "stmt")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "suite_stmts")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "stmt")
(PUNCT ",")
(ID "pytree")
(PUNCT ".")
(ID "Node")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "is_tuple")
(PUNCT "(")
(ID "N")
(PUNCT ")")
(KEYWORD or)
(ID "is_list")
(PUNCT "(")
(ID "N")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "assign")
(PUNCT "=")
(ID "Assign")
(PUNCT "(")
(ID "target")
(PUNCT ",")
(ID "Attr")
(PUNCT "(")
(ID "new_N")
(PUNCT ",")
(ID "Name")
(PUNCT "(")
(LIT "args")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "assign")
(PUNCT "=")
(ID "Assign")
(PUNCT "(")
(ID "target")
(PUNCT ",")
(ID "new_N")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "child")
(KEYWORD in)
(ID "reversed")
(PUNCT "(")
(ID "suite_stmts")
(PUNCT "[")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "e_suite")
(PUNCT ".")
(ID "insert_child")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "child")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "e_suite")
(PUNCT ".")
(ID "insert_child")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "assign")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "N")
(PUNCT ".")
(ID "prefix")
(PUNCT "==")
(LIT "")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "N")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(LIT " ")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "children")
(PUNCT "=")
(PUNCT "[")
(ID "c")
(PUNCT ".")
(ID "clone")
(PUNCT "(")
(PUNCT ")")
(KEYWORD for)
(ID "c")
(KEYWORD in)
(ID "node")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(PUNCT "]")
(PUNCT "+")
(ID "try_cleanup")
(PUNCT "+")
(ID "tail")
(NEWLINE)
(KEYWORD return)
(ID "pytree")
(PUNCT ".")
(ID "Node")
(PUNCT "(")
(ID "node")
(PUNCT ".")
(ID "type")
(PUNCT ",")
(ID "children")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
