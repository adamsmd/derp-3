(LIT "distutils.command.install\n\nImplements the Distutils 'install' command.")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(KEYWORD import)
(ID "log")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "core")
(KEYWORD import)
(ID "Command")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "debug")
(KEYWORD import)
(ID "DEBUG")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "sysconfig")
(KEYWORD import)
(ID "get_config_vars")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "errors")
(KEYWORD import)
(ID "DistutilsPlatformError")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "file_util")
(KEYWORD import)
(ID "write_file")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "util")
(KEYWORD import)
(ID "convert_path")
(PUNCT ",")
(ID "subst_vars")
(PUNCT ",")
(ID "change_root")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "util")
(KEYWORD import)
(ID "get_platform")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "errors")
(KEYWORD import)
(ID "DistutilsOptionError")
(NEWLINE)
(KEYWORD from)
(ID "site")
(KEYWORD import)
(ID "USER_BASE")
(NEWLINE)
(KEYWORD from)
(ID "site")
(KEYWORD import)
(ID "USER_SITE")
(NEWLINE)
(ID "HAS_USER_SITE")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "WINDOWS_SCHEME")
(PUNCT "=")
(PUNCT "{")
(LIT "purelib")
(PUNCT ":")
(LIT "$base/Lib/site-packages")
(PUNCT ",")
(LIT "platlib")
(PUNCT ":")
(LIT "$base/Lib/site-packages")
(PUNCT ",")
(LIT "headers")
(PUNCT ":")
(LIT "$base/Include/$dist_name")
(PUNCT ",")
(LIT "scripts")
(PUNCT ":")
(LIT "$base/Scripts")
(PUNCT ",")
(LIT "data")
(PUNCT ":")
(LIT "$base")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(ID "INSTALL_SCHEMES")
(PUNCT "=")
(PUNCT "{")
(LIT "unix_prefix")
(PUNCT ":")
(PUNCT "{")
(LIT "purelib")
(PUNCT ":")
(LIT "$base/lib/python$py_version_short/site-packages")
(PUNCT ",")
(LIT "platlib")
(PUNCT ":")
(LIT "$platbase/lib/python$py_version_short/site-packages")
(PUNCT ",")
(LIT "headers")
(PUNCT ":")
(LIT "$base/include/python$py_version_short$abiflags/$dist_name")
(PUNCT ",")
(LIT "scripts")
(PUNCT ":")
(LIT "$base/bin")
(PUNCT ",")
(LIT "data")
(PUNCT ":")
(LIT "$base")
(PUNCT ",")
(PUNCT "}")
(PUNCT ",")
(LIT "unix_local")
(PUNCT ":")
(PUNCT "{")
(LIT "purelib")
(PUNCT ":")
(LIT "$base/local/lib/python$py_version_short/dist-packages")
(PUNCT ",")
(LIT "platlib")
(PUNCT ":")
(LIT "$platbase/local/lib/python$py_version_short/dist-packages")
(PUNCT ",")
(LIT "headers")
(PUNCT ":")
(LIT "$base/local/include/python$py_version_short/$dist_name")
(PUNCT ",")
(LIT "scripts")
(PUNCT ":")
(LIT "$base/local/bin")
(PUNCT ",")
(LIT "data")
(PUNCT ":")
(LIT "$base/local")
(PUNCT ",")
(PUNCT "}")
(PUNCT ",")
(LIT "deb_system")
(PUNCT ":")
(PUNCT "{")
(LIT "purelib")
(PUNCT ":")
(LIT "$base/lib/python3/dist-packages")
(PUNCT ",")
(LIT "platlib")
(PUNCT ":")
(LIT "$platbase/lib/python3/dist-packages")
(PUNCT ",")
(LIT "headers")
(PUNCT ":")
(LIT "$base/include/python$py_version_short/$dist_name")
(PUNCT ",")
(LIT "scripts")
(PUNCT ":")
(LIT "$base/bin")
(PUNCT ",")
(LIT "data")
(PUNCT ":")
(LIT "$base")
(PUNCT ",")
(PUNCT "}")
(PUNCT ",")
(LIT "unix_home")
(PUNCT ":")
(PUNCT "{")
(LIT "purelib")
(PUNCT ":")
(LIT "$base/lib/python")
(PUNCT ",")
(LIT "platlib")
(PUNCT ":")
(LIT "$base/lib/python")
(PUNCT ",")
(LIT "headers")
(PUNCT ":")
(LIT "$base/include/python/$dist_name")
(PUNCT ",")
(LIT "scripts")
(PUNCT ":")
(LIT "$base/bin")
(PUNCT ",")
(LIT "data")
(PUNCT ":")
(LIT "$base")
(PUNCT ",")
(PUNCT "}")
(PUNCT ",")
(LIT "nt")
(PUNCT ":")
(ID "WINDOWS_SCHEME")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD if)
(ID "HAS_USER_SITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "INSTALL_SCHEMES")
(PUNCT "[")
(LIT "nt_user")
(PUNCT "]")
(PUNCT "=")
(PUNCT "{")
(LIT "purelib")
(PUNCT ":")
(LIT "$usersite")
(PUNCT ",")
(LIT "platlib")
(PUNCT ":")
(LIT "$usersite")
(PUNCT ",")
(LIT "headers")
(PUNCT ":")
(LIT "$userbase/Python$py_version_nodot/Include/$dist_name")
(PUNCT ",")
(LIT "scripts")
(PUNCT ":")
(LIT "$userbase/Scripts")
(PUNCT ",")
(LIT "data")
(PUNCT ":")
(LIT "$userbase")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(ID "INSTALL_SCHEMES")
(PUNCT "[")
(LIT "unix_user")
(PUNCT "]")
(PUNCT "=")
(PUNCT "{")
(LIT "purelib")
(PUNCT ":")
(LIT "$usersite")
(PUNCT ",")
(LIT "platlib")
(PUNCT ":")
(LIT "$usersite")
(PUNCT ",")
(LIT "headers")
(PUNCT ":")
(LIT "$userbase/include/python$py_version_short$abiflags/$dist_name")
(PUNCT ",")
(LIT "scripts")
(PUNCT ":")
(LIT "$userbase/bin")
(PUNCT ",")
(LIT "data")
(PUNCT ":")
(LIT "$userbase")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(ID "SCHEME_KEYS")
(PUNCT "=")
(PUNCT "(")
(LIT "purelib")
(PUNCT ",")
(LIT "platlib")
(PUNCT ",")
(LIT "headers")
(PUNCT ",")
(LIT "scripts")
(PUNCT ",")
(LIT "data")
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "install")
(PUNCT "(")
(ID "Command")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "description")
(PUNCT "=")
(LIT "install everything from build directory")
(NEWLINE)
(ID "user_options")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(LIT "prefix=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "installation prefix")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "exec-prefix=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "(Unix only) prefix for platform-specific files")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "home=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "(Unix only) home directory to install under")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "install-base=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "base installation directory (instead of --prefix or --home)")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "install-platbase=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "base installation directory for platform-specific files ")
(PUNCT "+")
(LIT "(instead of --exec-prefix or --home)")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "root=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "install everything relative to this alternate root directory")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "install-purelib=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "installation directory for pure Python module distributions")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "install-platlib=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "installation directory for non-pure module distributions")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "install-lib=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "installation directory for all module distributions ")
(PUNCT "+")
(LIT "(overrides --install-purelib and --install-platlib)")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "install-headers=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "installation directory for C/C++ headers")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "install-scripts=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "installation directory for Python scripts")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "install-data=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "installation directory for data files")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "compile")
(PUNCT ",")
(LIT "c")
(PUNCT ",")
(LIT "compile .py to .pyc [default]")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "no-compile")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "don't compile .py files")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "optimize=")
(PUNCT ",")
(LIT "O")
(PUNCT ",")
(LIT "also compile with optimization: -O1 for \"python -O\", ")
(LIT "-O2 for \"python -OO\", and -O0 to disable [default: -O0]")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "force")
(PUNCT ",")
(LIT "f")
(PUNCT ",")
(LIT "force installation (overwrite any existing files)")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "skip-build")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "skip rebuilding everything (for testing/debugging)")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "record=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "filename in which to record list of installed files")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "install-layout=")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "installation layout to choose (known values: deb, unix)")
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(ID "boolean_options")
(PUNCT "=")
(PUNCT "[")
(LIT "compile")
(PUNCT ",")
(LIT "force")
(PUNCT ",")
(LIT "skip-build")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "HAS_USER_SITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "user_options")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(LIT "user")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "install in user site-package '%s'")
(PUNCT "%")
(ID "USER_SITE")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "boolean_options")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "user")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "negative_opt")
(PUNCT "=")
(PUNCT "{")
(LIT "no-compile")
(PUNCT ":")
(LIT "compile")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "initialize_options")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initializes options.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "exec_prefix")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "home")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "user")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "prefix_option")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_base")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_platbase")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "root")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_purelib")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_platlib")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_headers")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_lib")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_scripts")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_data")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_userbase")
(PUNCT "=")
(ID "USER_BASE")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_usersite")
(PUNCT "=")
(ID "USER_SITE")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_layout")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "multiarch")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "compile")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "optimize")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "extra_path")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_path_file")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "force")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "skip_build")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "warn_dir")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "build_base")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "build_lib")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "record")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "finalize_options")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Finalizes options.")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "prefix")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "exec_prefix")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "home")
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "install_base")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "install_platbase")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsOptionError")
(PUNCT "(")
(LIT "must supply either prefix/exec-prefix/home or ")
(PUNCT "+")
(LIT "install-base/install-platbase -- not both")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "home")
(KEYWORD and)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "prefix")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "exec_prefix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsOptionError")
(PUNCT "(")
(LIT "must supply either home or prefix/exec-prefix -- not both")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "user")
(KEYWORD and)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "prefix")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "exec_prefix")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "home")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "install_base")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "install_platbase")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsOptionError")
(PUNCT "(")
(LIT "can't combine user with prefix, ")
(LIT "exec_prefix/home, or install_(plat)base")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "name")
(PUNCT "!=")
(LIT "posix")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "exec_prefix")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "exec-prefix option ignored on this platform")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "exec_prefix")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "dump_dirs")
(PUNCT "(")
(LIT "pre-finalize_{unix,other}")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "name")
(PUNCT "==")
(LIT "posix")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "finalize_unix")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "finalize_other")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "dump_dirs")
(PUNCT "(")
(LIT "post-finalize_{unix,other}()")
(PUNCT ")")
(NEWLINE)
(ID "py_version")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "version")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(PUNCT "(")
(ID "prefix")
(PUNCT ",")
(ID "exec_prefix")
(PUNCT ")")
(PUNCT "=")
(ID "get_config_vars")
(PUNCT "(")
(LIT "prefix")
(PUNCT ",")
(LIT "exec_prefix")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "abiflags")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "abiflags")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "abiflags")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "config_vars")
(PUNCT "=")
(PUNCT "{")
(LIT "dist_name")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "get_name")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(LIT "dist_version")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "get_version")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(LIT "dist_fullname")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "get_fullname")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(LIT "py_version")
(PUNCT ":")
(ID "py_version")
(PUNCT ",")
(LIT "py_version_short")
(PUNCT ":")
(ID "py_version")
(PUNCT "[")
(LIT 0)
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(PUNCT ",")
(LIT "py_version_nodot")
(PUNCT ":")
(ID "py_version")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "+")
(ID "py_version")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(PUNCT ",")
(LIT "sys_prefix")
(PUNCT ":")
(ID "prefix")
(PUNCT ",")
(LIT "prefix")
(PUNCT ":")
(ID "prefix")
(PUNCT ",")
(LIT "sys_exec_prefix")
(PUNCT ":")
(ID "exec_prefix")
(PUNCT ",")
(LIT "exec_prefix")
(PUNCT ":")
(ID "exec_prefix")
(PUNCT ",")
(LIT "abiflags")
(PUNCT ":")
(ID "abiflags")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD if)
(ID "HAS_USER_SITE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "config_vars")
(PUNCT "[")
(LIT "userbase")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_userbase")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "config_vars")
(PUNCT "[")
(LIT "usersite")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_usersite")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "expand_basedirs")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "dump_dirs")
(PUNCT "(")
(LIT "post-expand_basedirs()")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "config_vars")
(PUNCT "[")
(LIT "base")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_base")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "config_vars")
(PUNCT "[")
(LIT "platbase")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_platbase")
(NEWLINE)
(KEYWORD if)
(ID "DEBUG")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "pprint")
(KEYWORD import)
(ID "pprint")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "config vars:")
(PUNCT ")")
(NEWLINE)
(ID "pprint")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "config_vars")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "expand_dirs")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "dump_dirs")
(PUNCT "(")
(LIT "post-expand_dirs()")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "user")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "create_home_path")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "install_lib")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "ext_modules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "install_lib")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_platlib")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "install_lib")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_purelib")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "convert_paths")
(PUNCT "(")
(LIT "lib")
(PUNCT ",")
(LIT "purelib")
(PUNCT ",")
(LIT "platlib")
(PUNCT ",")
(LIT "scripts")
(PUNCT ",")
(LIT "data")
(PUNCT ",")
(LIT "headers")
(PUNCT ",")
(LIT "userbase")
(PUNCT ",")
(LIT "usersite")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "handle_extra_path")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_libbase")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_lib")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_lib")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "install_lib")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "extra_dirs")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "root")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "change_roots")
(PUNCT "(")
(LIT "libbase")
(PUNCT ",")
(LIT "lib")
(PUNCT ",")
(LIT "purelib")
(PUNCT ",")
(LIT "platlib")
(PUNCT ",")
(LIT "scripts")
(PUNCT ",")
(LIT "data")
(PUNCT ",")
(LIT "headers")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "dump_dirs")
(PUNCT "(")
(LIT "after prepending root")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "set_undefined_options")
(PUNCT "(")
(LIT "build")
(PUNCT ",")
(PUNCT "(")
(LIT "build_base")
(PUNCT ",")
(LIT "build_base")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "build_lib")
(PUNCT ",")
(LIT "build_lib")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dump_dirs")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "msg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Dumps the list of user options.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "DEBUG")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "fancy_getopt")
(KEYWORD import)
(ID "longopt_xlate")
(NEWLINE)
(ID "log")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(ID "msg")
(PUNCT "+")
(LIT ":")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "opt")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "user_options")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "opt_name")
(PUNCT "=")
(ID "opt")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "opt_name")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "=")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "opt_name")
(PUNCT "=")
(ID "opt_name")
(PUNCT "[")
(LIT 0)
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "opt_name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "negative_opt")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "opt_name")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "negative_opt")
(PUNCT "[")
(ID "opt_name")
(PUNCT "]")
(NEWLINE)
(ID "opt_name")
(PUNCT "=")
(ID "opt_name")
(PUNCT ".")
(ID "translate")
(PUNCT "(")
(ID "longopt_xlate")
(PUNCT ")")
(NEWLINE)
(ID "val")
(PUNCT "=")
(KEYWORD not)
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "opt_name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "opt_name")
(PUNCT "=")
(ID "opt_name")
(PUNCT ".")
(ID "translate")
(PUNCT "(")
(ID "longopt_xlate")
(PUNCT ")")
(NEWLINE)
(ID "val")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "opt_name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "log")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "  %s: %s")
(PUNCT "%")
(PUNCT "(")
(ID "opt_name")
(PUNCT ",")
(ID "val")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "finalize_unix")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Finalizes options for posix platforms.")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "install_base")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "install_platbase")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "install_lib")
(KEYWORD is)
(KEYWORD None)
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "install_purelib")
(KEYWORD is)
(KEYWORD None)
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "install_platlib")
(KEYWORD is)
(KEYWORD None)
(PUNCT ")")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "install_headers")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "install_scripts")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "install_data")
(KEYWORD is)
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsOptionError")
(PUNCT "(")
(LIT "install-base or install-platbase supplied, but ")
(LIT "installation scheme is incomplete")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "user")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "install_userbase")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsPlatformError")
(PUNCT "(")
(LIT "User base directory is not specified")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "install_base")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_platbase")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_userbase")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "select_scheme")
(PUNCT "(")
(LIT "unix_user")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "home")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "install_base")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_platbase")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "home")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "select_scheme")
(PUNCT "(")
(LIT "unix_home")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "prefix_option")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "prefix")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "prefix")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "exec_prefix")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsOptionError")
(PUNCT "(")
(LIT "must not supply exec-prefix without prefix")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normpath")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "prefix")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "exec_prefix")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normpath")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "exec_prefix")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "exec_prefix")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "exec_prefix")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "prefix")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "install_base")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "prefix")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_platbase")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "exec_prefix")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "install_layout")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "install_layout")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(KEYWORD in)
(PUNCT "[")
(LIT "deb")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "sysconfig")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "multiarch")
(PUNCT "=")
(ID "sysconfig")
(PUNCT ".")
(ID "get_config_var")
(PUNCT "(")
(LIT "MULTIARCH")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "select_scheme")
(PUNCT "(")
(LIT "deb_system")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "install_layout")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(KEYWORD in)
(PUNCT "[")
(LIT "unix")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "select_scheme")
(PUNCT "(")
(LIT "unix_prefix")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsOptionError")
(PUNCT "(")
(LIT "unknown value for --install-layout")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "prefix_option")
(KEYWORD and)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normpath")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "prefix")
(PUNCT ")")
(PUNCT "!=")
(LIT "/usr/local")
(PUNCT ")")
(KEYWORD or)
(ID "sys")
(PUNCT ".")
(ID "base_prefix")
(PUNCT "!=")
(ID "sys")
(PUNCT ".")
(ID "prefix")
(KEYWORD or)
(LIT "PYTHONUSERBASE")
(KEYWORD in)
(ID "os")
(PUNCT ".")
(ID "environ")
(KEYWORD or)
(LIT "VIRTUAL_ENV")
(KEYWORD in)
(ID "os")
(PUNCT ".")
(ID "environ")
(KEYWORD or)
(LIT "real_prefix")
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "__dict__")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "select_scheme")
(PUNCT "(")
(LIT "unix_prefix")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normpath")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "prefix")
(PUNCT ")")
(PUNCT "==")
(LIT "/usr/local")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "exec_prefix")
(PUNCT "=")
(LIT "/usr")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "install_base")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_platbase")
(PUNCT "=")
(LIT "/usr")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "select_scheme")
(PUNCT "(")
(LIT "unix_local")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "finalize_other")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Finalizes options for non-posix platforms")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "user")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "install_userbase")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsPlatformError")
(PUNCT "(")
(LIT "User base directory is not specified")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "install_base")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_platbase")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_userbase")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "select_scheme")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "name")
(PUNCT "+")
(LIT "_user")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "home")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "install_base")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_platbase")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "home")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "select_scheme")
(PUNCT "(")
(LIT "unix_home")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "prefix")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "prefix")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normpath")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "prefix")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "install_base")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "install_platbase")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "prefix")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "select_scheme")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsPlatformError")
(PUNCT "(")
(LIT "I don't know how to install stuff on '%s'")
(PUNCT "%")
(ID "os")
(PUNCT ".")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "select_scheme")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Sets the install directories by applying the install schemes.")
(NEWLINE)
(ID "scheme")
(PUNCT "=")
(ID "INSTALL_SCHEMES")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "SCHEME_KEYS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "attrname")
(PUNCT "=")
(LIT "install_")
(PUNCT "+")
(ID "key")
(NEWLINE)
(KEYWORD if)
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attrname")
(PUNCT ")")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attrname")
(PUNCT ",")
(ID "scheme")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_expand_attrs")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attrs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "attr")
(KEYWORD in)
(ID "attrs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "val")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attr")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "val")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "name")
(PUNCT "==")
(LIT "posix")
(KEYWORD or)
(ID "os")
(PUNCT ".")
(ID "name")
(PUNCT "==")
(LIT "nt")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "val")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "expanduser")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "val")
(PUNCT "=")
(ID "subst_vars")
(PUNCT "(")
(ID "val")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "config_vars")
(PUNCT ")")
(NEWLINE)
(ID "setattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attr")
(PUNCT ",")
(ID "val")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "expand_basedirs")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Calls `os.path.expanduser` on install_base, install_platbase and\n        root.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_expand_attrs")
(PUNCT "(")
(PUNCT "[")
(LIT "install_base")
(PUNCT ",")
(LIT "install_platbase")
(PUNCT ",")
(LIT "root")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "expand_dirs")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Calls `os.path.expanduser` on install dirs.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_expand_attrs")
(PUNCT "(")
(PUNCT "[")
(LIT "install_purelib")
(PUNCT ",")
(LIT "install_platlib")
(PUNCT ",")
(LIT "install_lib")
(PUNCT ",")
(LIT "install_headers")
(PUNCT ",")
(LIT "install_scripts")
(PUNCT ",")
(LIT "install_data")
(PUNCT ",")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "convert_paths")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "names")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Call `convert_path` over `names`.")
(NEWLINE)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "attr")
(PUNCT "=")
(LIT "install_")
(PUNCT "+")
(ID "name")
(NEWLINE)
(ID "setattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attr")
(PUNCT ",")
(ID "convert_path")
(PUNCT "(")
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attr")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "handle_extra_path")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set `path_file` and `extra_dirs` using `extra_path`.")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "extra_path")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "extra_path")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "extra_path")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "extra_path")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "extra_path")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "extra_path")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "extra_path")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "extra_path")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "path_file")
(PUNCT "=")
(ID "extra_dirs")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "extra_path")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "extra_path")
(PUNCT ")")
(PUNCT "==")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "path_file")
(PUNCT ",")
(ID "extra_dirs")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "extra_path")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsOptionError")
(PUNCT "(")
(LIT "'extra_path' option must be a list, tuple, or ")
(LIT "comma-separated string with 1 or 2 elements")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "extra_dirs")
(PUNCT "=")
(ID "convert_path")
(PUNCT "(")
(ID "extra_dirs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "path_file")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "extra_dirs")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "path_file")
(PUNCT "=")
(ID "path_file")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "extra_dirs")
(PUNCT "=")
(ID "extra_dirs")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "change_roots")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "names")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Change the install directories pointed by name using root.")
(NEWLINE)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "attr")
(PUNCT "=")
(LIT "install_")
(PUNCT "+")
(ID "name")
(NEWLINE)
(ID "setattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attr")
(PUNCT ",")
(ID "change_root")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "root")
(PUNCT ",")
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attr")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "create_home_path")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create directories under ~.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "user")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "home")
(PUNCT "=")
(ID "convert_path")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "expanduser")
(PUNCT "(")
(LIT "~")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "path")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "config_vars")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "path")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(ID "home")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isdir")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debug_print")
(PUNCT "(")
(LIT "os.makedirs('%s', 0o700)")
(PUNCT "%")
(ID "path")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "makedirs")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(LIT 448)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "run")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Runs the command.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "skip_build")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "run_command")
(PUNCT "(")
(LIT "build")
(PUNCT ")")
(NEWLINE)
(ID "build_plat")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "get_command_obj")
(PUNCT "(")
(LIT "build")
(PUNCT ")")
(PUNCT ".")
(ID "plat_name")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "warn_dir")
(KEYWORD and)
(ID "build_plat")
(PUNCT "!=")
(ID "get_platform")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsPlatformError")
(PUNCT "(")
(LIT "Can't install when ")
(LIT "cross-compiling")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "cmd_name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "get_sub_commands")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "run_command")
(PUNCT "(")
(ID "cmd_name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "path_file")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "create_path_file")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "record")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "outputs")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_outputs")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "root")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "root_len")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "root")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "counter")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "outputs")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "outputs")
(PUNCT "[")
(ID "counter")
(PUNCT "]")
(PUNCT "=")
(ID "outputs")
(PUNCT "[")
(ID "counter")
(PUNCT "]")
(PUNCT "[")
(ID "root_len")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "execute")
(PUNCT "(")
(ID "write_file")
(PUNCT ",")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "record")
(PUNCT ",")
(ID "outputs")
(PUNCT ")")
(PUNCT ",")
(LIT "writing list of installed files to '%s'")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "record")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "sys_path")
(PUNCT "=")
(ID "map")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normpath")
(PUNCT ",")
(ID "sys")
(PUNCT ".")
(ID "path")
(PUNCT ")")
(NEWLINE)
(ID "sys_path")
(PUNCT "=")
(ID "map")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normcase")
(PUNCT ",")
(ID "sys_path")
(PUNCT ")")
(NEWLINE)
(ID "install_lib")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normcase")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normpath")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "install_lib")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "warn_dir")
(KEYWORD and)
(KEYWORD not)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "path_file")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "install_path_file")
(PUNCT ")")
(KEYWORD and)
(ID "install_lib")
(KEYWORD not)
(KEYWORD in)
(ID "sys_path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "log")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(PUNCT "(")
(LIT "modules installed to '%s', which is not in ")
(LIT "Python's module search path (sys.path) -- ")
(LIT "you'll have to change the search path yourself")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "install_lib")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "create_path_file")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Creates the .pth file")
(NEWLINE)
(ID "filename")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "install_libbase")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "path_file")
(PUNCT "+")
(LIT ".pth")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "install_path_file")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "execute")
(PUNCT "(")
(ID "write_file")
(PUNCT ",")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "extra_dirs")
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(LIT "creating %s")
(PUNCT "%")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "path file '%s' not created")
(PUNCT "%")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_outputs")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Assembles the outputs of all the sub-commands.")
(NEWLINE)
(ID "outputs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "cmd_name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "get_sub_commands")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cmd")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_finalized_command")
(PUNCT "(")
(ID "cmd_name")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "filename")
(KEYWORD in)
(ID "cmd")
(PUNCT ".")
(ID "get_outputs")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "filename")
(KEYWORD not)
(KEYWORD in)
(ID "outputs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "outputs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "path_file")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "install_path_file")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "outputs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "install_libbase")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "path_file")
(PUNCT "+")
(LIT ".pth")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "outputs")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_inputs")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns the inputs of all the sub-commands")
(NEWLINE)
(ID "inputs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "cmd_name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "get_sub_commands")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cmd")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_finalized_command")
(PUNCT "(")
(ID "cmd_name")
(PUNCT ")")
(NEWLINE)
(ID "inputs")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "cmd")
(PUNCT ".")
(ID "get_inputs")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "inputs")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "has_lib")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns true if the current distribution has any Python\n        modules to install.")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "has_pure_modules")
(PUNCT "(")
(PUNCT ")")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "has_ext_modules")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "has_headers")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns true if the current distribution has any headers to\n        install.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "has_headers")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "has_scripts")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns true if the current distribution has any scripts to.\n        install.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "has_scripts")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "has_data")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns true if the current distribution has any data to.\n        install.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "has_data_files")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "sub_commands")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(LIT "install_lib")
(PUNCT ",")
(ID "has_lib")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "install_headers")
(PUNCT ",")
(ID "has_headers")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "install_scripts")
(PUNCT ",")
(ID "has_scripts")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "install_data")
(PUNCT ",")
(ID "has_data")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "install_egg_info")
(PUNCT ",")
(KEYWORD lambda)
(ID "self")
(PUNCT ":")
(KEYWORD True)
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ENDMARKER)
