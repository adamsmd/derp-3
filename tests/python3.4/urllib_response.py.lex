(LIT "Response classes used by urllib.\n\nThe base class, addbase, defines a minimal file-like interface,\nincluding read() and readline().  The typical response object is an\naddinfourl instance, which defines an info() method that returns\nheaders and a geturl() method that returns the url.\n")
(NEWLINE)
(KEYWORD import)
(ID "tempfile")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "addbase")
(PUNCT ",")
(LIT "addclosehook")
(PUNCT ",")
(LIT "addinfo")
(PUNCT ",")
(LIT "addinfourl")
(PUNCT "]")
(NEWLINE)
(KEYWORD class)
(ID "addbase")
(PUNCT "(")
(ID "tempfile")
(PUNCT ".")
(ID "_TemporaryFileWrapper")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Base class for addinfo and addclosehook. Is a good idea for garbage collection.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fp")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "addbase")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "fp")
(PUNCT ",")
(LIT "<urllib response>")
(PUNCT ",")
(ID "delete")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fp")
(PUNCT "=")
(ID "fp")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<%s at %r whose fp = %r>")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "id")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__enter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "fp")
(PUNCT ".")
(ID "closed")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "I/O operation on closed file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__exit__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "type")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "traceback")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "addclosehook")
(PUNCT "(")
(ID "addbase")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Class to add a close hook to an open file.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fp")
(PUNCT ",")
(ID "closehook")
(PUNCT ",")
(PUNCT "*")
(ID "hookargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "addclosehook")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "fp")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "closehook")
(PUNCT "=")
(ID "closehook")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "hookargs")
(PUNCT "=")
(ID "hookargs")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "closehook")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "closehook")
(PUNCT "(")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "hookargs")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "closehook")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "hookargs")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "super")
(PUNCT "(")
(ID "addclosehook")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "addinfo")
(PUNCT "(")
(ID "addbase")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "class to add an info() method to an open file.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fp")
(PUNCT ",")
(ID "headers")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "addinfo")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "fp")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "headers")
(PUNCT "=")
(ID "headers")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "headers")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "addinfourl")
(PUNCT "(")
(ID "addinfo")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "class to add info() and geturl() methods to an open file.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fp")
(PUNCT ",")
(ID "headers")
(PUNCT ",")
(ID "url")
(PUNCT ",")
(ID "code")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(ID "addinfourl")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "fp")
(PUNCT ",")
(ID "headers")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "url")
(PUNCT "=")
(ID "url")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "code")
(PUNCT "=")
(ID "code")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getcode")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "code")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "geturl")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "url")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
