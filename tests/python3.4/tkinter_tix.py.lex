(KEYWORD from)
(ID "tkinter")
(KEYWORD import)
(PUNCT "*")
(NEWLINE)
(KEYWORD from)
(ID "tkinter")
(KEYWORD import)
(ID "_cnfmerge")
(PUNCT ",")
(ID "_default_root")
(NEWLINE)
(KEYWORD if)
(ID "TkVersion")
(PUNCT "<")
(LIT 3.999)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ImportError")
(PUNCT "(")
(LIT "This version of Tix.py requires Tk 4.0 or higher")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD import)
(ID "_tkinter")
(NEWLINE)
(ID "WINDOW")
(PUNCT "=")
(LIT "window")
(NEWLINE)
(ID "TEXT")
(PUNCT "=")
(LIT "text")
(NEWLINE)
(ID "STATUS")
(PUNCT "=")
(LIT "status")
(NEWLINE)
(ID "IMMEDIATE")
(PUNCT "=")
(LIT "immediate")
(NEWLINE)
(ID "IMAGE")
(PUNCT "=")
(LIT "image")
(NEWLINE)
(ID "IMAGETEXT")
(PUNCT "=")
(LIT "imagetext")
(NEWLINE)
(ID "BALLOON")
(PUNCT "=")
(LIT "balloon")
(NEWLINE)
(ID "AUTO")
(PUNCT "=")
(LIT "auto")
(NEWLINE)
(ID "ACROSSTOP")
(PUNCT "=")
(LIT "acrosstop")
(NEWLINE)
(ID "ASCII")
(PUNCT "=")
(LIT "ascii")
(NEWLINE)
(ID "CELL")
(PUNCT "=")
(LIT "cell")
(NEWLINE)
(ID "COLUMN")
(PUNCT "=")
(LIT "column")
(NEWLINE)
(ID "DECREASING")
(PUNCT "=")
(LIT "decreasing")
(NEWLINE)
(ID "INCREASING")
(PUNCT "=")
(LIT "increasing")
(NEWLINE)
(ID "INTEGER")
(PUNCT "=")
(LIT "integer")
(NEWLINE)
(ID "MAIN")
(PUNCT "=")
(LIT "main")
(NEWLINE)
(ID "MAX")
(PUNCT "=")
(LIT "max")
(NEWLINE)
(ID "REAL")
(PUNCT "=")
(LIT "real")
(NEWLINE)
(ID "ROW")
(PUNCT "=")
(LIT "row")
(NEWLINE)
(ID "S_REGION")
(PUNCT "=")
(LIT "s-region")
(NEWLINE)
(ID "X_REGION")
(PUNCT "=")
(LIT "x-region")
(NEWLINE)
(ID "Y_REGION")
(PUNCT "=")
(LIT "y-region")
(NEWLINE)
(ID "TCL_DONT_WAIT")
(PUNCT "=")
(LIT 1)
(PUNCT "<<")
(LIT 1)
(NEWLINE)
(ID "TCL_WINDOW_EVENTS")
(PUNCT "=")
(LIT 1)
(PUNCT "<<")
(LIT 2)
(NEWLINE)
(ID "TCL_FILE_EVENTS")
(PUNCT "=")
(LIT 1)
(PUNCT "<<")
(LIT 3)
(NEWLINE)
(ID "TCL_TIMER_EVENTS")
(PUNCT "=")
(LIT 1)
(PUNCT "<<")
(LIT 4)
(NEWLINE)
(ID "TCL_IDLE_EVENTS")
(PUNCT "=")
(LIT 1)
(PUNCT "<<")
(LIT 5)
(NEWLINE)
(ID "TCL_ALL_EVENTS")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD import)
(ID "tkinter")
(PUNCT ",")
(ID "os")
(NEWLINE)
(KEYWORD class)
(ID "tixCommand")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "The tix commands provide access to miscellaneous  elements\n    of  Tix's  internal state and the Tix application context.\n    Most of the information manipulated by these  commands pertains\n    to  the  application  as a whole, or to a screen or\n    display, rather than to a particular window.\n\n    This is a mixin class, assumed to be mixed to Tkinter.Tk\n    that supports the self.tk.call method.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "tix_addbitmapdir")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "directory")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Tix maintains a list of directories under which\n        the  tix_getimage  and tix_getbitmap commands will\n        search for image files. The standard bitmap  directory\n        is $TIX_LIBRARY/bitmaps. The addbitmapdir command\n        adds directory into this list. By  using  this\n        command, the  image  files  of an applications can\n        also be located using the tix_getimage or tix_getbitmap\n        command.\n        ")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tix")
(PUNCT ",")
(LIT "addbitmapdir")
(PUNCT ",")
(ID "directory")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tix_cget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns  the  current  value  of the configuration\n        option given by option. Option may be  any  of  the\n        options described in the CONFIGURATION OPTIONS section.\n        ")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tix")
(PUNCT ",")
(LIT "cget")
(PUNCT ",")
(ID "option")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tix_configure")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Query or modify the configuration options of the Tix application\n        context. If no option is specified, returns a dictionary all of the\n        available options.  If option is specified with no value, then the\n        command returns a list describing the one named option (this list\n        will be identical to the corresponding sublist of the value\n        returned if no option is specified).  If one or more option-value\n        pairs are specified, then the command modifies the given option(s)\n        to have the given value(s); in this case the command returns an\n        empty string. Option may be any of the configuration options.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "kw")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cnf")
(PUNCT "=")
(ID "_cnfmerge")
(PUNCT "(")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "cnf")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cnf")
(PUNCT "=")
(ID "_cnfmerge")
(PUNCT "(")
(ID "cnf")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "cnf")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_getconfigure")
(PUNCT "(")
(LIT "tix")
(PUNCT ",")
(LIT "configure")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_getconfigure1")
(PUNCT "(")
(LIT "tix")
(PUNCT ",")
(LIT "configure")
(PUNCT ",")
(LIT "-")
(PUNCT "+")
(ID "cnf")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(PUNCT "(")
(LIT "tix")
(PUNCT ",")
(LIT "configure")
(PUNCT ")")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tix_filedialog")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dlgclass")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns the file selection dialog that may be shared among\n        different calls from this application.  This command will create a\n        file selection dialog widget when it is called the first time. This\n        dialog will be returned by all subsequent calls to tix_filedialog.\n        An optional dlgclass parameter can be passed to specified what type\n        of file selection dialog widget is desired. Possible options are\n        tix FileSelectDialog or tixExFileSelectDialog.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "dlgclass")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tix")
(PUNCT ",")
(LIT "filedialog")
(PUNCT ",")
(ID "dlgclass")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tix")
(PUNCT ",")
(LIT "filedialog")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "tix_getbitmap")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Locates a bitmap file of the name name.xpm or name in one of the\n        bitmap directories (see the tix_addbitmapdir command above).  By\n        using tix_getbitmap, you can avoid hard coding the pathnames of the\n        bitmap files in your application. When successful, it returns the\n        complete pathname of the bitmap file, prefixed with the character\n        '@'.  The returned value can be used to configure the -bitmap\n        option of the TK and Tix widgets.\n        ")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tix")
(PUNCT ",")
(LIT "getbitmap")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tix_getimage")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Locates an image file of the name name.xpm, name.xbm or name.ppm\n        in one of the bitmap directories (see the addbitmapdir command\n        above). If more than one file with the same name (but different\n        extensions) exist, then the image type is chosen according to the\n        depth of the X display: xbm images are chosen on monochrome\n        displays and color images are chosen on color displays. By using\n        tix_ getimage, you can avoid hard coding the pathnames of the\n        image files in your application. When successful, this command\n        returns the name of the newly created image, which can be used to\n        configure the -image option of the Tk and Tix widgets.\n        ")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tix")
(PUNCT ",")
(LIT "getimage")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tix_option_get")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Gets  the options  maintained  by  the  Tix\n        scheme mechanism. Available options include:\n\n            active_bg       active_fg      bg\n            bold_font       dark1_bg       dark1_fg\n            dark2_bg        dark2_fg       disabled_fg\n            fg              fixed_font     font\n            inactive_bg     inactive_fg    input1_bg\n            input2_bg       italic_font    light1_bg\n            light1_fg       light2_bg      light2_fg\n            menu_font       output1_bg     output2_bg\n            select_bg       select_fg      selector\n            ")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tix")
(PUNCT ",")
(LIT "option")
(PUNCT ",")
(LIT "get")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tix_resetoptions")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "newScheme")
(PUNCT ",")
(ID "newFontSet")
(PUNCT ",")
(ID "newScmPrio")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Resets the scheme and fontset of the Tix application to\n        newScheme and newFontSet, respectively.  This affects only those\n        widgets created after this call. Therefore, it is best to call the\n        resetoptions command before the creation of any widgets in a Tix\n        application.\n\n        The optional parameter newScmPrio can be given to reset the\n        priority level of the Tk options set by the Tix schemes.\n\n        Because of the way Tk handles the X option database, after Tix has\n        been has imported and inited, it is not possible to reset the color\n        schemes and font sets using the tix config command.  Instead, the\n        tix_resetoptions command must be used.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "newScmPrio")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tix")
(PUNCT ",")
(LIT "resetoptions")
(PUNCT ",")
(ID "newScheme")
(PUNCT ",")
(ID "newFontSet")
(PUNCT ",")
(ID "newScmPrio")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tix")
(PUNCT ",")
(LIT "resetoptions")
(PUNCT ",")
(ID "newScheme")
(PUNCT ",")
(ID "newFontSet")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Tk")
(PUNCT "(")
(ID "tkinter")
(PUNCT ".")
(ID "Tk")
(PUNCT ",")
(ID "tixCommand")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Toplevel widget of Tix which represents mostly the main window\n    of an application. It has an associated Tcl interpreter.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "screenName")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "baseName")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "className")
(PUNCT "=")
(LIT "Tix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tkinter")
(PUNCT ".")
(ID "Tk")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "screenName")
(PUNCT ",")
(ID "baseName")
(PUNCT ",")
(ID "className")
(PUNCT ")")
(NEWLINE)
(ID "tixlib")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "TIX_LIBRARY")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "eval")
(PUNCT "(")
(LIT "global auto_path; lappend auto_path [file dir [info nameof]]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "tixlib")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "eval")
(PUNCT "(")
(LIT "global auto_path; lappend auto_path {%s}")
(PUNCT "%")
(ID "tixlib")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "eval")
(PUNCT "(")
(LIT "global tcl_pkgPath; lappend tcl_pkgPath {%s}")
(PUNCT "%")
(ID "tixlib")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "eval")
(PUNCT "(")
(LIT "package require Tix")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "destroy")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "protocol")
(PUNCT "(")
(LIT "WM_DELETE_WINDOW")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(ID "tkinter")
(PUNCT ".")
(ID "Tk")
(PUNCT ".")
(ID "destroy")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Form")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "The Tix Form geometry manager\n\n    Widgets can be arranged by specifying attachments to other widgets.\n    See Tix documentation for complete details")
(NEWLINE)
(KEYWORD def)
(ID "config")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tixForm")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "form")
(PUNCT "=")
(ID "config")
(NEWLINE)
(KEYWORD def)
(ID "__setitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "Form")
(PUNCT ".")
(ID "form")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "{")
(ID "key")
(PUNCT ":")
(ID "value")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "check")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tixForm")
(PUNCT ",")
(LIT "check")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "forget")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tixForm")
(PUNCT ",")
(LIT "forget")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "grid")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "xsize")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "ysize")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(KEYWORD not)
(ID "xsize")
(PUNCT ")")
(KEYWORD and)
(PUNCT "(")
(KEYWORD not)
(ID "ysize")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "x")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tixForm")
(PUNCT ",")
(LIT "grid")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(NEWLINE)
(ID "y")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "splitlist")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(NEWLINE)
(ID "z")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "x")
(KEYWORD in)
(ID "y")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "z")
(PUNCT "=")
(ID "z")
(PUNCT "+")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "getint")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "z")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tixForm")
(PUNCT ",")
(LIT "grid")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(ID "xsize")
(PUNCT ",")
(ID "ysize")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "option")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tixForm")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "option")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "!=")
(LIT "-")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "option")
(PUNCT "=")
(LIT "-")
(PUNCT "+")
(ID "option")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tixForm")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(ID "option")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "slaves")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_nametowidget")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(KEYWORD for)
(ID "x")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "splitlist")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tixForm")
(PUNCT ",")
(LIT "slaves")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "tkinter")
(PUNCT ".")
(ID "Widget")
(PUNCT ".")
(ID "__bases__")
(PUNCT "=")
(ID "tkinter")
(PUNCT ".")
(ID "Widget")
(PUNCT ".")
(ID "__bases__")
(PUNCT "+")
(PUNCT "(")
(ID "Form")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "TixWidget")
(PUNCT "(")
(ID "tkinter")
(PUNCT ".")
(ID "Widget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "A TixWidget class is used to package all (or most) Tix widgets.\n\n    Widget initialization is extended in two ways:\n       1) It is possible to give a list of options which must be part of\n       the creation command (so called Tix 'static' options). These cannot be\n       given as a 'config' command later.\n       2) It is possible to give the name of an existing TK widget. These are\n       child widgets created automatically by a Tix mega-widget. The Tk call\n       to create these widgets is therefore bypassed in TixWidget.__init__\n\n    Both options are for use by subclasses only.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "widgetName")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "static_options")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(ID "kw")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "kw")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cnf")
(PUNCT "=")
(ID "_cnfmerge")
(PUNCT "(")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cnf")
(PUNCT "=")
(ID "_cnfmerge")
(PUNCT "(")
(ID "cnf")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "extra")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "static_options")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "static_options")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "options")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "static_options")
(PUNCT "=")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "k")
(PUNCT ",")
(ID "v")
(KEYWORD in)
(ID "list")
(PUNCT "(")
(ID "cnf")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "k")
(KEYWORD in)
(ID "static_options")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "extra")
(PUNCT "=")
(ID "extra")
(PUNCT "+")
(PUNCT "(")
(LIT "-")
(PUNCT "+")
(ID "k")
(PUNCT ",")
(ID "v")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "cnf")
(PUNCT "[")
(ID "k")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "widgetName")
(PUNCT "=")
(ID "widgetName")
(NEWLINE)
(ID "Widget")
(PUNCT ".")
(ID "_setup")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "widgetName")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "widgetName")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(PUNCT "*")
(ID "extra")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "cnf")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "Widget")
(PUNCT ".")
(ID "config")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cnf")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getattr__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "AttributeError")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_silent")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set a variable without calling its action routine")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tixSetSilent")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "subwidget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the named subwidget (which must have been created by\n        the sub-class).")
(NEWLINE)
(ID "n")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_subwidget_name")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TclError")
(PUNCT "(")
(LIT "Subwidget ")
(PUNCT "+")
(ID "name")
(PUNCT "+")
(LIT " not child of ")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "_name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "n")
(PUNCT "=")
(ID "n")
(PUNCT "[")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_nametowidget")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "subwidgets_all")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return all subwidgets.")
(NEWLINE)
(ID "names")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_subwidget_names")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "retlist")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "name")
(PUNCT "[")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "retlist")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_nametowidget")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "retlist")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_subwidget_name")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Get a subwidget name (returns a String, not a Widget !)")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "subwidget")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TclError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_subwidget_names")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the name of all subwidgets.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "x")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "subwidgets")
(PUNCT ",")
(LIT "-all")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "splitlist")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TclError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "config_all")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "option")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set configuration options for all subwidgets (and self).")
(NEWLINE)
(KEYWORD if)
(ID "option")
(PUNCT "==")
(LIT "")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "option")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "option")
(PUNCT "=")
(ID "repr")
(PUNCT "(")
(ID "option")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "repr")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "names")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_subwidget_names")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(LIT "configure")
(PUNCT ",")
(LIT "-")
(PUNCT "+")
(ID "option")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "image_create")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "imgtype")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "master")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "master")
(PUNCT "=")
(ID "tkinter")
(PUNCT ".")
(ID "_default_root")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "master")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "Too early to create image")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "kw")
(KEYWORD and)
(ID "cnf")
(PUNCT ":")
(ID "cnf")
(PUNCT "=")
(ID "_cnfmerge")
(PUNCT "(")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD elif)
(ID "kw")
(PUNCT ":")
(ID "cnf")
(PUNCT "=")
(ID "kw")
(NEWLINE)
(ID "options")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "k")
(PUNCT ",")
(ID "v")
(KEYWORD in)
(ID "cnf")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "callable")
(PUNCT "(")
(ID "v")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "v")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_register")
(PUNCT "(")
(ID "v")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "options")
(PUNCT "=")
(ID "options")
(PUNCT "+")
(PUNCT "(")
(LIT "-")
(PUNCT "+")
(ID "k")
(PUNCT ",")
(ID "v")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "master")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(PUNCT "(")
(LIT "image")
(PUNCT ",")
(LIT "create")
(PUNCT ",")
(ID "imgtype")
(PUNCT ",")
(PUNCT ")")
(PUNCT "+")
(ID "options")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "image_delete")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "imgname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "image")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(ID "imgname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TclError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "TixSubWidget")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Subwidget class.\n\n    This is used to mirror child widgets automatically created\n    by Tix/Tk as part of a mega-widget in Python (which is not informed\n    of this)")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ",")
(ID "check_intermediate")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "check_intermediate")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "path")
(PUNCT "=")
(ID "master")
(PUNCT ".")
(ID "_subwidget_name")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "path")
(PUNCT "=")
(ID "path")
(PUNCT "[")
(ID "len")
(PUNCT "(")
(ID "master")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "plist")
(PUNCT "=")
(ID "path")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "plist")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "check_intermediate")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(PUNCT "{")
(LIT "name")
(PUNCT ":")
(ID "name")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent")
(PUNCT "=")
(ID "master")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "plist")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(LIT ".")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "plist")
(PUNCT "[")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "w")
(PUNCT "=")
(ID "master")
(PUNCT ".")
(ID "_nametowidget")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(NEWLINE)
(ID "parent")
(PUNCT "=")
(ID "w")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent")
(PUNCT "=")
(ID "TixSubWidget")
(PUNCT "(")
(ID "parent")
(PUNCT ",")
(ID "plist")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "check_intermediate")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "plist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "plist")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parent")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(PUNCT "{")
(LIT "name")
(PUNCT ":")
(ID "name")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "destroy_physically")
(PUNCT "=")
(ID "destroy_physically")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "destroy")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "c")
(KEYWORD in)
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "children")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(ID "c")
(PUNCT ".")
(ID "destroy")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "master")
(PUNCT ".")
(ID "children")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "master")
(PUNCT ".")
(ID "children")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "master")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "master")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "destroy_physically")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "destroy")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "DisplayStyle")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "DisplayStyle - handle configuration options shared by\n    (multiple) Display Items")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "itemtype")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "master")
(PUNCT "=")
(ID "_default_root")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "master")
(KEYWORD and)
(LIT "refwindow")
(KEYWORD in)
(ID "cnf")
(PUNCT ":")
(ID "master")
(PUNCT "=")
(ID "cnf")
(PUNCT "[")
(LIT "refwindow")
(PUNCT "]")
(NEWLINE)
(KEYWORD elif)
(KEYWORD not)
(ID "master")
(KEYWORD and)
(LIT "refwindow")
(KEYWORD in)
(ID "kw")
(PUNCT ":")
(ID "master")
(PUNCT "=")
(ID "kw")
(PUNCT "[")
(LIT "refwindow")
(PUNCT "]")
(NEWLINE)
(KEYWORD elif)
(KEYWORD not)
(ID "master")
(PUNCT ":")
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "Too early to create display style: no root window")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT "=")
(ID "master")
(PUNCT ".")
(ID "tk")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "stylename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tixDisplayStyle")
(PUNCT ",")
(ID "itemtype")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__str__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "stylename")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_options")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "kw")
(KEYWORD and)
(ID "cnf")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cnf")
(PUNCT "=")
(ID "_cnfmerge")
(PUNCT "(")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "kw")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cnf")
(PUNCT "=")
(ID "kw")
(NEWLINE)
(DEDENT)
(ID "opts")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "k")
(PUNCT ",")
(ID "v")
(KEYWORD in)
(ID "cnf")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "opts")
(PUNCT "=")
(ID "opts")
(PUNCT "+")
(PUNCT "(")
(LIT "-")
(PUNCT "+")
(ID "k")
(PUNCT ",")
(ID "v")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "opts")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "delete")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "stylename")
(PUNCT ",")
(LIT "delete")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__setitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "stylename")
(PUNCT ",")
(LIT "configure")
(PUNCT ",")
(LIT "-%s")
(PUNCT "%")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "config")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_getconfigure")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "stylename")
(PUNCT ",")
(LIT "configure")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "stylename")
(PUNCT ",")
(LIT "cget")
(PUNCT ",")
(LIT "-%s")
(PUNCT "%")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Balloon")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Balloon help widget.\n\n    Subwidget       Class\n    ---------       -----\n    label           Label\n    message         Message")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "static")
(PUNCT "=")
(PUNCT "[")
(LIT "options")
(PUNCT ",")
(LIT "installcolormap")
(PUNCT ",")
(LIT "initwait")
(PUNCT ",")
(LIT "statusbar")
(PUNCT ",")
(LIT "cursor")
(PUNCT "]")
(NEWLINE)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixBalloon")
(PUNCT ",")
(ID "static")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "label")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyLabel")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "label")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "message")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyLabel")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "message")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "bind_widget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "widget")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Bind balloon widget to another.\n        One balloon widget may be bound to several widgets at the same time")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "bind")
(PUNCT ",")
(ID "widget")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "unbind_widget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "widget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "unbind")
(PUNCT ",")
(ID "widget")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ButtonBox")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "ButtonBox - A container for pushbuttons.\n    Subwidgets are the buttons added with the add method.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixButtonBox")
(PUNCT ",")
(PUNCT "[")
(LIT "orientation")
(PUNCT ",")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Add a button with given name to box.")
(NEWLINE)
(ID "btn")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "add")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "btn")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "invoke")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "invoke")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ComboBox")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "ComboBox - an Entry field with a dropdown menu. The user can select a\n    choice by either typing in the entry subwidget or selecting from the\n    listbox subwidget.\n\n    Subwidget       Class\n    ---------       -----\n    entry       Entry\n    arrow       Button\n    slistbox    ScrolledListBox\n    tick        Button\n    cross       Button : present if created with the fancy option")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixComboBox")
(PUNCT ",")
(PUNCT "[")
(LIT "editable")
(PUNCT ",")
(LIT "dropdown")
(PUNCT ",")
(LIT "fancy")
(PUNCT ",")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "label")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyLabel")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "label")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "entry")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyEntry")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "entry")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "arrow")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "arrow")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "slistbox")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrolledListBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "slistbox")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "tick")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "tick")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "cross")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "cross")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "add_history")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "addhistory")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "append_history")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "appendhistory")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "insert")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "insert")
(PUNCT ",")
(ID "index")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "pick")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "pick")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Control")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Control - An entry field with value change arrows.  The user can\n    adjust the value by pressing the two arrow buttons or by entering\n    the value directly into the entry. The new value will be checked\n    against the user-defined upper and lower limits.\n\n    Subwidget       Class\n    ---------       -----\n    incr       Button\n    decr       Button\n    entry       Entry\n    label       Label")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixControl")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "incr")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "incr")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "decr")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "decr")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "label")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyLabel")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "label")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "entry")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyEntry")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "decrement")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "decr")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "increment")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "incr")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "invoke")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "invoke")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "update")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "update")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "DirList")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "DirList - displays a list view of a directory, its previous\n    directories and its sub-directories. The user can choose one of\n    the directories displayed in the list or change to another directory.\n\n    Subwidget       Class\n    ---------       -----\n    hlist       HList\n    hsb              Scrollbar\n    vsb              Scrollbar")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixDirList")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyHList")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "vsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "vsb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hsb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "chdir")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dir")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "chdir")
(PUNCT ",")
(ID "dir")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "DirTree")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "DirTree - Directory Listing in a hierarchical view.\n    Displays a tree view of a directory, its previous directories and its\n    sub-directories. The user can choose one of the directories displayed\n    in the list or change to another directory.\n\n    Subwidget       Class\n    ---------       -----\n    hlist           HList\n    hsb             Scrollbar\n    vsb             Scrollbar")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixDirTree")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyHList")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "vsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "vsb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hsb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "chdir")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dir")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "chdir")
(PUNCT ",")
(ID "dir")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "DirSelectBox")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "DirSelectBox - Motif style file select box.\n    It is generally used for\n    the user to choose a file. FileSelectBox stores the files mostly\n    recently selected into a ComboBox widget so that they can be quickly\n    selected again.\n\n    Subwidget       Class\n    ---------       -----\n    selection       ComboBox\n    filter          ComboBox\n    dirlist         ScrolledListBox\n    filelist        ScrolledListBox")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixDirSelectBox")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "dirlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyDirList")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "dirlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "dircbx")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyFileComboBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "dircbx")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ExFileSelectBox")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "ExFileSelectBox - MS Windows style file select box.\n    It provides an convenient method for the user to select files.\n\n    Subwidget       Class\n    ---------       -----\n    cancel       Button\n    ok              Button\n    hidden       Checkbutton\n    types       ComboBox\n    dir              ComboBox\n    file       ComboBox\n    dirlist       ScrolledListBox\n    filelist       ScrolledListBox")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixExFileSelectBox")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "cancel")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "cancel")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "ok")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "ok")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hidden")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyCheckbutton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hidden")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "types")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyComboBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "types")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "dir")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyComboBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "dir")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "dirlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyDirList")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "dirlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "file")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyComboBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "file")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "filelist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrolledListBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "filelist")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "filter")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "filter")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "invoke")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "invoke")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "DirSelectDialog")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "The DirSelectDialog widget presents the directories in the file\n    system in a dialog window. The user can use this dialog window to\n    navigate through the file system to select the desired directory.\n\n    Subwidgets       Class\n    ----------       -----\n    dirbox       DirSelectDialog")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixDirSelectDialog")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "dirbox")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyDirSelectBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "dirbox")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "popup")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "popup")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "popdown")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "popdown")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ExFileSelectDialog")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "ExFileSelectDialog - MS Windows style file select dialog.\n    It provides an convenient method for the user to select files.\n\n    Subwidgets       Class\n    ----------       -----\n    fsbox       ExFileSelectBox")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixExFileSelectDialog")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "fsbox")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyExFileSelectBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "fsbox")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "popup")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "popup")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "popdown")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "popdown")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "FileSelectBox")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "ExFileSelectBox - Motif style file select box.\n    It is generally used for\n    the user to choose a file. FileSelectBox stores the files mostly\n    recently selected into a ComboBox widget so that they can be quickly\n    selected again.\n\n    Subwidget       Class\n    ---------       -----\n    selection       ComboBox\n    filter          ComboBox\n    dirlist         ScrolledListBox\n    filelist        ScrolledListBox")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixFileSelectBox")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "dirlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrolledListBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "dirlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "filelist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrolledListBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "filelist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "filter")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyComboBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "filter")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "selection")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyComboBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "selection")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "apply_filter")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "filter")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "invoke")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "invoke")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "FileSelectDialog")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "FileSelectDialog - Motif style file select dialog.\n\n    Subwidgets       Class\n    ----------       -----\n    btns       StdButtonBox\n    fsbox       FileSelectBox")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixFileSelectDialog")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "btns")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyStdButtonBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "btns")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "fsbox")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyFileSelectBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "fsbox")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "popup")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "popup")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "popdown")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "popdown")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "FileEntry")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "FileEntry - Entry field with button that invokes a FileSelectDialog.\n    The user can type in the filename manually. Alternatively, the user can\n    press the button widget that sits next to the entry, which will bring\n    up a file selection dialog.\n\n    Subwidgets       Class\n    ----------       -----\n    button       Button\n    entry       Entry")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixFileEntry")
(PUNCT ",")
(PUNCT "[")
(LIT "dialogtype")
(PUNCT ",")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "button")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "button")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "entry")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyEntry")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "invoke")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "invoke")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "file_dialog")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "HList")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ",")
(ID "XView")
(PUNCT ",")
(ID "YView")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "HList - Hierarchy display  widget can be used to display any data\n    that have a hierarchical structure, for example, file system directory\n    trees. The list entries are indented and connected by branch lines\n    according to their places in the hierarchy.\n\n    Subwidgets - None")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixHList")
(PUNCT ",")
(PUNCT "[")
(LIT "columns")
(PUNCT ",")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "add")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_child")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "parent")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "addchild")
(PUNCT ",")
(ID "parent")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "anchor_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "anchor")
(PUNCT ",")
(LIT "set")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "anchor_clear")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "anchor")
(PUNCT ",")
(LIT "clear")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "column_width")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "col")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "width")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "chars")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "chars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "column")
(PUNCT ",")
(LIT "width")
(PUNCT ",")
(ID "col")
(PUNCT ",")
(ID "width")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "column")
(PUNCT ",")
(LIT "width")
(PUNCT ",")
(ID "col")
(PUNCT ",")
(LIT "-char")
(PUNCT ",")
(ID "chars")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "delete_all")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(LIT "all")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "delete_entry")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(LIT "entry")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "delete_offsprings")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(LIT "offsprings")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "delete_siblings")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(LIT "siblings")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dragsite_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "dragsite")
(PUNCT ",")
(LIT "set")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dragsite_clear")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "dragsite")
(PUNCT ",")
(LIT "clear")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dropsite_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "dropsite")
(PUNCT ",")
(LIT "set")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dropsite_clear")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "dropsite")
(PUNCT ",")
(LIT "clear")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "header_create")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "col")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "header")
(PUNCT ",")
(LIT "create")
(PUNCT ",")
(ID "col")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "header_configure")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "col")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "cnf")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_getconfigure")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "header")
(PUNCT ",")
(LIT "configure")
(PUNCT ",")
(ID "col")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "header")
(PUNCT ",")
(LIT "configure")
(PUNCT ",")
(ID "col")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "header_cget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "col")
(PUNCT ",")
(ID "opt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "header")
(PUNCT ",")
(LIT "cget")
(PUNCT ",")
(ID "col")
(PUNCT ",")
(ID "opt")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "header_exists")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "col")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "header")
(PUNCT ",")
(LIT "exists")
(PUNCT ",")
(ID "col")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "header_delete")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "col")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "header")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(ID "col")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "header_size")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "col")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "header")
(PUNCT ",")
(LIT "size")
(PUNCT ",")
(ID "col")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "hide_entry")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "hide")
(PUNCT ",")
(LIT "entry")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "indicator_create")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "indicator")
(PUNCT ",")
(LIT "create")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "indicator_configure")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "cnf")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_getconfigure")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "indicator")
(PUNCT ",")
(LIT "configure")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "indicator")
(PUNCT ",")
(LIT "configure")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "indicator_cget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "opt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "indicator")
(PUNCT ",")
(LIT "cget")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "opt")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "indicator_exists")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "indicator")
(PUNCT ",")
(LIT "exists")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "indicator_delete")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "indicator")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "indicator_size")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "indicator")
(PUNCT ",")
(LIT "size")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_anchor")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "anchor")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_bbox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_getints")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "bbox")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ")")
(KEYWORD or)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_children")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "children")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "splitlist")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "data")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_dragsite")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "dragsite")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_dropsite")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "dropsite")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_exists")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "exists")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_hidden")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "hidden")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_next")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "next")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_parent")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "parent")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_prev")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "prev")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_selection")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "selection")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "splitlist")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "item_cget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "col")
(PUNCT ",")
(ID "opt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "item")
(PUNCT ",")
(LIT "cget")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "col")
(PUNCT ",")
(ID "opt")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "item_configure")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "col")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "cnf")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_getconfigure")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "item")
(PUNCT ",")
(LIT "configure")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "col")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "item")
(PUNCT ",")
(LIT "configure")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "col")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "item_create")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "col")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "item")
(PUNCT ",")
(LIT "create")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "col")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "item_exists")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "col")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "item")
(PUNCT ",")
(LIT "exists")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "col")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "item_delete")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "col")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "item")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "col")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "entrycget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "opt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "entrycget")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "opt")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "entryconfigure")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "cnf")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_getconfigure")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "entryconfigure")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "entryconfigure")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "nearest")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "nearest")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "see")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "see")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "selection_clear")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "selection")
(PUNCT ",")
(LIT "clear")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "selection_includes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "selection")
(PUNCT ",")
(LIT "includes")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "selection_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "first")
(PUNCT ",")
(ID "last")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "selection")
(PUNCT ",")
(LIT "set")
(PUNCT ",")
(ID "first")
(PUNCT ",")
(ID "last")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "show_entry")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "show")
(PUNCT ",")
(LIT "entry")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "InputOnly")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "InputOnly - Invisible widget. Unix only.\n\n    Subwidgets - None")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixInputOnly")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "LabelEntry")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "LabelEntry - Entry field with label. Packages an entry widget\n    and a label into one mega widget. It can beused be used to simplify\n    the creation of ``entry-form'' type of interface.\n\n    Subwidgets       Class\n    ----------       -----\n    label       Label\n    entry       Entry")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixLabelEntry")
(PUNCT ",")
(PUNCT "[")
(LIT "labelside")
(PUNCT ",")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "label")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyLabel")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "label")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "entry")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyEntry")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "LabelFrame")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "LabelFrame - Labelled Frame container. Packages a frame widget\n    and a label into one mega widget. To create widgets inside a\n    LabelFrame widget, one creates the new widgets relative to the\n    frame subwidget and manage them inside the frame subwidget.\n\n    Subwidgets       Class\n    ----------       -----\n    label       Label\n    frame       Frame")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixLabelFrame")
(PUNCT ",")
(PUNCT "[")
(LIT "labelside")
(PUNCT ",")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "label")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyLabel")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "label")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "frame")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyFrame")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "frame")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ListNoteBook")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "A ListNoteBook widget is very similar to the TixNoteBook widget:\n    it can be used to display many windows in a limited space using a\n    notebook metaphor. The notebook is divided into a stack of pages\n    (windows). At one time only one of these pages can be shown.\n    The user can navigate through these pages by\n    choosing the name of the desired page in the hlist subwidget.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixListNoteBook")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "pane")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyPanedWindow")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "pane")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyHList")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "shlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrolledHList")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "shlist")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "add")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "TixSubWidget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "page")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "subwidget")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "pages")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "pages")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "ret")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "x")
(KEYWORD in)
(ID "names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ret")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "subwidget")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "ret")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "raise_page")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "raise")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Meter")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "The Meter widget can be used to show the progress of a background\n    job which may take a long time to execute.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixMeter")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "NoteBook")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "NoteBook - Multi-page container widget (tabbed notebook metaphor).\n\n    Subwidgets       Class\n    ----------       -----\n    nbframe       NoteBookFrame\n    <pages>       page widgets added dynamically with the add method")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixNoteBook")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "nbframe")
(PUNCT "]")
(PUNCT "=")
(ID "TixSubWidget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "nbframe")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "add")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "TixSubWidget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "delete")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT ".")
(ID "destroy")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "page")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "subwidget")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "pages")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "pages")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "ret")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "x")
(KEYWORD in)
(ID "names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ret")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "subwidget")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "ret")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "raise_page")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "raise")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "raised")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "raised")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "NoteBookFrame")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "OptionMenu")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "OptionMenu - creates a menu button of options.\n\n    Subwidget       Class\n    ---------       -----\n    menubutton      Menubutton\n    menu            Menu")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixOptionMenu")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "menubutton")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyMenubutton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "menubutton")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "menu")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyMenu")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "menu")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_command")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "add")
(PUNCT ",")
(LIT "command")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add_separator")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "add")
(PUNCT ",")
(LIT "separator")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "delete")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "disable")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "disable")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "enable")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "enable")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "PanedWindow")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "PanedWindow - Multi-pane container widget\n    allows the user to interactively manipulate the sizes of several\n    panes. The panes can be arranged either vertically or horizontally.The\n    user changes the sizes of the panes by dragging the resize handle\n    between two panes.\n\n    Subwidgets       Class\n    ----------       -----\n    <panes>       g/p widgets added dynamically with the add method.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixPanedWindow")
(PUNCT ",")
(PUNCT "[")
(LIT "orientation")
(PUNCT ",")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "add")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "TixSubWidget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "check_intermediate")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "delete")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT ".")
(ID "destroy")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "forget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "forget")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "panecget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "opt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "panecget")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "opt")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "paneconfigure")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "cnf")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_getconfigure")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "paneconfigure")
(PUNCT ",")
(ID "entry")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "paneconfigure")
(PUNCT ",")
(ID "entry")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "panes")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "splitlist")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "panes")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "subwidget")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(KEYWORD for)
(ID "x")
(KEYWORD in)
(ID "names")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "PopupMenu")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "PopupMenu widget can be used as a replacement of the tk_popup command.\n    The advantage of the Tix PopupMenu widget is it requires less application\n    code to manipulate.\n\n\n    Subwidgets       Class\n    ----------       -----\n    menubutton       Menubutton\n    menu       Menu")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixPopupMenu")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "menubutton")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyMenubutton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "menubutton")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "menu")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyMenu")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "menu")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "bind_widget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "widget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "bind")
(PUNCT ",")
(ID "widget")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "unbind_widget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "widget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "unbind")
(PUNCT ",")
(ID "widget")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "post_widget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "widget")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "post")
(PUNCT ",")
(ID "widget")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ResizeHandle")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Internal widget to draw resize handles on Scrolled widgets.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "=")
(PUNCT "[")
(LIT "options")
(PUNCT ",")
(LIT "command")
(PUNCT ",")
(LIT "cursorfg")
(PUNCT ",")
(LIT "cursorbg")
(PUNCT ",")
(LIT "handlesize")
(PUNCT ",")
(LIT "hintcolor")
(PUNCT ",")
(LIT "hintwidth")
(PUNCT ",")
(LIT "x")
(PUNCT ",")
(LIT "y")
(PUNCT "]")
(NEWLINE)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixResizeHandle")
(PUNCT ",")
(ID "flags")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "attach_widget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "widget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "attachwidget")
(PUNCT ",")
(ID "widget")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "detach_widget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "widget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "detachwidget")
(PUNCT ",")
(ID "widget")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "hide")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "widget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "hide")
(PUNCT ",")
(ID "widget")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "show")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "widget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "show")
(PUNCT ",")
(ID "widget")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ScrolledHList")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "ScrolledHList - HList with automatic scrollbars.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixScrolledHList")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyHList")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "vsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "vsb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hsb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ScrolledListBox")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "ScrolledListBox - Listbox with automatic scrollbars.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixScrolledListBox")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "listbox")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyListbox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "listbox")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "vsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "vsb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hsb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ScrolledText")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "ScrolledText - Text with automatic scrollbars.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixScrolledText")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "text")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyText")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "text")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "vsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "vsb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hsb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ScrolledTList")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "ScrolledTList - TList with automatic scrollbars.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixScrolledTList")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "tlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyTList")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "tlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "vsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "vsb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hsb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ScrolledWindow")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "ScrolledWindow - Window with automatic scrollbars.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixScrolledWindow")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "window")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyFrame")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "window")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "vsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "vsb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hsb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Select")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Select - Container of button subwidgets. It can be used to provide\n    radio-box or check-box style of selection options for the user.\n\n    Subwidgets are buttons added dynamically using the add method.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixSelect")
(PUNCT ",")
(PUNCT "[")
(LIT "allowzero")
(PUNCT ",")
(LIT "radio")
(PUNCT ",")
(LIT "orientation")
(PUNCT ",")
(LIT "labelside")
(PUNCT ",")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "label")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyLabel")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "label")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "add")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "add")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "invoke")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "invoke")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Shell")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Toplevel window.\n\n    Subwidgets - None")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixShell")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT ",")
(LIT "title")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "DialogShell")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Toplevel window, with popup popdown and center methods.\n    It tells the window manager that it is a dialog window and should be\n    treated specially. The exact treatment depends on the treatment of\n    the window manager.\n\n    Subwidgets - None")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixDialogShell")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT ",")
(LIT "title")
(PUNCT ",")
(LIT "mapped")
(PUNCT ",")
(LIT "minheight")
(PUNCT ",")
(LIT "minwidth")
(PUNCT ",")
(LIT "parent")
(PUNCT ",")
(LIT "transient")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "popdown")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "popdown")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "popup")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "popup")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "center")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "center")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "StdButtonBox")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "StdButtonBox - Standard Button Box (OK, Apply, Cancel and Help) ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixStdButtonBox")
(PUNCT ",")
(PUNCT "[")
(LIT "orientation")
(PUNCT ",")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "ok")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "ok")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "apply")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "apply")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "cancel")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "cancel")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "help")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "help")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "invoke")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "invoke")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "TList")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ",")
(ID "XView")
(PUNCT ",")
(ID "YView")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "TList - Hierarchy display widget which can be\n    used to display data in a tabular format. The list entries of a TList\n    widget are similar to the entries in the Tk listbox widget. The main\n    differences are (1) the TList widget can display the list entries in a\n    two dimensional format and (2) you can use graphical images as well as\n    multiple colors and fonts for the list entries.\n\n    Subwidgets - None")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixTList")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "active_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "active")
(PUNCT ",")
(LIT "set")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "active_clear")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "active")
(PUNCT ",")
(LIT "clear")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "anchor_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "anchor")
(PUNCT ",")
(LIT "set")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "anchor_clear")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "anchor")
(PUNCT ",")
(LIT "clear")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "delete")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "from_")
(PUNCT ",")
(ID "to")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(ID "from_")
(PUNCT ",")
(ID "to")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dragsite_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "dragsite")
(PUNCT ",")
(LIT "set")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dragsite_clear")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "dragsite")
(PUNCT ",")
(LIT "clear")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dropsite_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "dropsite")
(PUNCT ",")
(LIT "set")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dropsite_clear")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "dropsite")
(PUNCT ",")
(LIT "clear")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "insert")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "insert")
(PUNCT ",")
(ID "index")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_active")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "active")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_anchor")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "anchor")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_down")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "down")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_left")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "left")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_right")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "right")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_selection")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "selection")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "splitlist")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_size")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "size")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_up")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "up")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "nearest")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "nearest")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "see")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "see")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "selection_clear")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "selection")
(PUNCT ",")
(LIT "clear")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "selection_includes")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "selection")
(PUNCT ",")
(LIT "includes")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "selection_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "first")
(PUNCT ",")
(ID "last")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "selection")
(PUNCT ",")
(LIT "set")
(PUNCT ",")
(ID "first")
(PUNCT ",")
(ID "last")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Tree")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Tree - The tixTree widget can be used to display hierarchical\n    data in a tree form. The user can adjust\n    the view of the tree by opening or closing parts of the tree.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixTree")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyHList")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "vsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "vsb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hsb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "autosetmode")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "This command calls the setmode method for all the entries in this\n     Tree widget: if an entry has no child entries, its mode is set to\n     none. Otherwise, if the entry has any hidden child entries, its mode is\n     set to open; otherwise its mode is set to close.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "autosetmode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entrypath")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Close the entry given by entryPath if its mode is close.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "close")
(PUNCT ",")
(ID "entrypath")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getmode")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entrypath")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns the current mode of the entry given by entryPath.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "getmode")
(PUNCT ",")
(ID "entrypath")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entrypath")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Open the entry given by entryPath if its mode is open.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "open")
(PUNCT ",")
(ID "entrypath")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setmode")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entrypath")
(PUNCT ",")
(ID "mode")
(PUNCT "=")
(LIT "none")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "This command is used to indicate whether the entry given by\n     entryPath has children entries and whether the children are visible. mode\n     must be one of open, close or none. If mode is set to open, a (+)\n     indicator is drawn next the entry. If mode is set to close, a (-)\n     indicator is drawn next the entry. If mode is set to none, no\n     indicators will be drawn for this entry. The default mode is none. The\n     open mode indicates the entry has hidden children and this entry can be\n     opened by the user. The close mode indicates that all the children of the\n     entry are now visible and the entry can be closed by the user.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "setmode")
(PUNCT ",")
(ID "entrypath")
(PUNCT ",")
(ID "mode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "CheckList")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "The CheckList widget\n    displays a list of items to be selected by the user. CheckList acts\n    similarly to the Tk checkbutton or radiobutton widgets, except it is\n    capable of handling many more items than checkbuttons or radiobuttons.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixCheckList")
(PUNCT ",")
(PUNCT "[")
(LIT "options")
(PUNCT ",")
(LIT "radio")
(PUNCT "]")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyHList")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "vsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "vsb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hsb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "autosetmode")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "This command calls the setmode method for all the entries in this\n     Tree widget: if an entry has no child entries, its mode is set to\n     none. Otherwise, if the entry has any hidden child entries, its mode is\n     set to open; otherwise its mode is set to close.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "autosetmode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entrypath")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Close the entry given by entryPath if its mode is close.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "close")
(PUNCT ",")
(ID "entrypath")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getmode")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entrypath")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns the current mode of the entry given by entryPath.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "getmode")
(PUNCT ",")
(ID "entrypath")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "open")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entrypath")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Open the entry given by entryPath if its mode is open.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "open")
(PUNCT ",")
(ID "entrypath")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getselection")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "mode")
(PUNCT "=")
(LIT "on")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns a list of items whose status matches status. If status is\n     not specified, the list of items in the \"on\" status will be returned.\n     Mode can be on, off, default")
(NEWLINE)
(ID "c")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "getselection")
(PUNCT ",")
(ID "mode")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "splitlist")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getstatus")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entrypath")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns the current status of entryPath.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "getstatus")
(PUNCT ",")
(ID "entrypath")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setstatus")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "entrypath")
(PUNCT ",")
(ID "mode")
(PUNCT "=")
(LIT "on")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Sets the status of entryPath to be status. A bitmap will be\n     displayed next to the entry its status is on, off or default.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "setstatus")
(PUNCT ",")
(ID "entrypath")
(PUNCT ",")
(ID "mode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyButton")
(PUNCT "(")
(ID "Button")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyCheckbutton")
(PUNCT "(")
(ID "Checkbutton")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyEntry")
(PUNCT "(")
(ID "Entry")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyFrame")
(PUNCT "(")
(ID "Frame")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyLabel")
(PUNCT "(")
(ID "Label")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyListbox")
(PUNCT "(")
(ID "Listbox")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyMenu")
(PUNCT "(")
(ID "Menu")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyMenubutton")
(PUNCT "(")
(ID "Menubutton")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "Scrollbar")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyText")
(PUNCT "(")
(ID "Text")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyScrolledListBox")
(PUNCT "(")
(ID "ScrolledListBox")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "listbox")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyListbox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "listbox")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "vsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "vsb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hsb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyHList")
(PUNCT "(")
(ID "HList")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyScrolledHList")
(PUNCT "(")
(ID "ScrolledHList")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyHList")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "vsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "vsb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hsb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyTList")
(PUNCT "(")
(ID "TList")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyComboBox")
(PUNCT "(")
(ID "ComboBox")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(PUNCT "[")
(LIT "fancy")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "label")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyLabel")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "label")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "entry")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyEntry")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "entry")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "arrow")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "arrow")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "slistbox")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrolledListBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "slistbox")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "tick")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "tick")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "cross")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "cross")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyDirList")
(PUNCT "(")
(ID "DirList")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyHList")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "vsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "vsb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hsb")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrollbar")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hsb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyDirSelectBox")
(PUNCT "(")
(ID "DirSelectBox")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "dirlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyDirList")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "dirlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "dircbx")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyFileComboBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "dircbx")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyExFileSelectBox")
(PUNCT "(")
(ID "ExFileSelectBox")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "cancel")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "cancel")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "ok")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "ok")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "hidden")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyCheckbutton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "hidden")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "types")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyComboBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "types")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "dir")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyComboBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "dir")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "dirlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrolledListBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "dirlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "file")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyComboBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "file")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "filelist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrolledListBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "filelist")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyFileSelectBox")
(PUNCT "(")
(ID "FileSelectBox")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "dirlist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrolledListBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "dirlist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "filelist")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyScrolledListBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "filelist")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "filter")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyComboBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "filter")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "selection")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyComboBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "selection")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyFileComboBox")
(PUNCT "(")
(ID "ComboBox")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "dircbx")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyComboBox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "dircbx")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyStdButtonBox")
(PUNCT "(")
(ID "StdButtonBox")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "ok")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "ok")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "apply")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "apply")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "cancel")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "cancel")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subwidget_list")
(PUNCT "[")
(LIT "help")
(PUNCT "]")
(PUNCT "=")
(ID "_dummyButton")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "help")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyNoteBookFrame")
(PUNCT "(")
(ID "NoteBookFrame")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_dummyPanedWindow")
(PUNCT "(")
(ID "PanedWindow")
(PUNCT ",")
(ID "TixSubWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "TixSubWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "destroy_physically")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "OptionName")
(PUNCT "(")
(ID "widget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns the qualified path name for the widget. Normally used to set\n    default options for subwidgets. See tixwidgets.py")
(NEWLINE)
(KEYWORD return)
(ID "widget")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "tixOptionName")
(PUNCT ",")
(ID "widget")
(PUNCT ".")
(ID "_w")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "FileTypeList")
(PUNCT "(")
(ID "dict")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD for)
(ID "type")
(KEYWORD in)
(ID "dict")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "+")
(LIT "{{")
(PUNCT "+")
(ID "type")
(PUNCT "+")
(LIT "} {")
(PUNCT "+")
(ID "type")
(PUNCT "+")
(LIT " - ")
(PUNCT "+")
(ID "dict")
(PUNCT "[")
(ID "type")
(PUNCT "]")
(PUNCT "+")
(LIT "}} ")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "CObjView")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "This file implements the Canvas Object View widget. This is a base\n    class of IconView. It implements automatic placement/adjustment of the\n    scrollbars according to the canvas objects inside the canvas subwidget.\n    The scrollbars are adjusted so that the canvas is just large enough\n    to see all the objects.\n    ")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "Grid")
(PUNCT "(")
(ID "TixWidget")
(PUNCT ",")
(ID "XView")
(PUNCT ",")
(ID "YView")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "The Tix Grid command creates a new window  and makes it into a\n    tixGrid widget. Additional options, may be specified on the command\n    line or in the option database to configure aspects such as its cursor\n    and relief.\n\n    A Grid widget displays its contents in a two dimensional grid of cells.\n    Each cell may contain one Tix display item, which may be in text,\n    graphics or other formats. See the DisplayStyle class for more information\n    about Tix display items. Individual cells, or groups of cells, can be\n    formatted with a wide range of attributes, such as its color, relief and\n    border.\n\n    Subwidgets - None")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "static")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "cnf")
(PUNCT "=")
(ID "cnf")
(NEWLINE)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixGrid")
(PUNCT ",")
(ID "static")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "anchor_clear")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Removes the selection anchor.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "anchor")
(PUNCT ",")
(LIT "clear")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "anchor_get")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Get the (x,y) coordinate of the current anchor cell")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_getints")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "anchor")
(PUNCT ",")
(LIT "get")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "anchor_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Set the selection anchor to the cell at (x, y).")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "anchor")
(PUNCT ",")
(LIT "set")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "delete_row")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "from_")
(PUNCT ",")
(ID "to")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Delete rows between from_ and to inclusive.\n        If to is not provided,  delete only row at from_")
(NEWLINE)
(KEYWORD if)
(ID "to")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(LIT "row")
(PUNCT ",")
(ID "from_")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(LIT "row")
(PUNCT ",")
(ID "from_")
(PUNCT ",")
(ID "to")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "delete_column")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "from_")
(PUNCT ",")
(ID "to")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Delete columns between from_ and to inclusive.\n        If to is not provided,  delete only column at from_")
(NEWLINE)
(KEYWORD if)
(ID "to")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(LIT "column")
(PUNCT ",")
(ID "from_")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "delete")
(PUNCT ",")
(LIT "column")
(PUNCT ",")
(ID "from_")
(PUNCT ",")
(ID "to")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "edit_apply")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "If any cell is being edited, de-highlight the cell  and  applies\n        the changes.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "edit")
(PUNCT ",")
(LIT "apply")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "edit_set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Highlights  the  cell  at  (x, y) for editing, if the -editnotify\n        command returns True for this cell.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "edit")
(PUNCT ",")
(LIT "set")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "entrycget")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ",")
(ID "option")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Get the option value for cell at (x,y)")
(NEWLINE)
(KEYWORD if)
(ID "option")
(KEYWORD and)
(ID "option")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "!=")
(LIT "-")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "option")
(PUNCT "=")
(LIT "-")
(PUNCT "+")
(ID "option")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "entrycget")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ",")
(ID "option")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "entryconfigure")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_configure")
(PUNCT "(")
(PUNCT "(")
(LIT "entryconfigure")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_exists")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return True if display item exists at (x,y)")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_getboolean")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "exists")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "info_bbox")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "info")
(PUNCT ",")
(LIT "bbox")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "move_column")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "from_")
(PUNCT ",")
(ID "to")
(PUNCT ",")
(ID "offset")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Moves the range of columns from position FROM through TO by\n        the distance indicated by OFFSET. For example, move_column(2, 4, 1)\n        moves the columns 2,3,4 to columns 3,4,5.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "move")
(PUNCT ",")
(LIT "column")
(PUNCT ",")
(ID "from_")
(PUNCT ",")
(ID "to")
(PUNCT ",")
(ID "offset")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "move_row")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "from_")
(PUNCT ",")
(ID "to")
(PUNCT ",")
(ID "offset")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Moves the range of rows from position FROM through TO by\n        the distance indicated by OFFSET.\n        For example, move_row(2, 4, 1) moves the rows 2,3,4 to rows 3,4,5.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "move")
(PUNCT ",")
(LIT "row")
(PUNCT ",")
(ID "from_")
(PUNCT ",")
(ID "to")
(PUNCT ",")
(ID "offset")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "nearest")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return coordinate of cell nearest pixel coordinate (x,y)")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_getints")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "nearest")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ",")
(ID "itemtype")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "itemtype")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(PUNCT "(")
(LIT "-itemtype")
(PUNCT ",")
(ID "itemtype")
(PUNCT ")")
(PUNCT "+")
(ID "args")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "set")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "size_column")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Queries or sets the size of the column given by\n        INDEX.  INDEX may be any non-negative\n        integer that gives the position of a given column.\n        INDEX can also be the string \"default\"; in this case, this command\n        queries or sets the default size of all columns.\n        When no option-value pair is given, this command returns a tuple\n        containing the current size setting of the given column.  When\n        option-value pairs are given, the corresponding options of the\n        size setting of the given column are changed. Options may be one\n        of the follwing:\n              pad0 pixels\n                     Specifies the paddings to the left of a column.\n              pad1 pixels\n                     Specifies the paddings to the right of a column.\n              size val\n                     Specifies the width of a column.  Val may be:\n                     \"auto\" -- the width of the column is set to the\n                     width of the widest cell in the column;\n                     a valid Tk screen distance unit;\n                     or a real number following by the word chars\n                     (e.g. 3.4chars) that sets the width of the column to the\n                     given number of characters.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "size")
(PUNCT ",")
(LIT "column")
(PUNCT ",")
(ID "index")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "size_row")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Queries or sets the size of the row given by\n        INDEX. INDEX may be any non-negative\n        integer that gives the position of a given row .\n        INDEX can also be the string \"default\"; in this case, this command\n        queries or sets the default size of all rows.\n        When no option-value pair is given, this command returns a list con-\n        taining the current size setting of the given row . When option-value\n        pairs are given, the corresponding options of the size setting of the\n        given row are changed. Options may be one of the follwing:\n              pad0 pixels\n                     Specifies the paddings to the top of a row.\n              pad1 pixels\n                     Specifies the paddings to the bottom of a row.\n              size val\n                     Specifies the height of a row.  Val may be:\n                     \"auto\" -- the height of the row is set to the\n                     height of the highest cell in the row;\n                     a valid Tk screen distance unit;\n                     or a real number following by the word chars\n                     (e.g. 3.4chars) that sets the height of the row to the\n                     given number of characters.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(LIT "size")
(PUNCT ",")
(LIT "row")
(PUNCT ",")
(ID "index")
(PUNCT ",")
(PUNCT "*")
(ID "self")
(PUNCT ".")
(ID "_options")
(PUNCT "(")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "unset")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Clears the cell at (x, y) by removing its display item.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tk")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_w")
(PUNCT ",")
(LIT "unset")
(PUNCT ",")
(ID "x")
(PUNCT ",")
(ID "y")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ScrolledGrid")
(PUNCT "(")
(ID "Grid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Scrolled Grid widgets")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "cnf")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "static")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "cnf")
(PUNCT "=")
(ID "cnf")
(NEWLINE)
(ID "TixWidget")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "master")
(PUNCT ",")
(LIT "tixScrolledGrid")
(PUNCT ",")
(ID "static")
(PUNCT ",")
(ID "cnf")
(PUNCT ",")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
