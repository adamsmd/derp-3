(LIT "A parser for HTML and XHTML.")
(NEWLINE)
(KEYWORD import)
(ID "re")
(NEWLINE)
(KEYWORD import)
(ID "warnings")
(NEWLINE)
(KEYWORD import)
(ID "_markupbase")
(NEWLINE)
(KEYWORD from)
(ID "html")
(KEYWORD import)
(ID "unescape")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "HTMLParser")
(PUNCT "]")
(NEWLINE)
(ID "interesting_normal")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "[&<]")
(PUNCT ")")
(NEWLINE)
(ID "incomplete")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "&[a-zA-Z#]")
(PUNCT ")")
(NEWLINE)
(ID "entityref")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "&([a-zA-Z][-.a-zA-Z0-9]*)[^a-zA-Z0-9]")
(PUNCT ")")
(NEWLINE)
(ID "charref")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "&#(?:[0-9]+|[xX][0-9a-fA-F]+)[^0-9a-fA-F]")
(PUNCT ")")
(NEWLINE)
(ID "starttagopen")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "<[a-zA-Z]")
(PUNCT ")")
(NEWLINE)
(ID "piclose")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT ">")
(PUNCT ")")
(NEWLINE)
(ID "commentclose")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "--\\s*>")
(PUNCT ")")
(NEWLINE)
(ID "tagfind")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "([a-zA-Z][-.a-zA-Z0-9:_]*)(?:\\s|/(?!>))*")
(PUNCT ")")
(NEWLINE)
(ID "tagfind_tolerant")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "([a-zA-Z][^\t\n\r\f />\u0000]*)(?:\\s|/(?!>))*")
(PUNCT ")")
(NEWLINE)
(ID "attrfind")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "\\s*([a-zA-Z_][-.:a-zA-Z_0-9]*)(\\s*=\\s*")
(LIT "(\\'[^\\']*\\'|\"[^\"]*\"|[^\\s\"\\'=<>`]*))?")
(PUNCT ")")
(NEWLINE)
(ID "attrfind_tolerant")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "((?<=[\\'\"\\s/])[^\\s/>][^\\s/=>]*)(\\s*=+\\s*")
(LIT "(\\'[^\\']*\\'|\"[^\"]*\"|(?![\\'\"])[^>\\s]*))?(?:\\s|/(?!>))*")
(PUNCT ")")
(NEWLINE)
(ID "locatestarttagend")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "\n  <[a-zA-Z][-.a-zA-Z0-9:_]*          # tag name\n  (?:\\s+                             # whitespace before attribute name\n    (?:[a-zA-Z_][-.:a-zA-Z0-9_]*     # attribute name\n      (?:\\s*=\\s*                     # value indicator\n        (?:'[^']*'                   # LITA-enclosed value\n          |\\\"[^\\\"]*\\\"                # LIT-enclosed value\n          |[^'\\\">\\s]+                # bare value\n         )\n       )?\n     )\n   )*\n  \\s*                                # trailing whitespace\n")
(PUNCT ",")
(ID "re")
(PUNCT ".")
(ID "VERBOSE")
(PUNCT ")")
(NEWLINE)
(ID "locatestarttagend_tolerant")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "\n  <[a-zA-Z][^\\t\\n\\r\\f />\\x00]*       # tag name\n  (?:[\\s/]*                          # optional whitespace before attribute name\n    (?:(?<=['\"\\s/])[^\\s/>][^\\s/=>]*  # attribute name\n      (?:\\s*=+\\s*                    # value indicator\n        (?:'[^']*'                   # LITA-enclosed value\n          |\"[^\"]*\"                   # LIT-enclosed value\n          |(?!['\"])[^>\\s]*           # bare value\n         )\n         (?:\\s*,)*                   # possibly followed by a comma\n       )?(?:\\s|/(?!>))*\n     )*\n   )?\n  \\s*                                # trailing whitespace\n")
(PUNCT ",")
(ID "re")
(PUNCT ".")
(ID "VERBOSE")
(PUNCT ")")
(NEWLINE)
(ID "endendtag")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT ">")
(PUNCT ")")
(NEWLINE)
(ID "endtagfind")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "</\\s*([a-zA-Z][-.a-zA-Z0-9:_]*)\\s*>")
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "HTMLParseError")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Exception raised for all parse errors.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "msg")
(PUNCT ",")
(ID "position")
(PUNCT "=")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "msg")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "msg")
(PUNCT "=")
(ID "msg")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "lineno")
(PUNCT "=")
(ID "position")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "=")
(ID "position")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__str__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "msg")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "lineno")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(LIT ", at line %d")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "lineno")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "offset")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "result")
(PUNCT "+")
(LIT ", column %d")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "offset")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "_default_sentinel")
(PUNCT "=")
(ID "object")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "HTMLParser")
(PUNCT "(")
(ID "_markupbase")
(PUNCT ".")
(ID "ParserBase")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Find tags and other markup and call handler functions.\n\n    Usage:\n        p = HTMLParser()\n        p.feed(data)\n        ...\n        p.close()\n\n    Start tags are handled by calling self.handle_starttag() or\n    self.handle_startendtag(); end tags by self.handle_endtag().  The\n    data between tags is passed from the parser to the derived class\n    by calling self.handle_data() with the data as argument (the data\n    may be split up in arbitrary chunks).  If convert_charrefs is\n    True the character references are converted automatically to the\n    corresponding Unicode character (and self.handle_data() is no\n    longer split in chunks), otherwise they are passed by calling\n    self.handle_entityref() or self.handle_charref() with the string\n    containing respectively the named or numeric reference as the\n    argument.\n    ")
(NEWLINE)
(ID "CDATA_CONTENT_ELEMENTS")
(PUNCT "=")
(PUNCT "(")
(LIT "script")
(PUNCT ",")
(LIT "style")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "strict")
(PUNCT "=")
(ID "_default_sentinel")
(PUNCT ",")
(PUNCT "*")
(PUNCT ",")
(ID "convert_charrefs")
(PUNCT "=")
(ID "_default_sentinel")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Initialize and reset this instance.\n\n        If convert_charrefs is True (default: False), all character references\n        are automatically converted to the corresponding Unicode characters.\n        If strict is set to False (the default) the parser will parse invalid\n        markup, otherwise it will raise an error.  Note that the strict mode\n        and argument are deprecated.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "strict")
(KEYWORD is)
(KEYWORD not)
(ID "_default_sentinel")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "The strict argument and mode are deprecated.")
(PUNCT ",")
(ID "DeprecationWarning")
(PUNCT ",")
(ID "stacklevel")
(PUNCT "=")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "strict")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "strict")
(PUNCT "=")
(ID "strict")
(NEWLINE)
(KEYWORD if)
(ID "convert_charrefs")
(KEYWORD is)
(ID "_default_sentinel")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "convert_charrefs")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "The value of convert_charrefs will become True in ")
(LIT "3.5. You are encouraged to set the value explicitly.")
(PUNCT ",")
(ID "DeprecationWarning")
(PUNCT ",")
(ID "stacklevel")
(PUNCT "=")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "convert_charrefs")
(PUNCT "=")
(ID "convert_charrefs")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "reset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Reset this instance.  Loses all unprocessed data.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "rawdata")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "lasttag")
(PUNCT "=")
(LIT "???")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "interesting")
(PUNCT "=")
(ID "interesting_normal")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "cdata_elem")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "_markupbase")
(PUNCT ".")
(ID "ParserBase")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "feed")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Feed data to the parser.\n\n        Call this as often as you want, with as little or as much text\n        as you want (may include '\\n').\n        ")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "rawdata")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "rawdata")
(PUNCT "+")
(ID "data")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "goahead")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Handle any buffered data.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "goahead")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "error")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "The 'error' method is deprecated.")
(PUNCT ",")
(ID "DeprecationWarning")
(PUNCT ",")
(ID "stacklevel")
(PUNCT "=")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "HTMLParseError")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "getpos")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "__starttag_text")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "get_starttag_text")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return full source of start tag: '<...>'.")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "__starttag_text")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_cdata_mode")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "elem")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "cdata_elem")
(PUNCT "=")
(ID "elem")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "interesting")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "</\\s*%s\\s*>")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "cdata_elem")
(PUNCT ",")
(ID "re")
(PUNCT ".")
(ID "I")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "clear_cdata_mode")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "interesting")
(PUNCT "=")
(ID "interesting_normal")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "cdata_elem")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "goahead")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "end")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rawdata")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "rawdata")
(NEWLINE)
(ID "i")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "n")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "rawdata")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "i")
(PUNCT "<")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "convert_charrefs")
(KEYWORD and)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "cdata_elem")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "j")
(PUNCT "=")
(ID "rawdata")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT "<")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "j")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "end")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "j")
(PUNCT "=")
(ID "n")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "match")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "interesting")
(PUNCT ".")
(ID "search")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "match")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "j")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "cdata_elem")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "j")
(PUNCT "=")
(ID "n")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "i")
(PUNCT "<")
(ID "j")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "convert_charrefs")
(KEYWORD and)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "cdata_elem")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_data")
(PUNCT "(")
(ID "unescape")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "j")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_data")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "j")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "updatepos")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "j")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "i")
(PUNCT "==")
(ID "n")
(PUNCT ":")
(KEYWORD break)
(NEWLINE)
(ID "startswith")
(PUNCT "=")
(ID "rawdata")
(PUNCT ".")
(ID "startswith")
(NEWLINE)
(KEYWORD if)
(ID "startswith")
(PUNCT "(")
(LIT "<")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "starttagopen")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "parse_starttag")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "startswith")
(PUNCT "(")
(LIT "</")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "parse_endtag")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "startswith")
(PUNCT "(")
(LIT "<!--")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "parse_comment")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "startswith")
(PUNCT "(")
(LIT "<?")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "parse_pi")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "startswith")
(PUNCT "(")
(LIT "<!")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "strict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "parse_declaration")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "parse_html_declaration")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT "<")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_data")
(PUNCT "(")
(LIT "<")
(PUNCT ")")
(NEWLINE)
(ID "k")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "k")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "end")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "strict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(LIT "EOF in middle of construct")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "k")
(PUNCT "=")
(ID "rawdata")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT ">")
(PUNCT ",")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "k")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT "=")
(ID "rawdata")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT "<")
(PUNCT ",")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "k")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "convert_charrefs")
(KEYWORD and)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "cdata_elem")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_data")
(PUNCT "(")
(ID "unescape")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "k")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_data")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "k")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "updatepos")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "k")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "startswith")
(PUNCT "(")
(LIT "&#")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "match")
(PUNCT "=")
(ID "charref")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "match")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "handle_charref")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(ID "k")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "end")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "startswith")
(PUNCT "(")
(LIT ";")
(PUNCT ",")
(ID "k")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT "=")
(ID "k")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "updatepos")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "k")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT ";")
(KEYWORD in)
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_data")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "updatepos")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "startswith")
(PUNCT "(")
(LIT "&")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "match")
(PUNCT "=")
(ID "entityref")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "match")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "handle_entityref")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(ID "k")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "end")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "startswith")
(PUNCT "(")
(LIT ";")
(PUNCT ",")
(ID "k")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT "=")
(ID "k")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "updatepos")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "k")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "match")
(PUNCT "=")
(ID "incomplete")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "match")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "end")
(KEYWORD and)
(ID "match")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(PUNCT ")")
(PUNCT "==")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "strict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(LIT "EOF in middle of entity or char ref")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "end")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "k")
(PUNCT "<=")
(ID "i")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT "=")
(ID "n")
(NEWLINE)
(DEDENT)
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "updatepos")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT "<")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_data")
(PUNCT "(")
(LIT "&")
(PUNCT ")")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "updatepos")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(LIT 0)
(PUNCT ",")
(LIT "interesting.search() lied")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "end")
(KEYWORD and)
(ID "i")
(PUNCT "<")
(ID "n")
(KEYWORD and)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "cdata_elem")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "convert_charrefs")
(KEYWORD and)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "cdata_elem")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_data")
(PUNCT "(")
(ID "unescape")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "n")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_data")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "n")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "updatepos")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "rawdata")
(PUNCT "=")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parse_html_declaration")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rawdata")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "rawdata")
(NEWLINE)
(KEYWORD assert)
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT "]")
(PUNCT "==")
(LIT "<!")
(PUNCT ",")
(PUNCT "(")
(LIT "unexpected call to ")
(LIT "parse_html_declaration()")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 4)
(PUNCT "]")
(PUNCT "==")
(LIT "<!--")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "parse_comment")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 3)
(PUNCT "]")
(PUNCT "==")
(LIT "<![")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "parse_marked_section")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 9)
(PUNCT "]")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(PUNCT "==")
(LIT "<!doctype")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "gtpos")
(PUNCT "=")
(ID "rawdata")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT ">")
(PUNCT ",")
(ID "i")
(PUNCT "+")
(LIT 9)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "gtpos")
(PUNCT "==")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "handle_decl")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT ":")
(ID "gtpos")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "gtpos")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "parse_bogus_comment")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "parse_bogus_comment")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "report")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rawdata")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "rawdata")
(NEWLINE)
(KEYWORD assert)
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT "]")
(KEYWORD in)
(PUNCT "(")
(LIT "<!")
(PUNCT ",")
(LIT "</")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "unexpected call to ")
(LIT "parse_comment()")
(PUNCT ")")
(NEWLINE)
(ID "pos")
(PUNCT "=")
(ID "rawdata")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT ">")
(PUNCT ",")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "pos")
(PUNCT "==")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "report")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_comment")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT ":")
(ID "pos")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "pos")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parse_pi")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rawdata")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "rawdata")
(NEWLINE)
(KEYWORD assert)
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT "]")
(PUNCT "==")
(LIT "<?")
(PUNCT ",")
(LIT "unexpected call to parse_pi()")
(NEWLINE)
(ID "match")
(PUNCT "=")
(ID "piclose")
(PUNCT ".")
(ID "search")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "match")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "j")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "handle_pi")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT ":")
(ID "j")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "j")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "end")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "j")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parse_starttag")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "__starttag_text")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "endpos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "check_for_whole_start_tag")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "endpos")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "endpos")
(NEWLINE)
(DEDENT)
(ID "rawdata")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "rawdata")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__starttag_text")
(PUNCT "=")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "endpos")
(PUNCT "]")
(NEWLINE)
(ID "attrs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "strict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "match")
(PUNCT "=")
(ID "tagfind")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "match")
(PUNCT "=")
(ID "tagfind_tolerant")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD assert)
(ID "match")
(PUNCT ",")
(LIT "unexpected call to parse_starttag()")
(NEWLINE)
(ID "k")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "end")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "lasttag")
(PUNCT "=")
(ID "tag")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "k")
(PUNCT "<")
(ID "endpos")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "strict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT "=")
(ID "attrfind")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "k")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT "=")
(ID "attrfind_tolerant")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "k")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "m")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "attrname")
(PUNCT ",")
(ID "rest")
(PUNCT ",")
(ID "attrvalue")
(PUNCT "=")
(ID "m")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(LIT 2)
(PUNCT ",")
(LIT 3)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "rest")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "attrvalue")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "attrvalue")
(PUNCT "[")
(PUNCT ":")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "'")
(PUNCT "==")
(ID "attrvalue")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(KEYWORD or)
(ID "attrvalue")
(PUNCT "[")
(PUNCT ":")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "\"")
(PUNCT "==")
(ID "attrvalue")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "attrvalue")
(PUNCT "=")
(ID "attrvalue")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "attrvalue")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "attrvalue")
(PUNCT "=")
(ID "unescape")
(PUNCT "(")
(ID "attrvalue")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "attrs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "attrname")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "attrvalue")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "k")
(PUNCT "=")
(ID "m")
(PUNCT ".")
(ID "end")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "end")
(PUNCT "=")
(ID "rawdata")
(PUNCT "[")
(ID "k")
(PUNCT ":")
(ID "endpos")
(PUNCT "]")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "end")
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(LIT ">")
(PUNCT ",")
(LIT "/>")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lineno")
(PUNCT ",")
(ID "offset")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getpos")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "\n")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "__starttag_text")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lineno")
(PUNCT "=")
(ID "lineno")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "__starttag_text")
(PUNCT ".")
(ID "count")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "offset")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__starttag_text")
(PUNCT ")")
(PUNCT "-")
(ID "self")
(PUNCT ".")
(ID "__starttag_text")
(PUNCT ".")
(ID "rfind")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "offset")
(PUNCT "=")
(ID "offset")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__starttag_text")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "strict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(LIT "junk characters in start tag: %r")
(PUNCT "%")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "k")
(PUNCT ":")
(ID "endpos")
(PUNCT "]")
(PUNCT "[")
(PUNCT ":")
(LIT 20)
(PUNCT "]")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "handle_data")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "endpos")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "endpos")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "end")
(PUNCT ".")
(ID "endswith")
(PUNCT "(")
(LIT "/>")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_startendtag")
(PUNCT "(")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_starttag")
(PUNCT "(")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "tag")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "CDATA_CONTENT_ELEMENTS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "set_cdata_mode")
(PUNCT "(")
(ID "tag")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "endpos")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "check_for_whole_start_tag")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rawdata")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "rawdata")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "strict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT "=")
(ID "locatestarttagend")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT "=")
(ID "locatestarttagend_tolerant")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "m")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "j")
(PUNCT "=")
(ID "m")
(PUNCT ".")
(ID "end")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "next")
(PUNCT "=")
(ID "rawdata")
(PUNCT "[")
(ID "j")
(PUNCT ":")
(ID "j")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "next")
(PUNCT "==")
(LIT ">")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "j")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "next")
(PUNCT "==")
(LIT "/")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "rawdata")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "/>")
(PUNCT ",")
(ID "j")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "j")
(PUNCT "+")
(LIT 2)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "rawdata")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "/")
(PUNCT ",")
(ID "j")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "strict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "updatepos")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "j")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(LIT "malformed empty start tag")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "j")
(PUNCT ">")
(ID "i")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "j")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "next")
(PUNCT "==")
(LIT "")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "next")
(KEYWORD in)
(PUNCT "(")
(LIT "abcdefghijklmnopqrstuvwxyz=/")
(LIT "ABCDEFGHIJKLMNOPQRSTUVWXYZ")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "strict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "updatepos")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "j")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(LIT "malformed start tag")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "j")
(PUNCT ">")
(ID "i")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "j")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD raise)
(ID "AssertionError")
(PUNCT "(")
(LIT "we should not get here!")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parse_endtag")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rawdata")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "rawdata")
(NEWLINE)
(KEYWORD assert)
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT "]")
(PUNCT "==")
(LIT "</")
(PUNCT ",")
(LIT "unexpected call to parse_endtag")
(NEWLINE)
(ID "match")
(PUNCT "=")
(ID "endendtag")
(PUNCT ".")
(ID "search")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "match")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "gtpos")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "end")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "match")
(PUNCT "=")
(ID "endtagfind")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "match")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "cdata_elem")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_data")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "gtpos")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "gtpos")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "strict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(LIT "bad end tag: %r")
(PUNCT "%")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "gtpos")
(PUNCT "]")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "namematch")
(PUNCT "=")
(ID "tagfind_tolerant")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "rawdata")
(PUNCT ",")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "namematch")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 3)
(PUNCT "]")
(PUNCT "==")
(LIT "</>")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "i")
(PUNCT "+")
(LIT 3)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "parse_bogus_comment")
(PUNCT "(")
(ID "i")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "tagname")
(PUNCT "=")
(ID "namematch")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "gtpos")
(PUNCT "=")
(ID "rawdata")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT ">")
(PUNCT ",")
(ID "namematch")
(PUNCT ".")
(ID "end")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "handle_endtag")
(PUNCT "(")
(ID "tagname")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "gtpos")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "elem")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "cdata_elem")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "elem")
(PUNCT "!=")
(ID "self")
(PUNCT ".")
(ID "cdata_elem")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_data")
(PUNCT "(")
(ID "rawdata")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "gtpos")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "gtpos")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "handle_endtag")
(PUNCT "(")
(ID "elem")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "clear_cdata_mode")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "gtpos")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_startendtag")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_starttag")
(PUNCT "(")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "handle_endtag")
(PUNCT "(")
(ID "tag")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_starttag")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "tag")
(PUNCT ",")
(ID "attrs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_endtag")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "tag")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_charref")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_entityref")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_comment")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_decl")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "decl")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_pi")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "unknown_decl")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "strict")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(LIT "unknown declaration: %r")
(PUNCT "%")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "unescape")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "The unescape method is deprecated and will be removed ")
(LIT "in 3.5, use html.unescape() instead.")
(PUNCT ",")
(ID "DeprecationWarning")
(PUNCT ",")
(ID "stacklevel")
(PUNCT "=")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "unescape")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
