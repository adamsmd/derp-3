(LIT "Utilities for comparing files and directories.\n\nClasses:\n    dircmp\n\nFunctions:\n    cmp(f1, f2, shallow=True) -> int\n    cmpfiles(a, b, common) -> ([], [], [])\n    clear_cache()\n\n")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "stat")
(NEWLINE)
(KEYWORD from)
(ID "itertools")
(KEYWORD import)
(ID "filterfalse")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "clear_cache")
(PUNCT ",")
(LIT "cmp")
(PUNCT ",")
(LIT "dircmp")
(PUNCT ",")
(LIT "cmpfiles")
(PUNCT ",")
(LIT "DEFAULT_IGNORES")
(PUNCT "]")
(NEWLINE)
(ID "_cache")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "BUFSIZE")
(PUNCT "=")
(LIT 8)
(PUNCT "*")
(LIT 1024)
(NEWLINE)
(ID "DEFAULT_IGNORES")
(PUNCT "=")
(PUNCT "[")
(LIT "RCS")
(PUNCT ",")
(LIT "CVS")
(PUNCT ",")
(LIT "tags")
(PUNCT ",")
(LIT ".git")
(PUNCT ",")
(LIT ".hg")
(PUNCT ",")
(LIT ".bzr")
(PUNCT ",")
(LIT "_darcs")
(PUNCT ",")
(LIT "__pycache__")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "clear_cache")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Clear the filecmp cache.")
(NEWLINE)
(ID "_cache")
(PUNCT ".")
(ID "clear")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "cmp")
(PUNCT "(")
(ID "f1")
(PUNCT ",")
(ID "f2")
(PUNCT ",")
(ID "shallow")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Compare two files.\n\n    Arguments:\n\n    f1 -- First file name\n\n    f2 -- Second file name\n\n    shallow -- Just check stat signature (do not read the files).\n               defaults to True.\n\n    Return value:\n\n    True if the files are the same, False otherwise.\n\n    This function uses a cache for past comparisons and the results,\n    with cache entries invalidated if their stat information\n    changes.  The cache may be cleared by calling clear_cache().\n\n    ")
(NEWLINE)
(ID "s1")
(PUNCT "=")
(ID "_sig")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "f1")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "s2")
(PUNCT "=")
(ID "_sig")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "f2")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "s1")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "!=")
(ID "stat")
(PUNCT ".")
(ID "S_IFREG")
(KEYWORD or)
(ID "s2")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "!=")
(ID "stat")
(PUNCT ".")
(ID "S_IFREG")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "shallow")
(KEYWORD and)
(ID "s1")
(PUNCT "==")
(ID "s2")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "s1")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "!=")
(ID "s2")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(ID "outcome")
(PUNCT "=")
(ID "_cache")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(PUNCT "(")
(ID "f1")
(PUNCT ",")
(ID "f2")
(PUNCT ",")
(ID "s1")
(PUNCT ",")
(ID "s2")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "outcome")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "outcome")
(PUNCT "=")
(ID "_do_cmp")
(PUNCT "(")
(ID "f1")
(PUNCT ",")
(ID "f2")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "_cache")
(PUNCT ")")
(PUNCT ">")
(LIT 100)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "clear_cache")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "_cache")
(PUNCT "[")
(ID "f1")
(PUNCT ",")
(ID "f2")
(PUNCT ",")
(ID "s1")
(PUNCT ",")
(ID "s2")
(PUNCT "]")
(PUNCT "=")
(ID "outcome")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "outcome")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_sig")
(PUNCT "(")
(ID "st")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "stat")
(PUNCT ".")
(ID "S_IFMT")
(PUNCT "(")
(ID "st")
(PUNCT ".")
(ID "st_mode")
(PUNCT ")")
(PUNCT ",")
(ID "st")
(PUNCT ".")
(ID "st_size")
(PUNCT ",")
(ID "st")
(PUNCT ".")
(ID "st_mtime")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_do_cmp")
(PUNCT "(")
(ID "f1")
(PUNCT ",")
(ID "f2")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bufsize")
(PUNCT "=")
(ID "BUFSIZE")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "f1")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(KEYWORD as)
(ID "fp1")
(PUNCT ",")
(ID "open")
(PUNCT "(")
(ID "f2")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(KEYWORD as)
(ID "fp2")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "b1")
(PUNCT "=")
(ID "fp1")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "bufsize")
(PUNCT ")")
(NEWLINE)
(ID "b2")
(PUNCT "=")
(ID "fp2")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "bufsize")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "b1")
(PUNCT "!=")
(ID "b2")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "b1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "dircmp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "A class that manages the comparison of 2 directories.\n\n    dircmp(a, b, ignore=None, hide=None)\n      A and B are directories.\n      IGNORE is a list of names to ignore,\n        defaults to DEFAULT_IGNORES.\n      HIDE is a list of names to hide,\n        defaults to [os.curdir, os.pardir].\n\n    High level usage:\n      x = dircmp(dir1, dir2)\n      x.report() -> prints a report on the differences between dir1 and dir2\n       or\n      x.report_partial_closure() -> prints report on differences between dir1\n            and dir2, and reports on common immediate subdirectories.\n      x.report_full_closure() -> like report_partial_closure,\n            but fully recursive.\n\n    Attributes:\n     left_list, right_list: The files in dir1 and dir2,\n        filtered by hide and ignore.\n     common: a list of names in both dir1 and dir2.\n     left_only, right_only: names only in dir1, dir2.\n     common_dirs: subdirectories in both dir1 and dir2.\n     common_files: files in both dir1 and dir2.\n     common_funny: names in both dir1 and dir2 where the type differs between\n        dir1 and dir2, or the name is not stat-able.\n     same_files: list of identical files.\n     diff_files: list of filenames which differ.\n     funny_files: list of files which could not be compared.\n     subdirs: a dictionary of dircmp objects, keyed by names in common_dirs.\n     ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ",")
(ID "ignore")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "hide")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "left")
(PUNCT "=")
(ID "a")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "right")
(PUNCT "=")
(ID "b")
(NEWLINE)
(KEYWORD if)
(ID "hide")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "hide")
(PUNCT "=")
(PUNCT "[")
(ID "os")
(PUNCT ".")
(ID "curdir")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "pardir")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "hide")
(PUNCT "=")
(ID "hide")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "ignore")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "ignore")
(PUNCT "=")
(ID "DEFAULT_IGNORES")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "ignore")
(PUNCT "=")
(ID "ignore")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "phase0")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "left_list")
(PUNCT "=")
(ID "_filter")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "listdir")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "left")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "hide")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "ignore")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "right_list")
(PUNCT "=")
(ID "_filter")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "listdir")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "right")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "hide")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "ignore")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "left_list")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "right_list")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "phase1")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "a")
(PUNCT "=")
(ID "dict")
(PUNCT "(")
(ID "zip")
(PUNCT "(")
(ID "map")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normcase")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "left_list")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "left_list")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "b")
(PUNCT "=")
(ID "dict")
(PUNCT "(")
(ID "zip")
(PUNCT "(")
(ID "map")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normcase")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "right_list")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "right_list")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "common")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "map")
(PUNCT "(")
(ID "a")
(PUNCT ".")
(ID "__getitem__")
(PUNCT ",")
(ID "filter")
(PUNCT "(")
(ID "b")
(PUNCT ".")
(ID "__contains__")
(PUNCT ",")
(ID "a")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "left_only")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "map")
(PUNCT "(")
(ID "a")
(PUNCT ".")
(ID "__getitem__")
(PUNCT ",")
(ID "filterfalse")
(PUNCT "(")
(ID "b")
(PUNCT ".")
(ID "__contains__")
(PUNCT ",")
(ID "a")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "right_only")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "map")
(PUNCT "(")
(ID "b")
(PUNCT ".")
(ID "__getitem__")
(PUNCT ",")
(ID "filterfalse")
(PUNCT "(")
(ID "a")
(PUNCT ".")
(ID "__contains__")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "phase2")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "common_dirs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "common_files")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "common_funny")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "x")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "common")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "a_path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "left")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(NEWLINE)
(ID "b_path")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "right")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(NEWLINE)
(ID "ok")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "a_stat")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "a_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "why")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ok")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "b_stat")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "b_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "why")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ok")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "ok")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "a_type")
(PUNCT "=")
(ID "stat")
(PUNCT ".")
(ID "S_IFMT")
(PUNCT "(")
(ID "a_stat")
(PUNCT ".")
(ID "st_mode")
(PUNCT ")")
(NEWLINE)
(ID "b_type")
(PUNCT "=")
(ID "stat")
(PUNCT ".")
(ID "S_IFMT")
(PUNCT "(")
(ID "b_stat")
(PUNCT ".")
(ID "st_mode")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "a_type")
(PUNCT "!=")
(ID "b_type")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "common_funny")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "stat")
(PUNCT ".")
(ID "S_ISDIR")
(PUNCT "(")
(ID "a_type")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "common_dirs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "stat")
(PUNCT ".")
(ID "S_ISREG")
(PUNCT "(")
(ID "a_type")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "common_files")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "common_funny")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "common_funny")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "phase3")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "xx")
(PUNCT "=")
(ID "cmpfiles")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "left")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "right")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "common_files")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "same_files")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "diff_files")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "funny_files")
(PUNCT "=")
(ID "xx")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "phase4")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "subdirs")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "x")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "common_dirs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "a_x")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "left")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(NEWLINE)
(ID "b_x")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "right")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "subdirs")
(PUNCT "[")
(ID "x")
(PUNCT "]")
(PUNCT "=")
(ID "dircmp")
(PUNCT "(")
(ID "a_x")
(PUNCT ",")
(ID "b_x")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "ignore")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "hide")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "phase4_closure")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "phase4")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "sd")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "subdirs")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sd")
(PUNCT ".")
(ID "phase4_closure")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "report")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "diff")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "left")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "right")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "left_only")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "left_only")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Only in")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "left")
(PUNCT ",")
(LIT ":")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "left_only")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "right_only")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "right_only")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Only in")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "right")
(PUNCT ",")
(LIT ":")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "right_only")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "same_files")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "same_files")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Identical files :")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "same_files")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "diff_files")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "diff_files")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Differing files :")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "diff_files")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "funny_files")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "funny_files")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Trouble with common files :")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "funny_files")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "common_dirs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "common_dirs")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Common subdirectories :")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "common_dirs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "common_funny")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "common_funny")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Common funny cases :")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "common_funny")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "report_partial_closure")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "report")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "sd")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "subdirs")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "sd")
(PUNCT ".")
(ID "report")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "report_full_closure")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "report")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "sd")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "subdirs")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "sd")
(PUNCT ".")
(ID "report_full_closure")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "methodmap")
(PUNCT "=")
(ID "dict")
(PUNCT "(")
(ID "subdirs")
(PUNCT "=")
(ID "phase4")
(PUNCT ",")
(ID "same_files")
(PUNCT "=")
(ID "phase3")
(PUNCT ",")
(ID "diff_files")
(PUNCT "=")
(ID "phase3")
(PUNCT ",")
(ID "funny_files")
(PUNCT "=")
(ID "phase3")
(PUNCT ",")
(ID "common_dirs")
(PUNCT "=")
(ID "phase2")
(PUNCT ",")
(ID "common_files")
(PUNCT "=")
(ID "phase2")
(PUNCT ",")
(ID "common_funny")
(PUNCT "=")
(ID "phase2")
(PUNCT ",")
(ID "common")
(PUNCT "=")
(ID "phase1")
(PUNCT ",")
(ID "left_only")
(PUNCT "=")
(ID "phase1")
(PUNCT ",")
(ID "right_only")
(PUNCT "=")
(ID "phase1")
(PUNCT ",")
(ID "left_list")
(PUNCT "=")
(ID "phase0")
(PUNCT ",")
(ID "right_list")
(PUNCT "=")
(ID "phase0")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "__getattr__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attr")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "attr")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "methodmap")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "AttributeError")
(PUNCT "(")
(ID "attr")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "methodmap")
(PUNCT "[")
(ID "attr")
(PUNCT "]")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attr")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "cmpfiles")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ",")
(ID "common")
(PUNCT ",")
(ID "shallow")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Compare common files in two directories.\n\n    a, b -- directory names\n    common -- list of file names found in both directories\n    shallow -- if true, do comparison based solely on stat() information\n\n    Returns a tuple of three lists:\n      files that compare equal\n      files that are different\n      filenames that aren't regular files.\n\n    ")
(NEWLINE)
(ID "res")
(PUNCT "=")
(PUNCT "(")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "x")
(KEYWORD in)
(ID "common")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ax")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(NEWLINE)
(ID "bx")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "b")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(NEWLINE)
(ID "res")
(PUNCT "[")
(ID "_cmp")
(PUNCT "(")
(ID "ax")
(PUNCT ",")
(ID "bx")
(PUNCT ",")
(ID "shallow")
(PUNCT ")")
(PUNCT "]")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "x")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "res")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_cmp")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ",")
(ID "sh")
(PUNCT ",")
(ID "abs")
(PUNCT "=")
(ID "abs")
(PUNCT ",")
(ID "cmp")
(PUNCT "=")
(ID "cmp")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD not)
(ID "abs")
(PUNCT "(")
(ID "cmp")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ",")
(ID "sh")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 2)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_filter")
(PUNCT "(")
(ID "flist")
(PUNCT ",")
(ID "skip")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "filterfalse")
(PUNCT "(")
(ID "skip")
(PUNCT ".")
(ID "__contains__")
(PUNCT ",")
(ID "flist")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "demo")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "getopt")
(NEWLINE)
(ID "options")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(ID "getopt")
(PUNCT ".")
(ID "getopt")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT "r")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT "!=")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "getopt")
(PUNCT ".")
(ID "GetoptError")
(PUNCT "(")
(LIT "need exactly two args")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "dd")
(PUNCT "=")
(ID "dircmp")
(PUNCT "(")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(LIT "-r")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(KEYWORD in)
(ID "options")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dd")
(PUNCT ".")
(ID "report_full_closure")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dd")
(PUNCT ".")
(ID "report")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "demo")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
