(LIT " Locale support.\n\n    The module provides low-level access to the C lib's locale APIs\n    and adds high level number formatting APIs as well as a locale\n    aliasing engine to complement these.\n\n    The aliasing engine includes support for many commonly used locale\n    names and maps them to values suitable for passing to the C lib's\n    setlocale() function. It also includes default encodings for all\n    supported locale names.\n\n")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "encodings")
(NEWLINE)
(KEYWORD import)
(ID "encodings")
(PUNCT ".")
(ID "aliases")
(NEWLINE)
(KEYWORD import)
(ID "re")
(NEWLINE)
(KEYWORD import)
(ID "collections")
(NEWLINE)
(KEYWORD from)
(ID "builtins")
(KEYWORD import)
(ID "str")
(KEYWORD as)
(ID "_builtin_str")
(NEWLINE)
(KEYWORD import)
(ID "functools")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "getlocale")
(PUNCT ",")
(LIT "getdefaultlocale")
(PUNCT ",")
(LIT "getpreferredencoding")
(PUNCT ",")
(LIT "Error")
(PUNCT ",")
(LIT "setlocale")
(PUNCT ",")
(LIT "resetlocale")
(PUNCT ",")
(LIT "localeconv")
(PUNCT ",")
(LIT "strcoll")
(PUNCT ",")
(LIT "strxfrm")
(PUNCT ",")
(LIT "str")
(PUNCT ",")
(LIT "atof")
(PUNCT ",")
(LIT "atoi")
(PUNCT ",")
(LIT "format")
(PUNCT ",")
(LIT "format_string")
(PUNCT ",")
(LIT "currency")
(PUNCT ",")
(LIT "normalize")
(PUNCT ",")
(LIT "LC_CTYPE")
(PUNCT ",")
(LIT "LC_COLLATE")
(PUNCT ",")
(LIT "LC_TIME")
(PUNCT ",")
(LIT "LC_MONETARY")
(PUNCT ",")
(LIT "LC_NUMERIC")
(PUNCT ",")
(LIT "LC_ALL")
(PUNCT ",")
(LIT "CHAR_MAX")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "_strcoll")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "b")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT " strcoll(string,string) -> int.\n        Compares two strings according to the locale.\n    ")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID "a")
(PUNCT ">")
(ID "b")
(PUNCT ")")
(PUNCT "-")
(PUNCT "(")
(ID "a")
(PUNCT "<")
(ID "b")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_strxfrm")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT " strxfrm(string) -> string.\n        Returns a string that behaves for cmp locale-aware.\n    ")
(NEWLINE)
(KEYWORD return)
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "_locale")
(KEYWORD import)
(PUNCT "*")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "CHAR_MAX")
(PUNCT "=")
(LIT 127)
(NEWLINE)
(ID "LC_ALL")
(PUNCT "=")
(LIT 6)
(NEWLINE)
(ID "LC_COLLATE")
(PUNCT "=")
(LIT 3)
(NEWLINE)
(ID "LC_CTYPE")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "LC_MESSAGES")
(PUNCT "=")
(LIT 5)
(NEWLINE)
(ID "LC_MONETARY")
(PUNCT "=")
(LIT 4)
(NEWLINE)
(ID "LC_NUMERIC")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "LC_TIME")
(PUNCT "=")
(LIT 2)
(NEWLINE)
(ID "Error")
(PUNCT "=")
(ID "ValueError")
(NEWLINE)
(KEYWORD def)
(ID "localeconv")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT " localeconv() -> dict.\n            Returns numeric and monetary locale-specific parameters.\n        ")
(NEWLINE)
(KEYWORD return)
(PUNCT "{")
(LIT "grouping")
(PUNCT ":")
(PUNCT "[")
(LIT 127)
(PUNCT "]")
(PUNCT ",")
(LIT "currency_symbol")
(PUNCT ":")
(LIT "")
(PUNCT ",")
(LIT "n_sign_posn")
(PUNCT ":")
(LIT 127)
(PUNCT ",")
(LIT "p_cs_precedes")
(PUNCT ":")
(LIT 127)
(PUNCT ",")
(LIT "n_cs_precedes")
(PUNCT ":")
(LIT 127)
(PUNCT ",")
(LIT "mon_grouping")
(PUNCT ":")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(LIT "n_sep_by_space")
(PUNCT ":")
(LIT 127)
(PUNCT ",")
(LIT "decimal_point")
(PUNCT ":")
(LIT ".")
(PUNCT ",")
(LIT "negative_sign")
(PUNCT ":")
(LIT "")
(PUNCT ",")
(LIT "positive_sign")
(PUNCT ":")
(LIT "")
(PUNCT ",")
(LIT "p_sep_by_space")
(PUNCT ":")
(LIT 127)
(PUNCT ",")
(LIT "int_curr_symbol")
(PUNCT ":")
(LIT "")
(PUNCT ",")
(LIT "p_sign_posn")
(PUNCT ":")
(LIT 127)
(PUNCT ",")
(LIT "thousands_sep")
(PUNCT ":")
(LIT "")
(PUNCT ",")
(LIT "mon_thousands_sep")
(PUNCT ":")
(LIT "")
(PUNCT ",")
(LIT "frac_digits")
(PUNCT ":")
(LIT 127)
(PUNCT ",")
(LIT "mon_decimal_point")
(PUNCT ":")
(LIT "")
(PUNCT ",")
(LIT "int_frac_digits")
(PUNCT ":")
(LIT 127)
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setlocale")
(PUNCT "(")
(ID "category")
(PUNCT ",")
(ID "value")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT " setlocale(integer,string=None) -> string.\n            Activates/queries locale processing.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "value")
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(LIT "")
(PUNCT ",")
(LIT "C")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "_locale emulation only supports \"C\" locale")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "C")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(LIT "strxfrm")
(KEYWORD not)
(KEYWORD in)
(ID "globals")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "strxfrm")
(PUNCT "=")
(ID "_strxfrm")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "strcoll")
(KEYWORD not)
(KEYWORD in)
(ID "globals")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "strcoll")
(PUNCT "=")
(ID "_strcoll")
(NEWLINE)
(DEDENT)
(ID "_localeconv")
(PUNCT "=")
(ID "localeconv")
(NEWLINE)
(ID "_override_localeconv")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(PUNCT "@")
(ID "functools")
(PUNCT ".")
(ID "wraps")
(PUNCT "(")
(ID "_localeconv")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "localeconv")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "d")
(PUNCT "=")
(ID "_localeconv")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "_override_localeconv")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "d")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "_override_localeconv")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "d")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_grouping_intervals")
(PUNCT "(")
(ID "grouping")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "last_interval")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD for)
(ID "interval")
(KEYWORD in)
(ID "grouping")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "interval")
(PUNCT "==")
(ID "CHAR_MAX")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "interval")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "last_interval")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "invalid grouping")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "last_interval")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD yield)
(ID "interval")
(NEWLINE)
(ID "last_interval")
(PUNCT "=")
(ID "interval")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_group")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "monetary")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "conv")
(PUNCT "=")
(ID "localeconv")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "thousands_sep")
(PUNCT "=")
(ID "conv")
(PUNCT "[")
(ID "monetary")
(KEYWORD and)
(LIT "mon_thousands_sep")
(KEYWORD or)
(LIT "thousands_sep")
(PUNCT "]")
(NEWLINE)
(ID "grouping")
(PUNCT "=")
(ID "conv")
(PUNCT "[")
(ID "monetary")
(KEYWORD and)
(LIT "mon_grouping")
(KEYWORD or)
(LIT "grouping")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "grouping")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "s")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "s")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT " ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stripped")
(PUNCT "=")
(ID "s")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "right_spaces")
(PUNCT "=")
(ID "s")
(PUNCT "[")
(ID "len")
(PUNCT "(")
(ID "stripped")
(PUNCT ")")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "stripped")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "right_spaces")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "left_spaces")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "groups")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "interval")
(KEYWORD in)
(ID "_grouping_intervals")
(PUNCT "(")
(ID "grouping")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "s")
(KEYWORD or)
(ID "s")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(KEYWORD not)
(KEYWORD in)
(LIT "0123456789")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "left_spaces")
(PUNCT "=")
(ID "s")
(NEWLINE)
(ID "s")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "groups")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "s")
(PUNCT "[")
(PUNCT "-")
(ID "interval")
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(ID "interval")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "groups")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "groups")
(PUNCT ".")
(ID "reverse")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID "left_spaces")
(PUNCT "+")
(ID "thousands_sep")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "groups")
(PUNCT ")")
(PUNCT "+")
(ID "right_spaces")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "thousands_sep")
(PUNCT ")")
(PUNCT "*")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "groups")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_strip_padding")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(ID "amount")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lpos")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD while)
(ID "amount")
(KEYWORD and)
(ID "s")
(PUNCT "[")
(ID "lpos")
(PUNCT "]")
(PUNCT "==")
(LIT " ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lpos")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(ID "amount")
(PUNCT "-=")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "rpos")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(KEYWORD while)
(ID "amount")
(KEYWORD and)
(ID "s")
(PUNCT "[")
(ID "rpos")
(PUNCT "]")
(PUNCT "==")
(LIT " ")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rpos")
(PUNCT "-=")
(LIT 1)
(NEWLINE)
(ID "amount")
(PUNCT "-=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "s")
(PUNCT "[")
(ID "lpos")
(PUNCT ":")
(ID "rpos")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "_percent_re")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "%(?:\\((?P<key>.*?)\\))?")
(LIT "(?P<modifiers>[-#0-9 +*.hlL]*?)[eEfFgGdiouxXcrs%]")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "format")
(PUNCT "(")
(ID "percent")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "grouping")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "monetary")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(PUNCT "*")
(ID "additional")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Returns the locale-aware substitution of a %? specifier\n    (percent).\n\n    additional is for format strings which contain one or more\n    '*' modifiers.")
(NEWLINE)
(ID "match")
(PUNCT "=")
(ID "_percent_re")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(ID "percent")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "match")
(KEYWORD or)
(ID "len")
(PUNCT "(")
(ID "match")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT "!=")
(ID "len")
(PUNCT "(")
(ID "percent")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(PUNCT "(")
(LIT "format() must be given exactly one %%char ")
(LIT "format specifier, %s not valid")
(PUNCT ")")
(PUNCT "%")
(ID "repr")
(PUNCT "(")
(ID "percent")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_format")
(PUNCT "(")
(ID "percent")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "grouping")
(PUNCT ",")
(ID "monetary")
(PUNCT ",")
(PUNCT "*")
(ID "additional")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_format")
(PUNCT "(")
(ID "percent")
(PUNCT ",")
(ID "value")
(PUNCT ",")
(ID "grouping")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "monetary")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(PUNCT "*")
(ID "additional")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "additional")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "formatted")
(PUNCT "=")
(ID "percent")
(PUNCT "%")
(PUNCT "(")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(PUNCT ")")
(PUNCT "+")
(ID "additional")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "formatted")
(PUNCT "=")
(ID "percent")
(PUNCT "%")
(ID "value")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "percent")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(KEYWORD in)
(LIT "eEfFgG")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "seps")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "parts")
(PUNCT "=")
(ID "formatted")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "grouping")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parts")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(ID "seps")
(PUNCT "=")
(ID "_group")
(PUNCT "(")
(ID "parts")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(ID "monetary")
(PUNCT "=")
(ID "monetary")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "decimal_point")
(PUNCT "=")
(ID "localeconv")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(ID "monetary")
(KEYWORD and)
(LIT "mon_decimal_point")
(KEYWORD or)
(LIT "decimal_point")
(PUNCT "]")
(NEWLINE)
(ID "formatted")
(PUNCT "=")
(ID "decimal_point")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "parts")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "seps")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "formatted")
(PUNCT "=")
(ID "_strip_padding")
(PUNCT "(")
(ID "formatted")
(PUNCT ",")
(ID "seps")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "percent")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(KEYWORD in)
(LIT "diu")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "seps")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "grouping")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "formatted")
(PUNCT ",")
(ID "seps")
(PUNCT "=")
(ID "_group")
(PUNCT "(")
(ID "formatted")
(PUNCT ",")
(ID "monetary")
(PUNCT "=")
(ID "monetary")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "seps")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "formatted")
(PUNCT "=")
(ID "_strip_padding")
(PUNCT "(")
(ID "formatted")
(PUNCT ",")
(ID "seps")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "formatted")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "format_string")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "val")
(PUNCT ",")
(ID "grouping")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Formats a string in the same way that the % formatting would use,\n    but takes the current locale into account.\n    Grouping is applied if the third parameter is true.")
(NEWLINE)
(ID "percents")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "_percent_re")
(PUNCT ".")
(ID "finditer")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "new_f")
(PUNCT "=")
(ID "_percent_re")
(PUNCT ".")
(ID "sub")
(PUNCT "(")
(LIT "%s")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "val")
(PUNCT ",")
(ID "collections")
(PUNCT ".")
(ID "Mapping")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_val")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "perc")
(KEYWORD in)
(ID "percents")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "perc")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "%")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_val")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "%")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_val")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "format")
(PUNCT "(")
(ID "perc")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "val")
(PUNCT ",")
(ID "grouping")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "val")
(PUNCT ",")
(ID "tuple")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "val")
(PUNCT "=")
(PUNCT "(")
(ID "val")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "new_val")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "i")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD for)
(ID "perc")
(KEYWORD in)
(ID "percents")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "perc")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "%")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_val")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "%")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "starcount")
(PUNCT "=")
(ID "perc")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(LIT "modifiers")
(PUNCT ")")
(PUNCT ".")
(ID "count")
(PUNCT "(")
(LIT "*")
(PUNCT ")")
(NEWLINE)
(ID "new_val")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "_format")
(PUNCT "(")
(ID "perc")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "val")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ",")
(ID "grouping")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(PUNCT "*")
(ID "val")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT "+")
(ID "starcount")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "i")
(PUNCT "+=")
(PUNCT "(")
(LIT 1)
(PUNCT "+")
(ID "starcount")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "val")
(PUNCT "=")
(ID "tuple")
(PUNCT "(")
(ID "new_val")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "new_f")
(PUNCT "%")
(ID "val")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "currency")
(PUNCT "(")
(ID "val")
(PUNCT ",")
(ID "symbol")
(PUNCT "=")
(KEYWORD True)
(PUNCT ",")
(ID "grouping")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "international")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Formats val according to the currency settings\n    in the current locale.")
(NEWLINE)
(ID "conv")
(PUNCT "=")
(ID "localeconv")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "digits")
(PUNCT "=")
(ID "conv")
(PUNCT "[")
(ID "international")
(KEYWORD and)
(LIT "int_frac_digits")
(KEYWORD or)
(LIT "frac_digits")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "digits")
(PUNCT "==")
(LIT 127)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Currency formatting is not possible using ")
(LIT "the 'C' locale.")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(ID "format")
(PUNCT "(")
(LIT "%%.%if")
(PUNCT "%")
(ID "digits")
(PUNCT ",")
(ID "abs")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(PUNCT ",")
(ID "grouping")
(PUNCT ",")
(ID "monetary")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(LIT "<")
(PUNCT "+")
(ID "s")
(PUNCT "+")
(LIT ">")
(NEWLINE)
(KEYWORD if)
(ID "symbol")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "smb")
(PUNCT "=")
(ID "conv")
(PUNCT "[")
(ID "international")
(KEYWORD and)
(LIT "int_curr_symbol")
(KEYWORD or)
(LIT "currency_symbol")
(PUNCT "]")
(NEWLINE)
(ID "precedes")
(PUNCT "=")
(ID "conv")
(PUNCT "[")
(ID "val")
(PUNCT "<")
(LIT 0)
(KEYWORD and)
(LIT "n_cs_precedes")
(KEYWORD or)
(LIT "p_cs_precedes")
(PUNCT "]")
(NEWLINE)
(ID "separated")
(PUNCT "=")
(ID "conv")
(PUNCT "[")
(ID "val")
(PUNCT "<")
(LIT 0)
(KEYWORD and)
(LIT "n_sep_by_space")
(KEYWORD or)
(LIT "p_sep_by_space")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "precedes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "smb")
(PUNCT "+")
(PUNCT "(")
(ID "separated")
(KEYWORD and)
(LIT " ")
(KEYWORD or)
(LIT "")
(PUNCT ")")
(PUNCT "+")
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "+")
(PUNCT "(")
(ID "separated")
(KEYWORD and)
(LIT " ")
(KEYWORD or)
(LIT "")
(PUNCT ")")
(PUNCT "+")
(ID "smb")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "sign_pos")
(PUNCT "=")
(ID "conv")
(PUNCT "[")
(ID "val")
(PUNCT "<")
(LIT 0)
(KEYWORD and)
(LIT "n_sign_posn")
(KEYWORD or)
(LIT "p_sign_posn")
(PUNCT "]")
(NEWLINE)
(ID "sign")
(PUNCT "=")
(ID "conv")
(PUNCT "[")
(ID "val")
(PUNCT "<")
(LIT 0)
(KEYWORD and)
(LIT "negative_sign")
(KEYWORD or)
(LIT "positive_sign")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "sign_pos")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "(")
(PUNCT "+")
(ID "s")
(PUNCT "+")
(LIT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "sign_pos")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "sign")
(PUNCT "+")
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "sign_pos")
(PUNCT "==")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "+")
(ID "sign")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "sign_pos")
(PUNCT "==")
(LIT 3)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "<")
(PUNCT ",")
(ID "sign")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "sign_pos")
(PUNCT "==")
(LIT 4)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT ">")
(PUNCT ",")
(ID "sign")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "sign")
(PUNCT "+")
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "s")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "<")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT ">")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "str")
(PUNCT "(")
(ID "val")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Convert float to integer, taking the locale into account.")
(NEWLINE)
(KEYWORD return)
(ID "format")
(PUNCT "(")
(LIT "%.12g")
(PUNCT ",")
(ID "val")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "atof")
(PUNCT "(")
(ID "string")
(PUNCT ",")
(ID "func")
(PUNCT "=")
(ID "float")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Parses a string as a float according to the locale settings.")
(NEWLINE)
(ID "ts")
(PUNCT "=")
(ID "localeconv")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT "thousands_sep")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "ts")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "string")
(PUNCT "=")
(ID "string")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "ts")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "dd")
(PUNCT "=")
(ID "localeconv")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT "decimal_point")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "dd")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "string")
(PUNCT "=")
(ID "string")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(ID "dd")
(PUNCT ",")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "func")
(PUNCT "(")
(ID "string")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "atoi")
(PUNCT "(")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Converts a string to an integer according to the locale settings.")
(NEWLINE)
(KEYWORD return)
(ID "atof")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_test")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setlocale")
(PUNCT "(")
(ID "LC_ALL")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(ID "s1")
(PUNCT "=")
(ID "format")
(PUNCT "(")
(LIT "%d")
(PUNCT ",")
(LIT 123456789)
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "s1")
(PUNCT ",")
(LIT "is")
(PUNCT ",")
(ID "atoi")
(PUNCT "(")
(ID "s1")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "s1")
(PUNCT "=")
(ID "str")
(PUNCT "(")
(LIT 3.14)
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(ID "s1")
(PUNCT ",")
(LIT "is")
(PUNCT ",")
(ID "atof")
(PUNCT "(")
(ID "s1")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "_setlocale")
(PUNCT "=")
(ID "setlocale")
(NEWLINE)
(KEYWORD def)
(ID "_replace_encoding")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(ID "encoding")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT ".")
(KEYWORD in)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "langname")
(PUNCT "=")
(ID "code")
(PUNCT "[")
(PUNCT ":")
(ID "code")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "langname")
(PUNCT "=")
(ID "code")
(NEWLINE)
(DEDENT)
(ID "norm_encoding")
(PUNCT "=")
(ID "encodings")
(PUNCT ".")
(ID "normalize_encoding")
(PUNCT "(")
(ID "encoding")
(PUNCT ")")
(NEWLINE)
(ID "norm_encoding")
(PUNCT "=")
(ID "encodings")
(PUNCT ".")
(ID "aliases")
(PUNCT ".")
(ID "aliases")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "norm_encoding")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "norm_encoding")
(PUNCT ")")
(NEWLINE)
(ID "encoding")
(PUNCT "=")
(ID "norm_encoding")
(NEWLINE)
(ID "norm_encoding")
(PUNCT "=")
(ID "norm_encoding")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "norm_encoding")
(KEYWORD in)
(ID "locale_encoding_alias")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "encoding")
(PUNCT "=")
(ID "locale_encoding_alias")
(PUNCT "[")
(ID "norm_encoding")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "norm_encoding")
(PUNCT "=")
(ID "norm_encoding")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "_")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(ID "norm_encoding")
(PUNCT "=")
(ID "norm_encoding")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "-")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "norm_encoding")
(KEYWORD in)
(ID "locale_encoding_alias")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "encoding")
(PUNCT "=")
(ID "locale_encoding_alias")
(PUNCT "[")
(ID "norm_encoding")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "langname")
(PUNCT "+")
(LIT ".")
(PUNCT "+")
(ID "encoding")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_append_modifier")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(ID "modifier")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "modifier")
(PUNCT "==")
(LIT "euro")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT ".")
(KEYWORD not)
(KEYWORD in)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "code")
(PUNCT "+")
(LIT ".ISO8859-15")
(NEWLINE)
(DEDENT)
(ID "_")
(PUNCT ",")
(ID "_")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(ID "code")
(PUNCT ".")
(ID "partition")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "encoding")
(KEYWORD in)
(PUNCT "(")
(LIT "ISO8859-15")
(PUNCT ",")
(LIT "UTF-8")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "code")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "encoding")
(PUNCT "==")
(LIT "ISO8859-1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_replace_encoding")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(LIT "ISO8859-15")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "code")
(PUNCT "+")
(LIT "@")
(PUNCT "+")
(ID "modifier")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "normalize")
(PUNCT "(")
(ID "localename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT " Returns a normalized locale code for the given locale\n        name.\n\n        The returned locale code is formatted for use with\n        setlocale().\n\n        If normalization fails, the original name is returned\n        unchanged.\n\n        If the given encoding is not known, the function defaults to\n        the default encoding for the locale code just like setlocale()\n        does.\n\n    ")
(NEWLINE)
(ID "code")
(PUNCT "=")
(ID "localename")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT ":")
(KEYWORD in)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "code")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT ":")
(PUNCT ",")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "@")
(KEYWORD in)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT ",")
(ID "modifier")
(PUNCT "=")
(ID "code")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "@")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modifier")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT ".")
(KEYWORD in)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "langname")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(ID "code")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(PUNCT "[")
(PUNCT ":")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "langname")
(PUNCT "=")
(ID "code")
(NEWLINE)
(ID "encoding")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "lang_enc")
(PUNCT "=")
(ID "langname")
(NEWLINE)
(KEYWORD if)
(ID "encoding")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "norm_encoding")
(PUNCT "=")
(ID "encoding")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "-")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(ID "norm_encoding")
(PUNCT "=")
(ID "norm_encoding")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "_")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(ID "lang_enc")
(PUNCT "+=")
(LIT ".")
(PUNCT "+")
(ID "norm_encoding")
(NEWLINE)
(DEDENT)
(ID "lookup_name")
(PUNCT "=")
(ID "lang_enc")
(NEWLINE)
(KEYWORD if)
(ID "modifier")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lookup_name")
(PUNCT "+=")
(LIT "@")
(PUNCT "+")
(ID "modifier")
(NEWLINE)
(DEDENT)
(ID "code")
(PUNCT "=")
(ID "locale_alias")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "lookup_name")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "code")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "code")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "modifier")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "locale_alias")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "lang_enc")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "code")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "@")
(KEYWORD not)
(KEYWORD in)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_append_modifier")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(ID "modifier")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "code")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "@")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(PUNCT "==")
(ID "modifier")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "code")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "encoding")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lookup_name")
(PUNCT "=")
(ID "langname")
(NEWLINE)
(KEYWORD if)
(ID "modifier")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lookup_name")
(PUNCT "+=")
(LIT "@")
(PUNCT "+")
(ID "modifier")
(NEWLINE)
(DEDENT)
(ID "code")
(PUNCT "=")
(ID "locale_alias")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "lookup_name")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "code")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "@")
(KEYWORD not)
(KEYWORD in)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_replace_encoding")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(ID "encoding")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "code")
(PUNCT ",")
(ID "modifier")
(PUNCT "=")
(ID "code")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "@")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "_replace_encoding")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(ID "encoding")
(PUNCT ")")
(PUNCT "+")
(LIT "@")
(PUNCT "+")
(ID "modifier")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "modifier")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "locale_alias")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "langname")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "code")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "@")
(KEYWORD not)
(KEYWORD in)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "_replace_encoding")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(ID "encoding")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "_append_modifier")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(ID "modifier")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "code")
(PUNCT ",")
(ID "defmod")
(PUNCT "=")
(ID "code")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "@")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "defmod")
(PUNCT ".")
(ID "lower")
(PUNCT "(")
(PUNCT ")")
(PUNCT "==")
(ID "modifier")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_replace_encoding")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(ID "encoding")
(PUNCT ")")
(PUNCT "+")
(LIT "@")
(PUNCT "+")
(ID "defmod")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "localename")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_parse_localename")
(PUNCT "(")
(ID "localename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT " Parses the locale code for localename and returns the\n        result as tuple (language code, encoding).\n\n        The localename is normalized and passed through the locale\n        alias engine. A ValueError is raised in case the locale name\n        cannot be parsed.\n\n        The language code corresponds to RFC 1766.  code and encoding\n        can be None in case the values cannot be determined or are\n        unknown to this implementation.\n\n    ")
(NEWLINE)
(ID "code")
(PUNCT "=")
(ID "normalize")
(PUNCT "(")
(ID "localename")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "@")
(KEYWORD in)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT ",")
(ID "modifier")
(PUNCT "=")
(ID "code")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT "@")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "modifier")
(PUNCT "==")
(LIT "euro")
(KEYWORD and)
(LIT ".")
(KEYWORD not)
(KEYWORD in)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "code")
(PUNCT ",")
(LIT "iso-8859-15")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(LIT ".")
(KEYWORD in)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "tuple")
(PUNCT "(")
(ID "code")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(PUNCT "[")
(PUNCT ":")
(LIT 2)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "code")
(PUNCT "==")
(LIT "C")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "unknown locale: %s")
(PUNCT "%")
(ID "localename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_build_localename")
(PUNCT "(")
(ID "localetuple")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT " Builds a locale code from the given tuple (language code,\n        encoding).\n\n        No aliasing or normalizing takes place.\n\n    ")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "language")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(ID "localetuple")
(NEWLINE)
(KEYWORD if)
(ID "language")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "language")
(PUNCT "=")
(LIT "C")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "encoding")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "language")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "language")
(PUNCT "+")
(LIT ".")
(PUNCT "+")
(ID "encoding")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "TypeError")
(PUNCT ",")
(ID "ValueError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "Locale must be None, a string, or an iterable of two strings -- language code, encoding.")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "getdefaultlocale")
(PUNCT "(")
(ID "envvars")
(PUNCT "=")
(PUNCT "(")
(LIT "LC_ALL")
(PUNCT ",")
(LIT "LC_CTYPE")
(PUNCT ",")
(LIT "LANG")
(PUNCT ",")
(LIT "LANGUAGE")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT " Tries to determine the default locale settings and returns\n        them as tuple (language code, encoding).\n\n        According to POSIX, a program which has not called\n        setlocale(LC_ALL, \"\") runs using the portable 'C' locale.\n        Calling setlocale(LC_ALL, \"\") lets it use the default locale as\n        defined by the LANG variable. Since we don't want to interfere\n        with the current locale setting we thus emulate the behavior\n        in the way described above.\n\n        To maintain compatibility with other platforms, not only the\n        LANG variable is tested, but a list of variables given as\n        envvars parameter. The first found to be defined will be\n        used. envvars defaults to the search path used in GNU gettext;\n        it must always contain the variable name 'LANG'.\n\n        Except for the code 'C', the language code corresponds to RFC\n        1766.  code and encoding can be None in case the values cannot\n        be determined.\n\n    ")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "_locale")
(NEWLINE)
(ID "code")
(PUNCT ",")
(ID "encoding")
(PUNCT "=")
(ID "_locale")
(PUNCT ".")
(ID "_getdefaultlocale")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "ImportError")
(PUNCT ",")
(ID "AttributeError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(KEYWORD and)
(ID "code")
(KEYWORD and)
(ID "code")
(PUNCT "[")
(PUNCT ":")
(LIT 2)
(PUNCT "]")
(PUNCT "==")
(LIT "0x")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "windows_locale")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "int")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "code")
(PUNCT ",")
(ID "encoding")
(NEWLINE)
(DEDENT)
(KEYWORD import)
(ID "os")
(NEWLINE)
(ID "lookup")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "environ")
(PUNCT ".")
(ID "get")
(NEWLINE)
(KEYWORD for)
(ID "variable")
(KEYWORD in)
(ID "envvars")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "localename")
(PUNCT "=")
(ID "lookup")
(PUNCT "(")
(ID "variable")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "localename")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "variable")
(PUNCT "==")
(LIT "LANGUAGE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "localename")
(PUNCT "=")
(ID "localename")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ":")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "localename")
(PUNCT "=")
(LIT "C")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_parse_localename")
(PUNCT "(")
(ID "localename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getlocale")
(PUNCT "(")
(ID "category")
(PUNCT "=")
(ID "LC_CTYPE")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT " Returns the current setting for the given locale category as\n        tuple (language code, encoding).\n\n        category may be one of the LC_* value except LC_ALL. It\n        defaults to LC_CTYPE.\n\n        Except for the code 'C', the language code corresponds to RFC\n        1766.  code and encoding can be None in case the values cannot\n        be determined.\n\n    ")
(NEWLINE)
(ID "localename")
(PUNCT "=")
(ID "_setlocale")
(PUNCT "(")
(ID "category")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "category")
(PUNCT "==")
(ID "LC_ALL")
(KEYWORD and)
(LIT ";")
(KEYWORD in)
(ID "localename")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "category LC_ALL is not supported")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_parse_localename")
(PUNCT "(")
(ID "localename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setlocale")
(PUNCT "(")
(ID "category")
(PUNCT ",")
(ID "locale")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT " Set the locale for the given category.  The locale can be\n        a string, an iterable of two strings (language code and encoding),\n        or None.\n\n        Iterables are converted to strings using the locale aliasing\n        engine.  Locale strings are passed directly to the C lib.\n\n        category may be given as one of the LC_* values.\n\n    ")
(NEWLINE)
(KEYWORD if)
(ID "locale")
(KEYWORD and)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "locale")
(PUNCT ",")
(ID "_builtin_str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "locale")
(PUNCT "=")
(ID "normalize")
(PUNCT "(")
(ID "_build_localename")
(PUNCT "(")
(ID "locale")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_setlocale")
(PUNCT "(")
(ID "category")
(PUNCT ",")
(ID "locale")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "resetlocale")
(PUNCT "(")
(ID "category")
(PUNCT "=")
(ID "LC_ALL")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT " Sets the locale for category to the default setting.\n\n        The default setting is determined by calling\n        getdefaultlocale(). category defaults to LC_ALL.\n\n    ")
(NEWLINE)
(ID "_setlocale")
(PUNCT "(")
(ID "category")
(PUNCT ",")
(ID "_build_localename")
(PUNCT "(")
(ID "getdefaultlocale")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "win")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "getpreferredencoding")
(PUNCT "(")
(ID "do_setlocale")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the charset that the user is likely using.")
(NEWLINE)
(KEYWORD import)
(ID "_bootlocale")
(NEWLINE)
(KEYWORD return)
(ID "_bootlocale")
(PUNCT ".")
(ID "getpreferredencoding")
(PUNCT "(")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "CODESET")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "NameError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "getpreferredencoding")
(PUNCT "(")
(ID "do_setlocale")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the charset that the user is likely using,\n            by looking at environment variables.")
(NEWLINE)
(ID "res")
(PUNCT "=")
(ID "getdefaultlocale")
(PUNCT "(")
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "res")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "res")
(PUNCT "=")
(LIT "ascii")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "res")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "getpreferredencoding")
(PUNCT "(")
(ID "do_setlocale")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the charset that the user is likely using,\n            according to the system configuration.")
(NEWLINE)
(KEYWORD import)
(ID "_bootlocale")
(NEWLINE)
(KEYWORD if)
(ID "do_setlocale")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "oldloc")
(PUNCT "=")
(ID "setlocale")
(PUNCT "(")
(ID "LC_CTYPE")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setlocale")
(PUNCT "(")
(ID "LC_CTYPE")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Error")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "result")
(PUNCT "=")
(ID "_bootlocale")
(PUNCT ".")
(ID "getpreferredencoding")
(PUNCT "(")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "do_setlocale")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setlocale")
(PUNCT "(")
(ID "LC_CTYPE")
(PUNCT ",")
(ID "oldloc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "locale_encoding_alias")
(PUNCT "=")
(PUNCT "{")
(LIT "437")
(PUNCT ":")
(LIT "C")
(PUNCT ",")
(LIT "c")
(PUNCT ":")
(LIT "C")
(PUNCT ",")
(LIT "en")
(PUNCT ":")
(LIT "ISO8859-1")
(PUNCT ",")
(LIT "jis")
(PUNCT ":")
(LIT "JIS7")
(PUNCT ",")
(LIT "jis7")
(PUNCT ":")
(LIT "JIS7")
(PUNCT ",")
(LIT "ajec")
(PUNCT ":")
(LIT "eucJP")
(PUNCT ",")
(LIT "koi8c")
(PUNCT ":")
(LIT "KOI8-C")
(PUNCT ",")
(LIT "microsoftcp1251")
(PUNCT ":")
(LIT "CP1251")
(PUNCT ",")
(LIT "microsoftcp1255")
(PUNCT ":")
(LIT "CP1255")
(PUNCT ",")
(LIT "microsoftcp1256")
(PUNCT ":")
(LIT "CP1256")
(PUNCT ",")
(LIT "88591")
(PUNCT ":")
(LIT "ISO8859-1")
(PUNCT ",")
(LIT "88592")
(PUNCT ":")
(LIT "ISO8859-2")
(PUNCT ",")
(LIT "88595")
(PUNCT ":")
(LIT "ISO8859-5")
(PUNCT ",")
(LIT "885915")
(PUNCT ":")
(LIT "ISO8859-15")
(PUNCT ",")
(LIT "ascii")
(PUNCT ":")
(LIT "ISO8859-1")
(PUNCT ",")
(LIT "latin_1")
(PUNCT ":")
(LIT "ISO8859-1")
(PUNCT ",")
(LIT "iso8859_1")
(PUNCT ":")
(LIT "ISO8859-1")
(PUNCT ",")
(LIT "iso8859_10")
(PUNCT ":")
(LIT "ISO8859-10")
(PUNCT ",")
(LIT "iso8859_11")
(PUNCT ":")
(LIT "ISO8859-11")
(PUNCT ",")
(LIT "iso8859_13")
(PUNCT ":")
(LIT "ISO8859-13")
(PUNCT ",")
(LIT "iso8859_14")
(PUNCT ":")
(LIT "ISO8859-14")
(PUNCT ",")
(LIT "iso8859_15")
(PUNCT ":")
(LIT "ISO8859-15")
(PUNCT ",")
(LIT "iso8859_16")
(PUNCT ":")
(LIT "ISO8859-16")
(PUNCT ",")
(LIT "iso8859_2")
(PUNCT ":")
(LIT "ISO8859-2")
(PUNCT ",")
(LIT "iso8859_3")
(PUNCT ":")
(LIT "ISO8859-3")
(PUNCT ",")
(LIT "iso8859_4")
(PUNCT ":")
(LIT "ISO8859-4")
(PUNCT ",")
(LIT "iso8859_5")
(PUNCT ":")
(LIT "ISO8859-5")
(PUNCT ",")
(LIT "iso8859_6")
(PUNCT ":")
(LIT "ISO8859-6")
(PUNCT ",")
(LIT "iso8859_7")
(PUNCT ":")
(LIT "ISO8859-7")
(PUNCT ",")
(LIT "iso8859_8")
(PUNCT ":")
(LIT "ISO8859-8")
(PUNCT ",")
(LIT "iso8859_9")
(PUNCT ":")
(LIT "ISO8859-9")
(PUNCT ",")
(LIT "iso2022_jp")
(PUNCT ":")
(LIT "JIS7")
(PUNCT ",")
(LIT "shift_jis")
(PUNCT ":")
(LIT "SJIS")
(PUNCT ",")
(LIT "tactis")
(PUNCT ":")
(LIT "TACTIS")
(PUNCT ",")
(LIT "euc_jp")
(PUNCT ":")
(LIT "eucJP")
(PUNCT ",")
(LIT "euc_kr")
(PUNCT ":")
(LIT "eucKR")
(PUNCT ",")
(LIT "utf_8")
(PUNCT ":")
(LIT "UTF-8")
(PUNCT ",")
(LIT "koi8_r")
(PUNCT ":")
(LIT "KOI8-R")
(PUNCT ",")
(LIT "koi8_u")
(PUNCT ":")
(LIT "KOI8-U")
(PUNCT ",")
(LIT "cp1251")
(PUNCT ":")
(LIT "CP1251")
(PUNCT ",")
(LIT "cp1255")
(PUNCT ":")
(LIT "CP1255")
(PUNCT ",")
(LIT "cp1256")
(PUNCT ":")
(LIT "CP1256")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "k")
(PUNCT ",")
(ID "v")
(KEYWORD in)
(ID "sorted")
(PUNCT "(")
(ID "locale_encoding_alias")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "k")
(PUNCT "=")
(ID "k")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "_")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(ID "locale_encoding_alias")
(PUNCT ".")
(ID "setdefault")
(PUNCT "(")
(ID "k")
(PUNCT ",")
(ID "v")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "locale_alias")
(PUNCT "=")
(PUNCT "{")
(LIT "a3")
(PUNCT ":")
(LIT "az_AZ.KOI8-C")
(PUNCT ",")
(LIT "a3_az")
(PUNCT ":")
(LIT "az_AZ.KOI8-C")
(PUNCT ",")
(LIT "a3_az.koic")
(PUNCT ":")
(LIT "az_AZ.KOI8-C")
(PUNCT ",")
(LIT "aa_dj")
(PUNCT ":")
(LIT "aa_DJ.ISO8859-1")
(PUNCT ",")
(LIT "aa_er")
(PUNCT ":")
(LIT "aa_ER.UTF-8")
(PUNCT ",")
(LIT "aa_et")
(PUNCT ":")
(LIT "aa_ET.UTF-8")
(PUNCT ",")
(LIT "af")
(PUNCT ":")
(LIT "af_ZA.ISO8859-1")
(PUNCT ",")
(LIT "af_za")
(PUNCT ":")
(LIT "af_ZA.ISO8859-1")
(PUNCT ",")
(LIT "am")
(PUNCT ":")
(LIT "am_ET.UTF-8")
(PUNCT ",")
(LIT "am_et")
(PUNCT ":")
(LIT "am_ET.UTF-8")
(PUNCT ",")
(LIT "american")
(PUNCT ":")
(LIT "en_US.ISO8859-1")
(PUNCT ",")
(LIT "an_es")
(PUNCT ":")
(LIT "an_ES.ISO8859-15")
(PUNCT ",")
(LIT "ar")
(PUNCT ":")
(LIT "ar_AA.ISO8859-6")
(PUNCT ",")
(LIT "ar_aa")
(PUNCT ":")
(LIT "ar_AA.ISO8859-6")
(PUNCT ",")
(LIT "ar_ae")
(PUNCT ":")
(LIT "ar_AE.ISO8859-6")
(PUNCT ",")
(LIT "ar_bh")
(PUNCT ":")
(LIT "ar_BH.ISO8859-6")
(PUNCT ",")
(LIT "ar_dz")
(PUNCT ":")
(LIT "ar_DZ.ISO8859-6")
(PUNCT ",")
(LIT "ar_eg")
(PUNCT ":")
(LIT "ar_EG.ISO8859-6")
(PUNCT ",")
(LIT "ar_in")
(PUNCT ":")
(LIT "ar_IN.UTF-8")
(PUNCT ",")
(LIT "ar_iq")
(PUNCT ":")
(LIT "ar_IQ.ISO8859-6")
(PUNCT ",")
(LIT "ar_jo")
(PUNCT ":")
(LIT "ar_JO.ISO8859-6")
(PUNCT ",")
(LIT "ar_kw")
(PUNCT ":")
(LIT "ar_KW.ISO8859-6")
(PUNCT ",")
(LIT "ar_lb")
(PUNCT ":")
(LIT "ar_LB.ISO8859-6")
(PUNCT ",")
(LIT "ar_ly")
(PUNCT ":")
(LIT "ar_LY.ISO8859-6")
(PUNCT ",")
(LIT "ar_ma")
(PUNCT ":")
(LIT "ar_MA.ISO8859-6")
(PUNCT ",")
(LIT "ar_om")
(PUNCT ":")
(LIT "ar_OM.ISO8859-6")
(PUNCT ",")
(LIT "ar_qa")
(PUNCT ":")
(LIT "ar_QA.ISO8859-6")
(PUNCT ",")
(LIT "ar_sa")
(PUNCT ":")
(LIT "ar_SA.ISO8859-6")
(PUNCT ",")
(LIT "ar_sd")
(PUNCT ":")
(LIT "ar_SD.ISO8859-6")
(PUNCT ",")
(LIT "ar_sy")
(PUNCT ":")
(LIT "ar_SY.ISO8859-6")
(PUNCT ",")
(LIT "ar_tn")
(PUNCT ":")
(LIT "ar_TN.ISO8859-6")
(PUNCT ",")
(LIT "ar_ye")
(PUNCT ":")
(LIT "ar_YE.ISO8859-6")
(PUNCT ",")
(LIT "arabic")
(PUNCT ":")
(LIT "ar_AA.ISO8859-6")
(PUNCT ",")
(LIT "as")
(PUNCT ":")
(LIT "as_IN.UTF-8")
(PUNCT ",")
(LIT "as_in")
(PUNCT ":")
(LIT "as_IN.UTF-8")
(PUNCT ",")
(LIT "ast_es")
(PUNCT ":")
(LIT "ast_ES.ISO8859-15")
(PUNCT ",")
(LIT "ayc_pe")
(PUNCT ":")
(LIT "ayc_PE.UTF-8")
(PUNCT ",")
(LIT "az")
(PUNCT ":")
(LIT "az_AZ.ISO8859-9E")
(PUNCT ",")
(LIT "az_az")
(PUNCT ":")
(LIT "az_AZ.ISO8859-9E")
(PUNCT ",")
(LIT "az_az.iso88599e")
(PUNCT ":")
(LIT "az_AZ.ISO8859-9E")
(PUNCT ",")
(LIT "be")
(PUNCT ":")
(LIT "be_BY.CP1251")
(PUNCT ",")
(LIT "be@latin")
(PUNCT ":")
(LIT "be_BY.UTF-8@latin")
(PUNCT ",")
(LIT "be_bg.utf8")
(PUNCT ":")
(LIT "bg_BG.UTF-8")
(PUNCT ",")
(LIT "be_by")
(PUNCT ":")
(LIT "be_BY.CP1251")
(PUNCT ",")
(LIT "be_by@latin")
(PUNCT ":")
(LIT "be_BY.UTF-8@latin")
(PUNCT ",")
(LIT "bem_zm")
(PUNCT ":")
(LIT "bem_ZM.UTF-8")
(PUNCT ",")
(LIT "ber_dz")
(PUNCT ":")
(LIT "ber_DZ.UTF-8")
(PUNCT ",")
(LIT "ber_ma")
(PUNCT ":")
(LIT "ber_MA.UTF-8")
(PUNCT ",")
(LIT "bg")
(PUNCT ":")
(LIT "bg_BG.CP1251")
(PUNCT ",")
(LIT "bg_bg")
(PUNCT ":")
(LIT "bg_BG.CP1251")
(PUNCT ",")
(LIT "bho_in")
(PUNCT ":")
(LIT "bho_IN.UTF-8")
(PUNCT ",")
(LIT "bn_bd")
(PUNCT ":")
(LIT "bn_BD.UTF-8")
(PUNCT ",")
(LIT "bn_in")
(PUNCT ":")
(LIT "bn_IN.UTF-8")
(PUNCT ",")
(LIT "bo_cn")
(PUNCT ":")
(LIT "bo_CN.UTF-8")
(PUNCT ",")
(LIT "bo_in")
(PUNCT ":")
(LIT "bo_IN.UTF-8")
(PUNCT ",")
(LIT "bokmal")
(PUNCT ":")
(LIT "nb_NO.ISO8859-1")
(PUNCT ",")
(LIT "bokmål")
(PUNCT ":")
(LIT "nb_NO.ISO8859-1")
(PUNCT ",")
(LIT "br")
(PUNCT ":")
(LIT "br_FR.ISO8859-1")
(PUNCT ",")
(LIT "br_fr")
(PUNCT ":")
(LIT "br_FR.ISO8859-1")
(PUNCT ",")
(LIT "brx_in")
(PUNCT ":")
(LIT "brx_IN.UTF-8")
(PUNCT ",")
(LIT "bs")
(PUNCT ":")
(LIT "bs_BA.ISO8859-2")
(PUNCT ",")
(LIT "bs_ba")
(PUNCT ":")
(LIT "bs_BA.ISO8859-2")
(PUNCT ",")
(LIT "bulgarian")
(PUNCT ":")
(LIT "bg_BG.CP1251")
(PUNCT ",")
(LIT "byn_er")
(PUNCT ":")
(LIT "byn_ER.UTF-8")
(PUNCT ",")
(LIT "c")
(PUNCT ":")
(LIT "C")
(PUNCT ",")
(LIT "c-french")
(PUNCT ":")
(LIT "fr_CA.ISO8859-1")
(PUNCT ",")
(LIT "c.ascii")
(PUNCT ":")
(LIT "C")
(PUNCT ",")
(LIT "c.en")
(PUNCT ":")
(LIT "C")
(PUNCT ",")
(LIT "c.iso88591")
(PUNCT ":")
(LIT "en_US.ISO8859-1")
(PUNCT ",")
(LIT "c.utf8")
(PUNCT ":")
(LIT "en_US.UTF-8")
(PUNCT ",")
(LIT "c_c")
(PUNCT ":")
(LIT "C")
(PUNCT ",")
(LIT "c_c.c")
(PUNCT ":")
(LIT "C")
(PUNCT ",")
(LIT "ca")
(PUNCT ":")
(LIT "ca_ES.ISO8859-1")
(PUNCT ",")
(LIT "ca_ad")
(PUNCT ":")
(LIT "ca_AD.ISO8859-1")
(PUNCT ",")
(LIT "ca_es")
(PUNCT ":")
(LIT "ca_ES.ISO8859-1")
(PUNCT ",")
(LIT "ca_es@valencia")
(PUNCT ":")
(LIT "ca_ES.ISO8859-15@valencia")
(PUNCT ",")
(LIT "ca_fr")
(PUNCT ":")
(LIT "ca_FR.ISO8859-1")
(PUNCT ",")
(LIT "ca_it")
(PUNCT ":")
(LIT "ca_IT.ISO8859-1")
(PUNCT ",")
(LIT "catalan")
(PUNCT ":")
(LIT "ca_ES.ISO8859-1")
(PUNCT ",")
(LIT "cextend")
(PUNCT ":")
(LIT "en_US.ISO8859-1")
(PUNCT ",")
(LIT "chinese-s")
(PUNCT ":")
(LIT "zh_CN.eucCN")
(PUNCT ",")
(LIT "chinese-t")
(PUNCT ":")
(LIT "zh_TW.eucTW")
(PUNCT ",")
(LIT "crh_ua")
(PUNCT ":")
(LIT "crh_UA.UTF-8")
(PUNCT ",")
(LIT "croatian")
(PUNCT ":")
(LIT "hr_HR.ISO8859-2")
(PUNCT ",")
(LIT "cs")
(PUNCT ":")
(LIT "cs_CZ.ISO8859-2")
(PUNCT ",")
(LIT "cs_cs")
(PUNCT ":")
(LIT "cs_CZ.ISO8859-2")
(PUNCT ",")
(LIT "cs_cz")
(PUNCT ":")
(LIT "cs_CZ.ISO8859-2")
(PUNCT ",")
(LIT "csb_pl")
(PUNCT ":")
(LIT "csb_PL.UTF-8")
(PUNCT ",")
(LIT "cv_ru")
(PUNCT ":")
(LIT "cv_RU.UTF-8")
(PUNCT ",")
(LIT "cy")
(PUNCT ":")
(LIT "cy_GB.ISO8859-1")
(PUNCT ",")
(LIT "cy_gb")
(PUNCT ":")
(LIT "cy_GB.ISO8859-1")
(PUNCT ",")
(LIT "cz")
(PUNCT ":")
(LIT "cs_CZ.ISO8859-2")
(PUNCT ",")
(LIT "cz_cz")
(PUNCT ":")
(LIT "cs_CZ.ISO8859-2")
(PUNCT ",")
(LIT "czech")
(PUNCT ":")
(LIT "cs_CZ.ISO8859-2")
(PUNCT ",")
(LIT "da")
(PUNCT ":")
(LIT "da_DK.ISO8859-1")
(PUNCT ",")
(LIT "da_dk")
(PUNCT ":")
(LIT "da_DK.ISO8859-1")
(PUNCT ",")
(LIT "danish")
(PUNCT ":")
(LIT "da_DK.ISO8859-1")
(PUNCT ",")
(LIT "dansk")
(PUNCT ":")
(LIT "da_DK.ISO8859-1")
(PUNCT ",")
(LIT "de")
(PUNCT ":")
(LIT "de_DE.ISO8859-1")
(PUNCT ",")
(LIT "de_at")
(PUNCT ":")
(LIT "de_AT.ISO8859-1")
(PUNCT ",")
(LIT "de_be")
(PUNCT ":")
(LIT "de_BE.ISO8859-1")
(PUNCT ",")
(LIT "de_ch")
(PUNCT ":")
(LIT "de_CH.ISO8859-1")
(PUNCT ",")
(LIT "de_de")
(PUNCT ":")
(LIT "de_DE.ISO8859-1")
(PUNCT ",")
(LIT "de_li.utf8")
(PUNCT ":")
(LIT "de_LI.UTF-8")
(PUNCT ",")
(LIT "de_lu")
(PUNCT ":")
(LIT "de_LU.ISO8859-1")
(PUNCT ",")
(LIT "deutsch")
(PUNCT ":")
(LIT "de_DE.ISO8859-1")
(PUNCT ",")
(LIT "doi_in")
(PUNCT ":")
(LIT "doi_IN.UTF-8")
(PUNCT ",")
(LIT "dutch")
(PUNCT ":")
(LIT "nl_NL.ISO8859-1")
(PUNCT ",")
(LIT "dutch.iso88591")
(PUNCT ":")
(LIT "nl_BE.ISO8859-1")
(PUNCT ",")
(LIT "dv_mv")
(PUNCT ":")
(LIT "dv_MV.UTF-8")
(PUNCT ",")
(LIT "dz_bt")
(PUNCT ":")
(LIT "dz_BT.UTF-8")
(PUNCT ",")
(LIT "ee")
(PUNCT ":")
(LIT "ee_EE.ISO8859-4")
(PUNCT ",")
(LIT "ee_ee")
(PUNCT ":")
(LIT "ee_EE.ISO8859-4")
(PUNCT ",")
(LIT "eesti")
(PUNCT ":")
(LIT "et_EE.ISO8859-1")
(PUNCT ",")
(LIT "el")
(PUNCT ":")
(LIT "el_GR.ISO8859-7")
(PUNCT ",")
(LIT "el_cy")
(PUNCT ":")
(LIT "el_CY.ISO8859-7")
(PUNCT ",")
(LIT "el_gr")
(PUNCT ":")
(LIT "el_GR.ISO8859-7")
(PUNCT ",")
(LIT "el_gr@euro")
(PUNCT ":")
(LIT "el_GR.ISO8859-15")
(PUNCT ",")
(LIT "en")
(PUNCT ":")
(LIT "en_US.ISO8859-1")
(PUNCT ",")
(LIT "en_ag")
(PUNCT ":")
(LIT "en_AG.UTF-8")
(PUNCT ",")
(LIT "en_au")
(PUNCT ":")
(LIT "en_AU.ISO8859-1")
(PUNCT ",")
(LIT "en_be")
(PUNCT ":")
(LIT "en_BE.ISO8859-1")
(PUNCT ",")
(LIT "en_bw")
(PUNCT ":")
(LIT "en_BW.ISO8859-1")
(PUNCT ",")
(LIT "en_ca")
(PUNCT ":")
(LIT "en_CA.ISO8859-1")
(PUNCT ",")
(LIT "en_dk")
(PUNCT ":")
(LIT "en_DK.ISO8859-1")
(PUNCT ",")
(LIT "en_dl.utf8")
(PUNCT ":")
(LIT "en_DL.UTF-8")
(PUNCT ",")
(LIT "en_gb")
(PUNCT ":")
(LIT "en_GB.ISO8859-1")
(PUNCT ",")
(LIT "en_hk")
(PUNCT ":")
(LIT "en_HK.ISO8859-1")
(PUNCT ",")
(LIT "en_ie")
(PUNCT ":")
(LIT "en_IE.ISO8859-1")
(PUNCT ",")
(LIT "en_in")
(PUNCT ":")
(LIT "en_IN.ISO8859-1")
(PUNCT ",")
(LIT "en_ng")
(PUNCT ":")
(LIT "en_NG.UTF-8")
(PUNCT ",")
(LIT "en_nz")
(PUNCT ":")
(LIT "en_NZ.ISO8859-1")
(PUNCT ",")
(LIT "en_ph")
(PUNCT ":")
(LIT "en_PH.ISO8859-1")
(PUNCT ",")
(LIT "en_sg")
(PUNCT ":")
(LIT "en_SG.ISO8859-1")
(PUNCT ",")
(LIT "en_uk")
(PUNCT ":")
(LIT "en_GB.ISO8859-1")
(PUNCT ",")
(LIT "en_us")
(PUNCT ":")
(LIT "en_US.ISO8859-1")
(PUNCT ",")
(LIT "en_us@euro@euro")
(PUNCT ":")
(LIT "en_US.ISO8859-15")
(PUNCT ",")
(LIT "en_za")
(PUNCT ":")
(LIT "en_ZA.ISO8859-1")
(PUNCT ",")
(LIT "en_zm")
(PUNCT ":")
(LIT "en_ZM.UTF-8")
(PUNCT ",")
(LIT "en_zw")
(PUNCT ":")
(LIT "en_ZW.ISO8859-1")
(PUNCT ",")
(LIT "en_zw.utf8")
(PUNCT ":")
(LIT "en_ZS.UTF-8")
(PUNCT ",")
(LIT "eng_gb")
(PUNCT ":")
(LIT "en_GB.ISO8859-1")
(PUNCT ",")
(LIT "english")
(PUNCT ":")
(LIT "en_EN.ISO8859-1")
(PUNCT ",")
(LIT "english_uk")
(PUNCT ":")
(LIT "en_GB.ISO8859-1")
(PUNCT ",")
(LIT "english_united-states")
(PUNCT ":")
(LIT "en_US.ISO8859-1")
(PUNCT ",")
(LIT "english_united-states.437")
(PUNCT ":")
(LIT "C")
(PUNCT ",")
(LIT "english_us")
(PUNCT ":")
(LIT "en_US.ISO8859-1")
(PUNCT ",")
(LIT "eo")
(PUNCT ":")
(LIT "eo_XX.ISO8859-3")
(PUNCT ",")
(LIT "eo.utf8")
(PUNCT ":")
(LIT "eo.UTF-8")
(PUNCT ",")
(LIT "eo_eo")
(PUNCT ":")
(LIT "eo_EO.ISO8859-3")
(PUNCT ",")
(LIT "eo_us.utf8")
(PUNCT ":")
(LIT "eo_US.UTF-8")
(PUNCT ",")
(LIT "eo_xx")
(PUNCT ":")
(LIT "eo_XX.ISO8859-3")
(PUNCT ",")
(LIT "es")
(PUNCT ":")
(LIT "es_ES.ISO8859-1")
(PUNCT ",")
(LIT "es_ar")
(PUNCT ":")
(LIT "es_AR.ISO8859-1")
(PUNCT ",")
(LIT "es_bo")
(PUNCT ":")
(LIT "es_BO.ISO8859-1")
(PUNCT ",")
(LIT "es_cl")
(PUNCT ":")
(LIT "es_CL.ISO8859-1")
(PUNCT ",")
(LIT "es_co")
(PUNCT ":")
(LIT "es_CO.ISO8859-1")
(PUNCT ",")
(LIT "es_cr")
(PUNCT ":")
(LIT "es_CR.ISO8859-1")
(PUNCT ",")
(LIT "es_cu")
(PUNCT ":")
(LIT "es_CU.UTF-8")
(PUNCT ",")
(LIT "es_do")
(PUNCT ":")
(LIT "es_DO.ISO8859-1")
(PUNCT ",")
(LIT "es_ec")
(PUNCT ":")
(LIT "es_EC.ISO8859-1")
(PUNCT ",")
(LIT "es_es")
(PUNCT ":")
(LIT "es_ES.ISO8859-1")
(PUNCT ",")
(LIT "es_gt")
(PUNCT ":")
(LIT "es_GT.ISO8859-1")
(PUNCT ",")
(LIT "es_hn")
(PUNCT ":")
(LIT "es_HN.ISO8859-1")
(PUNCT ",")
(LIT "es_mx")
(PUNCT ":")
(LIT "es_MX.ISO8859-1")
(PUNCT ",")
(LIT "es_ni")
(PUNCT ":")
(LIT "es_NI.ISO8859-1")
(PUNCT ",")
(LIT "es_pa")
(PUNCT ":")
(LIT "es_PA.ISO8859-1")
(PUNCT ",")
(LIT "es_pe")
(PUNCT ":")
(LIT "es_PE.ISO8859-1")
(PUNCT ",")
(LIT "es_pr")
(PUNCT ":")
(LIT "es_PR.ISO8859-1")
(PUNCT ",")
(LIT "es_py")
(PUNCT ":")
(LIT "es_PY.ISO8859-1")
(PUNCT ",")
(LIT "es_sv")
(PUNCT ":")
(LIT "es_SV.ISO8859-1")
(PUNCT ",")
(LIT "es_us")
(PUNCT ":")
(LIT "es_US.ISO8859-1")
(PUNCT ",")
(LIT "es_uy")
(PUNCT ":")
(LIT "es_UY.ISO8859-1")
(PUNCT ",")
(LIT "es_ve")
(PUNCT ":")
(LIT "es_VE.ISO8859-1")
(PUNCT ",")
(LIT "estonian")
(PUNCT ":")
(LIT "et_EE.ISO8859-1")
(PUNCT ",")
(LIT "et")
(PUNCT ":")
(LIT "et_EE.ISO8859-15")
(PUNCT ",")
(LIT "et_ee")
(PUNCT ":")
(LIT "et_EE.ISO8859-15")
(PUNCT ",")
(LIT "eu")
(PUNCT ":")
(LIT "eu_ES.ISO8859-1")
(PUNCT ",")
(LIT "eu_es")
(PUNCT ":")
(LIT "eu_ES.ISO8859-1")
(PUNCT ",")
(LIT "eu_fr")
(PUNCT ":")
(LIT "eu_FR.ISO8859-1")
(PUNCT ",")
(LIT "fa")
(PUNCT ":")
(LIT "fa_IR.UTF-8")
(PUNCT ",")
(LIT "fa_ir")
(PUNCT ":")
(LIT "fa_IR.UTF-8")
(PUNCT ",")
(LIT "fa_ir.isiri3342")
(PUNCT ":")
(LIT "fa_IR.ISIRI-3342")
(PUNCT ",")
(LIT "ff_sn")
(PUNCT ":")
(LIT "ff_SN.UTF-8")
(PUNCT ",")
(LIT "fi")
(PUNCT ":")
(LIT "fi_FI.ISO8859-15")
(PUNCT ",")
(LIT "fi_fi")
(PUNCT ":")
(LIT "fi_FI.ISO8859-15")
(PUNCT ",")
(LIT "fil_ph")
(PUNCT ":")
(LIT "fil_PH.UTF-8")
(PUNCT ",")
(LIT "finnish")
(PUNCT ":")
(LIT "fi_FI.ISO8859-1")
(PUNCT ",")
(LIT "fo")
(PUNCT ":")
(LIT "fo_FO.ISO8859-1")
(PUNCT ",")
(LIT "fo_fo")
(PUNCT ":")
(LIT "fo_FO.ISO8859-1")
(PUNCT ",")
(LIT "fr")
(PUNCT ":")
(LIT "fr_FR.ISO8859-1")
(PUNCT ",")
(LIT "fr_be")
(PUNCT ":")
(LIT "fr_BE.ISO8859-1")
(PUNCT ",")
(LIT "fr_ca")
(PUNCT ":")
(LIT "fr_CA.ISO8859-1")
(PUNCT ",")
(LIT "fr_ch")
(PUNCT ":")
(LIT "fr_CH.ISO8859-1")
(PUNCT ",")
(LIT "fr_fr")
(PUNCT ":")
(LIT "fr_FR.ISO8859-1")
(PUNCT ",")
(LIT "fr_lu")
(PUNCT ":")
(LIT "fr_LU.ISO8859-1")
(PUNCT ",")
(LIT "français")
(PUNCT ":")
(LIT "fr_FR.ISO8859-1")
(PUNCT ",")
(LIT "fre_fr")
(PUNCT ":")
(LIT "fr_FR.ISO8859-1")
(PUNCT ",")
(LIT "french")
(PUNCT ":")
(LIT "fr_FR.ISO8859-1")
(PUNCT ",")
(LIT "french.iso88591")
(PUNCT ":")
(LIT "fr_CH.ISO8859-1")
(PUNCT ",")
(LIT "french_france")
(PUNCT ":")
(LIT "fr_FR.ISO8859-1")
(PUNCT ",")
(LIT "fur_it")
(PUNCT ":")
(LIT "fur_IT.UTF-8")
(PUNCT ",")
(LIT "fy_de")
(PUNCT ":")
(LIT "fy_DE.UTF-8")
(PUNCT ",")
(LIT "fy_nl")
(PUNCT ":")
(LIT "fy_NL.UTF-8")
(PUNCT ",")
(LIT "ga")
(PUNCT ":")
(LIT "ga_IE.ISO8859-1")
(PUNCT ",")
(LIT "ga_ie")
(PUNCT ":")
(LIT "ga_IE.ISO8859-1")
(PUNCT ",")
(LIT "galego")
(PUNCT ":")
(LIT "gl_ES.ISO8859-1")
(PUNCT ",")
(LIT "galician")
(PUNCT ":")
(LIT "gl_ES.ISO8859-1")
(PUNCT ",")
(LIT "gd")
(PUNCT ":")
(LIT "gd_GB.ISO8859-1")
(PUNCT ",")
(LIT "gd_gb")
(PUNCT ":")
(LIT "gd_GB.ISO8859-1")
(PUNCT ",")
(LIT "ger_de")
(PUNCT ":")
(LIT "de_DE.ISO8859-1")
(PUNCT ",")
(LIT "german")
(PUNCT ":")
(LIT "de_DE.ISO8859-1")
(PUNCT ",")
(LIT "german.iso88591")
(PUNCT ":")
(LIT "de_CH.ISO8859-1")
(PUNCT ",")
(LIT "german_germany")
(PUNCT ":")
(LIT "de_DE.ISO8859-1")
(PUNCT ",")
(LIT "gez_er")
(PUNCT ":")
(LIT "gez_ER.UTF-8")
(PUNCT ",")
(LIT "gez_et")
(PUNCT ":")
(LIT "gez_ET.UTF-8")
(PUNCT ",")
(LIT "gl")
(PUNCT ":")
(LIT "gl_ES.ISO8859-1")
(PUNCT ",")
(LIT "gl_es")
(PUNCT ":")
(LIT "gl_ES.ISO8859-1")
(PUNCT ",")
(LIT "greek")
(PUNCT ":")
(LIT "el_GR.ISO8859-7")
(PUNCT ",")
(LIT "gu_in")
(PUNCT ":")
(LIT "gu_IN.UTF-8")
(PUNCT ",")
(LIT "gv")
(PUNCT ":")
(LIT "gv_GB.ISO8859-1")
(PUNCT ",")
(LIT "gv_gb")
(PUNCT ":")
(LIT "gv_GB.ISO8859-1")
(PUNCT ",")
(LIT "ha_ng")
(PUNCT ":")
(LIT "ha_NG.UTF-8")
(PUNCT ",")
(LIT "he")
(PUNCT ":")
(LIT "he_IL.ISO8859-8")
(PUNCT ",")
(LIT "he_il")
(PUNCT ":")
(LIT "he_IL.ISO8859-8")
(PUNCT ",")
(LIT "hebrew")
(PUNCT ":")
(LIT "he_IL.ISO8859-8")
(PUNCT ",")
(LIT "hi")
(PUNCT ":")
(LIT "hi_IN.ISCII-DEV")
(PUNCT ",")
(LIT "hi_in")
(PUNCT ":")
(LIT "hi_IN.ISCII-DEV")
(PUNCT ",")
(LIT "hi_in.isciidev")
(PUNCT ":")
(LIT "hi_IN.ISCII-DEV")
(PUNCT ",")
(LIT "hne")
(PUNCT ":")
(LIT "hne_IN.UTF-8")
(PUNCT ",")
(LIT "hne_in")
(PUNCT ":")
(LIT "hne_IN.UTF-8")
(PUNCT ",")
(LIT "hr")
(PUNCT ":")
(LIT "hr_HR.ISO8859-2")
(PUNCT ",")
(LIT "hr_hr")
(PUNCT ":")
(LIT "hr_HR.ISO8859-2")
(PUNCT ",")
(LIT "hrvatski")
(PUNCT ":")
(LIT "hr_HR.ISO8859-2")
(PUNCT ",")
(LIT "hsb_de")
(PUNCT ":")
(LIT "hsb_DE.ISO8859-2")
(PUNCT ",")
(LIT "ht_ht")
(PUNCT ":")
(LIT "ht_HT.UTF-8")
(PUNCT ",")
(LIT "hu")
(PUNCT ":")
(LIT "hu_HU.ISO8859-2")
(PUNCT ",")
(LIT "hu_hu")
(PUNCT ":")
(LIT "hu_HU.ISO8859-2")
(PUNCT ",")
(LIT "hungarian")
(PUNCT ":")
(LIT "hu_HU.ISO8859-2")
(PUNCT ",")
(LIT "hy_am")
(PUNCT ":")
(LIT "hy_AM.UTF-8")
(PUNCT ",")
(LIT "hy_am.armscii8")
(PUNCT ":")
(LIT "hy_AM.ARMSCII_8")
(PUNCT ",")
(LIT "ia")
(PUNCT ":")
(LIT "ia.UTF-8")
(PUNCT ",")
(LIT "ia_fr")
(PUNCT ":")
(LIT "ia_FR.UTF-8")
(PUNCT ",")
(LIT "icelandic")
(PUNCT ":")
(LIT "is_IS.ISO8859-1")
(PUNCT ",")
(LIT "id")
(PUNCT ":")
(LIT "id_ID.ISO8859-1")
(PUNCT ",")
(LIT "id_id")
(PUNCT ":")
(LIT "id_ID.ISO8859-1")
(PUNCT ",")
(LIT "ig_ng")
(PUNCT ":")
(LIT "ig_NG.UTF-8")
(PUNCT ",")
(LIT "ik_ca")
(PUNCT ":")
(LIT "ik_CA.UTF-8")
(PUNCT ",")
(LIT "in")
(PUNCT ":")
(LIT "id_ID.ISO8859-1")
(PUNCT ",")
(LIT "in_id")
(PUNCT ":")
(LIT "id_ID.ISO8859-1")
(PUNCT ",")
(LIT "is")
(PUNCT ":")
(LIT "is_IS.ISO8859-1")
(PUNCT ",")
(LIT "is_is")
(PUNCT ":")
(LIT "is_IS.ISO8859-1")
(PUNCT ",")
(LIT "iso-8859-1")
(PUNCT ":")
(LIT "en_US.ISO8859-1")
(PUNCT ",")
(LIT "iso-8859-15")
(PUNCT ":")
(LIT "en_US.ISO8859-15")
(PUNCT ",")
(LIT "iso8859-1")
(PUNCT ":")
(LIT "en_US.ISO8859-1")
(PUNCT ",")
(LIT "iso8859-15")
(PUNCT ":")
(LIT "en_US.ISO8859-15")
(PUNCT ",")
(LIT "iso_8859_1")
(PUNCT ":")
(LIT "en_US.ISO8859-1")
(PUNCT ",")
(LIT "iso_8859_15")
(PUNCT ":")
(LIT "en_US.ISO8859-15")
(PUNCT ",")
(LIT "it")
(PUNCT ":")
(LIT "it_IT.ISO8859-1")
(PUNCT ",")
(LIT "it_ch")
(PUNCT ":")
(LIT "it_CH.ISO8859-1")
(PUNCT ",")
(LIT "it_it")
(PUNCT ":")
(LIT "it_IT.ISO8859-1")
(PUNCT ",")
(LIT "italian")
(PUNCT ":")
(LIT "it_IT.ISO8859-1")
(PUNCT ",")
(LIT "iu")
(PUNCT ":")
(LIT "iu_CA.NUNACOM-8")
(PUNCT ",")
(LIT "iu_ca")
(PUNCT ":")
(LIT "iu_CA.NUNACOM-8")
(PUNCT ",")
(LIT "iu_ca.nunacom8")
(PUNCT ":")
(LIT "iu_CA.NUNACOM-8")
(PUNCT ",")
(LIT "iw")
(PUNCT ":")
(LIT "he_IL.ISO8859-8")
(PUNCT ",")
(LIT "iw_il")
(PUNCT ":")
(LIT "he_IL.ISO8859-8")
(PUNCT ",")
(LIT "iw_il.utf8")
(PUNCT ":")
(LIT "iw_IL.UTF-8")
(PUNCT ",")
(LIT "ja")
(PUNCT ":")
(LIT "ja_JP.eucJP")
(PUNCT ",")
(LIT "ja_jp")
(PUNCT ":")
(LIT "ja_JP.eucJP")
(PUNCT ",")
(LIT "ja_jp.euc")
(PUNCT ":")
(LIT "ja_JP.eucJP")
(PUNCT ",")
(LIT "ja_jp.mscode")
(PUNCT ":")
(LIT "ja_JP.SJIS")
(PUNCT ",")
(LIT "ja_jp.pck")
(PUNCT ":")
(LIT "ja_JP.SJIS")
(PUNCT ",")
(LIT "japan")
(PUNCT ":")
(LIT "ja_JP.eucJP")
(PUNCT ",")
(LIT "japanese")
(PUNCT ":")
(LIT "ja_JP.eucJP")
(PUNCT ",")
(LIT "japanese-euc")
(PUNCT ":")
(LIT "ja_JP.eucJP")
(PUNCT ",")
(LIT "japanese.euc")
(PUNCT ":")
(LIT "ja_JP.eucJP")
(PUNCT ",")
(LIT "jp_jp")
(PUNCT ":")
(LIT "ja_JP.eucJP")
(PUNCT ",")
(LIT "ka")
(PUNCT ":")
(LIT "ka_GE.GEORGIAN-ACADEMY")
(PUNCT ",")
(LIT "ka_ge")
(PUNCT ":")
(LIT "ka_GE.GEORGIAN-ACADEMY")
(PUNCT ",")
(LIT "ka_ge.georgianacademy")
(PUNCT ":")
(LIT "ka_GE.GEORGIAN-ACADEMY")
(PUNCT ",")
(LIT "ka_ge.georgianps")
(PUNCT ":")
(LIT "ka_GE.GEORGIAN-PS")
(PUNCT ",")
(LIT "ka_ge.georgianrs")
(PUNCT ":")
(LIT "ka_GE.GEORGIAN-ACADEMY")
(PUNCT ",")
(LIT "kk_kz")
(PUNCT ":")
(LIT "kk_KZ.RK1048")
(PUNCT ",")
(LIT "kl")
(PUNCT ":")
(LIT "kl_GL.ISO8859-1")
(PUNCT ",")
(LIT "kl_gl")
(PUNCT ":")
(LIT "kl_GL.ISO8859-1")
(PUNCT ",")
(LIT "km_kh")
(PUNCT ":")
(LIT "km_KH.UTF-8")
(PUNCT ",")
(LIT "kn")
(PUNCT ":")
(LIT "kn_IN.UTF-8")
(PUNCT ",")
(LIT "kn_in")
(PUNCT ":")
(LIT "kn_IN.UTF-8")
(PUNCT ",")
(LIT "ko")
(PUNCT ":")
(LIT "ko_KR.eucKR")
(PUNCT ",")
(LIT "ko_kr")
(PUNCT ":")
(LIT "ko_KR.eucKR")
(PUNCT ",")
(LIT "ko_kr.euc")
(PUNCT ":")
(LIT "ko_KR.eucKR")
(PUNCT ",")
(LIT "kok_in")
(PUNCT ":")
(LIT "kok_IN.UTF-8")
(PUNCT ",")
(LIT "korean")
(PUNCT ":")
(LIT "ko_KR.eucKR")
(PUNCT ",")
(LIT "korean.euc")
(PUNCT ":")
(LIT "ko_KR.eucKR")
(PUNCT ",")
(LIT "ks")
(PUNCT ":")
(LIT "ks_IN.UTF-8")
(PUNCT ",")
(LIT "ks_in")
(PUNCT ":")
(LIT "ks_IN.UTF-8")
(PUNCT ",")
(LIT "ks_in@devanagari.utf8")
(PUNCT ":")
(LIT "ks_IN.UTF-8@devanagari")
(PUNCT ",")
(LIT "ku_tr")
(PUNCT ":")
(LIT "ku_TR.ISO8859-9")
(PUNCT ",")
(LIT "kw")
(PUNCT ":")
(LIT "kw_GB.ISO8859-1")
(PUNCT ",")
(LIT "kw_gb")
(PUNCT ":")
(LIT "kw_GB.ISO8859-1")
(PUNCT ",")
(LIT "ky")
(PUNCT ":")
(LIT "ky_KG.UTF-8")
(PUNCT ",")
(LIT "ky_kg")
(PUNCT ":")
(LIT "ky_KG.UTF-8")
(PUNCT ",")
(LIT "lb_lu")
(PUNCT ":")
(LIT "lb_LU.UTF-8")
(PUNCT ",")
(LIT "lg_ug")
(PUNCT ":")
(LIT "lg_UG.ISO8859-10")
(PUNCT ",")
(LIT "li_be")
(PUNCT ":")
(LIT "li_BE.UTF-8")
(PUNCT ",")
(LIT "li_nl")
(PUNCT ":")
(LIT "li_NL.UTF-8")
(PUNCT ",")
(LIT "lij_it")
(PUNCT ":")
(LIT "lij_IT.UTF-8")
(PUNCT ",")
(LIT "lithuanian")
(PUNCT ":")
(LIT "lt_LT.ISO8859-13")
(PUNCT ",")
(LIT "lo")
(PUNCT ":")
(LIT "lo_LA.MULELAO-1")
(PUNCT ",")
(LIT "lo_la")
(PUNCT ":")
(LIT "lo_LA.MULELAO-1")
(PUNCT ",")
(LIT "lo_la.cp1133")
(PUNCT ":")
(LIT "lo_LA.IBM-CP1133")
(PUNCT ",")
(LIT "lo_la.ibmcp1133")
(PUNCT ":")
(LIT "lo_LA.IBM-CP1133")
(PUNCT ",")
(LIT "lo_la.mulelao1")
(PUNCT ":")
(LIT "lo_LA.MULELAO-1")
(PUNCT ",")
(LIT "lt")
(PUNCT ":")
(LIT "lt_LT.ISO8859-13")
(PUNCT ",")
(LIT "lt_lt")
(PUNCT ":")
(LIT "lt_LT.ISO8859-13")
(PUNCT ",")
(LIT "lv")
(PUNCT ":")
(LIT "lv_LV.ISO8859-13")
(PUNCT ",")
(LIT "lv_lv")
(PUNCT ":")
(LIT "lv_LV.ISO8859-13")
(PUNCT ",")
(LIT "mag_in")
(PUNCT ":")
(LIT "mag_IN.UTF-8")
(PUNCT ",")
(LIT "mai")
(PUNCT ":")
(LIT "mai_IN.UTF-8")
(PUNCT ",")
(LIT "mai_in")
(PUNCT ":")
(LIT "mai_IN.UTF-8")
(PUNCT ",")
(LIT "mg_mg")
(PUNCT ":")
(LIT "mg_MG.ISO8859-15")
(PUNCT ",")
(LIT "mhr_ru")
(PUNCT ":")
(LIT "mhr_RU.UTF-8")
(PUNCT ",")
(LIT "mi")
(PUNCT ":")
(LIT "mi_NZ.ISO8859-1")
(PUNCT ",")
(LIT "mi_nz")
(PUNCT ":")
(LIT "mi_NZ.ISO8859-1")
(PUNCT ",")
(LIT "mk")
(PUNCT ":")
(LIT "mk_MK.ISO8859-5")
(PUNCT ",")
(LIT "mk_mk")
(PUNCT ":")
(LIT "mk_MK.ISO8859-5")
(PUNCT ",")
(LIT "ml")
(PUNCT ":")
(LIT "ml_IN.UTF-8")
(PUNCT ",")
(LIT "ml_in")
(PUNCT ":")
(LIT "ml_IN.UTF-8")
(PUNCT ",")
(LIT "mn_mn")
(PUNCT ":")
(LIT "mn_MN.UTF-8")
(PUNCT ",")
(LIT "mni_in")
(PUNCT ":")
(LIT "mni_IN.UTF-8")
(PUNCT ",")
(LIT "mr")
(PUNCT ":")
(LIT "mr_IN.UTF-8")
(PUNCT ",")
(LIT "mr_in")
(PUNCT ":")
(LIT "mr_IN.UTF-8")
(PUNCT ",")
(LIT "ms")
(PUNCT ":")
(LIT "ms_MY.ISO8859-1")
(PUNCT ",")
(LIT "ms_my")
(PUNCT ":")
(LIT "ms_MY.ISO8859-1")
(PUNCT ",")
(LIT "mt")
(PUNCT ":")
(LIT "mt_MT.ISO8859-3")
(PUNCT ",")
(LIT "mt_mt")
(PUNCT ":")
(LIT "mt_MT.ISO8859-3")
(PUNCT ",")
(LIT "my_mm")
(PUNCT ":")
(LIT "my_MM.UTF-8")
(PUNCT ",")
(LIT "nan_tw@latin")
(PUNCT ":")
(LIT "nan_TW.UTF-8@latin")
(PUNCT ",")
(LIT "nb")
(PUNCT ":")
(LIT "nb_NO.ISO8859-1")
(PUNCT ",")
(LIT "nb_no")
(PUNCT ":")
(LIT "nb_NO.ISO8859-1")
(PUNCT ",")
(LIT "nds_de")
(PUNCT ":")
(LIT "nds_DE.UTF-8")
(PUNCT ",")
(LIT "nds_nl")
(PUNCT ":")
(LIT "nds_NL.UTF-8")
(PUNCT ",")
(LIT "ne_np")
(PUNCT ":")
(LIT "ne_NP.UTF-8")
(PUNCT ",")
(LIT "nhn_mx")
(PUNCT ":")
(LIT "nhn_MX.UTF-8")
(PUNCT ",")
(LIT "niu_nu")
(PUNCT ":")
(LIT "niu_NU.UTF-8")
(PUNCT ",")
(LIT "niu_nz")
(PUNCT ":")
(LIT "niu_NZ.UTF-8")
(PUNCT ",")
(LIT "nl")
(PUNCT ":")
(LIT "nl_NL.ISO8859-1")
(PUNCT ",")
(LIT "nl_aw")
(PUNCT ":")
(LIT "nl_AW.UTF-8")
(PUNCT ",")
(LIT "nl_be")
(PUNCT ":")
(LIT "nl_BE.ISO8859-1")
(PUNCT ",")
(LIT "nl_nl")
(PUNCT ":")
(LIT "nl_NL.ISO8859-1")
(PUNCT ",")
(LIT "nn")
(PUNCT ":")
(LIT "nn_NO.ISO8859-1")
(PUNCT ",")
(LIT "nn_no")
(PUNCT ":")
(LIT "nn_NO.ISO8859-1")
(PUNCT ",")
(LIT "no")
(PUNCT ":")
(LIT "no_NO.ISO8859-1")
(PUNCT ",")
(LIT "no@nynorsk")
(PUNCT ":")
(LIT "ny_NO.ISO8859-1")
(PUNCT ",")
(LIT "no_no")
(PUNCT ":")
(LIT "no_NO.ISO8859-1")
(PUNCT ",")
(LIT "no_no.iso88591@bokmal")
(PUNCT ":")
(LIT "no_NO.ISO8859-1")
(PUNCT ",")
(LIT "no_no.iso88591@nynorsk")
(PUNCT ":")
(LIT "no_NO.ISO8859-1")
(PUNCT ",")
(LIT "norwegian")
(PUNCT ":")
(LIT "no_NO.ISO8859-1")
(PUNCT ",")
(LIT "nr")
(PUNCT ":")
(LIT "nr_ZA.ISO8859-1")
(PUNCT ",")
(LIT "nr_za")
(PUNCT ":")
(LIT "nr_ZA.ISO8859-1")
(PUNCT ",")
(LIT "nso")
(PUNCT ":")
(LIT "nso_ZA.ISO8859-15")
(PUNCT ",")
(LIT "nso_za")
(PUNCT ":")
(LIT "nso_ZA.ISO8859-15")
(PUNCT ",")
(LIT "ny")
(PUNCT ":")
(LIT "ny_NO.ISO8859-1")
(PUNCT ",")
(LIT "ny_no")
(PUNCT ":")
(LIT "ny_NO.ISO8859-1")
(PUNCT ",")
(LIT "nynorsk")
(PUNCT ":")
(LIT "nn_NO.ISO8859-1")
(PUNCT ",")
(LIT "oc")
(PUNCT ":")
(LIT "oc_FR.ISO8859-1")
(PUNCT ",")
(LIT "oc_fr")
(PUNCT ":")
(LIT "oc_FR.ISO8859-1")
(PUNCT ",")
(LIT "om_et")
(PUNCT ":")
(LIT "om_ET.UTF-8")
(PUNCT ",")
(LIT "om_ke")
(PUNCT ":")
(LIT "om_KE.ISO8859-1")
(PUNCT ",")
(LIT "or")
(PUNCT ":")
(LIT "or_IN.UTF-8")
(PUNCT ",")
(LIT "or_in")
(PUNCT ":")
(LIT "or_IN.UTF-8")
(PUNCT ",")
(LIT "os_ru")
(PUNCT ":")
(LIT "os_RU.UTF-8")
(PUNCT ",")
(LIT "pa")
(PUNCT ":")
(LIT "pa_IN.UTF-8")
(PUNCT ",")
(LIT "pa_in")
(PUNCT ":")
(LIT "pa_IN.UTF-8")
(PUNCT ",")
(LIT "pa_pk")
(PUNCT ":")
(LIT "pa_PK.UTF-8")
(PUNCT ",")
(LIT "pap_an")
(PUNCT ":")
(LIT "pap_AN.UTF-8")
(PUNCT ",")
(LIT "pd")
(PUNCT ":")
(LIT "pd_US.ISO8859-1")
(PUNCT ",")
(LIT "pd_de")
(PUNCT ":")
(LIT "pd_DE.ISO8859-1")
(PUNCT ",")
(LIT "pd_us")
(PUNCT ":")
(LIT "pd_US.ISO8859-1")
(PUNCT ",")
(LIT "ph")
(PUNCT ":")
(LIT "ph_PH.ISO8859-1")
(PUNCT ",")
(LIT "ph_ph")
(PUNCT ":")
(LIT "ph_PH.ISO8859-1")
(PUNCT ",")
(LIT "pl")
(PUNCT ":")
(LIT "pl_PL.ISO8859-2")
(PUNCT ",")
(LIT "pl_pl")
(PUNCT ":")
(LIT "pl_PL.ISO8859-2")
(PUNCT ",")
(LIT "polish")
(PUNCT ":")
(LIT "pl_PL.ISO8859-2")
(PUNCT ",")
(LIT "portuguese")
(PUNCT ":")
(LIT "pt_PT.ISO8859-1")
(PUNCT ",")
(LIT "portuguese_brazil")
(PUNCT ":")
(LIT "pt_BR.ISO8859-1")
(PUNCT ",")
(LIT "posix")
(PUNCT ":")
(LIT "C")
(PUNCT ",")
(LIT "posix-utf2")
(PUNCT ":")
(LIT "C")
(PUNCT ",")
(LIT "pp")
(PUNCT ":")
(LIT "pp_AN.ISO8859-1")
(PUNCT ",")
(LIT "pp_an")
(PUNCT ":")
(LIT "pp_AN.ISO8859-1")
(PUNCT ",")
(LIT "ps_af")
(PUNCT ":")
(LIT "ps_AF.UTF-8")
(PUNCT ",")
(LIT "pt")
(PUNCT ":")
(LIT "pt_PT.ISO8859-1")
(PUNCT ",")
(LIT "pt_br")
(PUNCT ":")
(LIT "pt_BR.ISO8859-1")
(PUNCT ",")
(LIT "pt_pt")
(PUNCT ":")
(LIT "pt_PT.ISO8859-1")
(PUNCT ",")
(LIT "ro")
(PUNCT ":")
(LIT "ro_RO.ISO8859-2")
(PUNCT ",")
(LIT "ro_ro")
(PUNCT ":")
(LIT "ro_RO.ISO8859-2")
(PUNCT ",")
(LIT "romanian")
(PUNCT ":")
(LIT "ro_RO.ISO8859-2")
(PUNCT ",")
(LIT "ru")
(PUNCT ":")
(LIT "ru_RU.UTF-8")
(PUNCT ",")
(LIT "ru_ru")
(PUNCT ":")
(LIT "ru_RU.UTF-8")
(PUNCT ",")
(LIT "ru_ua")
(PUNCT ":")
(LIT "ru_UA.KOI8-U")
(PUNCT ",")
(LIT "rumanian")
(PUNCT ":")
(LIT "ro_RO.ISO8859-2")
(PUNCT ",")
(LIT "russian")
(PUNCT ":")
(LIT "ru_RU.ISO8859-5")
(PUNCT ",")
(LIT "rw")
(PUNCT ":")
(LIT "rw_RW.ISO8859-1")
(PUNCT ",")
(LIT "rw_rw")
(PUNCT ":")
(LIT "rw_RW.ISO8859-1")
(PUNCT ",")
(LIT "sa_in")
(PUNCT ":")
(LIT "sa_IN.UTF-8")
(PUNCT ",")
(LIT "sat_in")
(PUNCT ":")
(LIT "sat_IN.UTF-8")
(PUNCT ",")
(LIT "sc_it")
(PUNCT ":")
(LIT "sc_IT.UTF-8")
(PUNCT ",")
(LIT "sd")
(PUNCT ":")
(LIT "sd_IN.UTF-8")
(PUNCT ",")
(LIT "sd_in")
(PUNCT ":")
(LIT "sd_IN.UTF-8")
(PUNCT ",")
(LIT "sd_in@devanagari.utf8")
(PUNCT ":")
(LIT "sd_IN.UTF-8@devanagari")
(PUNCT ",")
(LIT "sd_pk")
(PUNCT ":")
(LIT "sd_PK.UTF-8")
(PUNCT ",")
(LIT "se_no")
(PUNCT ":")
(LIT "se_NO.UTF-8")
(PUNCT ",")
(LIT "serbocroatian")
(PUNCT ":")
(LIT "sr_RS.UTF-8@latin")
(PUNCT ",")
(LIT "sh")
(PUNCT ":")
(LIT "sr_RS.UTF-8@latin")
(PUNCT ",")
(LIT "sh_ba.iso88592@bosnia")
(PUNCT ":")
(LIT "sr_CS.ISO8859-2")
(PUNCT ",")
(LIT "sh_hr")
(PUNCT ":")
(LIT "sh_HR.ISO8859-2")
(PUNCT ",")
(LIT "sh_hr.iso88592")
(PUNCT ":")
(LIT "hr_HR.ISO8859-2")
(PUNCT ",")
(LIT "sh_sp")
(PUNCT ":")
(LIT "sr_CS.ISO8859-2")
(PUNCT ",")
(LIT "sh_yu")
(PUNCT ":")
(LIT "sr_RS.UTF-8@latin")
(PUNCT ",")
(LIT "shs_ca")
(PUNCT ":")
(LIT "shs_CA.UTF-8")
(PUNCT ",")
(LIT "si")
(PUNCT ":")
(LIT "si_LK.UTF-8")
(PUNCT ",")
(LIT "si_lk")
(PUNCT ":")
(LIT "si_LK.UTF-8")
(PUNCT ",")
(LIT "sid_et")
(PUNCT ":")
(LIT "sid_ET.UTF-8")
(PUNCT ",")
(LIT "sinhala")
(PUNCT ":")
(LIT "si_LK.UTF-8")
(PUNCT ",")
(LIT "sk")
(PUNCT ":")
(LIT "sk_SK.ISO8859-2")
(PUNCT ",")
(LIT "sk_sk")
(PUNCT ":")
(LIT "sk_SK.ISO8859-2")
(PUNCT ",")
(LIT "sl")
(PUNCT ":")
(LIT "sl_SI.ISO8859-2")
(PUNCT ",")
(LIT "sl_cs")
(PUNCT ":")
(LIT "sl_CS.ISO8859-2")
(PUNCT ",")
(LIT "sl_si")
(PUNCT ":")
(LIT "sl_SI.ISO8859-2")
(PUNCT ",")
(LIT "slovak")
(PUNCT ":")
(LIT "sk_SK.ISO8859-2")
(PUNCT ",")
(LIT "slovene")
(PUNCT ":")
(LIT "sl_SI.ISO8859-2")
(PUNCT ",")
(LIT "slovenian")
(PUNCT ":")
(LIT "sl_SI.ISO8859-2")
(PUNCT ",")
(LIT "so_dj")
(PUNCT ":")
(LIT "so_DJ.ISO8859-1")
(PUNCT ",")
(LIT "so_et")
(PUNCT ":")
(LIT "so_ET.UTF-8")
(PUNCT ",")
(LIT "so_ke")
(PUNCT ":")
(LIT "so_KE.ISO8859-1")
(PUNCT ",")
(LIT "so_so")
(PUNCT ":")
(LIT "so_SO.ISO8859-1")
(PUNCT ",")
(LIT "sp")
(PUNCT ":")
(LIT "sr_CS.ISO8859-5")
(PUNCT ",")
(LIT "sp_yu")
(PUNCT ":")
(LIT "sr_CS.ISO8859-5")
(PUNCT ",")
(LIT "spanish")
(PUNCT ":")
(LIT "es_ES.ISO8859-1")
(PUNCT ",")
(LIT "spanish_spain")
(PUNCT ":")
(LIT "es_ES.ISO8859-1")
(PUNCT ",")
(LIT "sq")
(PUNCT ":")
(LIT "sq_AL.ISO8859-2")
(PUNCT ",")
(LIT "sq_al")
(PUNCT ":")
(LIT "sq_AL.ISO8859-2")
(PUNCT ",")
(LIT "sq_mk")
(PUNCT ":")
(LIT "sq_MK.UTF-8")
(PUNCT ",")
(LIT "sr")
(PUNCT ":")
(LIT "sr_RS.UTF-8")
(PUNCT ",")
(LIT "sr@cyrillic")
(PUNCT ":")
(LIT "sr_RS.UTF-8")
(PUNCT ",")
(LIT "sr@latn")
(PUNCT ":")
(LIT "sr_CS.UTF-8@latin")
(PUNCT ",")
(LIT "sr_cs")
(PUNCT ":")
(LIT "sr_CS.UTF-8")
(PUNCT ",")
(LIT "sr_cs.iso88592@latn")
(PUNCT ":")
(LIT "sr_CS.ISO8859-2")
(PUNCT ",")
(LIT "sr_cs@latn")
(PUNCT ":")
(LIT "sr_CS.UTF-8@latin")
(PUNCT ",")
(LIT "sr_me")
(PUNCT ":")
(LIT "sr_ME.UTF-8")
(PUNCT ",")
(LIT "sr_rs")
(PUNCT ":")
(LIT "sr_RS.UTF-8")
(PUNCT ",")
(LIT "sr_rs@latn")
(PUNCT ":")
(LIT "sr_RS.UTF-8@latin")
(PUNCT ",")
(LIT "sr_sp")
(PUNCT ":")
(LIT "sr_CS.ISO8859-2")
(PUNCT ",")
(LIT "sr_yu")
(PUNCT ":")
(LIT "sr_RS.UTF-8@latin")
(PUNCT ",")
(LIT "sr_yu.cp1251@cyrillic")
(PUNCT ":")
(LIT "sr_CS.CP1251")
(PUNCT ",")
(LIT "sr_yu.iso88592")
(PUNCT ":")
(LIT "sr_CS.ISO8859-2")
(PUNCT ",")
(LIT "sr_yu.iso88595")
(PUNCT ":")
(LIT "sr_CS.ISO8859-5")
(PUNCT ",")
(LIT "sr_yu.iso88595@cyrillic")
(PUNCT ":")
(LIT "sr_CS.ISO8859-5")
(PUNCT ",")
(LIT "sr_yu.microsoftcp1251@cyrillic")
(PUNCT ":")
(LIT "sr_CS.CP1251")
(PUNCT ",")
(LIT "sr_yu.utf8")
(PUNCT ":")
(LIT "sr_RS.UTF-8")
(PUNCT ",")
(LIT "sr_yu.utf8@cyrillic")
(PUNCT ":")
(LIT "sr_RS.UTF-8")
(PUNCT ",")
(LIT "sr_yu@cyrillic")
(PUNCT ":")
(LIT "sr_RS.UTF-8")
(PUNCT ",")
(LIT "ss")
(PUNCT ":")
(LIT "ss_ZA.ISO8859-1")
(PUNCT ",")
(LIT "ss_za")
(PUNCT ":")
(LIT "ss_ZA.ISO8859-1")
(PUNCT ",")
(LIT "st")
(PUNCT ":")
(LIT "st_ZA.ISO8859-1")
(PUNCT ",")
(LIT "st_za")
(PUNCT ":")
(LIT "st_ZA.ISO8859-1")
(PUNCT ",")
(LIT "sv")
(PUNCT ":")
(LIT "sv_SE.ISO8859-1")
(PUNCT ",")
(LIT "sv_fi")
(PUNCT ":")
(LIT "sv_FI.ISO8859-1")
(PUNCT ",")
(LIT "sv_se")
(PUNCT ":")
(LIT "sv_SE.ISO8859-1")
(PUNCT ",")
(LIT "sw_ke")
(PUNCT ":")
(LIT "sw_KE.UTF-8")
(PUNCT ",")
(LIT "sw_tz")
(PUNCT ":")
(LIT "sw_TZ.UTF-8")
(PUNCT ",")
(LIT "swedish")
(PUNCT ":")
(LIT "sv_SE.ISO8859-1")
(PUNCT ",")
(LIT "szl_pl")
(PUNCT ":")
(LIT "szl_PL.UTF-8")
(PUNCT ",")
(LIT "ta")
(PUNCT ":")
(LIT "ta_IN.TSCII-0")
(PUNCT ",")
(LIT "ta_in")
(PUNCT ":")
(LIT "ta_IN.TSCII-0")
(PUNCT ",")
(LIT "ta_in.tscii")
(PUNCT ":")
(LIT "ta_IN.TSCII-0")
(PUNCT ",")
(LIT "ta_in.tscii0")
(PUNCT ":")
(LIT "ta_IN.TSCII-0")
(PUNCT ",")
(LIT "ta_lk")
(PUNCT ":")
(LIT "ta_LK.UTF-8")
(PUNCT ",")
(LIT "te")
(PUNCT ":")
(LIT "te_IN.UTF-8")
(PUNCT ",")
(LIT "te_in")
(PUNCT ":")
(LIT "te_IN.UTF-8")
(PUNCT ",")
(LIT "tg")
(PUNCT ":")
(LIT "tg_TJ.KOI8-C")
(PUNCT ",")
(LIT "tg_tj")
(PUNCT ":")
(LIT "tg_TJ.KOI8-C")
(PUNCT ",")
(LIT "th")
(PUNCT ":")
(LIT "th_TH.ISO8859-11")
(PUNCT ",")
(LIT "th_th")
(PUNCT ":")
(LIT "th_TH.ISO8859-11")
(PUNCT ",")
(LIT "th_th.tactis")
(PUNCT ":")
(LIT "th_TH.TIS620")
(PUNCT ",")
(LIT "th_th.tis620")
(PUNCT ":")
(LIT "th_TH.TIS620")
(PUNCT ",")
(LIT "thai")
(PUNCT ":")
(LIT "th_TH.ISO8859-11")
(PUNCT ",")
(LIT "ti_er")
(PUNCT ":")
(LIT "ti_ER.UTF-8")
(PUNCT ",")
(LIT "ti_et")
(PUNCT ":")
(LIT "ti_ET.UTF-8")
(PUNCT ",")
(LIT "tig_er")
(PUNCT ":")
(LIT "tig_ER.UTF-8")
(PUNCT ",")
(LIT "tk_tm")
(PUNCT ":")
(LIT "tk_TM.UTF-8")
(PUNCT ",")
(LIT "tl")
(PUNCT ":")
(LIT "tl_PH.ISO8859-1")
(PUNCT ",")
(LIT "tl_ph")
(PUNCT ":")
(LIT "tl_PH.ISO8859-1")
(PUNCT ",")
(LIT "tn")
(PUNCT ":")
(LIT "tn_ZA.ISO8859-15")
(PUNCT ",")
(LIT "tn_za")
(PUNCT ":")
(LIT "tn_ZA.ISO8859-15")
(PUNCT ",")
(LIT "tr")
(PUNCT ":")
(LIT "tr_TR.ISO8859-9")
(PUNCT ",")
(LIT "tr_cy")
(PUNCT ":")
(LIT "tr_CY.ISO8859-9")
(PUNCT ",")
(LIT "tr_tr")
(PUNCT ":")
(LIT "tr_TR.ISO8859-9")
(PUNCT ",")
(LIT "ts")
(PUNCT ":")
(LIT "ts_ZA.ISO8859-1")
(PUNCT ",")
(LIT "ts_za")
(PUNCT ":")
(LIT "ts_ZA.ISO8859-1")
(PUNCT ",")
(LIT "tt")
(PUNCT ":")
(LIT "tt_RU.TATAR-CYR")
(PUNCT ",")
(LIT "tt_ru")
(PUNCT ":")
(LIT "tt_RU.TATAR-CYR")
(PUNCT ",")
(LIT "tt_ru.tatarcyr")
(PUNCT ":")
(LIT "tt_RU.TATAR-CYR")
(PUNCT ",")
(LIT "tt_ru@iqtelif")
(PUNCT ":")
(LIT "tt_RU.UTF-8@iqtelif")
(PUNCT ",")
(LIT "turkish")
(PUNCT ":")
(LIT "tr_TR.ISO8859-9")
(PUNCT ",")
(LIT "ug_cn")
(PUNCT ":")
(LIT "ug_CN.UTF-8")
(PUNCT ",")
(LIT "uk")
(PUNCT ":")
(LIT "uk_UA.KOI8-U")
(PUNCT ",")
(LIT "uk_ua")
(PUNCT ":")
(LIT "uk_UA.KOI8-U")
(PUNCT ",")
(LIT "univ")
(PUNCT ":")
(LIT "en_US.UTF-8")
(PUNCT ",")
(LIT "universal")
(PUNCT ":")
(LIT "en_US.UTF-8")
(PUNCT ",")
(LIT "universal.utf8@ucs4")
(PUNCT ":")
(LIT "en_US.UTF-8")
(PUNCT ",")
(LIT "unm_us")
(PUNCT ":")
(LIT "unm_US.UTF-8")
(PUNCT ",")
(LIT "ur")
(PUNCT ":")
(LIT "ur_PK.CP1256")
(PUNCT ",")
(LIT "ur_in")
(PUNCT ":")
(LIT "ur_IN.UTF-8")
(PUNCT ",")
(LIT "ur_pk")
(PUNCT ":")
(LIT "ur_PK.CP1256")
(PUNCT ",")
(LIT "uz")
(PUNCT ":")
(LIT "uz_UZ.UTF-8")
(PUNCT ",")
(LIT "uz_uz")
(PUNCT ":")
(LIT "uz_UZ.UTF-8")
(PUNCT ",")
(LIT "uz_uz@cyrillic")
(PUNCT ":")
(LIT "uz_UZ.UTF-8")
(PUNCT ",")
(LIT "ve")
(PUNCT ":")
(LIT "ve_ZA.UTF-8")
(PUNCT ",")
(LIT "ve_za")
(PUNCT ":")
(LIT "ve_ZA.UTF-8")
(PUNCT ",")
(LIT "vi")
(PUNCT ":")
(LIT "vi_VN.TCVN")
(PUNCT ",")
(LIT "vi_vn")
(PUNCT ":")
(LIT "vi_VN.TCVN")
(PUNCT ",")
(LIT "vi_vn.tcvn")
(PUNCT ":")
(LIT "vi_VN.TCVN")
(PUNCT ",")
(LIT "vi_vn.tcvn5712")
(PUNCT ":")
(LIT "vi_VN.TCVN")
(PUNCT ",")
(LIT "vi_vn.viscii")
(PUNCT ":")
(LIT "vi_VN.VISCII")
(PUNCT ",")
(LIT "vi_vn.viscii111")
(PUNCT ":")
(LIT "vi_VN.VISCII")
(PUNCT ",")
(LIT "wa")
(PUNCT ":")
(LIT "wa_BE.ISO8859-1")
(PUNCT ",")
(LIT "wa_be")
(PUNCT ":")
(LIT "wa_BE.ISO8859-1")
(PUNCT ",")
(LIT "wae_ch")
(PUNCT ":")
(LIT "wae_CH.UTF-8")
(PUNCT ",")
(LIT "wal_et")
(PUNCT ":")
(LIT "wal_ET.UTF-8")
(PUNCT ",")
(LIT "wo_sn")
(PUNCT ":")
(LIT "wo_SN.UTF-8")
(PUNCT ",")
(LIT "xh")
(PUNCT ":")
(LIT "xh_ZA.ISO8859-1")
(PUNCT ",")
(LIT "xh_za")
(PUNCT ":")
(LIT "xh_ZA.ISO8859-1")
(PUNCT ",")
(LIT "yi")
(PUNCT ":")
(LIT "yi_US.CP1255")
(PUNCT ",")
(LIT "yi_us")
(PUNCT ":")
(LIT "yi_US.CP1255")
(PUNCT ",")
(LIT "yo_ng")
(PUNCT ":")
(LIT "yo_NG.UTF-8")
(PUNCT ",")
(LIT "yue_hk")
(PUNCT ":")
(LIT "yue_HK.UTF-8")
(PUNCT ",")
(LIT "zh")
(PUNCT ":")
(LIT "zh_CN.eucCN")
(PUNCT ",")
(LIT "zh_cn")
(PUNCT ":")
(LIT "zh_CN.gb2312")
(PUNCT ",")
(LIT "zh_cn.big5")
(PUNCT ":")
(LIT "zh_TW.big5")
(PUNCT ",")
(LIT "zh_cn.euc")
(PUNCT ":")
(LIT "zh_CN.eucCN")
(PUNCT ",")
(LIT "zh_hk")
(PUNCT ":")
(LIT "zh_HK.big5hkscs")
(PUNCT ",")
(LIT "zh_hk.big5hk")
(PUNCT ":")
(LIT "zh_HK.big5hkscs")
(PUNCT ",")
(LIT "zh_sg")
(PUNCT ":")
(LIT "zh_SG.GB2312")
(PUNCT ",")
(LIT "zh_sg.gbk")
(PUNCT ":")
(LIT "zh_SG.GBK")
(PUNCT ",")
(LIT "zh_tw")
(PUNCT ":")
(LIT "zh_TW.big5")
(PUNCT ",")
(LIT "zh_tw.euc")
(PUNCT ":")
(LIT "zh_TW.eucTW")
(PUNCT ",")
(LIT "zh_tw.euctw")
(PUNCT ":")
(LIT "zh_TW.eucTW")
(PUNCT ",")
(LIT "zu")
(PUNCT ":")
(LIT "zu_ZA.ISO8859-1")
(PUNCT ",")
(LIT "zu_za")
(PUNCT ":")
(LIT "zu_ZA.ISO8859-1")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(ID "windows_locale")
(PUNCT "=")
(PUNCT "{")
(LIT 1078)
(PUNCT ":")
(LIT "af_ZA")
(PUNCT ",")
(LIT 1052)
(PUNCT ":")
(LIT "sq_AL")
(PUNCT ",")
(LIT 1156)
(PUNCT ":")
(LIT "gsw_FR")
(PUNCT ",")
(LIT 1118)
(PUNCT ":")
(LIT "am_ET")
(PUNCT ",")
(LIT 1025)
(PUNCT ":")
(LIT "ar_SA")
(PUNCT ",")
(LIT 2049)
(PUNCT ":")
(LIT "ar_IQ")
(PUNCT ",")
(LIT 3073)
(PUNCT ":")
(LIT "ar_EG")
(PUNCT ",")
(LIT 4097)
(PUNCT ":")
(LIT "ar_LY")
(PUNCT ",")
(LIT 5121)
(PUNCT ":")
(LIT "ar_DZ")
(PUNCT ",")
(LIT 6145)
(PUNCT ":")
(LIT "ar_MA")
(PUNCT ",")
(LIT 7169)
(PUNCT ":")
(LIT "ar_TN")
(PUNCT ",")
(LIT 8193)
(PUNCT ":")
(LIT "ar_OM")
(PUNCT ",")
(LIT 9217)
(PUNCT ":")
(LIT "ar_YE")
(PUNCT ",")
(LIT 10241)
(PUNCT ":")
(LIT "ar_SY")
(PUNCT ",")
(LIT 11265)
(PUNCT ":")
(LIT "ar_JO")
(PUNCT ",")
(LIT 12289)
(PUNCT ":")
(LIT "ar_LB")
(PUNCT ",")
(LIT 13313)
(PUNCT ":")
(LIT "ar_KW")
(PUNCT ",")
(LIT 14337)
(PUNCT ":")
(LIT "ar_AE")
(PUNCT ",")
(LIT 15361)
(PUNCT ":")
(LIT "ar_BH")
(PUNCT ",")
(LIT 16385)
(PUNCT ":")
(LIT "ar_QA")
(PUNCT ",")
(LIT 1067)
(PUNCT ":")
(LIT "hy_AM")
(PUNCT ",")
(LIT 1101)
(PUNCT ":")
(LIT "as_IN")
(PUNCT ",")
(LIT 1068)
(PUNCT ":")
(LIT "az_AZ")
(PUNCT ",")
(LIT 2092)
(PUNCT ":")
(LIT "az_AZ")
(PUNCT ",")
(LIT 1133)
(PUNCT ":")
(LIT "ba_RU")
(PUNCT ",")
(LIT 1069)
(PUNCT ":")
(LIT "eu_ES")
(PUNCT ",")
(LIT 1059)
(PUNCT ":")
(LIT "be_BY")
(PUNCT ",")
(LIT 1093)
(PUNCT ":")
(LIT "bn_IN")
(PUNCT ",")
(LIT 8218)
(PUNCT ":")
(LIT "bs_BA")
(PUNCT ",")
(LIT 5146)
(PUNCT ":")
(LIT "bs_BA")
(PUNCT ",")
(LIT 1150)
(PUNCT ":")
(LIT "br_FR")
(PUNCT ",")
(LIT 1026)
(PUNCT ":")
(LIT "bg_BG")
(PUNCT ",")
(LIT 1027)
(PUNCT ":")
(LIT "ca_ES")
(PUNCT ",")
(LIT 4)
(PUNCT ":")
(LIT "zh_CHS")
(PUNCT ",")
(LIT 1028)
(PUNCT ":")
(LIT "zh_TW")
(PUNCT ",")
(LIT 2052)
(PUNCT ":")
(LIT "zh_CN")
(PUNCT ",")
(LIT 3076)
(PUNCT ":")
(LIT "zh_HK")
(PUNCT ",")
(LIT 4100)
(PUNCT ":")
(LIT "zh_SG")
(PUNCT ",")
(LIT 5124)
(PUNCT ":")
(LIT "zh_MO")
(PUNCT ",")
(LIT 31748)
(PUNCT ":")
(LIT "zh_CHT")
(PUNCT ",")
(LIT 1155)
(PUNCT ":")
(LIT "co_FR")
(PUNCT ",")
(LIT 1050)
(PUNCT ":")
(LIT "hr_HR")
(PUNCT ",")
(LIT 4122)
(PUNCT ":")
(LIT "hr_BA")
(PUNCT ",")
(LIT 1029)
(PUNCT ":")
(LIT "cs_CZ")
(PUNCT ",")
(LIT 1030)
(PUNCT ":")
(LIT "da_DK")
(PUNCT ",")
(LIT 1164)
(PUNCT ":")
(LIT "gbz_AF")
(PUNCT ",")
(LIT 1125)
(PUNCT ":")
(LIT "div_MV")
(PUNCT ",")
(LIT 1043)
(PUNCT ":")
(LIT "nl_NL")
(PUNCT ",")
(LIT 2067)
(PUNCT ":")
(LIT "nl_BE")
(PUNCT ",")
(LIT 1033)
(PUNCT ":")
(LIT "en_US")
(PUNCT ",")
(LIT 2057)
(PUNCT ":")
(LIT "en_GB")
(PUNCT ",")
(LIT 3081)
(PUNCT ":")
(LIT "en_AU")
(PUNCT ",")
(LIT 4105)
(PUNCT ":")
(LIT "en_CA")
(PUNCT ",")
(LIT 5129)
(PUNCT ":")
(LIT "en_NZ")
(PUNCT ",")
(LIT 6153)
(PUNCT ":")
(LIT "en_IE")
(PUNCT ",")
(LIT 7177)
(PUNCT ":")
(LIT "en_ZA")
(PUNCT ",")
(LIT 8201)
(PUNCT ":")
(LIT "en_JA")
(PUNCT ",")
(LIT 9225)
(PUNCT ":")
(LIT "en_CB")
(PUNCT ",")
(LIT 10249)
(PUNCT ":")
(LIT "en_BZ")
(PUNCT ",")
(LIT 11273)
(PUNCT ":")
(LIT "en_TT")
(PUNCT ",")
(LIT 12297)
(PUNCT ":")
(LIT "en_ZW")
(PUNCT ",")
(LIT 13321)
(PUNCT ":")
(LIT "en_PH")
(PUNCT ",")
(LIT 16393)
(PUNCT ":")
(LIT "en_IN")
(PUNCT ",")
(LIT 17417)
(PUNCT ":")
(LIT "en_MY")
(PUNCT ",")
(LIT 18441)
(PUNCT ":")
(LIT "en_IN")
(PUNCT ",")
(LIT 1061)
(PUNCT ":")
(LIT "et_EE")
(PUNCT ",")
(LIT 1080)
(PUNCT ":")
(LIT "fo_FO")
(PUNCT ",")
(LIT 1124)
(PUNCT ":")
(LIT "fil_PH")
(PUNCT ",")
(LIT 1035)
(PUNCT ":")
(LIT "fi_FI")
(PUNCT ",")
(LIT 1036)
(PUNCT ":")
(LIT "fr_FR")
(PUNCT ",")
(LIT 2060)
(PUNCT ":")
(LIT "fr_BE")
(PUNCT ",")
(LIT 3084)
(PUNCT ":")
(LIT "fr_CA")
(PUNCT ",")
(LIT 4108)
(PUNCT ":")
(LIT "fr_CH")
(PUNCT ",")
(LIT 5132)
(PUNCT ":")
(LIT "fr_LU")
(PUNCT ",")
(LIT 6156)
(PUNCT ":")
(LIT "fr_MC")
(PUNCT ",")
(LIT 1122)
(PUNCT ":")
(LIT "fy_NL")
(PUNCT ",")
(LIT 1110)
(PUNCT ":")
(LIT "gl_ES")
(PUNCT ",")
(LIT 1079)
(PUNCT ":")
(LIT "ka_GE")
(PUNCT ",")
(LIT 1031)
(PUNCT ":")
(LIT "de_DE")
(PUNCT ",")
(LIT 2055)
(PUNCT ":")
(LIT "de_CH")
(PUNCT ",")
(LIT 3079)
(PUNCT ":")
(LIT "de_AT")
(PUNCT ",")
(LIT 4103)
(PUNCT ":")
(LIT "de_LU")
(PUNCT ",")
(LIT 5127)
(PUNCT ":")
(LIT "de_LI")
(PUNCT ",")
(LIT 1032)
(PUNCT ":")
(LIT "el_GR")
(PUNCT ",")
(LIT 1135)
(PUNCT ":")
(LIT "kl_GL")
(PUNCT ",")
(LIT 1095)
(PUNCT ":")
(LIT "gu_IN")
(PUNCT ",")
(LIT 1128)
(PUNCT ":")
(LIT "ha_NG")
(PUNCT ",")
(LIT 1037)
(PUNCT ":")
(LIT "he_IL")
(PUNCT ",")
(LIT 1081)
(PUNCT ":")
(LIT "hi_IN")
(PUNCT ",")
(LIT 1038)
(PUNCT ":")
(LIT "hu_HU")
(PUNCT ",")
(LIT 1039)
(PUNCT ":")
(LIT "is_IS")
(PUNCT ",")
(LIT 1057)
(PUNCT ":")
(LIT "id_ID")
(PUNCT ",")
(LIT 1117)
(PUNCT ":")
(LIT "iu_CA")
(PUNCT ",")
(LIT 2141)
(PUNCT ":")
(LIT "iu_CA")
(PUNCT ",")
(LIT 2108)
(PUNCT ":")
(LIT "ga_IE")
(PUNCT ",")
(LIT 1040)
(PUNCT ":")
(LIT "it_IT")
(PUNCT ",")
(LIT 2064)
(PUNCT ":")
(LIT "it_CH")
(PUNCT ",")
(LIT 1041)
(PUNCT ":")
(LIT "ja_JP")
(PUNCT ",")
(LIT 1099)
(PUNCT ":")
(LIT "kn_IN")
(PUNCT ",")
(LIT 1087)
(PUNCT ":")
(LIT "kk_KZ")
(PUNCT ",")
(LIT 1107)
(PUNCT ":")
(LIT "kh_KH")
(PUNCT ",")
(LIT 1158)
(PUNCT ":")
(LIT "qut_GT")
(PUNCT ",")
(LIT 1159)
(PUNCT ":")
(LIT "rw_RW")
(PUNCT ",")
(LIT 1111)
(PUNCT ":")
(LIT "kok_IN")
(PUNCT ",")
(LIT 1042)
(PUNCT ":")
(LIT "ko_KR")
(PUNCT ",")
(LIT 1088)
(PUNCT ":")
(LIT "ky_KG")
(PUNCT ",")
(LIT 1108)
(PUNCT ":")
(LIT "lo_LA")
(PUNCT ",")
(LIT 1062)
(PUNCT ":")
(LIT "lv_LV")
(PUNCT ",")
(LIT 1063)
(PUNCT ":")
(LIT "lt_LT")
(PUNCT ",")
(LIT 2094)
(PUNCT ":")
(LIT "dsb_DE")
(PUNCT ",")
(LIT 1134)
(PUNCT ":")
(LIT "lb_LU")
(PUNCT ",")
(LIT 1071)
(PUNCT ":")
(LIT "mk_MK")
(PUNCT ",")
(LIT 1086)
(PUNCT ":")
(LIT "ms_MY")
(PUNCT ",")
(LIT 2110)
(PUNCT ":")
(LIT "ms_BN")
(PUNCT ",")
(LIT 1100)
(PUNCT ":")
(LIT "ml_IN")
(PUNCT ",")
(LIT 1082)
(PUNCT ":")
(LIT "mt_MT")
(PUNCT ",")
(LIT 1153)
(PUNCT ":")
(LIT "mi_NZ")
(PUNCT ",")
(LIT 1146)
(PUNCT ":")
(LIT "arn_CL")
(PUNCT ",")
(LIT 1102)
(PUNCT ":")
(LIT "mr_IN")
(PUNCT ",")
(LIT 1148)
(PUNCT ":")
(LIT "moh_CA")
(PUNCT ",")
(LIT 1104)
(PUNCT ":")
(LIT "mn_MN")
(PUNCT ",")
(LIT 2128)
(PUNCT ":")
(LIT "mn_CN")
(PUNCT ",")
(LIT 1121)
(PUNCT ":")
(LIT "ne_NP")
(PUNCT ",")
(LIT 1044)
(PUNCT ":")
(LIT "nb_NO")
(PUNCT ",")
(LIT 2068)
(PUNCT ":")
(LIT "nn_NO")
(PUNCT ",")
(LIT 1154)
(PUNCT ":")
(LIT "oc_FR")
(PUNCT ",")
(LIT 1096)
(PUNCT ":")
(LIT "or_IN")
(PUNCT ",")
(LIT 1123)
(PUNCT ":")
(LIT "ps_AF")
(PUNCT ",")
(LIT 1065)
(PUNCT ":")
(LIT "fa_IR")
(PUNCT ",")
(LIT 1045)
(PUNCT ":")
(LIT "pl_PL")
(PUNCT ",")
(LIT 1046)
(PUNCT ":")
(LIT "pt_BR")
(PUNCT ",")
(LIT 2070)
(PUNCT ":")
(LIT "pt_PT")
(PUNCT ",")
(LIT 1094)
(PUNCT ":")
(LIT "pa_IN")
(PUNCT ",")
(LIT 1131)
(PUNCT ":")
(LIT "quz_BO")
(PUNCT ",")
(LIT 2155)
(PUNCT ":")
(LIT "quz_EC")
(PUNCT ",")
(LIT 3179)
(PUNCT ":")
(LIT "quz_PE")
(PUNCT ",")
(LIT 1048)
(PUNCT ":")
(LIT "ro_RO")
(PUNCT ",")
(LIT 1047)
(PUNCT ":")
(LIT "rm_CH")
(PUNCT ",")
(LIT 1049)
(PUNCT ":")
(LIT "ru_RU")
(PUNCT ",")
(LIT 9275)
(PUNCT ":")
(LIT "smn_FI")
(PUNCT ",")
(LIT 4155)
(PUNCT ":")
(LIT "smj_NO")
(PUNCT ",")
(LIT 5179)
(PUNCT ":")
(LIT "smj_SE")
(PUNCT ",")
(LIT 1083)
(PUNCT ":")
(LIT "se_NO")
(PUNCT ",")
(LIT 2107)
(PUNCT ":")
(LIT "se_SE")
(PUNCT ",")
(LIT 3131)
(PUNCT ":")
(LIT "se_FI")
(PUNCT ",")
(LIT 8251)
(PUNCT ":")
(LIT "sms_FI")
(PUNCT ",")
(LIT 6203)
(PUNCT ":")
(LIT "sma_NO")
(PUNCT ",")
(LIT 7227)
(PUNCT ":")
(LIT "sma_SE")
(PUNCT ",")
(LIT 1103)
(PUNCT ":")
(LIT "sa_IN")
(PUNCT ",")
(LIT 3098)
(PUNCT ":")
(LIT "sr_SP")
(PUNCT ",")
(LIT 7194)
(PUNCT ":")
(LIT "sr_BA")
(PUNCT ",")
(LIT 2074)
(PUNCT ":")
(LIT "sr_SP")
(PUNCT ",")
(LIT 6170)
(PUNCT ":")
(LIT "sr_BA")
(PUNCT ",")
(LIT 1115)
(PUNCT ":")
(LIT "si_LK")
(PUNCT ",")
(LIT 1132)
(PUNCT ":")
(LIT "ns_ZA")
(PUNCT ",")
(LIT 1074)
(PUNCT ":")
(LIT "tn_ZA")
(PUNCT ",")
(LIT 1051)
(PUNCT ":")
(LIT "sk_SK")
(PUNCT ",")
(LIT 1060)
(PUNCT ":")
(LIT "sl_SI")
(PUNCT ",")
(LIT 1034)
(PUNCT ":")
(LIT "es_ES")
(PUNCT ",")
(LIT 2058)
(PUNCT ":")
(LIT "es_MX")
(PUNCT ",")
(LIT 3082)
(PUNCT ":")
(LIT "es_ES")
(PUNCT ",")
(LIT 4106)
(PUNCT ":")
(LIT "es_GT")
(PUNCT ",")
(LIT 5130)
(PUNCT ":")
(LIT "es_CR")
(PUNCT ",")
(LIT 6154)
(PUNCT ":")
(LIT "es_PA")
(PUNCT ",")
(LIT 7178)
(PUNCT ":")
(LIT "es_DO")
(PUNCT ",")
(LIT 8202)
(PUNCT ":")
(LIT "es_VE")
(PUNCT ",")
(LIT 9226)
(PUNCT ":")
(LIT "es_CO")
(PUNCT ",")
(LIT 10250)
(PUNCT ":")
(LIT "es_PE")
(PUNCT ",")
(LIT 11274)
(PUNCT ":")
(LIT "es_AR")
(PUNCT ",")
(LIT 12298)
(PUNCT ":")
(LIT "es_EC")
(PUNCT ",")
(LIT 13322)
(PUNCT ":")
(LIT "es_CL")
(PUNCT ",")
(LIT 14346)
(PUNCT ":")
(LIT "es_UR")
(PUNCT ",")
(LIT 15370)
(PUNCT ":")
(LIT "es_PY")
(PUNCT ",")
(LIT 16394)
(PUNCT ":")
(LIT "es_BO")
(PUNCT ",")
(LIT 17418)
(PUNCT ":")
(LIT "es_SV")
(PUNCT ",")
(LIT 18442)
(PUNCT ":")
(LIT "es_HN")
(PUNCT ",")
(LIT 19466)
(PUNCT ":")
(LIT "es_NI")
(PUNCT ",")
(LIT 20490)
(PUNCT ":")
(LIT "es_PR")
(PUNCT ",")
(LIT 21514)
(PUNCT ":")
(LIT "es_US")
(PUNCT ",")
(LIT 1089)
(PUNCT ":")
(LIT "sw_KE")
(PUNCT ",")
(LIT 1053)
(PUNCT ":")
(LIT "sv_SE")
(PUNCT ",")
(LIT 2077)
(PUNCT ":")
(LIT "sv_FI")
(PUNCT ",")
(LIT 1114)
(PUNCT ":")
(LIT "syr_SY")
(PUNCT ",")
(LIT 1064)
(PUNCT ":")
(LIT "tg_TJ")
(PUNCT ",")
(LIT 2143)
(PUNCT ":")
(LIT "tmz_DZ")
(PUNCT ",")
(LIT 1097)
(PUNCT ":")
(LIT "ta_IN")
(PUNCT ",")
(LIT 1092)
(PUNCT ":")
(LIT "tt_RU")
(PUNCT ",")
(LIT 1098)
(PUNCT ":")
(LIT "te_IN")
(PUNCT ",")
(LIT 1054)
(PUNCT ":")
(LIT "th_TH")
(PUNCT ",")
(LIT 2129)
(PUNCT ":")
(LIT "bo_BT")
(PUNCT ",")
(LIT 1105)
(PUNCT ":")
(LIT "bo_CN")
(PUNCT ",")
(LIT 1055)
(PUNCT ":")
(LIT "tr_TR")
(PUNCT ",")
(LIT 1090)
(PUNCT ":")
(LIT "tk_TM")
(PUNCT ",")
(LIT 1152)
(PUNCT ":")
(LIT "ug_CN")
(PUNCT ",")
(LIT 1058)
(PUNCT ":")
(LIT "uk_UA")
(PUNCT ",")
(LIT 1070)
(PUNCT ":")
(LIT "wen_DE")
(PUNCT ",")
(LIT 1056)
(PUNCT ":")
(LIT "ur_PK")
(PUNCT ",")
(LIT 2080)
(PUNCT ":")
(LIT "ur_IN")
(PUNCT ",")
(LIT 1091)
(PUNCT ":")
(LIT "uz_UZ")
(PUNCT ",")
(LIT 2115)
(PUNCT ":")
(LIT "uz_UZ")
(PUNCT ",")
(LIT 1066)
(PUNCT ":")
(LIT "vi_VN")
(PUNCT ",")
(LIT 1106)
(PUNCT ":")
(LIT "cy_GB")
(PUNCT ",")
(LIT 1160)
(PUNCT ":")
(LIT "wo_SN")
(PUNCT ",")
(LIT 1076)
(PUNCT ":")
(LIT "xh_ZA")
(PUNCT ",")
(LIT 1157)
(PUNCT ":")
(LIT "sah_RU")
(PUNCT ",")
(LIT 1144)
(PUNCT ":")
(LIT "ii_CN")
(PUNCT ",")
(LIT 1130)
(PUNCT ":")
(LIT "yo_NG")
(PUNCT ",")
(LIT 1077)
(PUNCT ":")
(LIT "zu_ZA")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "_print_locale")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT " Test function.\n    ")
(NEWLINE)
(ID "categories")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "_init_categories")
(PUNCT "(")
(ID "categories")
(PUNCT "=")
(ID "categories")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "k")
(PUNCT ",")
(ID "v")
(KEYWORD in)
(ID "globals")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "k")
(PUNCT "[")
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(PUNCT "==")
(LIT "LC_")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "categories")
(PUNCT "[")
(ID "k")
(PUNCT "]")
(PUNCT "=")
(ID "v")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "_init_categories")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "categories")
(PUNCT "[")
(LIT "LC_ALL")
(PUNCT "]")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Locale defaults as determined by getdefaultlocale():")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "-")
(PUNCT "*")
(LIT 72)
(PUNCT ")")
(NEWLINE)
(ID "lang")
(PUNCT ",")
(ID "enc")
(PUNCT "=")
(ID "getdefaultlocale")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Language: ")
(PUNCT ",")
(ID "lang")
(KEYWORD or)
(LIT "(undefined)")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Encoding: ")
(PUNCT ",")
(ID "enc")
(KEYWORD or)
(LIT "(undefined)")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Locale settings on startup:")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "-")
(PUNCT "*")
(LIT 72)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "category")
(KEYWORD in)
(ID "categories")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(LIT "...")
(PUNCT ")")
(NEWLINE)
(ID "lang")
(PUNCT ",")
(ID "enc")
(PUNCT "=")
(ID "getlocale")
(PUNCT "(")
(ID "category")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "   Language: ")
(PUNCT ",")
(ID "lang")
(KEYWORD or)
(LIT "(undefined)")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "   Encoding: ")
(PUNCT ",")
(ID "enc")
(KEYWORD or)
(LIT "(undefined)")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Locale settings after calling resetlocale():")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "-")
(PUNCT "*")
(LIT 72)
(PUNCT ")")
(NEWLINE)
(ID "resetlocale")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "category")
(KEYWORD in)
(ID "categories")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(LIT "...")
(PUNCT ")")
(NEWLINE)
(ID "lang")
(PUNCT ",")
(ID "enc")
(PUNCT "=")
(ID "getlocale")
(PUNCT "(")
(ID "category")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "   Language: ")
(PUNCT ",")
(ID "lang")
(KEYWORD or)
(LIT "(undefined)")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "   Encoding: ")
(PUNCT ",")
(ID "enc")
(KEYWORD or)
(LIT "(undefined)")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setlocale")
(PUNCT "(")
(ID "LC_ALL")
(PUNCT ",")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "NOTE:")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "setlocale(LC_ALL, \"\") does not support the default locale")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "given in the OS environment variables.")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Locale settings after calling setlocale(LC_ALL, \"\"):")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "-")
(PUNCT "*")
(LIT 72)
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "category")
(KEYWORD in)
(ID "categories")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(LIT "...")
(PUNCT ")")
(NEWLINE)
(ID "lang")
(PUNCT ",")
(ID "enc")
(PUNCT "=")
(ID "getlocale")
(PUNCT "(")
(ID "category")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "   Language: ")
(PUNCT ",")
(ID "lang")
(KEYWORD or)
(LIT "(undefined)")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "   Encoding: ")
(PUNCT ",")
(ID "enc")
(KEYWORD or)
(LIT "(undefined)")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "LC_MESSAGES")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "NameError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "__all__")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "LC_MESSAGES")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "Locale aliasing:")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "_print_locale")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Number formatting:")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "_test")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
