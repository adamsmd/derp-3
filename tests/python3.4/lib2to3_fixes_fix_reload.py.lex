(LIT "Fixer for reload().\n\nreload(s) -> imp.reload(s)")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(KEYWORD import)
(ID "fixer_base")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(PUNCT ".")
(ID "fixer_util")
(KEYWORD import)
(ID "ImportAndCall")
(PUNCT ",")
(ID "touch_import")
(NEWLINE)
(KEYWORD class)
(ID "FixReload")
(PUNCT "(")
(ID "fixer_base")
(PUNCT ".")
(ID "BaseFix")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "BM_compatible")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "order")
(PUNCT "=")
(LIT "pre")
(NEWLINE)
(ID "PATTERN")
(PUNCT "=")
(LIT "\n    power< 'reload'\n           trailer< lpar='('\n                    ( not(arglist | argument<any '=' any>) obj=any\n                      | obj=arglist<(not argument<any '=' any>) any ','> )\n                    rpar=')' >\n           after=any*\n    >\n    ")
(NEWLINE)
(KEYWORD def)
(ID "transform")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT "=")
(PUNCT "(")
(LIT "imp")
(PUNCT ",")
(LIT "reload")
(PUNCT ")")
(NEWLINE)
(ID "new")
(PUNCT "=")
(ID "ImportAndCall")
(PUNCT "(")
(ID "node")
(PUNCT ",")
(ID "results")
(PUNCT ",")
(ID "names")
(PUNCT ")")
(NEWLINE)
(ID "touch_import")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(LIT "imp")
(PUNCT ",")
(ID "node")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "new")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
