(LIT "JSON token scanner\n")
(NEWLINE)
(KEYWORD import)
(ID "re")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "_json")
(KEYWORD import)
(ID "make_scanner")
(KEYWORD as)
(ID "c_make_scanner")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c_make_scanner")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "make_scanner")
(PUNCT "]")
(NEWLINE)
(ID "NUMBER_RE")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "(-?(?:0|[1-9]\\d*))(\\.\\d+)?([eE][-+]?\\d+)?")
(PUNCT ",")
(PUNCT "(")
(ID "re")
(PUNCT ".")
(ID "VERBOSE")
(PUNCT "|")
(ID "re")
(PUNCT ".")
(ID "MULTILINE")
(PUNCT "|")
(ID "re")
(PUNCT ".")
(ID "DOTALL")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "py_make_scanner")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parse_object")
(PUNCT "=")
(ID "context")
(PUNCT ".")
(ID "parse_object")
(NEWLINE)
(ID "parse_array")
(PUNCT "=")
(ID "context")
(PUNCT ".")
(ID "parse_array")
(NEWLINE)
(ID "parse_string")
(PUNCT "=")
(ID "context")
(PUNCT ".")
(ID "parse_string")
(NEWLINE)
(ID "match_number")
(PUNCT "=")
(ID "NUMBER_RE")
(PUNCT ".")
(ID "match")
(NEWLINE)
(ID "strict")
(PUNCT "=")
(ID "context")
(PUNCT ".")
(ID "strict")
(NEWLINE)
(ID "parse_float")
(PUNCT "=")
(ID "context")
(PUNCT ".")
(ID "parse_float")
(NEWLINE)
(ID "parse_int")
(PUNCT "=")
(ID "context")
(PUNCT ".")
(ID "parse_int")
(NEWLINE)
(ID "parse_constant")
(PUNCT "=")
(ID "context")
(PUNCT ".")
(ID "parse_constant")
(NEWLINE)
(ID "object_hook")
(PUNCT "=")
(ID "context")
(PUNCT ".")
(ID "object_hook")
(NEWLINE)
(ID "object_pairs_hook")
(PUNCT "=")
(ID "context")
(PUNCT ".")
(ID "object_pairs_hook")
(NEWLINE)
(ID "memo")
(PUNCT "=")
(ID "context")
(PUNCT ".")
(ID "memo")
(NEWLINE)
(KEYWORD def)
(ID "_scan_once")
(PUNCT "(")
(ID "string")
(PUNCT ",")
(ID "idx")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nextchar")
(PUNCT "=")
(ID "string")
(PUNCT "[")
(ID "idx")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "IndexError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "StopIteration")
(PUNCT "(")
(ID "idx")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "nextchar")
(PUNCT "==")
(LIT "\"")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "parse_string")
(PUNCT "(")
(ID "string")
(PUNCT ",")
(ID "idx")
(PUNCT "+")
(LIT 1)
(PUNCT ",")
(ID "strict")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "nextchar")
(PUNCT "==")
(LIT "{")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "parse_object")
(PUNCT "(")
(PUNCT "(")
(ID "string")
(PUNCT ",")
(ID "idx")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(ID "strict")
(PUNCT ",")
(ID "_scan_once")
(PUNCT ",")
(ID "object_hook")
(PUNCT ",")
(ID "object_pairs_hook")
(PUNCT ",")
(ID "memo")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "nextchar")
(PUNCT "==")
(LIT "[")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "parse_array")
(PUNCT "(")
(PUNCT "(")
(ID "string")
(PUNCT ",")
(ID "idx")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(ID "_scan_once")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "nextchar")
(PUNCT "==")
(LIT "n")
(KEYWORD and)
(ID "string")
(PUNCT "[")
(ID "idx")
(PUNCT ":")
(ID "idx")
(PUNCT "+")
(LIT 4)
(PUNCT "]")
(PUNCT "==")
(LIT "null")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(PUNCT ",")
(ID "idx")
(PUNCT "+")
(LIT 4)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "nextchar")
(PUNCT "==")
(LIT "t")
(KEYWORD and)
(ID "string")
(PUNCT "[")
(ID "idx")
(PUNCT ":")
(ID "idx")
(PUNCT "+")
(LIT 4)
(PUNCT "]")
(PUNCT "==")
(LIT "true")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(PUNCT ",")
(ID "idx")
(PUNCT "+")
(LIT 4)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "nextchar")
(PUNCT "==")
(LIT "f")
(KEYWORD and)
(ID "string")
(PUNCT "[")
(ID "idx")
(PUNCT ":")
(ID "idx")
(PUNCT "+")
(LIT 5)
(PUNCT "]")
(PUNCT "==")
(LIT "false")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(PUNCT ",")
(ID "idx")
(PUNCT "+")
(LIT 5)
(NEWLINE)
(DEDENT)
(ID "m")
(PUNCT "=")
(ID "match_number")
(PUNCT "(")
(ID "string")
(PUNCT ",")
(ID "idx")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "m")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "integer")
(PUNCT ",")
(ID "frac")
(PUNCT ",")
(ID "exp")
(PUNCT "=")
(ID "m")
(PUNCT ".")
(ID "groups")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "frac")
(KEYWORD or)
(ID "exp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "res")
(PUNCT "=")
(ID "parse_float")
(PUNCT "(")
(ID "integer")
(PUNCT "+")
(PUNCT "(")
(ID "frac")
(KEYWORD or)
(LIT "")
(PUNCT ")")
(PUNCT "+")
(PUNCT "(")
(ID "exp")
(KEYWORD or)
(LIT "")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "res")
(PUNCT "=")
(ID "parse_int")
(PUNCT "(")
(ID "integer")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "res")
(PUNCT ",")
(ID "m")
(PUNCT ".")
(ID "end")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "nextchar")
(PUNCT "==")
(LIT "N")
(KEYWORD and)
(ID "string")
(PUNCT "[")
(ID "idx")
(PUNCT ":")
(ID "idx")
(PUNCT "+")
(LIT 3)
(PUNCT "]")
(PUNCT "==")
(LIT "NaN")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "parse_constant")
(PUNCT "(")
(LIT "NaN")
(PUNCT ")")
(PUNCT ",")
(ID "idx")
(PUNCT "+")
(LIT 3)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "nextchar")
(PUNCT "==")
(LIT "I")
(KEYWORD and)
(ID "string")
(PUNCT "[")
(ID "idx")
(PUNCT ":")
(ID "idx")
(PUNCT "+")
(LIT 8)
(PUNCT "]")
(PUNCT "==")
(LIT "Infinity")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "parse_constant")
(PUNCT "(")
(LIT "Infinity")
(PUNCT ")")
(PUNCT ",")
(ID "idx")
(PUNCT "+")
(LIT 8)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "nextchar")
(PUNCT "==")
(LIT "-")
(KEYWORD and)
(ID "string")
(PUNCT "[")
(ID "idx")
(PUNCT ":")
(ID "idx")
(PUNCT "+")
(LIT 9)
(PUNCT "]")
(PUNCT "==")
(LIT "-Infinity")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "parse_constant")
(PUNCT "(")
(LIT "-Infinity")
(PUNCT ")")
(PUNCT ",")
(ID "idx")
(PUNCT "+")
(LIT 9)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "StopIteration")
(PUNCT "(")
(ID "idx")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "scan_once")
(PUNCT "(")
(ID "string")
(PUNCT ",")
(ID "idx")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_scan_once")
(PUNCT "(")
(ID "string")
(PUNCT ",")
(ID "idx")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "memo")
(PUNCT ".")
(ID "clear")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "_scan_once")
(NEWLINE)
(DEDENT)
(ID "make_scanner")
(PUNCT "=")
(ID "c_make_scanner")
(KEYWORD or)
(ID "py_make_scanner")
(NEWLINE)
(ENDMARKER)
