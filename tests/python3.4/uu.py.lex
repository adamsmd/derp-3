(LIT "Implementation of the UUencode and UUdecode functions.\n\nencode(in_file, out_file [,name, mode])\ndecode(in_file [, out_file, mode])\n")
(NEWLINE)
(KEYWORD import)
(ID "binascii")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "Error")
(PUNCT ",")
(LIT "encode")
(PUNCT ",")
(LIT "decode")
(PUNCT "]")
(NEWLINE)
(KEYWORD class)
(ID "Error")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "encode")
(PUNCT "(")
(ID "in_file")
(PUNCT ",")
(ID "out_file")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mode")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Uuencode file")
(NEWLINE)
(ID "opened_files")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "in_file")
(PUNCT "==")
(LIT "-")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "in_file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ".")
(ID "buffer")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "in_file")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "basename")
(PUNCT "(")
(ID "in_file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "mode")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mode")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "in_file")
(PUNCT ")")
(PUNCT ".")
(ID "st_mode")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "in_file")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "in_file")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(NEWLINE)
(ID "opened_files")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "in_file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "out_file")
(PUNCT "==")
(LIT "-")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "out_file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "buffer")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "out_file")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "out_file")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "out_file")
(PUNCT ",")
(LIT "wb")
(PUNCT ")")
(NEWLINE)
(ID "opened_files")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "out_file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "name")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(LIT "-")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "mode")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mode")
(PUNCT "=")
(LIT 438)
(NEWLINE)
(DEDENT)
(ID "out_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(PUNCT "(")
(LIT "begin %o %s\n")
(PUNCT "%")
(PUNCT "(")
(PUNCT "(")
(ID "mode")
(PUNCT "&")
(LIT 511)
(PUNCT ")")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ")")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "ascii")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "data")
(PUNCT "=")
(ID "in_file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 45)
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "out_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "binascii")
(PUNCT ".")
(ID "b2a_uu")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "data")
(PUNCT "=")
(ID "in_file")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(LIT 45)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "out_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT #" \nend\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "f")
(KEYWORD in)
(ID "opened_files")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "decode")
(PUNCT "(")
(ID "in_file")
(PUNCT ",")
(ID "out_file")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "mode")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "quiet")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Decode uuencoded file")
(NEWLINE)
(ID "opened_files")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "in_file")
(PUNCT "==")
(LIT "-")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "in_file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ".")
(ID "buffer")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "in_file")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "in_file")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "in_file")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(NEWLINE)
(ID "opened_files")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "in_file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hdr")
(PUNCT "=")
(ID "in_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "hdr")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "No valid begin line found in input file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "hdr")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT #"begin")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "hdrfields")
(PUNCT "=")
(ID "hdr")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT #" ")
(PUNCT ",")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "hdrfields")
(PUNCT ")")
(PUNCT "==")
(LIT 3)
(KEYWORD and)
(ID "hdrfields")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(LIT #"begin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "int")
(PUNCT "(")
(ID "hdrfields")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ",")
(LIT 8)
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "out_file")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "out_file")
(PUNCT "=")
(ID "hdrfields")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(PUNCT ".")
(ID "rstrip")
(PUNCT "(")
(LIT #" \t\r\n\f")
(PUNCT ")")
(PUNCT ".")
(ID "decode")
(PUNCT "(")
(LIT "ascii")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "out_file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "Cannot overwrite existing file: %s")
(PUNCT "%")
(ID "out_file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "mode")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mode")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "hdrfields")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ",")
(LIT 8)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "out_file")
(PUNCT "==")
(LIT "-")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "out_file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "buffer")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "out_file")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fp")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "out_file")
(PUNCT ",")
(LIT "wb")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "chmod")
(PUNCT "(")
(ID "out_file")
(PUNCT ",")
(ID "mode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(ID "out_file")
(PUNCT "=")
(ID "fp")
(NEWLINE)
(ID "opened_files")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "out_file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(ID "in_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "s")
(KEYWORD and)
(ID "s")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(LIT #" \t\r\n\f")
(PUNCT ")")
(PUNCT "!=")
(LIT #"end")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "binascii")
(PUNCT ".")
(ID "a2b_uu")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "binascii")
(PUNCT ".")
(ID "Error")
(KEYWORD as)
(ID "v")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nbytes")
(PUNCT "=")
(PUNCT "(")
(PUNCT "(")
(PUNCT "(")
(ID "s")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "-")
(LIT 32)
(PUNCT ")")
(PUNCT "&")
(LIT 63)
(PUNCT ")")
(PUNCT "*")
(LIT 4)
(PUNCT "+")
(LIT 5)
(PUNCT ")")
(PUNCT "//")
(LIT 3)
(NEWLINE)
(ID "data")
(PUNCT "=")
(ID "binascii")
(PUNCT ".")
(ID "a2b_uu")
(PUNCT "(")
(ID "s")
(PUNCT "[")
(PUNCT ":")
(ID "nbytes")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "quiet")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "stderr")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "Warning: %s\n")
(PUNCT "%")
(ID "v")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "out_file")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(ID "in_file")
(PUNCT ".")
(ID "readline")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "Error")
(PUNCT "(")
(LIT "Truncated input file")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "f")
(KEYWORD in)
(ID "opened_files")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "test")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "uuencode/uudecode main program")
(NEWLINE)
(KEYWORD import)
(ID "optparse")
(NEWLINE)
(ID "parser")
(PUNCT "=")
(ID "optparse")
(PUNCT ".")
(ID "OptionParser")
(PUNCT "(")
(ID "usage")
(PUNCT "=")
(LIT "usage: %prog [-d] [-t] [input [output]]")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_option")
(PUNCT "(")
(LIT "-d")
(PUNCT ",")
(LIT "--decode")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "decode")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "Decode (instead of encode)?")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "action")
(PUNCT "=")
(LIT "store_true")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_option")
(PUNCT "(")
(LIT "-t")
(PUNCT ",")
(LIT "--text")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "text")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "data is text, encoded format unix-compatible text?")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "action")
(PUNCT "=")
(LIT "store_true")
(PUNCT ")")
(NEWLINE)
(PUNCT "(")
(ID "options")
(PUNCT ",")
(ID "args")
(PUNCT ")")
(PUNCT "=")
(ID "parser")
(PUNCT ".")
(ID "parse_args")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT ">")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "error")
(PUNCT "(")
(LIT "incorrect number of arguments")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "input")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdin")
(PUNCT ".")
(ID "buffer")
(NEWLINE)
(ID "output")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdout")
(PUNCT ".")
(ID "buffer")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "input")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT ">")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "output")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "options")
(PUNCT ".")
(ID "decode")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "options")
(PUNCT ".")
(ID "text")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "output")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "output")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "output")
(PUNCT ",")
(LIT "wb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(LIT ": cannot do -t to stdout")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "decode")
(PUNCT "(")
(ID "input")
(PUNCT ",")
(ID "output")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "options")
(PUNCT ".")
(ID "text")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "input")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "input")
(PUNCT "=")
(ID "open")
(PUNCT "(")
(ID "input")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(LIT ": cannot do -t from stdin")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "encode")
(PUNCT "(")
(ID "input")
(PUNCT ",")
(ID "output")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "test")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
