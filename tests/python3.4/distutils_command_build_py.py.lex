(LIT "distutils.command.build_py\n\nImplements the Distutils 'build_py' command.")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "importlib")
(PUNCT ".")
(ID "util")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD from)
(ID "glob")
(KEYWORD import)
(ID "glob")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "core")
(KEYWORD import)
(ID "Command")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "errors")
(KEYWORD import)
(PUNCT "*")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "util")
(KEYWORD import)
(ID "convert_path")
(PUNCT ",")
(ID "Mixin2to3")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(KEYWORD import)
(ID "log")
(NEWLINE)
(KEYWORD class)
(ID "build_py")
(PUNCT "(")
(ID "Command")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "description")
(PUNCT "=")
(LIT "\"build\" pure Python modules (copy to build directory)")
(NEWLINE)
(ID "user_options")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(LIT "build-lib=")
(PUNCT ",")
(LIT "d")
(PUNCT ",")
(LIT "directory to \"build\" (copy) to")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "compile")
(PUNCT ",")
(LIT "c")
(PUNCT ",")
(LIT "compile .py to .pyc")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "no-compile")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(LIT "don't compile .py files [default]")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "optimize=")
(PUNCT ",")
(LIT "O")
(PUNCT ",")
(LIT "also compile with optimization: -O1 for \"python -O\", ")
(LIT "-O2 for \"python -OO\", and -O0 to disable [default: -O0]")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "force")
(PUNCT ",")
(LIT "f")
(PUNCT ",")
(LIT "forcibly build everything (ignore file timestamps)")
(PUNCT ")")
(PUNCT ",")
(PUNCT "]")
(NEWLINE)
(ID "boolean_options")
(PUNCT "=")
(PUNCT "[")
(LIT "compile")
(PUNCT ",")
(LIT "force")
(PUNCT "]")
(NEWLINE)
(ID "negative_opt")
(PUNCT "=")
(PUNCT "{")
(LIT "no-compile")
(PUNCT ":")
(LIT "compile")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "initialize_options")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "build_lib")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "py_modules")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "package")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "package_data")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "package_dir")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "compile")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "optimize")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "force")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "finalize_options")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "set_undefined_options")
(PUNCT "(")
(LIT "build")
(PUNCT ",")
(PUNCT "(")
(LIT "build_lib")
(PUNCT ",")
(LIT "build_lib")
(PUNCT ")")
(PUNCT ",")
(PUNCT "(")
(LIT "force")
(PUNCT ",")
(LIT "force")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "packages")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "packages")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "py_modules")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "py_modules")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "package_data")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "package_data")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "package_dir")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "package_dir")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "name")
(PUNCT ",")
(ID "path")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "package_dir")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "package_dir")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "convert_path")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "data_files")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_data_files")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "optimize")
(PUNCT ",")
(ID "int")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "optimize")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "optimize")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(LIT 0)
(PUNCT "<=")
(ID "self")
(PUNCT ".")
(ID "optimize")
(PUNCT "<=")
(LIT 2)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "ValueError")
(PUNCT ",")
(ID "AssertionError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsOptionError")
(PUNCT "(")
(LIT "optimize must be 0, 1, or 2")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "run")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "py_modules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "build_modules")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "packages")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "build_packages")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "build_package_data")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "byte_compile")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_outputs")
(PUNCT "(")
(ID "include_bytecode")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_data_files")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Generate list of '(package,src_dir,build_dir,filenames)' tuples")
(NEWLINE)
(ID "data")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "packages")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "data")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "package")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "packages")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "src_dir")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_package_dir")
(PUNCT "(")
(ID "package")
(PUNCT ")")
(NEWLINE)
(ID "build_dir")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "*")
(PUNCT "(")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "build_lib")
(PUNCT "]")
(PUNCT "+")
(ID "package")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "plen")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "src_dir")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "plen")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "src_dir")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "filenames")
(PUNCT "=")
(PUNCT "[")
(ID "file")
(PUNCT "[")
(ID "plen")
(PUNCT ":")
(PUNCT "]")
(KEYWORD for)
(ID "file")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "find_data_files")
(PUNCT "(")
(ID "package")
(PUNCT ",")
(ID "src_dir")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(ID "data")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "package")
(PUNCT ",")
(ID "src_dir")
(PUNCT ",")
(ID "build_dir")
(PUNCT ",")
(ID "filenames")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "data")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "find_data_files")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "package")
(PUNCT ",")
(ID "src_dir")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return filenames for package's data files in 'src_dir'")
(NEWLINE)
(ID "globs")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "package_data")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "package_data")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "package")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "files")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "pattern")
(KEYWORD in)
(ID "globs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filelist")
(PUNCT "=")
(ID "glob")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "src_dir")
(PUNCT ",")
(ID "convert_path")
(PUNCT "(")
(ID "pattern")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "files")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(PUNCT "[")
(ID "fn")
(KEYWORD for)
(ID "fn")
(KEYWORD in)
(ID "filelist")
(KEYWORD if)
(ID "fn")
(KEYWORD not)
(KEYWORD in)
(ID "files")
(KEYWORD and)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isfile")
(PUNCT "(")
(ID "fn")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "files")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "build_package_data")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Copy data files into build directory")
(NEWLINE)
(ID "lastdir")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD for)
(ID "package")
(PUNCT ",")
(ID "src_dir")
(PUNCT ",")
(ID "build_dir")
(PUNCT ",")
(ID "filenames")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data_files")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "filename")
(KEYWORD in)
(ID "filenames")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "target")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "build_dir")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "mkpath")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "dirname")
(PUNCT "(")
(ID "target")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "copy_file")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "src_dir")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ",")
(ID "target")
(PUNCT ",")
(ID "preserve_mode")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_package_dir")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "package")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the directory, relative to the top of the source\n           distribution, where package 'package' should be found\n           (at least according to the 'package_dir' option, if any).")
(NEWLINE)
(ID "path")
(PUNCT "=")
(ID "package")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "package_dir")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "path")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "*")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tail")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(ID "path")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pdir")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "package_dir")
(PUNCT "[")
(LIT ".")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tail")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "path")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "path")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tail")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "pdir")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "*")
(ID "tail")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pdir")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "package_dir")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "pdir")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tail")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "pdir")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "tail")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "*")
(ID "tail")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "check_package")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "package")
(PUNCT ",")
(ID "package_dir")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "package_dir")
(PUNCT "!=")
(LIT "")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "package_dir")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsFileError")
(PUNCT "(")
(LIT "package directory '%s' does not exist")
(PUNCT "%")
(ID "package_dir")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isdir")
(PUNCT "(")
(ID "package_dir")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "DistutilsFileError")
(PUNCT "(")
(LIT "supposed package directory '%s' exists, ")
(LIT "but is not a directory")
(PUNCT "%")
(ID "package_dir")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "package")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "init_py")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "package_dir")
(PUNCT ",")
(LIT "__init__.py")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isfile")
(PUNCT "(")
(ID "init_py")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "init_py")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "log")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(PUNCT "(")
(LIT "package init file '%s' not found ")
(PUNCT "+")
(LIT "(or not a regular file)")
(PUNCT ")")
(PUNCT ",")
(ID "init_py")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "check_module")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "module")
(PUNCT ",")
(ID "module_file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "isfile")
(PUNCT "(")
(ID "module_file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "log")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "file %s (for module %s) not found")
(PUNCT ",")
(ID "module_file")
(PUNCT ",")
(ID "module")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "find_package_modules")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "package")
(PUNCT ",")
(ID "package_dir")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "check_package")
(PUNCT "(")
(ID "package")
(PUNCT ",")
(ID "package_dir")
(PUNCT ")")
(NEWLINE)
(ID "module_files")
(PUNCT "=")
(ID "glob")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "package_dir")
(PUNCT ",")
(LIT "*.py")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "modules")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "setup_script")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "abspath")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "distribution")
(PUNCT ".")
(ID "script_name")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "f")
(KEYWORD in)
(ID "module_files")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "abs_f")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "abspath")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "abs_f")
(PUNCT "!=")
(ID "setup_script")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "module")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "splitext")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "basename")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "modules")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "package")
(PUNCT ",")
(ID "module")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "debug_print")
(PUNCT "(")
(LIT "excluding %s")
(PUNCT "%")
(ID "setup_script")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "modules")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "find_modules")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Finds individually-specified Python modules, ie. those listed by\n        module name in 'self.py_modules'.  Returns a list of tuples (package,\n        module_base, filename): 'package' is a tuple of the path through\n        package-space to the module; 'module_base' is the bare (no\n        packages, no dots) module name, and 'filename' is the path to the\n        \".py\" file (relative to the distribution root) that implements the\n        module.\n        ")
(NEWLINE)
(ID "packages")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "modules")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "module")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "py_modules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "path")
(PUNCT "=")
(ID "module")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(ID "package")
(PUNCT "=")
(LIT ".")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "path")
(PUNCT "[")
(LIT 0)
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "module_base")
(PUNCT "=")
(ID "path")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(PUNCT "(")
(ID "package_dir")
(PUNCT ",")
(ID "checked")
(PUNCT ")")
(PUNCT "=")
(ID "packages")
(PUNCT "[")
(ID "package")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "package_dir")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_package_dir")
(PUNCT "(")
(ID "package")
(PUNCT ")")
(NEWLINE)
(ID "checked")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "checked")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "init_py")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "check_package")
(PUNCT "(")
(ID "package")
(PUNCT ",")
(ID "package_dir")
(PUNCT ")")
(NEWLINE)
(ID "packages")
(PUNCT "[")
(ID "package")
(PUNCT "]")
(PUNCT "=")
(PUNCT "(")
(ID "package_dir")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "init_py")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modules")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "package")
(PUNCT ",")
(LIT "__init__")
(PUNCT ",")
(ID "init_py")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "module_file")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "package_dir")
(PUNCT ",")
(ID "module_base")
(PUNCT "+")
(LIT ".py")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "check_module")
(PUNCT "(")
(ID "module")
(PUNCT ",")
(ID "module_file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "modules")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "package")
(PUNCT ",")
(ID "module_base")
(PUNCT ",")
(ID "module_file")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "modules")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "find_all_modules")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Compute the list of all modules that will be built, whether\n        they are specified one-module-at-a-time ('self.py_modules') or\n        by whole packages ('self.packages').  Return a list of tuples\n        (package, module, module_file), just like 'find_modules()' and\n        'find_package_modules()' do.")
(NEWLINE)
(ID "modules")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "py_modules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modules")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "find_modules")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "packages")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "package")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "packages")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "package_dir")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_package_dir")
(PUNCT "(")
(ID "package")
(PUNCT ")")
(NEWLINE)
(ID "m")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "find_package_modules")
(PUNCT "(")
(ID "package")
(PUNCT ",")
(ID "package_dir")
(PUNCT ")")
(NEWLINE)
(ID "modules")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "m")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "modules")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_source_files")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(ID "module")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(KEYWORD for)
(ID "module")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "find_all_modules")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_module_outfile")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "build_dir")
(PUNCT ",")
(ID "package")
(PUNCT ",")
(ID "module")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "outfile_path")
(PUNCT "=")
(PUNCT "[")
(ID "build_dir")
(PUNCT "]")
(PUNCT "+")
(ID "list")
(PUNCT "(")
(ID "package")
(PUNCT ")")
(PUNCT "+")
(PUNCT "[")
(ID "module")
(PUNCT "+")
(LIT ".py")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "*")
(ID "outfile_path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_outputs")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "include_bytecode")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modules")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "find_all_modules")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "outputs")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(PUNCT "(")
(ID "package")
(PUNCT ",")
(ID "module")
(PUNCT ",")
(ID "module_file")
(PUNCT ")")
(KEYWORD in)
(ID "modules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "package")
(PUNCT "=")
(ID "package")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(ID "filename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_module_outfile")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "build_lib")
(PUNCT ",")
(ID "package")
(PUNCT ",")
(ID "module")
(PUNCT ")")
(NEWLINE)
(ID "outputs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "include_bytecode")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "compile")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "outputs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "importlib")
(PUNCT ".")
(ID "util")
(PUNCT ".")
(ID "cache_from_source")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "debug_override")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "optimize")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "outputs")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "importlib")
(PUNCT ".")
(ID "util")
(PUNCT ".")
(ID "cache_from_source")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "debug_override")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "outputs")
(PUNCT "+=")
(PUNCT "[")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "build_dir")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(KEYWORD for)
(ID "package")
(PUNCT ",")
(ID "src_dir")
(PUNCT ",")
(ID "build_dir")
(PUNCT ",")
(ID "filenames")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data_files")
(KEYWORD for)
(ID "filename")
(KEYWORD in)
(ID "filenames")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "outputs")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "build_module")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "module")
(PUNCT ",")
(ID "module_file")
(PUNCT ",")
(ID "package")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "package")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "package")
(PUNCT "=")
(ID "package")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "package")
(PUNCT ",")
(PUNCT "(")
(ID "list")
(PUNCT ",")
(ID "tuple")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "'package' must be a string (dot-separated), list, or tuple")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "outfile")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_module_outfile")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "build_lib")
(PUNCT ",")
(ID "package")
(PUNCT ",")
(ID "module")
(PUNCT ")")
(NEWLINE)
(ID "dir")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "dirname")
(PUNCT "(")
(ID "outfile")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "mkpath")
(PUNCT "(")
(ID "dir")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "copy_file")
(PUNCT "(")
(ID "module_file")
(PUNCT ",")
(ID "outfile")
(PUNCT ",")
(ID "preserve_mode")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "build_modules")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modules")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "find_modules")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(PUNCT "(")
(ID "package")
(PUNCT ",")
(ID "module")
(PUNCT ",")
(ID "module_file")
(PUNCT ")")
(KEYWORD in)
(ID "modules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "build_module")
(PUNCT "(")
(ID "module")
(PUNCT ",")
(ID "module_file")
(PUNCT ",")
(ID "package")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "build_packages")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "package")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "packages")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "package_dir")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_package_dir")
(PUNCT "(")
(ID "package")
(PUNCT ")")
(NEWLINE)
(ID "modules")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "find_package_modules")
(PUNCT "(")
(ID "package")
(PUNCT ",")
(ID "package_dir")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(PUNCT "(")
(ID "package_")
(PUNCT ",")
(ID "module")
(PUNCT ",")
(ID "module_file")
(PUNCT ")")
(KEYWORD in)
(ID "modules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "package")
(PUNCT "==")
(ID "package_")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "build_module")
(PUNCT "(")
(ID "module")
(PUNCT ",")
(ID "module_file")
(PUNCT ",")
(ID "package")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "byte_compile")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "files")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "dont_write_bytecode")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "byte-compiling is disabled, skipping.")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "util")
(KEYWORD import)
(ID "byte_compile")
(NEWLINE)
(ID "prefix")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "build_lib")
(NEWLINE)
(KEYWORD if)
(ID "prefix")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "!=")
(ID "os")
(PUNCT ".")
(ID "sep")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "prefix")
(PUNCT "=")
(ID "prefix")
(PUNCT "+")
(ID "os")
(PUNCT ".")
(ID "sep")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "compile")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "byte_compile")
(PUNCT "(")
(ID "files")
(PUNCT ",")
(ID "optimize")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "force")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "force")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(ID "prefix")
(PUNCT ",")
(ID "dry_run")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "dry_run")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "optimize")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "byte_compile")
(PUNCT "(")
(ID "files")
(PUNCT ",")
(ID "optimize")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "optimize")
(PUNCT ",")
(ID "force")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "force")
(PUNCT ",")
(ID "prefix")
(PUNCT "=")
(ID "prefix")
(PUNCT ",")
(ID "dry_run")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "dry_run")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "build_py_2to3")
(PUNCT "(")
(ID "build_py")
(PUNCT ",")
(ID "Mixin2to3")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "run")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "updated_files")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "py_modules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "build_modules")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "packages")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "build_packages")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "build_package_data")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "run_2to3")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "updated_files")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "byte_compile")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "get_outputs")
(PUNCT "(")
(ID "include_bytecode")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "build_module")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "module")
(PUNCT ",")
(ID "module_file")
(PUNCT ",")
(ID "package")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "res")
(PUNCT "=")
(ID "build_py")
(PUNCT ".")
(ID "build_module")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "module")
(PUNCT ",")
(ID "module_file")
(PUNCT ",")
(ID "package")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "res")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "updated_files")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "res")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "res")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
