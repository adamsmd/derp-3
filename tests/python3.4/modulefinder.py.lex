(LIT "Find modules used by a script, using introspection.")
(NEWLINE)
(KEYWORD import)
(ID "dis")
(NEWLINE)
(KEYWORD import)
(ID "importlib")
(PUNCT ".")
(ID "_bootstrap")
(NEWLINE)
(KEYWORD import)
(ID "importlib")
(PUNCT ".")
(ID "machinery")
(NEWLINE)
(KEYWORD import)
(ID "marshal")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "types")
(NEWLINE)
(KEYWORD import)
(ID "struct")
(NEWLINE)
(KEYWORD import)
(ID "warnings")
(NEWLINE)
(KEYWORD with)
(ID "warnings")
(PUNCT ".")
(ID "catch_warnings")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "warnings")
(PUNCT ".")
(ID "simplefilter")
(PUNCT "(")
(LIT "ignore")
(PUNCT ",")
(ID "PendingDeprecationWarning")
(PUNCT ")")
(NEWLINE)
(KEYWORD import)
(ID "imp")
(NEWLINE)
(DEDENT)
(ID "LOAD_CONST")
(PUNCT "=")
(ID "bytes")
(PUNCT "(")
(PUNCT "[")
(ID "dis")
(PUNCT ".")
(ID "opname")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "LOAD_CONST")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "IMPORT_NAME")
(PUNCT "=")
(ID "bytes")
(PUNCT "(")
(PUNCT "[")
(ID "dis")
(PUNCT ".")
(ID "opname")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "IMPORT_NAME")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "STORE_NAME")
(PUNCT "=")
(ID "bytes")
(PUNCT "(")
(PUNCT "[")
(ID "dis")
(PUNCT ".")
(ID "opname")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "STORE_NAME")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "STORE_GLOBAL")
(PUNCT "=")
(ID "bytes")
(PUNCT "(")
(PUNCT "[")
(ID "dis")
(PUNCT ".")
(ID "opname")
(PUNCT ".")
(ID "index")
(PUNCT "(")
(LIT "STORE_GLOBAL")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "STORE_OPS")
(PUNCT "=")
(PUNCT "[")
(ID "STORE_NAME")
(PUNCT ",")
(ID "STORE_GLOBAL")
(PUNCT "]")
(NEWLINE)
(ID "HAVE_ARGUMENT")
(PUNCT "=")
(ID "bytes")
(PUNCT "(")
(PUNCT "[")
(ID "dis")
(PUNCT ".")
(ID "HAVE_ARGUMENT")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "packagePathMap")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "AddPackagePath")
(PUNCT "(")
(ID "packagename")
(PUNCT ",")
(ID "path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "packagePathMap")
(PUNCT ".")
(ID "setdefault")
(PUNCT "(")
(ID "packagename")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "replacePackageMap")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "ReplacePackage")
(PUNCT "(")
(ID "oldname")
(PUNCT ",")
(ID "newname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "replacePackageMap")
(PUNCT "[")
(ID "oldname")
(PUNCT "]")
(PUNCT "=")
(ID "newname")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "Module")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "path")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "__name__")
(PUNCT "=")
(ID "name")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__file__")
(PUNCT "=")
(ID "file")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__path__")
(PUNCT "=")
(ID "path")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__code__")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "globalnames")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "starimports")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(LIT "Module(%r")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "__file__")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "+")
(LIT ", %r")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__file__")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "__path__")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "+")
(LIT ", %r")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__path__")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "s")
(PUNCT "=")
(ID "s")
(PUNCT "+")
(LIT ")")
(NEWLINE)
(KEYWORD return)
(ID "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ModuleFinder")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "path")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "debug")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "excludes")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(ID "replace_paths")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "path")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "path")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "path")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "path")
(PUNCT "=")
(ID "path")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "modules")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "badmodules")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT "=")
(ID "debug")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "indent")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "excludes")
(PUNCT "=")
(ID "excludes")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "replace_paths")
(PUNCT "=")
(ID "replace_paths")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "processed_paths")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "msg")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "level")
(PUNCT ",")
(ID "str")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "level")
(PUNCT "<=")
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "indent")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "   ")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "arg")
(KEYWORD in)
(ID "args")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "repr")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "msgin")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "level")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "level")
(PUNCT "<=")
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "indent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "indent")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "msg")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "msgout")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "level")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "level")
(PUNCT "<=")
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "indent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "indent")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "msg")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "run_script")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "pathname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msg")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(LIT "run_script")
(PUNCT ",")
(ID "pathname")
(PUNCT ")")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "pathname")
(PUNCT ")")
(KEYWORD as)
(ID "fp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stuff")
(PUNCT "=")
(PUNCT "(")
(LIT "")
(PUNCT ",")
(LIT "r")
(PUNCT ",")
(ID "imp")
(PUNCT ".")
(ID "PY_SOURCE")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "load_module")
(PUNCT "(")
(LIT "__main__")
(PUNCT ",")
(ID "fp")
(PUNCT ",")
(ID "pathname")
(PUNCT ",")
(ID "stuff")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "load_file")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "pathname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dir")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "pathname")
(PUNCT ")")
(NEWLINE)
(ID "name")
(PUNCT ",")
(ID "ext")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "splitext")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "pathname")
(PUNCT ")")
(KEYWORD as)
(ID "fp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stuff")
(PUNCT "=")
(PUNCT "(")
(ID "ext")
(PUNCT ",")
(LIT "r")
(PUNCT ",")
(ID "imp")
(PUNCT ".")
(ID "PY_SOURCE")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "load_module")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "fp")
(PUNCT ",")
(ID "pathname")
(PUNCT ",")
(ID "stuff")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "import_hook")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "caller")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "fromlist")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "level")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msg")
(PUNCT "(")
(LIT 3)
(PUNCT ",")
(LIT "import_hook")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "caller")
(PUNCT ",")
(ID "fromlist")
(PUNCT ",")
(ID "level")
(PUNCT ")")
(NEWLINE)
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "determine_parent")
(PUNCT "(")
(ID "caller")
(PUNCT ",")
(ID "level")
(PUNCT "=")
(ID "level")
(PUNCT ")")
(NEWLINE)
(ID "q")
(PUNCT ",")
(ID "tail")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "find_head_package")
(PUNCT "(")
(ID "parent")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(ID "m")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "load_tail")
(PUNCT "(")
(ID "q")
(PUNCT ",")
(ID "tail")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "fromlist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "q")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "m")
(PUNCT ".")
(ID "__path__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "ensure_fromlist")
(PUNCT "(")
(ID "m")
(PUNCT ",")
(ID "fromlist")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "determine_parent")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "caller")
(PUNCT ",")
(ID "level")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgin")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "determine_parent")
(PUNCT ",")
(ID "caller")
(PUNCT ",")
(ID "level")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "caller")
(KEYWORD or)
(ID "level")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "determine_parent -> None")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "pname")
(PUNCT "=")
(ID "caller")
(PUNCT ".")
(ID "__name__")
(NEWLINE)
(KEYWORD if)
(ID "level")
(PUNCT ">=")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "caller")
(PUNCT ".")
(ID "__path__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "level")
(PUNCT "-=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "level")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(ID "pname")
(PUNCT "]")
(NEWLINE)
(KEYWORD assert)
(ID "parent")
(KEYWORD is)
(ID "caller")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "determine_parent ->")
(PUNCT ",")
(ID "parent")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "parent")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "pname")
(PUNCT ".")
(ID "count")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(PUNCT "<")
(ID "level")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ImportError")
(PUNCT "(")
(LIT "relative importpath too deep")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "pname")
(PUNCT "=")
(LIT ".")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "pname")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(ID "level")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(ID "pname")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "determine_parent ->")
(PUNCT ",")
(ID "parent")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "parent")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "caller")
(PUNCT ".")
(ID "__path__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(ID "pname")
(PUNCT "]")
(NEWLINE)
(KEYWORD assert)
(ID "caller")
(KEYWORD is)
(ID "parent")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "determine_parent ->")
(PUNCT ",")
(ID "parent")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "parent")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT ".")
(KEYWORD in)
(ID "pname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "pname")
(PUNCT ".")
(ID "rfind")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(ID "pname")
(PUNCT "=")
(ID "pname")
(PUNCT "[")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(NEWLINE)
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(ID "pname")
(PUNCT "]")
(NEWLINE)
(KEYWORD assert)
(ID "parent")
(PUNCT ".")
(ID "__name__")
(PUNCT "==")
(ID "pname")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "determine_parent ->")
(PUNCT ",")
(ID "parent")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "parent")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "determine_parent -> None")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "find_head_package")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "parent")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgin")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "find_head_package")
(PUNCT ",")
(ID "parent")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT ".")
(KEYWORD in)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "name")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(ID "head")
(PUNCT "=")
(ID "name")
(PUNCT "[")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(NEWLINE)
(ID "tail")
(PUNCT "=")
(ID "name")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "head")
(PUNCT "=")
(ID "name")
(NEWLINE)
(ID "tail")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "parent")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "qname")
(PUNCT "=")
(LIT "%s.%s")
(PUNCT "%")
(PUNCT "(")
(ID "parent")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "head")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "qname")
(PUNCT "=")
(ID "head")
(NEWLINE)
(DEDENT)
(ID "q")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "import_module")
(PUNCT "(")
(ID "head")
(PUNCT ",")
(ID "qname")
(PUNCT ",")
(ID "parent")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "q")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "find_head_package ->")
(PUNCT ",")
(PUNCT "(")
(ID "q")
(PUNCT ",")
(ID "tail")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "q")
(PUNCT ",")
(ID "tail")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "parent")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "qname")
(PUNCT "=")
(ID "head")
(NEWLINE)
(ID "parent")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "q")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "import_module")
(PUNCT "(")
(ID "head")
(PUNCT ",")
(ID "qname")
(PUNCT ",")
(ID "parent")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "q")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "find_head_package ->")
(PUNCT ",")
(PUNCT "(")
(ID "q")
(PUNCT ",")
(ID "tail")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "q")
(PUNCT ",")
(ID "tail")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "raise ImportError: No module named")
(PUNCT ",")
(ID "qname")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ImportError")
(PUNCT "(")
(LIT "No module named ")
(PUNCT "+")
(ID "qname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "load_tail")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "q")
(PUNCT ",")
(ID "tail")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgin")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "load_tail")
(PUNCT ",")
(ID "q")
(PUNCT ",")
(ID "tail")
(PUNCT ")")
(NEWLINE)
(ID "m")
(PUNCT "=")
(ID "q")
(NEWLINE)
(KEYWORD while)
(ID "tail")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "tail")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "i")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(ID "i")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "tail")
(PUNCT ")")
(NEWLINE)
(ID "head")
(PUNCT ",")
(ID "tail")
(PUNCT "=")
(ID "tail")
(PUNCT "[")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(PUNCT ",")
(ID "tail")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "mname")
(PUNCT "=")
(LIT "%s.%s")
(PUNCT "%")
(PUNCT "(")
(ID "m")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "head")
(PUNCT ")")
(NEWLINE)
(ID "m")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "import_module")
(PUNCT "(")
(ID "head")
(PUNCT ",")
(ID "mname")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "m")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "raise ImportError: No module named")
(PUNCT ",")
(ID "mname")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ImportError")
(PUNCT "(")
(LIT "No module named ")
(PUNCT "+")
(ID "mname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "load_tail ->")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "m")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "ensure_fromlist")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "fromlist")
(PUNCT ",")
(ID "recursive")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msg")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(LIT "ensure_fromlist")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "fromlist")
(PUNCT ",")
(ID "recursive")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "sub")
(KEYWORD in)
(ID "fromlist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "sub")
(PUNCT "==")
(LIT "*")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "recursive")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "all")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "find_all_submodules")
(PUNCT "(")
(ID "m")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "all")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "ensure_fromlist")
(PUNCT "(")
(ID "m")
(PUNCT ",")
(ID "all")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "m")
(PUNCT ",")
(ID "sub")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subname")
(PUNCT "=")
(LIT "%s.%s")
(PUNCT "%")
(PUNCT "(")
(ID "m")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "sub")
(PUNCT ")")
(NEWLINE)
(ID "submod")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "import_module")
(PUNCT "(")
(ID "sub")
(PUNCT ",")
(ID "subname")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "submod")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ImportError")
(PUNCT "(")
(LIT "No module named ")
(PUNCT "+")
(ID "subname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "find_all_submodules")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "m")
(PUNCT ".")
(ID "__path__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "modules")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "suffixes")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "suffixes")
(PUNCT "+=")
(ID "importlib")
(PUNCT ".")
(ID "machinery")
(PUNCT ".")
(ID "EXTENSION_SUFFIXES")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "suffixes")
(PUNCT "+=")
(ID "importlib")
(PUNCT ".")
(ID "machinery")
(PUNCT ".")
(ID "SOURCE_SUFFIXES")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "suffixes")
(PUNCT "+=")
(ID "importlib")
(PUNCT ".")
(ID "machinery")
(PUNCT ".")
(ID "BYTECODE_SUFFIXES")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "dir")
(KEYWORD in)
(ID "m")
(PUNCT ".")
(ID "__path__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "names")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "listdir")
(PUNCT "(")
(ID "dir")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msg")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(LIT "can't list directory")
(PUNCT ",")
(ID "dir")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mod")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD for)
(ID "suff")
(KEYWORD in)
(ID "suffixes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "suff")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "name")
(PUNCT "[")
(PUNCT "-")
(ID "n")
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(ID "suff")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mod")
(PUNCT "=")
(ID "name")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(ID "n")
(PUNCT "]")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "mod")
(KEYWORD and)
(ID "mod")
(PUNCT "!=")
(LIT "__init__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "modules")
(PUNCT "[")
(ID "mod")
(PUNCT "]")
(PUNCT "=")
(ID "mod")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "modules")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "import_module")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "partname")
(PUNCT ",")
(ID "fqname")
(PUNCT ",")
(ID "parent")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgin")
(PUNCT "(")
(LIT 3)
(PUNCT ",")
(LIT "import_module")
(PUNCT ",")
(ID "partname")
(PUNCT ",")
(ID "fqname")
(PUNCT ",")
(ID "parent")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(ID "fqname")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 3)
(PUNCT ",")
(LIT "import_module ->")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "m")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "fqname")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "badmodules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 3)
(PUNCT ",")
(LIT "import_module -> None")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "parent")
(KEYWORD and)
(ID "parent")
(PUNCT ".")
(ID "__path__")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 3)
(PUNCT ",")
(LIT "import_module -> None")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fp")
(PUNCT ",")
(ID "pathname")
(PUNCT ",")
(ID "stuff")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "find_module")
(PUNCT "(")
(ID "partname")
(PUNCT ",")
(ID "parent")
(KEYWORD and)
(ID "parent")
(PUNCT ".")
(ID "__path__")
(PUNCT ",")
(ID "parent")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 3)
(PUNCT ",")
(LIT "import_module ->")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "load_module")
(PUNCT "(")
(ID "fqname")
(PUNCT ",")
(ID "fp")
(PUNCT ",")
(ID "pathname")
(PUNCT ",")
(ID "stuff")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "fp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fp")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "parent")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setattr")
(PUNCT "(")
(ID "parent")
(PUNCT ",")
(ID "partname")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 3)
(PUNCT ",")
(LIT "import_module ->")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "m")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "load_module")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fqname")
(PUNCT ",")
(ID "fp")
(PUNCT ",")
(ID "pathname")
(PUNCT ",")
(ID "file_info")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "suffix")
(PUNCT ",")
(ID "mode")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(ID "file_info")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "msgin")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(LIT "load_module")
(PUNCT ",")
(ID "fqname")
(PUNCT ",")
(ID "fp")
(KEYWORD and)
(LIT "fp")
(PUNCT ",")
(ID "pathname")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "type")
(PUNCT "==")
(ID "imp")
(PUNCT ".")
(ID "PKG_DIRECTORY")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "load_package")
(PUNCT "(")
(ID "fqname")
(PUNCT ",")
(ID "pathname")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(LIT "load_module ->")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "m")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "type")
(PUNCT "==")
(ID "imp")
(PUNCT ".")
(ID "PY_SOURCE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "co")
(PUNCT "=")
(ID "compile")
(PUNCT "(")
(ID "fp")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(PUNCT ")")
(PUNCT "+")
(LIT "\n")
(PUNCT ",")
(ID "pathname")
(PUNCT ",")
(LIT "exec")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "type")
(PUNCT "==")
(ID "imp")
(PUNCT ".")
(ID "PY_COMPILED")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "marshal_data")
(PUNCT "=")
(ID "importlib")
(PUNCT ".")
(ID "_bootstrap")
(PUNCT ".")
(ID "_validate_bytecode_header")
(PUNCT "(")
(ID "fp")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(LIT "raise ImportError: ")
(PUNCT "+")
(ID "str")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(PUNCT ",")
(ID "pathname")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(ID "co")
(PUNCT "=")
(ID "marshal")
(PUNCT ".")
(ID "loads")
(PUNCT "(")
(ID "marshal_data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "co")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "m")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "add_module")
(PUNCT "(")
(ID "fqname")
(PUNCT ")")
(NEWLINE)
(ID "m")
(PUNCT ".")
(ID "__file__")
(PUNCT "=")
(ID "pathname")
(NEWLINE)
(KEYWORD if)
(ID "co")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "replace_paths")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "co")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "replace_paths_in_code")
(PUNCT "(")
(ID "co")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "m")
(PUNCT ".")
(ID "__code__")
(PUNCT "=")
(ID "co")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "scan_code")
(PUNCT "(")
(ID "co")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(LIT "load_module ->")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "m")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_add_badmodule")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "caller")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "badmodules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "badmodules")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "caller")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "badmodules")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "[")
(ID "caller")
(PUNCT ".")
(ID "__name__")
(PUNCT "]")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "badmodules")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "[")
(LIT "-")
(PUNCT "]")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_safe_import_hook")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "caller")
(PUNCT ",")
(ID "fromlist")
(PUNCT ",")
(ID "level")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "badmodules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_add_badmodule")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "caller")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "import_hook")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "caller")
(PUNCT ",")
(ID "level")
(PUNCT "=")
(ID "level")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(KEYWORD as)
(ID "msg")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msg")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(LIT "ImportError:")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_add_badmodule")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "caller")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "fromlist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "sub")
(KEYWORD in)
(ID "fromlist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "sub")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "badmodules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_add_badmodule")
(PUNCT "(")
(ID "sub")
(PUNCT ",")
(ID "caller")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "import_hook")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "caller")
(PUNCT ",")
(PUNCT "[")
(ID "sub")
(PUNCT "]")
(PUNCT ",")
(ID "level")
(PUNCT "=")
(ID "level")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(KEYWORD as)
(ID "msg")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msg")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(LIT "ImportError:")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "fullname")
(PUNCT "=")
(ID "name")
(PUNCT "+")
(LIT ".")
(PUNCT "+")
(ID "sub")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_add_badmodule")
(PUNCT "(")
(ID "fullname")
(PUNCT ",")
(ID "caller")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "scan_opcodes_25")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "co")
(PUNCT ",")
(ID "unpack")
(PUNCT "=")
(ID "struct")
(PUNCT ".")
(ID "unpack")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "co")
(PUNCT ".")
(ID "co_code")
(NEWLINE)
(ID "names")
(PUNCT "=")
(ID "co")
(PUNCT ".")
(ID "co_names")
(NEWLINE)
(ID "consts")
(PUNCT "=")
(ID "co")
(PUNCT ".")
(ID "co_consts")
(NEWLINE)
(ID "LOAD_LOAD_AND_IMPORT")
(PUNCT "=")
(ID "LOAD_CONST")
(PUNCT "+")
(ID "LOAD_CONST")
(PUNCT "+")
(ID "IMPORT_NAME")
(NEWLINE)
(KEYWORD while)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "bytes")
(PUNCT "(")
(PUNCT "[")
(ID "code")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "c")
(KEYWORD in)
(ID "STORE_OPS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "oparg")
(PUNCT ",")
(PUNCT "=")
(ID "unpack")
(PUNCT "(")
(LIT "<H")
(PUNCT ",")
(ID "code")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD yield)
(LIT "store")
(PUNCT ",")
(PUNCT "(")
(ID "names")
(PUNCT "[")
(ID "oparg")
(PUNCT "]")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(ID "code")
(PUNCT "=")
(ID "code")
(PUNCT "[")
(LIT 3)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "code")
(PUNCT "[")
(PUNCT ":")
(LIT 9)
(PUNCT ":")
(LIT 3)
(PUNCT "]")
(PUNCT "==")
(ID "LOAD_LOAD_AND_IMPORT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "oparg_1")
(PUNCT ",")
(ID "oparg_2")
(PUNCT ",")
(ID "oparg_3")
(PUNCT "=")
(ID "unpack")
(PUNCT "(")
(LIT "<xHxHxH")
(PUNCT ",")
(ID "code")
(PUNCT "[")
(PUNCT ":")
(LIT 9)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "level")
(PUNCT "=")
(ID "consts")
(PUNCT "[")
(ID "oparg_1")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "level")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(LIT "absolute_import")
(PUNCT ",")
(PUNCT "(")
(ID "consts")
(PUNCT "[")
(ID "oparg_2")
(PUNCT "]")
(PUNCT ",")
(ID "names")
(PUNCT "[")
(ID "oparg_3")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(LIT "relative_import")
(PUNCT ",")
(PUNCT "(")
(ID "level")
(PUNCT ",")
(ID "consts")
(PUNCT "[")
(ID "oparg_2")
(PUNCT "]")
(PUNCT ",")
(ID "names")
(PUNCT "[")
(ID "oparg_3")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "code")
(PUNCT "=")
(ID "code")
(PUNCT "[")
(LIT 9)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "c")
(PUNCT ">=")
(ID "HAVE_ARGUMENT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "code")
(PUNCT "[")
(LIT 3)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "code")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "scan_code")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "co")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "co")
(PUNCT ".")
(ID "co_code")
(NEWLINE)
(ID "scanner")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "scan_opcodes_25")
(NEWLINE)
(KEYWORD for)
(ID "what")
(PUNCT ",")
(ID "args")
(KEYWORD in)
(ID "scanner")
(PUNCT "(")
(ID "co")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "what")
(PUNCT "==")
(LIT "store")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT ",")
(PUNCT "=")
(ID "args")
(NEWLINE)
(ID "m")
(PUNCT ".")
(ID "globalnames")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "what")
(PUNCT "==")
(LIT "absolute_import")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fromlist")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(ID "args")
(NEWLINE)
(ID "have_star")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "fromlist")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(LIT "*")
(KEYWORD in)
(ID "fromlist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "have_star")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "fromlist")
(PUNCT "=")
(PUNCT "[")
(ID "f")
(KEYWORD for)
(ID "f")
(KEYWORD in)
(ID "fromlist")
(KEYWORD if)
(ID "f")
(PUNCT "!=")
(LIT "*")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_safe_import_hook")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "fromlist")
(PUNCT ",")
(ID "level")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "have_star")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mm")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "m")
(PUNCT ".")
(ID "__path__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mm")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "modules")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "m")
(PUNCT ".")
(ID "__name__")
(PUNCT "+")
(LIT ".")
(PUNCT "+")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "mm")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mm")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "modules")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "mm")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT ".")
(ID "globalnames")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "mm")
(PUNCT ".")
(ID "globalnames")
(PUNCT ")")
(NEWLINE)
(ID "m")
(PUNCT ".")
(ID "starimports")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "mm")
(PUNCT ".")
(ID "starimports")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "mm")
(PUNCT ".")
(ID "__code__")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT ".")
(ID "starimports")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT ".")
(ID "starimports")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "what")
(PUNCT "==")
(LIT "relative_import")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "level")
(PUNCT ",")
(ID "fromlist")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(ID "args")
(NEWLINE)
(KEYWORD if)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_safe_import_hook")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "m")
(PUNCT ",")
(ID "fromlist")
(PUNCT ",")
(ID "level")
(PUNCT "=")
(ID "level")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parent")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "determine_parent")
(PUNCT "(")
(ID "m")
(PUNCT ",")
(ID "level")
(PUNCT "=")
(ID "level")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_safe_import_hook")
(PUNCT "(")
(ID "parent")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID "fromlist")
(PUNCT ",")
(ID "level")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(ID "what")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "c")
(KEYWORD in)
(ID "co")
(PUNCT ".")
(ID "co_consts")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(ID "type")
(PUNCT "(")
(ID "co")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "scan_code")
(PUNCT "(")
(ID "c")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "load_package")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fqname")
(PUNCT ",")
(ID "pathname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgin")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(LIT "load_package")
(PUNCT ",")
(ID "fqname")
(PUNCT ",")
(ID "pathname")
(PUNCT ")")
(NEWLINE)
(ID "newname")
(PUNCT "=")
(ID "replacePackageMap")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "fqname")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "newname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fqname")
(PUNCT "=")
(ID "newname")
(NEWLINE)
(DEDENT)
(ID "m")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "add_module")
(PUNCT "(")
(ID "fqname")
(PUNCT ")")
(NEWLINE)
(ID "m")
(PUNCT ".")
(ID "__file__")
(PUNCT "=")
(ID "pathname")
(NEWLINE)
(ID "m")
(PUNCT ".")
(ID "__path__")
(PUNCT "=")
(PUNCT "[")
(ID "pathname")
(PUNCT "]")
(NEWLINE)
(ID "m")
(PUNCT ".")
(ID "__path__")
(PUNCT "=")
(ID "m")
(PUNCT ".")
(ID "__path__")
(PUNCT "+")
(ID "packagePathMap")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "fqname")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "fp")
(PUNCT ",")
(ID "buf")
(PUNCT ",")
(ID "stuff")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "find_module")
(PUNCT "(")
(LIT "__init__")
(PUNCT ",")
(ID "m")
(PUNCT ".")
(ID "__path__")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "load_module")
(PUNCT "(")
(ID "fqname")
(PUNCT ",")
(ID "fp")
(PUNCT ",")
(ID "buf")
(PUNCT ",")
(ID "stuff")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(LIT "load_package ->")
(PUNCT ",")
(ID "m")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "m")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "fp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fp")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "add_module")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fqname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "fqname")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "modules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(ID "fqname")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(ID "fqname")
(PUNCT "]")
(PUNCT "=")
(ID "m")
(PUNCT "=")
(ID "Module")
(PUNCT "(")
(ID "fqname")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "m")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "find_module")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "path")
(PUNCT ",")
(ID "parent")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "parent")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fullname")
(PUNCT "=")
(ID "parent")
(PUNCT ".")
(ID "__name__")
(PUNCT "+")
(LIT ".")
(PUNCT "+")
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fullname")
(PUNCT "=")
(ID "name")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "fullname")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "excludes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 3)
(PUNCT ",")
(LIT "find_module -> Excluded")
(PUNCT ",")
(ID "fullname")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "ImportError")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "path")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(KEYWORD in)
(ID "sys")
(PUNCT ".")
(ID "builtin_module_names")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(PUNCT "(")
(LIT "")
(PUNCT ",")
(LIT "")
(PUNCT ",")
(ID "imp")
(PUNCT ".")
(ID "C_BUILTIN")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "path")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "path")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "imp")
(PUNCT ".")
(ID "find_module")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "report")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Print a report to stdout, listing the found modules with their\n        paths, as well as modules that are missing, or seem to be missing.\n        ")
(NEWLINE)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "  %-25s %s")
(PUNCT "%")
(PUNCT "(")
(LIT "Name")
(PUNCT ",")
(LIT "File")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "  %-25s %s")
(PUNCT "%")
(PUNCT "(")
(LIT "----")
(PUNCT ",")
(LIT "----")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "keys")
(PUNCT "=")
(ID "sorted")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "modules")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "key")
(KEYWORD in)
(ID "keys")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "modules")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "m")
(PUNCT ".")
(ID "__path__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "P")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "m")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(LIT "%-25s")
(PUNCT "%")
(ID "key")
(PUNCT ",")
(ID "m")
(PUNCT ".")
(ID "__file__")
(KEYWORD or)
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "missing")
(PUNCT ",")
(ID "maybe")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "any_missing_maybe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "missing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Missing modules:")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "missing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mods")
(PUNCT "=")
(ID "sorted")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "badmodules")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "?")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(LIT "imported from")
(PUNCT ",")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "mods")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "maybe")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Submodules that appear to be missing, but could also be")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "global names in the parent package:")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "maybe")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mods")
(PUNCT "=")
(ID "sorted")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "badmodules")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "?")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(LIT "imported from")
(PUNCT ",")
(LIT ", ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "mods")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "any_missing")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a list of modules that appear to be missing. Use\n        any_missing_maybe() if you want to know which modules are\n        certain to be missing, and which *may* be missing.\n        ")
(NEWLINE)
(ID "missing")
(PUNCT ",")
(ID "maybe")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "any_missing_maybe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "missing")
(PUNCT "+")
(ID "maybe")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "any_missing_maybe")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return two lists, one with modules that are certainly missing\n        and one with modules that *may* be missing. The latter names could\n        either be submodules *or* just global names in the package.\n\n        The reason it can't always be determined is that it's impossible to\n        tell which names are imported when \"from module import *\" is done\n        with an extension module, short of actually importing it.\n        ")
(NEWLINE)
(ID "missing")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "maybe")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "badmodules")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "excludes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "i")
(PUNCT "=")
(ID "name")
(PUNCT ".")
(ID "rfind")
(PUNCT "(")
(LIT ".")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "i")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "missing")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "subname")
(PUNCT "=")
(ID "name")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "pkgname")
(PUNCT "=")
(ID "name")
(PUNCT "[")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(NEWLINE)
(ID "pkg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "modules")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "pkgname")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "pkg")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "pkgname")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "badmodules")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "missing")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "subname")
(KEYWORD in)
(ID "pkg")
(PUNCT ".")
(ID "globalnames")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "pkg")
(PUNCT ".")
(ID "starimports")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "maybe")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "missing")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "missing")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "missing")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "maybe")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "missing")
(PUNCT ",")
(ID "maybe")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "replace_paths_in_code")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "co")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_filename")
(PUNCT "=")
(ID "original_filename")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normpath")
(PUNCT "(")
(ID "co")
(PUNCT ".")
(ID "co_filename")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "f")
(PUNCT ",")
(ID "r")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "replace_paths")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "original_filename")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new_filename")
(PUNCT "=")
(ID "r")
(PUNCT "+")
(ID "original_filename")
(PUNCT "[")
(ID "len")
(PUNCT "(")
(ID "f")
(PUNCT ")")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "debug")
(KEYWORD and)
(ID "original_filename")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "processed_paths")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "new_filename")
(PUNCT "!=")
(ID "original_filename")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(LIT "co_filename %r changed to %r")
(PUNCT "%")
(PUNCT "(")
(ID "original_filename")
(PUNCT ",")
(ID "new_filename")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "msgout")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(LIT "co_filename %r remains unchanged")
(PUNCT "%")
(PUNCT "(")
(ID "original_filename")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "processed_paths")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "original_filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "consts")
(PUNCT "=")
(ID "list")
(PUNCT "(")
(ID "co")
(PUNCT ".")
(ID "co_consts")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "consts")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "consts")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ",")
(ID "type")
(PUNCT "(")
(ID "co")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "consts")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "replace_paths_in_code")
(PUNCT "(")
(ID "consts")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "types")
(PUNCT ".")
(ID "CodeType")
(PUNCT "(")
(ID "co")
(PUNCT ".")
(ID "co_argcount")
(PUNCT ",")
(ID "co")
(PUNCT ".")
(ID "co_kwonlyargcount")
(PUNCT ",")
(ID "co")
(PUNCT ".")
(ID "co_nlocals")
(PUNCT ",")
(ID "co")
(PUNCT ".")
(ID "co_stacksize")
(PUNCT ",")
(ID "co")
(PUNCT ".")
(ID "co_flags")
(PUNCT ",")
(ID "co")
(PUNCT ".")
(ID "co_code")
(PUNCT ",")
(ID "tuple")
(PUNCT "(")
(ID "consts")
(PUNCT ")")
(PUNCT ",")
(ID "co")
(PUNCT ".")
(ID "co_names")
(PUNCT ",")
(ID "co")
(PUNCT ".")
(ID "co_varnames")
(PUNCT ",")
(ID "new_filename")
(PUNCT ",")
(ID "co")
(PUNCT ".")
(ID "co_name")
(PUNCT ",")
(ID "co")
(PUNCT ".")
(ID "co_firstlineno")
(PUNCT ",")
(ID "co")
(PUNCT ".")
(ID "co_lnotab")
(PUNCT ",")
(ID "co")
(PUNCT ".")
(ID "co_freevars")
(PUNCT ",")
(ID "co")
(PUNCT ".")
(ID "co_cellvars")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "test")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "getopt")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "opts")
(PUNCT ",")
(ID "args")
(PUNCT "=")
(ID "getopt")
(PUNCT ".")
(ID "getopt")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT "dmp:qx:")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "getopt")
(PUNCT ".")
(ID "error")
(KEYWORD as)
(ID "msg")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "debug")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "domods")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "addpath")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "exclude")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "o")
(PUNCT ",")
(ID "a")
(KEYWORD in)
(ID "opts")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "o")
(PUNCT "==")
(LIT "-d")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "debug")
(PUNCT "=")
(ID "debug")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "o")
(PUNCT "==")
(LIT "-m")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "domods")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "o")
(PUNCT "==")
(LIT "-p")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "addpath")
(PUNCT "=")
(ID "addpath")
(PUNCT "+")
(ID "a")
(PUNCT ".")
(ID "split")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "pathsep")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "o")
(PUNCT "==")
(LIT "-q")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "debug")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "o")
(PUNCT "==")
(LIT "-x")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "exclude")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "args")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "script")
(PUNCT "=")
(LIT "hello.py")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "script")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "path")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "path")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "path")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "dirname")
(PUNCT "(")
(ID "script")
(PUNCT ")")
(NEWLINE)
(ID "path")
(PUNCT "=")
(ID "addpath")
(PUNCT "+")
(ID "path")
(NEWLINE)
(KEYWORD if)
(ID "debug")
(PUNCT ">")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "path:")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "item")
(KEYWORD in)
(ID "path")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "   ")
(PUNCT ",")
(ID "repr")
(PUNCT "(")
(ID "item")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "mf")
(PUNCT "=")
(ID "ModuleFinder")
(PUNCT "(")
(ID "path")
(PUNCT ",")
(ID "debug")
(PUNCT ",")
(ID "exclude")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "arg")
(KEYWORD in)
(ID "args")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "arg")
(PUNCT "==")
(LIT "-m")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "domods")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "domods")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "arg")
(PUNCT "[")
(PUNCT "-")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(PUNCT "==")
(LIT ".*")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mf")
(PUNCT ".")
(ID "import_hook")
(PUNCT "(")
(ID "arg")
(PUNCT "[")
(PUNCT ":")
(PUNCT "-")
(LIT 2)
(PUNCT "]")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(PUNCT "[")
(LIT "*")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mf")
(PUNCT ".")
(ID "import_hook")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mf")
(PUNCT ".")
(ID "load_file")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "mf")
(PUNCT ".")
(ID "run_script")
(PUNCT "(")
(ID "script")
(PUNCT ")")
(NEWLINE)
(ID "mf")
(PUNCT ".")
(ID "report")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "mf")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mf")
(PUNCT "=")
(ID "test")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyboardInterrupt")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "\n[interrupted]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
