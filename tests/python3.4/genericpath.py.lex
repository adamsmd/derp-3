(LIT "\nPath operations common to more than one OS\nDo not use directly.  The OS specific modules import the appropriate\nfunctions from this module themselves.\n")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "stat")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "commonprefix")
(PUNCT ",")
(LIT "exists")
(PUNCT ",")
(LIT "getatime")
(PUNCT ",")
(LIT "getctime")
(PUNCT ",")
(LIT "getmtime")
(PUNCT ",")
(LIT "getsize")
(PUNCT ",")
(LIT "isdir")
(PUNCT ",")
(LIT "isfile")
(PUNCT ",")
(LIT "samefile")
(PUNCT ",")
(LIT "sameopenfile")
(PUNCT ",")
(LIT "samestat")
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "exists")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Test whether a path exists.  Returns False for broken symbolic links")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "isfile")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Test whether a path is a regular file")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "st")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "path")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "stat")
(PUNCT ".")
(ID "S_ISREG")
(PUNCT "(")
(ID "st")
(PUNCT ".")
(ID "st_mode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "isdir")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return true if the pathname refers to an existing directory.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "st")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "stat")
(PUNCT ".")
(ID "S_ISDIR")
(PUNCT "(")
(ID "st")
(PUNCT ".")
(ID "st_mode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getsize")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the size of a file, reported by os.stat().")
(NEWLINE)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(PUNCT ".")
(ID "st_size")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getmtime")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the last modification time of a file, reported by os.stat().")
(NEWLINE)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(PUNCT ".")
(ID "st_mtime")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getatime")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the last access time of a file, reported by os.stat().")
(NEWLINE)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(PUNCT ".")
(ID "st_atime")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getctime")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the metadata change time of a file, reported by os.stat().")
(NEWLINE)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(PUNCT ".")
(ID "st_ctime")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "commonprefix")
(PUNCT "(")
(ID "m")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Given a list of pathnames, returns the longest common leading component")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "m")
(PUNCT ":")
(KEYWORD return)
(LIT "")
(NEWLINE)
(ID "s1")
(PUNCT "=")
(ID "min")
(PUNCT "(")
(ID "m")
(PUNCT ")")
(NEWLINE)
(ID "s2")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(ID "m")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "c")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "s1")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "c")
(PUNCT "!=")
(ID "s2")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "s1")
(PUNCT "[")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "s1")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "samestat")
(PUNCT "(")
(ID "s1")
(PUNCT ",")
(ID "s2")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Test whether two stat buffers reference the same file")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID "s1")
(PUNCT ".")
(ID "st_ino")
(PUNCT "==")
(ID "s2")
(PUNCT ".")
(ID "st_ino")
(KEYWORD and)
(ID "s1")
(PUNCT ".")
(ID "st_dev")
(PUNCT "==")
(ID "s2")
(PUNCT ".")
(ID "st_dev")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "samefile")
(PUNCT "(")
(ID "f1")
(PUNCT ",")
(ID "f2")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Test whether two pathnames reference the same actual file")
(NEWLINE)
(ID "s1")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "f1")
(PUNCT ")")
(NEWLINE)
(ID "s2")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "stat")
(PUNCT "(")
(ID "f2")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "samestat")
(PUNCT "(")
(ID "s1")
(PUNCT ",")
(ID "s2")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "sameopenfile")
(PUNCT "(")
(ID "fp1")
(PUNCT ",")
(ID "fp2")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Test whether two open file objects reference the same file")
(NEWLINE)
(ID "s1")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "fstat")
(PUNCT "(")
(ID "fp1")
(PUNCT ")")
(NEWLINE)
(ID "s2")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "fstat")
(PUNCT "(")
(ID "fp2")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "samestat")
(PUNCT "(")
(ID "s1")
(PUNCT ",")
(ID "s2")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_splitext")
(PUNCT "(")
(ID "p")
(PUNCT ",")
(ID "sep")
(PUNCT ",")
(ID "altsep")
(PUNCT ",")
(ID "extsep")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Split the extension from a pathname.\n\n    Extension is everything from the last dot to the end, ignoring\n    leading dots.  Returns \"(root, ext)\"; ext may be empty.")
(NEWLINE)
(ID "sepIndex")
(PUNCT "=")
(ID "p")
(PUNCT ".")
(ID "rfind")
(PUNCT "(")
(ID "sep")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "altsep")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "altsepIndex")
(PUNCT "=")
(ID "p")
(PUNCT ".")
(ID "rfind")
(PUNCT "(")
(ID "altsep")
(PUNCT ")")
(NEWLINE)
(ID "sepIndex")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(ID "sepIndex")
(PUNCT ",")
(ID "altsepIndex")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "dotIndex")
(PUNCT "=")
(ID "p")
(PUNCT ".")
(ID "rfind")
(PUNCT "(")
(ID "extsep")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "dotIndex")
(PUNCT ">")
(ID "sepIndex")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filenameIndex")
(PUNCT "=")
(ID "sepIndex")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD while)
(ID "filenameIndex")
(PUNCT "<")
(ID "dotIndex")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "p")
(PUNCT "[")
(ID "filenameIndex")
(PUNCT ":")
(ID "filenameIndex")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(PUNCT "!=")
(ID "extsep")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "p")
(PUNCT "[")
(PUNCT ":")
(ID "dotIndex")
(PUNCT "]")
(PUNCT ",")
(ID "p")
(PUNCT "[")
(ID "dotIndex")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "filenameIndex")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "p")
(PUNCT ",")
(ID "p")
(PUNCT "[")
(PUNCT ":")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ENDMARKER)
