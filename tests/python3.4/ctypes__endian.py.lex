(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD from)
(ID "ctypes")
(KEYWORD import)
(PUNCT "*")
(NEWLINE)
(ID "_array_type")
(PUNCT "=")
(ID "type")
(PUNCT "(")
(ID "Array")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "_other_endian")
(PUNCT "(")
(ID "typ")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return the type with the 'other' byte order.  Simple types like\n    c_int and so on already have __ctype_be__ and __ctype_le__\n    attributes which contain the types, for more complicated types\n    arrays and structures are supported.\n    ")
(NEWLINE)
(KEYWORD if)
(ID "hasattr")
(PUNCT "(")
(ID "typ")
(PUNCT ",")
(ID "_OTHER_ENDIAN")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "getattr")
(PUNCT "(")
(ID "typ")
(PUNCT ",")
(ID "_OTHER_ENDIAN")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "typ")
(PUNCT ",")
(ID "_array_type")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_other_endian")
(PUNCT "(")
(ID "typ")
(PUNCT ".")
(ID "_type_")
(PUNCT ")")
(PUNCT "*")
(ID "typ")
(PUNCT ".")
(ID "_length_")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "issubclass")
(PUNCT "(")
(ID "typ")
(PUNCT ",")
(ID "Structure")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "typ")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "This type does not support other endian: %s")
(PUNCT "%")
(ID "typ")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "_swapped_meta")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "Structure")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__setattr__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attrname")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "attrname")
(PUNCT "==")
(LIT "_fields_")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fields")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "desc")
(KEYWORD in)
(ID "value")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "desc")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "typ")
(PUNCT "=")
(ID "desc")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "rest")
(PUNCT "=")
(ID "desc")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(ID "fields")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(ID "_other_endian")
(PUNCT "(")
(ID "typ")
(PUNCT ")")
(PUNCT ")")
(PUNCT "+")
(ID "rest")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "value")
(PUNCT "=")
(ID "fields")
(NEWLINE)
(DEDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__setattr__")
(PUNCT "(")
(ID "attrname")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "byteorder")
(PUNCT "==")
(LIT "little")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_OTHER_ENDIAN")
(PUNCT "=")
(LIT "__ctype_be__")
(NEWLINE)
(ID "LittleEndianStructure")
(PUNCT "=")
(ID "Structure")
(NEWLINE)
(KEYWORD class)
(ID "BigEndianStructure")
(PUNCT "(")
(ID "Structure")
(PUNCT ",")
(ID "metaclass")
(PUNCT "=")
(ID "_swapped_meta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Structure with big endian byte order")
(NEWLINE)
(ID "_swappedbytes_")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "sys")
(PUNCT ".")
(ID "byteorder")
(PUNCT "==")
(LIT "big")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_OTHER_ENDIAN")
(PUNCT "=")
(LIT "__ctype_le__")
(NEWLINE)
(ID "BigEndianStructure")
(PUNCT "=")
(ID "Structure")
(NEWLINE)
(KEYWORD class)
(ID "LittleEndianStructure")
(PUNCT "(")
(ID "Structure")
(PUNCT ",")
(ID "metaclass")
(PUNCT "=")
(ID "_swapped_meta")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Structure with little endian byte order")
(NEWLINE)
(ID "_swappedbytes_")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "Invalid byteorder")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
