(LIT "Internal support module for sre")
(NEWLINE)
(KEYWORD from)
(ID "sre_constants")
(KEYWORD import)
(PUNCT "*")
(NEWLINE)
(KEYWORD from)
(ID "_sre")
(KEYWORD import)
(ID "MAXREPEAT")
(NEWLINE)
(ID "SPECIAL_CHARS")
(PUNCT "=")
(LIT ".\\[{()*+?^$|")
(NEWLINE)
(ID "REPEAT_CHARS")
(PUNCT "=")
(LIT "*+?{")
(NEWLINE)
(ID "DIGITS")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(LIT "0123456789")
(PUNCT ")")
(NEWLINE)
(ID "OCTDIGITS")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(LIT "01234567")
(PUNCT ")")
(NEWLINE)
(ID "HEXDIGITS")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(LIT "0123456789abcdefABCDEF")
(PUNCT ")")
(NEWLINE)
(ID "WHITESPACE")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(LIT " \t\n\r\v\f")
(PUNCT ")")
(NEWLINE)
(ID "ESCAPES")
(PUNCT "=")
(PUNCT "{")
(LIT "\\a")
(PUNCT ":")
(PUNCT "(")
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(LIT "\a")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "\\b")
(PUNCT ":")
(PUNCT "(")
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(LIT "\b")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "\\f")
(PUNCT ":")
(PUNCT "(")
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(LIT "\f")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "\\n")
(PUNCT ":")
(PUNCT "(")
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(LIT "\n")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "\\r")
(PUNCT ":")
(PUNCT "(")
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(LIT "\r")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "\\t")
(PUNCT ":")
(PUNCT "(")
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(LIT "\t")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "\\v")
(PUNCT ":")
(PUNCT "(")
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(LIT "\v")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(LIT "\\\\")
(PUNCT ":")
(PUNCT "(")
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(LIT "\\")
(PUNCT ")")
(PUNCT ")")
(PUNCT "}")
(NEWLINE)
(ID "CATEGORIES")
(PUNCT "=")
(PUNCT "{")
(LIT "\\A")
(PUNCT ":")
(PUNCT "(")
(ID "AT")
(PUNCT ",")
(ID "AT_BEGINNING_STRING")
(PUNCT ")")
(PUNCT ",")
(LIT "\\b")
(PUNCT ":")
(PUNCT "(")
(ID "AT")
(PUNCT ",")
(ID "AT_BOUNDARY")
(PUNCT ")")
(PUNCT ",")
(LIT "\\B")
(PUNCT ":")
(PUNCT "(")
(ID "AT")
(PUNCT ",")
(ID "AT_NON_BOUNDARY")
(PUNCT ")")
(PUNCT ",")
(LIT "\\d")
(PUNCT ":")
(PUNCT "(")
(ID "IN")
(PUNCT ",")
(PUNCT "[")
(PUNCT "(")
(ID "CATEGORY")
(PUNCT ",")
(ID "CATEGORY_DIGIT")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(LIT "\\D")
(PUNCT ":")
(PUNCT "(")
(ID "IN")
(PUNCT ",")
(PUNCT "[")
(PUNCT "(")
(ID "CATEGORY")
(PUNCT ",")
(ID "CATEGORY_NOT_DIGIT")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(LIT "\\s")
(PUNCT ":")
(PUNCT "(")
(ID "IN")
(PUNCT ",")
(PUNCT "[")
(PUNCT "(")
(ID "CATEGORY")
(PUNCT ",")
(ID "CATEGORY_SPACE")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(LIT "\\S")
(PUNCT ":")
(PUNCT "(")
(ID "IN")
(PUNCT ",")
(PUNCT "[")
(PUNCT "(")
(ID "CATEGORY")
(PUNCT ",")
(ID "CATEGORY_NOT_SPACE")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(LIT "\\w")
(PUNCT ":")
(PUNCT "(")
(ID "IN")
(PUNCT ",")
(PUNCT "[")
(PUNCT "(")
(ID "CATEGORY")
(PUNCT ",")
(ID "CATEGORY_WORD")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(LIT "\\W")
(PUNCT ":")
(PUNCT "(")
(ID "IN")
(PUNCT ",")
(PUNCT "[")
(PUNCT "(")
(ID "CATEGORY")
(PUNCT ",")
(ID "CATEGORY_NOT_WORD")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(PUNCT ",")
(LIT "\\Z")
(PUNCT ":")
(PUNCT "(")
(ID "AT")
(PUNCT ",")
(ID "AT_END_STRING")
(PUNCT ")")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(ID "FLAGS")
(PUNCT "=")
(PUNCT "{")
(LIT "i")
(PUNCT ":")
(ID "SRE_FLAG_IGNORECASE")
(PUNCT ",")
(LIT "L")
(PUNCT ":")
(ID "SRE_FLAG_LOCALE")
(PUNCT ",")
(LIT "m")
(PUNCT ":")
(ID "SRE_FLAG_MULTILINE")
(PUNCT ",")
(LIT "s")
(PUNCT ":")
(ID "SRE_FLAG_DOTALL")
(PUNCT ",")
(LIT "x")
(PUNCT ":")
(ID "SRE_FLAG_VERBOSE")
(PUNCT ",")
(LIT "a")
(PUNCT ":")
(ID "SRE_FLAG_ASCII")
(PUNCT ",")
(LIT "t")
(PUNCT ":")
(ID "SRE_FLAG_TEMPLATE")
(PUNCT ",")
(LIT "u")
(PUNCT ":")
(ID "SRE_FLAG_UNICODE")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD class)
(ID "Pattern")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "flags")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "open")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "groups")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "groupdict")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "opengroup")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "gid")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "groups")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "groups")
(PUNCT "=")
(ID "gid")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "name")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ogid")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "groupdict")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "name")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "ogid")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "redefinition of group name %s as group %d; ")
(LIT "was group %d")
(PUNCT "%")
(PUNCT "(")
(ID "repr")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ",")
(ID "gid")
(PUNCT ",")
(ID "ogid")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "groupdict")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(PUNCT "=")
(ID "gid")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "open")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "gid")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "gid")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "closegroup")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "gid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "open")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "gid")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "checkgroup")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "gid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "gid")
(PUNCT "<")
(ID "self")
(PUNCT ".")
(ID "groups")
(KEYWORD and)
(ID "gid")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "open")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "SubPattern")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "pattern")
(PUNCT ",")
(ID "data")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "pattern")
(PUNCT "=")
(ID "pattern")
(NEWLINE)
(KEYWORD if)
(ID "data")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "=")
(ID "data")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "width")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dump")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "level")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nl")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "seqtypes")
(PUNCT "=")
(PUNCT "(")
(ID "tuple")
(PUNCT ",")
(ID "list")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "op")
(PUNCT ",")
(ID "av")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "level")
(PUNCT "*")
(LIT "  ")
(PUNCT "+")
(ID "op")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT "")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "op")
(PUNCT "==")
(ID "IN")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "op")
(PUNCT ",")
(ID "a")
(KEYWORD in)
(ID "av")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(PUNCT "(")
(ID "level")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT "*")
(LIT "  ")
(PUNCT "+")
(ID "op")
(PUNCT ",")
(ID "a")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "op")
(PUNCT "==")
(ID "BRANCH")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "i")
(PUNCT ",")
(ID "a")
(KEYWORD in)
(ID "enumerate")
(PUNCT "(")
(ID "av")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "i")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "level")
(PUNCT "*")
(LIT "  ")
(PUNCT "+")
(LIT "or")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "a")
(PUNCT ".")
(ID "dump")
(PUNCT "(")
(ID "level")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "op")
(PUNCT "==")
(ID "GROUPREF_EXISTS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "condgroup")
(PUNCT ",")
(ID "item_yes")
(PUNCT ",")
(ID "item_no")
(PUNCT "=")
(ID "av")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "")
(PUNCT ",")
(ID "condgroup")
(PUNCT ")")
(NEWLINE)
(ID "item_yes")
(PUNCT ".")
(ID "dump")
(PUNCT "(")
(ID "level")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "item_no")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "level")
(PUNCT "*")
(LIT "  ")
(PUNCT "+")
(LIT "else")
(PUNCT ")")
(NEWLINE)
(ID "item_no")
(PUNCT ".")
(ID "dump")
(PUNCT "(")
(ID "level")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "isinstance")
(PUNCT "(")
(ID "av")
(PUNCT ",")
(ID "seqtypes")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nl")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD for)
(ID "a")
(KEYWORD in)
(ID "av")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "SubPattern")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "nl")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "a")
(PUNCT ".")
(ID "dump")
(PUNCT "(")
(ID "level")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(ID "nl")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "nl")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT " ")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT "")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(ID "a")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT "")
(PUNCT ")")
(NEWLINE)
(ID "nl")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "nl")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "")
(PUNCT ",")
(ID "av")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "repr")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__len__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__delitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "index")
(PUNCT ",")
(ID "slice")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "SubPattern")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "pattern")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__setitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ",")
(ID "code")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(PUNCT "=")
(ID "code")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "insert")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ",")
(ID "code")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(ID "index")
(PUNCT ",")
(ID "code")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "code")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "code")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getwidth")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "width")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "width")
(NEWLINE)
(DEDENT)
(ID "lo")
(PUNCT "=")
(ID "hi")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "UNITCODES")
(PUNCT "=")
(PUNCT "(")
(ID "ANY")
(PUNCT ",")
(ID "RANGE")
(PUNCT ",")
(ID "IN")
(PUNCT ",")
(ID "LITERAL")
(PUNCT ",")
(ID "NOT_LITERAL")
(PUNCT ",")
(ID "CATEGORY")
(PUNCT ")")
(NEWLINE)
(ID "REPEATCODES")
(PUNCT "=")
(PUNCT "(")
(ID "MIN_REPEAT")
(PUNCT ",")
(ID "MAX_REPEAT")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "op")
(PUNCT ",")
(ID "av")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "op")
(KEYWORD is)
(ID "BRANCH")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "MAXREPEAT")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(ID "j")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD for)
(ID "av")
(KEYWORD in)
(ID "av")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "l")
(PUNCT ",")
(ID "h")
(PUNCT "=")
(ID "av")
(PUNCT ".")
(ID "getwidth")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "min")
(PUNCT "(")
(ID "i")
(PUNCT ",")
(ID "l")
(PUNCT ")")
(NEWLINE)
(ID "j")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(ID "j")
(PUNCT ",")
(ID "h")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "lo")
(PUNCT "=")
(ID "lo")
(PUNCT "+")
(ID "i")
(NEWLINE)
(ID "hi")
(PUNCT "=")
(ID "hi")
(PUNCT "+")
(ID "j")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "op")
(KEYWORD is)
(ID "CALL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT ",")
(ID "j")
(PUNCT "=")
(ID "av")
(PUNCT ".")
(ID "getwidth")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "lo")
(PUNCT "=")
(ID "lo")
(PUNCT "+")
(ID "i")
(NEWLINE)
(ID "hi")
(PUNCT "=")
(ID "hi")
(PUNCT "+")
(ID "j")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "op")
(KEYWORD is)
(ID "SUBPATTERN")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT ",")
(ID "j")
(PUNCT "=")
(ID "av")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "getwidth")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "lo")
(PUNCT "=")
(ID "lo")
(PUNCT "+")
(ID "i")
(NEWLINE)
(ID "hi")
(PUNCT "=")
(ID "hi")
(PUNCT "+")
(ID "j")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "op")
(KEYWORD in)
(ID "REPEATCODES")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT ",")
(ID "j")
(PUNCT "=")
(ID "av")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(PUNCT ".")
(ID "getwidth")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "lo")
(PUNCT "=")
(ID "lo")
(PUNCT "+")
(ID "i")
(PUNCT "*")
(ID "av")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "hi")
(PUNCT "=")
(ID "hi")
(PUNCT "+")
(ID "j")
(PUNCT "*")
(ID "av")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "op")
(KEYWORD in)
(ID "UNITCODES")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lo")
(PUNCT "=")
(ID "lo")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "hi")
(PUNCT "=")
(ID "hi")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "op")
(PUNCT "==")
(ID "SUCCESS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "width")
(PUNCT "=")
(ID "min")
(PUNCT "(")
(ID "lo")
(PUNCT ",")
(ID "MAXREPEAT")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ",")
(ID "min")
(PUNCT "(")
(ID "hi")
(PUNCT ",")
(ID "MAXREPEAT")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "width")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Tokenizer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "string")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "istext")
(PUNCT "=")
(ID "isinstance")
(PUNCT "(")
(ID "string")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "string")
(PUNCT "=")
(ID "string")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "index")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__next")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__next")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "index")
(PUNCT ">=")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "string")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "next")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "char")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "string")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "index")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "index")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "char")
(KEYWORD and)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "istext")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "char")
(PUNCT "=")
(ID "chr")
(PUNCT "(")
(ID "char")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "char")
(PUNCT "==")
(LIT "\\")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "string")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "index")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "IndexError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "bogus escape (end of line)")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "istext")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "chr")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "char")
(PUNCT "=")
(ID "char")
(PUNCT "+")
(ID "c")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "index")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "index")
(PUNCT "+")
(ID "len")
(PUNCT "(")
(ID "char")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "next")
(PUNCT "=")
(ID "char")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "match")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "char")
(PUNCT ",")
(ID "skip")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "char")
(PUNCT "==")
(ID "self")
(PUNCT ".")
(ID "next")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "skip")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "__next")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "this")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "next")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__next")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "this")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getwhile")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "n")
(PUNCT ",")
(ID "charset")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD for)
(ID "_")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "next")
(NEWLINE)
(KEYWORD if)
(ID "c")
(KEYWORD not)
(KEYWORD in)
(ID "charset")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "result")
(PUNCT "+=")
(ID "c")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "__next")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "tell")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "index")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "next")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "seek")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "index")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "next")
(PUNCT "=")
(ID "index")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "isident")
(PUNCT "(")
(ID "char")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "warnings")
(NEWLINE)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "sre_parse.isident() will be removed in 3.5")
(PUNCT ",")
(ID "DeprecationWarning")
(PUNCT ",")
(ID "stacklevel")
(PUNCT "=")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "a")
(PUNCT "<=")
(ID "char")
(PUNCT "<=")
(LIT "z")
(KEYWORD or)
(LIT "A")
(PUNCT "<=")
(ID "char")
(PUNCT "<=")
(LIT "Z")
(KEYWORD or)
(ID "char")
(PUNCT "==")
(LIT "_")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "isdigit")
(PUNCT "(")
(ID "char")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "warnings")
(NEWLINE)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "sre_parse.isdigit() will be removed in 3.5")
(PUNCT ",")
(ID "DeprecationWarning")
(PUNCT ",")
(ID "stacklevel")
(PUNCT "=")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT "0")
(PUNCT "<=")
(ID "char")
(PUNCT "<=")
(LIT "9")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "isname")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "warnings")
(NEWLINE)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "sre_parse.isname() will be removed in 3.5")
(PUNCT ",")
(ID "DeprecationWarning")
(PUNCT ",")
(ID "stacklevel")
(PUNCT "=")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "isident")
(PUNCT "(")
(ID "name")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "char")
(KEYWORD in)
(ID "name")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isident")
(PUNCT "(")
(ID "char")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID "isdigit")
(PUNCT "(")
(ID "char")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_class_escape")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "escape")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "ESCAPES")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "escape")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "code")
(NEWLINE)
(DEDENT)
(ID "code")
(PUNCT "=")
(ID "CATEGORIES")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "escape")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "code")
(KEYWORD and)
(ID "code")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(ID "IN")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "code")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "escape")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "c")
(PUNCT "==")
(LIT "x")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "escape")
(PUNCT "+=")
(ID "source")
(PUNCT ".")
(ID "getwhile")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(ID "HEXDIGITS")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "escape")
(PUNCT ")")
(PUNCT "!=")
(LIT 4)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "LITERAL")
(PUNCT ",")
(ID "int")
(PUNCT "(")
(ID "escape")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT 16)
(PUNCT ")")
(PUNCT "&")
(LIT 255)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(PUNCT "==")
(LIT "u")
(KEYWORD and)
(ID "source")
(PUNCT ".")
(ID "istext")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "escape")
(PUNCT "+=")
(ID "source")
(PUNCT ".")
(ID "getwhile")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(ID "HEXDIGITS")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "escape")
(PUNCT ")")
(PUNCT "!=")
(LIT 6)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "LITERAL")
(PUNCT ",")
(ID "int")
(PUNCT "(")
(ID "escape")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT 16)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(PUNCT "==")
(LIT "U")
(KEYWORD and)
(ID "source")
(PUNCT ".")
(ID "istext")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "escape")
(PUNCT "+=")
(ID "source")
(PUNCT ".")
(ID "getwhile")
(PUNCT "(")
(LIT 8)
(PUNCT ",")
(ID "HEXDIGITS")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "escape")
(PUNCT ")")
(PUNCT "!=")
(LIT 10)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(NEWLINE)
(DEDENT)
(ID "c")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "escape")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT 16)
(PUNCT ")")
(NEWLINE)
(ID "chr")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "LITERAL")
(PUNCT ",")
(ID "c")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(KEYWORD in)
(ID "OCTDIGITS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "escape")
(PUNCT "+=")
(ID "source")
(PUNCT ".")
(ID "getwhile")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(ID "OCTDIGITS")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "LITERAL")
(PUNCT ",")
(ID "int")
(PUNCT "(")
(ID "escape")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT 8)
(PUNCT ")")
(PUNCT "&")
(LIT 255)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(KEYWORD in)
(ID "DIGITS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "escape")
(PUNCT ")")
(PUNCT "==")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(ID "escape")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "bogus escape: %s")
(PUNCT "%")
(ID "repr")
(PUNCT "(")
(ID "escape")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_escape")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "escape")
(PUNCT ",")
(ID "state")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "CATEGORIES")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "escape")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "code")
(NEWLINE)
(DEDENT)
(ID "code")
(PUNCT "=")
(ID "ESCAPES")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "escape")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "code")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "escape")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "c")
(PUNCT "==")
(LIT "x")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "escape")
(PUNCT "+=")
(ID "source")
(PUNCT ".")
(ID "getwhile")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(ID "HEXDIGITS")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "escape")
(PUNCT ")")
(PUNCT "!=")
(LIT 4)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "LITERAL")
(PUNCT ",")
(ID "int")
(PUNCT "(")
(ID "escape")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT 16)
(PUNCT ")")
(PUNCT "&")
(LIT 255)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(PUNCT "==")
(LIT "u")
(KEYWORD and)
(ID "source")
(PUNCT ".")
(ID "istext")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "escape")
(PUNCT "+=")
(ID "source")
(PUNCT ".")
(ID "getwhile")
(PUNCT "(")
(LIT 4)
(PUNCT ",")
(ID "HEXDIGITS")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "escape")
(PUNCT ")")
(PUNCT "!=")
(LIT 6)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "LITERAL")
(PUNCT ",")
(ID "int")
(PUNCT "(")
(ID "escape")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT 16)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(PUNCT "==")
(LIT "U")
(KEYWORD and)
(ID "source")
(PUNCT ".")
(ID "istext")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "escape")
(PUNCT "+=")
(ID "source")
(PUNCT ".")
(ID "getwhile")
(PUNCT "(")
(LIT 8)
(PUNCT ",")
(ID "HEXDIGITS")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "escape")
(PUNCT ")")
(PUNCT "!=")
(LIT 10)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(NEWLINE)
(DEDENT)
(ID "c")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "escape")
(PUNCT "[")
(LIT 2)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT 16)
(PUNCT ")")
(NEWLINE)
(ID "chr")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "LITERAL")
(PUNCT ",")
(ID "c")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(PUNCT "==")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "escape")
(PUNCT "+=")
(ID "source")
(PUNCT ".")
(ID "getwhile")
(PUNCT "(")
(LIT 2)
(PUNCT ",")
(ID "OCTDIGITS")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "LITERAL")
(PUNCT ",")
(ID "int")
(PUNCT "(")
(ID "escape")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT 8)
(PUNCT ")")
(PUNCT "&")
(LIT 255)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(KEYWORD in)
(ID "DIGITS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "source")
(PUNCT ".")
(ID "next")
(KEYWORD in)
(ID "DIGITS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "escape")
(PUNCT "=")
(ID "escape")
(PUNCT "+")
(ID "source")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID "escape")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(KEYWORD in)
(ID "OCTDIGITS")
(KEYWORD and)
(ID "escape")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(KEYWORD in)
(ID "OCTDIGITS")
(KEYWORD and)
(ID "source")
(PUNCT ".")
(ID "next")
(KEYWORD in)
(ID "OCTDIGITS")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "escape")
(PUNCT "=")
(ID "escape")
(PUNCT "+")
(ID "source")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "LITERAL")
(PUNCT ",")
(ID "int")
(PUNCT "(")
(ID "escape")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT 8)
(PUNCT ")")
(PUNCT "&")
(LIT 255)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "group")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "escape")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "group")
(PUNCT "<")
(ID "state")
(PUNCT ".")
(ID "groups")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "state")
(PUNCT ".")
(ID "checkgroup")
(PUNCT "(")
(ID "group")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "cannot refer to open group")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "GROUPREF")
(PUNCT ",")
(ID "group")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "ValueError")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "escape")
(PUNCT ")")
(PUNCT "==")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(ID "escape")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "bogus escape: %s")
(PUNCT "%")
(ID "repr")
(PUNCT "(")
(ID "escape")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_parse_sub")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "state")
(PUNCT ",")
(ID "nested")
(PUNCT "=")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "items")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "itemsappend")
(PUNCT "=")
(ID "items")
(PUNCT ".")
(ID "append")
(NEWLINE)
(ID "sourcematch")
(PUNCT "=")
(ID "source")
(PUNCT ".")
(ID "match")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "itemsappend")
(PUNCT "(")
(ID "_parse")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "state")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sourcematch")
(PUNCT "(")
(LIT "|")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "nested")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "source")
(PUNCT ".")
(ID "next")
(KEYWORD or)
(ID "sourcematch")
(PUNCT "(")
(LIT ")")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "pattern not properly closed")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "items")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "items")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "subpattern")
(PUNCT "=")
(ID "SubPattern")
(PUNCT "(")
(ID "state")
(PUNCT ")")
(NEWLINE)
(ID "subpatternappend")
(PUNCT "=")
(ID "subpattern")
(PUNCT ".")
(ID "append")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "prefix")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD for)
(ID "item")
(KEYWORD in)
(ID "items")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "item")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "prefix")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "prefix")
(PUNCT "=")
(ID "item")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "item")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "!=")
(ID "prefix")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "item")
(KEYWORD in)
(ID "items")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "item")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "subpatternappend")
(PUNCT "(")
(ID "prefix")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "item")
(KEYWORD in)
(ID "items")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "item")
(PUNCT ")")
(PUNCT "!=")
(LIT 1)
(KEYWORD or)
(ID "item")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "!=")
(ID "LITERAL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "set")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "setappend")
(PUNCT "=")
(ID "set")
(PUNCT ".")
(ID "append")
(NEWLINE)
(KEYWORD for)
(ID "item")
(KEYWORD in)
(ID "items")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setappend")
(PUNCT "(")
(ID "item")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "subpatternappend")
(PUNCT "(")
(PUNCT "(")
(ID "IN")
(PUNCT ",")
(ID "set")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "subpattern")
(NEWLINE)
(DEDENT)
(ID "subpattern")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "BRANCH")
(PUNCT ",")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(ID "items")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "subpattern")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_parse_sub_cond")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "state")
(PUNCT ",")
(ID "condgroup")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "item_yes")
(PUNCT "=")
(ID "_parse")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "state")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "source")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(LIT "|")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "item_no")
(PUNCT "=")
(ID "_parse")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "state")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "source")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(LIT "|")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "conditional backref with more than two branches")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "item_no")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "source")
(PUNCT ".")
(ID "next")
(KEYWORD and)
(KEYWORD not)
(ID "source")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(LIT ")")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "pattern not properly closed")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "subpattern")
(PUNCT "=")
(ID "SubPattern")
(PUNCT "(")
(ID "state")
(PUNCT ")")
(NEWLINE)
(ID "subpattern")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "GROUPREF_EXISTS")
(PUNCT ",")
(PUNCT "(")
(ID "condgroup")
(PUNCT ",")
(ID "item_yes")
(PUNCT ",")
(ID "item_no")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "subpattern")
(NEWLINE)
(DEDENT)
(ID "_PATTERNENDERS")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(LIT "|)")
(PUNCT ")")
(NEWLINE)
(ID "_ASSERTCHARS")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(LIT "=!<")
(PUNCT ")")
(NEWLINE)
(ID "_LOOKBEHINDASSERTCHARS")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(LIT "=!")
(PUNCT ")")
(NEWLINE)
(ID "_REPEATCODES")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT "[")
(ID "MIN_REPEAT")
(PUNCT ",")
(ID "MAX_REPEAT")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "_parse")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "state")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subpattern")
(PUNCT "=")
(ID "SubPattern")
(PUNCT "(")
(ID "state")
(PUNCT ")")
(NEWLINE)
(ID "subpatternappend")
(PUNCT "=")
(ID "subpattern")
(PUNCT ".")
(ID "append")
(NEWLINE)
(ID "sourceget")
(PUNCT "=")
(ID "source")
(PUNCT ".")
(ID "get")
(NEWLINE)
(ID "sourcematch")
(PUNCT "=")
(ID "source")
(PUNCT ".")
(ID "match")
(NEWLINE)
(ID "_len")
(PUNCT "=")
(ID "len")
(NEWLINE)
(ID "PATTERNENDERS")
(PUNCT "=")
(ID "_PATTERNENDERS")
(NEWLINE)
(ID "ASSERTCHARS")
(PUNCT "=")
(ID "_ASSERTCHARS")
(NEWLINE)
(ID "LOOKBEHINDASSERTCHARS")
(PUNCT "=")
(ID "_LOOKBEHINDASSERTCHARS")
(NEWLINE)
(ID "REPEATCODES")
(PUNCT "=")
(ID "_REPEATCODES")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "source")
(PUNCT ".")
(ID "next")
(KEYWORD in)
(ID "PATTERNENDERS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "this")
(PUNCT "=")
(ID "sourceget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "this")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "state")
(PUNCT ".")
(ID "flags")
(PUNCT "&")
(ID "SRE_FLAG_VERBOSE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "this")
(KEYWORD in)
(ID "WHITESPACE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "this")
(PUNCT "==")
(LIT "#")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "this")
(PUNCT "=")
(ID "sourceget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "this")
(KEYWORD in)
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(LIT "\n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "this")
(KEYWORD and)
(ID "this")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD not)
(KEYWORD in)
(ID "SPECIAL_CHARS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subpatternappend")
(PUNCT "(")
(PUNCT "(")
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(ID "this")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "this")
(PUNCT "==")
(LIT "[")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "set")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "setappend")
(PUNCT "=")
(ID "set")
(PUNCT ".")
(ID "append")
(NEWLINE)
(KEYWORD if)
(ID "sourcematch")
(PUNCT "(")
(LIT "^")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "setappend")
(PUNCT "(")
(PUNCT "(")
(ID "NEGATE")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "start")
(PUNCT "=")
(ID "set")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "this")
(PUNCT "=")
(ID "sourceget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "this")
(PUNCT "==")
(LIT "]")
(KEYWORD and)
(ID "set")
(PUNCT "!=")
(ID "start")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "this")
(KEYWORD and)
(ID "this")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(LIT "\\")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code1")
(PUNCT "=")
(ID "_class_escape")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "this")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "this")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code1")
(PUNCT "=")
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(ID "this")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unexpected end of regular expression")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "sourcematch")
(PUNCT "(")
(LIT "-")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "this")
(PUNCT "=")
(ID "sourceget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "this")
(PUNCT "==")
(LIT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "code1")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD is)
(ID "IN")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code1")
(PUNCT "=")
(ID "code1")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "setappend")
(PUNCT "(")
(ID "code1")
(PUNCT ")")
(NEWLINE)
(ID "setappend")
(PUNCT "(")
(PUNCT "(")
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(LIT "-")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "this")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "this")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(LIT "\\")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code2")
(PUNCT "=")
(ID "_class_escape")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "this")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code2")
(PUNCT "=")
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(ID "this")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "code1")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "!=")
(ID "LITERAL")
(KEYWORD or)
(ID "code2")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "!=")
(ID "LITERAL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "bad character range")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "lo")
(PUNCT "=")
(ID "code1")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "hi")
(PUNCT "=")
(ID "code2")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "hi")
(PUNCT "<")
(ID "lo")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "bad character range")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "setappend")
(PUNCT "(")
(PUNCT "(")
(ID "RANGE")
(PUNCT ",")
(PUNCT "(")
(ID "lo")
(PUNCT ",")
(ID "hi")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unexpected end of regular expression")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "code1")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD is)
(ID "IN")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code1")
(PUNCT "=")
(ID "code1")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "setappend")
(PUNCT "(")
(ID "code1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "_len")
(PUNCT "(")
(ID "set")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(KEYWORD and)
(ID "set")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD is)
(ID "LITERAL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subpatternappend")
(PUNCT "(")
(ID "set")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "_len")
(PUNCT "(")
(ID "set")
(PUNCT ")")
(PUNCT "==")
(LIT 2)
(KEYWORD and)
(ID "set")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD is)
(ID "NEGATE")
(KEYWORD and)
(ID "set")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD is)
(ID "LITERAL")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subpatternappend")
(PUNCT "(")
(PUNCT "(")
(ID "NOT_LITERAL")
(PUNCT ",")
(ID "set")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subpatternappend")
(PUNCT "(")
(PUNCT "(")
(ID "IN")
(PUNCT ",")
(ID "set")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "this")
(KEYWORD and)
(ID "this")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(ID "REPEAT_CHARS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "this")
(PUNCT "==")
(LIT "?")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "min")
(PUNCT ",")
(ID "max")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "this")
(PUNCT "==")
(LIT "*")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "min")
(PUNCT ",")
(ID "max")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "MAXREPEAT")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "this")
(PUNCT "==")
(LIT "+")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "min")
(PUNCT ",")
(ID "max")
(PUNCT "=")
(LIT 1)
(PUNCT ",")
(ID "MAXREPEAT")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "this")
(PUNCT "==")
(LIT "{")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "source")
(PUNCT ".")
(ID "next")
(PUNCT "==")
(LIT "}")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subpatternappend")
(PUNCT "(")
(PUNCT "(")
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(ID "this")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "here")
(PUNCT "=")
(ID "source")
(PUNCT ".")
(ID "tell")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "min")
(PUNCT ",")
(ID "max")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "MAXREPEAT")
(NEWLINE)
(ID "lo")
(PUNCT "=")
(ID "hi")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD while)
(ID "source")
(PUNCT ".")
(ID "next")
(KEYWORD in)
(ID "DIGITS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lo")
(PUNCT "=")
(ID "lo")
(PUNCT "+")
(ID "source")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "sourcematch")
(PUNCT "(")
(LIT ",")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(ID "source")
(PUNCT ".")
(ID "next")
(KEYWORD in)
(ID "DIGITS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hi")
(PUNCT "=")
(ID "hi")
(PUNCT "+")
(ID "sourceget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "hi")
(PUNCT "=")
(ID "lo")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "sourcematch")
(PUNCT "(")
(LIT "}")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subpatternappend")
(PUNCT "(")
(PUNCT "(")
(ID "LITERAL")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(ID "this")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "source")
(PUNCT ".")
(ID "seek")
(PUNCT "(")
(ID "here")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "lo")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "min")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "lo")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "min")
(PUNCT ">=")
(ID "MAXREPEAT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OverflowError")
(PUNCT "(")
(LIT "the repetition number is too large")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "hi")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "max")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "hi")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "max")
(PUNCT ">=")
(ID "MAXREPEAT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OverflowError")
(PUNCT "(")
(LIT "the repetition number is too large")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "max")
(PUNCT "<")
(ID "min")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "bad repeat interval")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "not supported")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "subpattern")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "item")
(PUNCT "=")
(ID "subpattern")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "item")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "item")
(KEYWORD or)
(PUNCT "(")
(ID "_len")
(PUNCT "(")
(ID "item")
(PUNCT ")")
(PUNCT "==")
(LIT 1)
(KEYWORD and)
(ID "item")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(ID "AT")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "nothing to repeat")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "item")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(ID "REPEATCODES")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "multiple repeat")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "sourcematch")
(PUNCT "(")
(LIT "?")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subpattern")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "=")
(PUNCT "(")
(ID "MIN_REPEAT")
(PUNCT ",")
(PUNCT "(")
(ID "min")
(PUNCT ",")
(ID "max")
(PUNCT ",")
(ID "item")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subpattern")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "=")
(PUNCT "(")
(ID "MAX_REPEAT")
(PUNCT ",")
(PUNCT "(")
(ID "min")
(PUNCT ",")
(ID "max")
(PUNCT ",")
(ID "item")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "this")
(PUNCT "==")
(LIT ".")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subpatternappend")
(PUNCT "(")
(PUNCT "(")
(ID "ANY")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "this")
(PUNCT "==")
(LIT "(")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "group")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "name")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "condgroup")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "sourcematch")
(PUNCT "(")
(LIT "?")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "group")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "sourcematch")
(PUNCT "(")
(LIT "P")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "sourcematch")
(PUNCT "(")
(LIT "<")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "char")
(PUNCT "=")
(ID "sourceget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "char")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unterminated name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "char")
(PUNCT "==")
(LIT ">")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "name")
(PUNCT "=")
(ID "name")
(PUNCT "+")
(ID "char")
(NEWLINE)
(DEDENT)
(ID "group")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "missing group name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "name")
(PUNCT ".")
(ID "isidentifier")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "bad character in group name %r")
(PUNCT "%")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "sourcematch")
(PUNCT "(")
(LIT "=")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "char")
(PUNCT "=")
(ID "sourceget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "char")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unterminated name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "char")
(PUNCT "==")
(LIT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "name")
(PUNCT "=")
(ID "name")
(PUNCT "+")
(ID "char")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "missing group name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "name")
(PUNCT ".")
(ID "isidentifier")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "bad character in backref group name ")
(LIT "%r")
(PUNCT "%")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "gid")
(PUNCT "=")
(ID "state")
(PUNCT ".")
(ID "groupdict")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "gid")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(LIT "unknown group name: {0!r}")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "subpatternappend")
(PUNCT "(")
(PUNCT "(")
(ID "GROUPREF")
(PUNCT ",")
(ID "gid")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "char")
(PUNCT "=")
(ID "sourceget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "char")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unexpected end of pattern")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unknown specifier: ?P%s")
(PUNCT "%")
(ID "char")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "sourcematch")
(PUNCT "(")
(LIT ":")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "group")
(PUNCT "=")
(LIT 2)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "sourcematch")
(PUNCT "(")
(LIT "#")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "source")
(PUNCT ".")
(ID "next")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID "source")
(PUNCT ".")
(ID "next")
(PUNCT "==")
(LIT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "sourceget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "sourcematch")
(PUNCT "(")
(LIT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unbalanced parenthesis")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "source")
(PUNCT ".")
(ID "next")
(KEYWORD in)
(ID "ASSERTCHARS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "char")
(PUNCT "=")
(ID "sourceget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "dir")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "char")
(PUNCT "==")
(LIT "<")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "source")
(PUNCT ".")
(ID "next")
(KEYWORD not)
(KEYWORD in)
(ID "LOOKBEHINDASSERTCHARS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "syntax error")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "dir")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(ID "char")
(PUNCT "=")
(ID "sourceget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "p")
(PUNCT "=")
(ID "_parse_sub")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "state")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "sourcematch")
(PUNCT "(")
(LIT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unbalanced parenthesis")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "char")
(PUNCT "==")
(LIT "=")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subpatternappend")
(PUNCT "(")
(PUNCT "(")
(ID "ASSERT")
(PUNCT ",")
(PUNCT "(")
(ID "dir")
(PUNCT ",")
(ID "p")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subpatternappend")
(PUNCT "(")
(PUNCT "(")
(ID "ASSERT_NOT")
(PUNCT ",")
(PUNCT "(")
(ID "dir")
(PUNCT ",")
(ID "p")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "sourcematch")
(PUNCT "(")
(LIT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "condname")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "char")
(PUNCT "=")
(ID "sourceget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "char")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unterminated name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "char")
(PUNCT "==")
(LIT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "condname")
(PUNCT "=")
(ID "condname")
(PUNCT "+")
(ID "char")
(NEWLINE)
(DEDENT)
(ID "group")
(PUNCT "=")
(LIT 2)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "condname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "missing group name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "condname")
(PUNCT ".")
(ID "isidentifier")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "condgroup")
(PUNCT "=")
(ID "state")
(PUNCT ".")
(ID "groupdict")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "condname")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "condgroup")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(LIT "unknown group name: {0!r}")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "condname")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "condgroup")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "condname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "bad character in group name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "source")
(PUNCT ".")
(ID "next")
(KEYWORD in)
(ID "FLAGS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unexpected end of pattern")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(ID "source")
(PUNCT ".")
(ID "next")
(KEYWORD in)
(ID "FLAGS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "state")
(PUNCT ".")
(ID "flags")
(PUNCT "=")
(ID "state")
(PUNCT ".")
(ID "flags")
(PUNCT "|")
(ID "FLAGS")
(PUNCT "[")
(ID "sourceget")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "group")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "group")
(PUNCT "==")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "group")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "group")
(PUNCT "=")
(ID "state")
(PUNCT ".")
(ID "opengroup")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "condgroup")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "p")
(PUNCT "=")
(ID "_parse_sub_cond")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "state")
(PUNCT ",")
(ID "condgroup")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "p")
(PUNCT "=")
(ID "_parse_sub")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "state")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "sourcematch")
(PUNCT "(")
(LIT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unbalanced parenthesis")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "group")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "state")
(PUNCT ".")
(ID "closegroup")
(PUNCT "(")
(ID "group")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "subpatternappend")
(PUNCT "(")
(PUNCT "(")
(ID "SUBPATTERN")
(PUNCT ",")
(PUNCT "(")
(ID "group")
(PUNCT ",")
(ID "p")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "char")
(PUNCT "=")
(ID "sourceget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "char")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unexpected end of pattern")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "char")
(PUNCT "==")
(LIT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unknown extension")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "this")
(PUNCT "==")
(LIT "^")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subpatternappend")
(PUNCT "(")
(PUNCT "(")
(ID "AT")
(PUNCT ",")
(ID "AT_BEGINNING")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "this")
(PUNCT "==")
(LIT "$")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "subpattern")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "AT")
(PUNCT ",")
(ID "AT_END")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "this")
(KEYWORD and)
(ID "this")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(LIT "\\")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "_escape")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "this")
(PUNCT ",")
(ID "state")
(PUNCT ")")
(NEWLINE)
(ID "subpatternappend")
(PUNCT "(")
(ID "code")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "parser error")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "subpattern")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "fix_flags")
(PUNCT "(")
(ID "src")
(PUNCT ",")
(ID "flags")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "src")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "flags")
(PUNCT "&")
(ID "SRE_FLAG_ASCII")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "|=")
(ID "SRE_FLAG_UNICODE")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "flags")
(PUNCT "&")
(ID "SRE_FLAG_UNICODE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "ASCII and UNICODE flags are incompatible")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "flags")
(PUNCT "&")
(ID "SRE_FLAG_UNICODE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "can't use UNICODE flag with a bytes pattern")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "flags")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parse")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "flags")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "pattern")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "source")
(PUNCT "=")
(ID "Tokenizer")
(PUNCT "(")
(ID "str")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "pattern")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pattern")
(PUNCT "=")
(ID "Pattern")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "pattern")
(PUNCT ".")
(ID "flags")
(PUNCT "=")
(ID "flags")
(NEWLINE)
(ID "pattern")
(PUNCT ".")
(ID "str")
(PUNCT "=")
(ID "str")
(NEWLINE)
(ID "p")
(PUNCT "=")
(ID "_parse_sub")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "pattern")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "p")
(PUNCT ".")
(ID "pattern")
(PUNCT ".")
(ID "flags")
(PUNCT "=")
(ID "fix_flags")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "p")
(PUNCT ".")
(ID "pattern")
(PUNCT ".")
(ID "flags")
(PUNCT ")")
(NEWLINE)
(ID "tail")
(PUNCT "=")
(ID "source")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "tail")
(PUNCT "==")
(LIT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unbalanced parenthesis")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "tail")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "bogus characters at end of regular expression")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "flags")
(PUNCT "&")
(ID "SRE_FLAG_DEBUG")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "p")
(PUNCT ".")
(ID "dump")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID "flags")
(PUNCT "&")
(ID "SRE_FLAG_VERBOSE")
(PUNCT ")")
(KEYWORD and)
(ID "p")
(PUNCT ".")
(ID "pattern")
(PUNCT ".")
(ID "flags")
(PUNCT "&")
(ID "SRE_FLAG_VERBOSE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "parse")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "p")
(PUNCT ".")
(ID "pattern")
(PUNCT ".")
(ID "flags")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "p")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "parse_template")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "pattern")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "=")
(ID "Tokenizer")
(PUNCT "(")
(ID "source")
(PUNCT ")")
(NEWLINE)
(ID "sget")
(PUNCT "=")
(ID "s")
(PUNCT ".")
(ID "get")
(NEWLINE)
(ID "groups")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "literals")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "literal")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "lappend")
(PUNCT "=")
(ID "literal")
(PUNCT ".")
(ID "append")
(NEWLINE)
(KEYWORD def)
(ID "addgroup")
(PUNCT "(")
(ID "index")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "literal")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "literals")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "literal")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD del)
(ID "literal")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "groups")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "literals")
(PUNCT ")")
(PUNCT ",")
(ID "index")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "literals")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "this")
(PUNCT "=")
(ID "sget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "this")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "this")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(LIT "\\")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "c")
(PUNCT "=")
(ID "this")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "c")
(PUNCT "==")
(LIT "g")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(LIT "")
(NEWLINE)
(KEYWORD if)
(ID "s")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(LIT "<")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "char")
(PUNCT "=")
(ID "sget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "char")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unterminated group name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "char")
(PUNCT "==")
(LIT ">")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "name")
(PUNCT "+=")
(ID "char")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "missing group name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "index")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "index")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "negative group number")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "name")
(PUNCT ".")
(ID "isidentifier")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "bad character in group name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "index")
(PUNCT "=")
(ID "pattern")
(PUNCT ".")
(ID "groupindex")
(PUNCT "[")
(ID "name")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(LIT "unknown group name: {0!r}")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(ID "IndexError")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "addgroup")
(PUNCT "(")
(ID "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(PUNCT "==")
(LIT "0")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "s")
(PUNCT ".")
(ID "next")
(KEYWORD in)
(ID "OCTDIGITS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "this")
(PUNCT "+=")
(ID "sget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "s")
(PUNCT ".")
(ID "next")
(KEYWORD in)
(ID "OCTDIGITS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "this")
(PUNCT "+=")
(ID "sget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "lappend")
(PUNCT "(")
(ID "chr")
(PUNCT "(")
(ID "int")
(PUNCT "(")
(ID "this")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT 8)
(PUNCT ")")
(PUNCT "&")
(LIT 255)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "c")
(KEYWORD in)
(ID "DIGITS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "isoctal")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD if)
(ID "s")
(PUNCT ".")
(ID "next")
(KEYWORD in)
(ID "DIGITS")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "this")
(PUNCT "+=")
(ID "sget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID "c")
(KEYWORD in)
(ID "OCTDIGITS")
(KEYWORD and)
(ID "this")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(KEYWORD in)
(ID "OCTDIGITS")
(KEYWORD and)
(ID "s")
(PUNCT ".")
(ID "next")
(KEYWORD in)
(ID "OCTDIGITS")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "this")
(PUNCT "+=")
(ID "sget")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "isoctal")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "lappend")
(PUNCT "(")
(ID "chr")
(PUNCT "(")
(ID "int")
(PUNCT "(")
(ID "this")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(LIT 8)
(PUNCT ")")
(PUNCT "&")
(LIT 255)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isoctal")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "addgroup")
(PUNCT "(")
(ID "int")
(PUNCT "(")
(ID "this")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "this")
(PUNCT "=")
(ID "chr")
(PUNCT "(")
(ID "ESCAPES")
(PUNCT "[")
(ID "this")
(PUNCT "]")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(ID "lappend")
(PUNCT "(")
(ID "this")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lappend")
(PUNCT "(")
(ID "this")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "literal")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "literals")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "literal")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "literals")
(PUNCT "=")
(PUNCT "[")
(KEYWORD None)
(KEYWORD if)
(ID "s")
(KEYWORD is)
(KEYWORD None)
(KEYWORD else)
(ID "s")
(PUNCT ".")
(ID "encode")
(PUNCT "(")
(LIT "latin-1")
(PUNCT ")")
(KEYWORD for)
(ID "s")
(KEYWORD in)
(ID "literals")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "groups")
(PUNCT ",")
(ID "literals")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "expand_template")
(PUNCT "(")
(ID "template")
(PUNCT ",")
(ID "match")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "g")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "group")
(NEWLINE)
(ID "sep")
(PUNCT "=")
(ID "match")
(PUNCT ".")
(ID "string")
(PUNCT "[")
(PUNCT ":")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "groups")
(PUNCT ",")
(ID "literals")
(PUNCT "=")
(ID "template")
(NEWLINE)
(ID "literals")
(PUNCT "=")
(ID "literals")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "index")
(PUNCT ",")
(ID "group")
(KEYWORD in)
(ID "groups")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "literals")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(PUNCT "=")
(ID "s")
(PUNCT "=")
(ID "g")
(PUNCT "(")
(ID "group")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "s")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "unmatched group")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "IndexError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "error")
(PUNCT "(")
(LIT "invalid group reference")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "sep")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "literals")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
