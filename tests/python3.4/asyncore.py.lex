(LIT "Basic infrastructure for asynchronous socket service clients and servers.\n\nThere are only two ways to have a program on a single processor do \"more\nthan one thing at a time\".  Multi-threaded programming is the simplest and\nmost popular way to do it, but there is another very different technique,\nthat lets you have nearly all the advantages of multi-threading, without\nactually using multiple threads. it's really only practical if your program\nis largely I/O bound. If your program is CPU bound, then pre-emptive\nscheduled threads are probably what you really need. Network servers are\nrarely CPU-bound, however.\n\nIf your operating system supports the select() system call in its I/O\nlibrary (and nearly all do), then you can use it to juggle multiple\ncommunication channels at once; doing other work while your I/O is taking\nplace in the \"background.\"  Although this strategy can seem strange and\ncomplex, especially at first, it is in many ways easier to understand and\ncontrol than multi-threaded programming. The module documented here solves\nmany of the difficult problems for you, making the task of building\nsophisticated high-performance network servers and clients a snap.\n")
(NEWLINE)
(KEYWORD import)
(ID "select")
(NEWLINE)
(KEYWORD import)
(ID "socket")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "time")
(NEWLINE)
(KEYWORD import)
(ID "warnings")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD from)
(ID "errno")
(KEYWORD import)
(ID "EALREADY")
(PUNCT ",")
(ID "EINPROGRESS")
(PUNCT ",")
(ID "EWOULDBLOCK")
(PUNCT ",")
(ID "ECONNRESET")
(PUNCT ",")
(ID "EINVAL")
(PUNCT ",")
(ID "ENOTCONN")
(PUNCT ",")
(ID "ESHUTDOWN")
(PUNCT ",")
(ID "EISCONN")
(PUNCT ",")
(ID "EBADF")
(PUNCT ",")
(ID "ECONNABORTED")
(PUNCT ",")
(ID "EPIPE")
(PUNCT ",")
(ID "EAGAIN")
(PUNCT ",")
(ID "errorcode")
(NEWLINE)
(ID "_DISCONNECTED")
(PUNCT "=")
(ID "frozenset")
(PUNCT "(")
(PUNCT "(")
(ID "ECONNRESET")
(PUNCT ",")
(ID "ENOTCONN")
(PUNCT ",")
(ID "ESHUTDOWN")
(PUNCT ",")
(ID "ECONNABORTED")
(PUNCT ",")
(ID "EPIPE")
(PUNCT ",")
(ID "EBADF")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "socket_map")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "NameError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "socket_map")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_strerror")
(PUNCT "(")
(ID "err")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "strerror")
(PUNCT "(")
(ID "err")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "ValueError")
(PUNCT ",")
(ID "OverflowError")
(PUNCT ",")
(ID "NameError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "err")
(KEYWORD in)
(ID "errorcode")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "errorcode")
(PUNCT "[")
(ID "err")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "Unknown error %s")
(PUNCT "%")
(ID "err")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "ExitNow")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(ID "_reraised_exceptions")
(PUNCT "=")
(PUNCT "(")
(ID "ExitNow")
(PUNCT ",")
(ID "KeyboardInterrupt")
(PUNCT ",")
(ID "SystemExit")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "read")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT ".")
(ID "handle_read_event")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "_reraised_exceptions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT ".")
(ID "handle_error")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "write")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT ".")
(ID "handle_write_event")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "_reraised_exceptions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT ".")
(ID "handle_error")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_exception")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT ".")
(ID "handle_expt_event")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "_reraised_exceptions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT ".")
(ID "handle_error")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "readwrite")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "flags")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "flags")
(PUNCT "&")
(ID "select")
(PUNCT ".")
(ID "POLLIN")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT ".")
(ID "handle_read_event")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "flags")
(PUNCT "&")
(ID "select")
(PUNCT ".")
(ID "POLLOUT")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT ".")
(ID "handle_write_event")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "flags")
(PUNCT "&")
(ID "select")
(PUNCT ".")
(ID "POLLPRI")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT ".")
(ID "handle_expt_event")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "flags")
(PUNCT "&")
(PUNCT "(")
(ID "select")
(PUNCT ".")
(ID "POLLHUP")
(PUNCT "|")
(ID "select")
(PUNCT ".")
(ID "POLLERR")
(PUNCT "|")
(ID "select")
(PUNCT ".")
(ID "POLLNVAL")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT ".")
(ID "handle_close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "e")
(PUNCT ".")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD not)
(KEYWORD in)
(ID "_DISCONNECTED")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT ".")
(ID "handle_error")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT ".")
(ID "handle_close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "_reraised_exceptions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT ".")
(ID "handle_error")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "poll")
(PUNCT "(")
(ID "timeout")
(PUNCT "=")
(LIT 0.0)
(PUNCT ",")
(ID "map")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "map")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "map")
(PUNCT "=")
(ID "socket_map")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "map")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "r")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ";")
(ID "w")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(PUNCT ";")
(ID "e")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "fd")
(PUNCT ",")
(ID "obj")
(KEYWORD in)
(ID "list")
(PUNCT "(")
(ID "map")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "is_r")
(PUNCT "=")
(ID "obj")
(PUNCT ".")
(ID "readable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "is_w")
(PUNCT "=")
(ID "obj")
(PUNCT ".")
(ID "writable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "is_r")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "r")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "is_w")
(KEYWORD and)
(KEYWORD not)
(ID "obj")
(PUNCT ".")
(ID "accepting")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "w")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "is_r")
(KEYWORD or)
(ID "is_w")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "e")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(PUNCT "[")
(PUNCT "]")
(PUNCT "==")
(ID "r")
(PUNCT "==")
(ID "w")
(PUNCT "==")
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "time")
(PUNCT ".")
(ID "sleep")
(PUNCT "(")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "r")
(PUNCT ",")
(ID "w")
(PUNCT ",")
(ID "e")
(PUNCT "=")
(ID "select")
(PUNCT ".")
(ID "select")
(PUNCT "(")
(ID "r")
(PUNCT ",")
(ID "w")
(PUNCT ",")
(ID "e")
(PUNCT ",")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "InterruptedError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "fd")
(KEYWORD in)
(ID "r")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "map")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "obj")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "read")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "fd")
(KEYWORD in)
(ID "w")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "map")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "obj")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "write")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "fd")
(KEYWORD in)
(ID "e")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "map")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "obj")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "_exception")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "poll2")
(PUNCT "(")
(ID "timeout")
(PUNCT "=")
(LIT 0.0)
(PUNCT ",")
(ID "map")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "map")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "map")
(PUNCT "=")
(ID "socket_map")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "timeout")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "timeout")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "timeout")
(PUNCT "*")
(LIT 1000)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "pollster")
(PUNCT "=")
(ID "select")
(PUNCT ".")
(ID "poll")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "map")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "fd")
(PUNCT ",")
(ID "obj")
(KEYWORD in)
(ID "list")
(PUNCT "(")
(ID "map")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "obj")
(PUNCT ".")
(ID "readable")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "|=")
(ID "select")
(PUNCT ".")
(ID "POLLIN")
(PUNCT "|")
(ID "select")
(PUNCT ".")
(ID "POLLPRI")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "obj")
(PUNCT ".")
(ID "writable")
(PUNCT "(")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID "obj")
(PUNCT ".")
(ID "accepting")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "flags")
(PUNCT "|=")
(ID "select")
(PUNCT ".")
(ID "POLLOUT")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "flags")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pollster")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "flags")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "r")
(PUNCT "=")
(ID "pollster")
(PUNCT ".")
(ID "poll")
(PUNCT "(")
(ID "timeout")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "InterruptedError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "r")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "fd")
(PUNCT ",")
(ID "flags")
(KEYWORD in)
(ID "r")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "map")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "obj")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "readwrite")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "flags")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "poll3")
(PUNCT "=")
(ID "poll2")
(NEWLINE)
(KEYWORD def)
(ID "loop")
(PUNCT "(")
(ID "timeout")
(PUNCT "=")
(LIT 30.0)
(PUNCT ",")
(ID "use_poll")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "map")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "count")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "map")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "map")
(PUNCT "=")
(ID "socket_map")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "use_poll")
(KEYWORD and)
(ID "hasattr")
(PUNCT "(")
(ID "select")
(PUNCT ",")
(LIT "poll")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "poll_fun")
(PUNCT "=")
(ID "poll2")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "poll_fun")
(PUNCT "=")
(ID "poll")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "count")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(ID "map")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "poll_fun")
(PUNCT "(")
(ID "timeout")
(PUNCT ",")
(ID "map")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(ID "map")
(KEYWORD and)
(ID "count")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "poll_fun")
(PUNCT "(")
(ID "timeout")
(PUNCT ",")
(ID "map")
(PUNCT ")")
(NEWLINE)
(ID "count")
(PUNCT "=")
(ID "count")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "dispatcher")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "debug")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "connected")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "accepting")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "connecting")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "closing")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "addr")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "ignore_log_types")
(PUNCT "=")
(ID "frozenset")
(PUNCT "(")
(PUNCT "[")
(LIT "warning")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "map")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "map")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_map")
(PUNCT "=")
(ID "socket_map")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_map")
(PUNCT "=")
(ID "map")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_fileno")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(ID "sock")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sock")
(PUNCT ".")
(ID "setblocking")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "set_socket")
(PUNCT "(")
(ID "sock")
(PUNCT ",")
(ID "map")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "connected")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "addr")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "getpeername")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "err")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "err")
(PUNCT ".")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(PUNCT "(")
(ID "ENOTCONN")
(PUNCT ",")
(ID "EINVAL")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "connected")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "del_channel")
(PUNCT "(")
(ID "map")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "status")
(PUNCT "=")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__module__")
(PUNCT "+")
(LIT ".")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "accepting")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "addr")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "status")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "listening")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "connected")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "status")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "connected")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "addr")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "status")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "%s:%d")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "addr")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "status")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "repr")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "addr")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(LIT "<%s at %#x>")
(PUNCT "%")
(PUNCT "(")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "status")
(PUNCT ")")
(PUNCT ",")
(ID "id")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "__str__")
(PUNCT "=")
(ID "__repr__")
(NEWLINE)
(KEYWORD def)
(ID "add_channel")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "map")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "map")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "map")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_map")
(NEWLINE)
(DEDENT)
(ID "map")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "_fileno")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "del_channel")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "map")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_fileno")
(NEWLINE)
(KEYWORD if)
(ID "map")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "map")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_map")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "fd")
(KEYWORD in)
(ID "map")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "map")
(PUNCT "[")
(ID "fd")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_fileno")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "create_socket")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "family")
(PUNCT "=")
(ID "socket")
(PUNCT ".")
(ID "AF_INET")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(ID "socket")
(PUNCT ".")
(ID "SOCK_STREAM")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "family_and_type")
(PUNCT "=")
(ID "family")
(PUNCT ",")
(ID "type")
(NEWLINE)
(ID "sock")
(PUNCT "=")
(ID "socket")
(PUNCT ".")
(ID "socket")
(PUNCT "(")
(ID "family")
(PUNCT ",")
(ID "type")
(PUNCT ")")
(NEWLINE)
(ID "sock")
(PUNCT ".")
(ID "setblocking")
(PUNCT "(")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "set_socket")
(PUNCT "(")
(ID "sock")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_socket")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "map")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT "=")
(ID "sock")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_fileno")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "add_channel")
(PUNCT "(")
(ID "map")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_reuse_addr")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ".")
(ID "setsockopt")
(PUNCT "(")
(ID "socket")
(PUNCT ".")
(ID "SOL_SOCKET")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "SO_REUSEADDR")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ".")
(ID "getsockopt")
(PUNCT "(")
(ID "socket")
(PUNCT ".")
(ID "SOL_SOCKET")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "SO_REUSEADDR")
(PUNCT ")")
(PUNCT "|")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "readable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "writable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "listen")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "num")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "accepting")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "name")
(PUNCT "==")
(LIT "nt")
(KEYWORD and)
(ID "num")
(PUNCT ">")
(LIT 5)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "num")
(PUNCT "=")
(LIT 5)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ".")
(ID "listen")
(PUNCT "(")
(ID "num")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "bind")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "addr")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "addr")
(PUNCT "=")
(ID "addr")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ".")
(ID "bind")
(PUNCT "(")
(ID "addr")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "connect")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "connected")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "connecting")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "err")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ".")
(ID "connect_ex")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "err")
(KEYWORD in)
(PUNCT "(")
(ID "EINPROGRESS")
(PUNCT ",")
(ID "EALREADY")
(PUNCT ",")
(ID "EWOULDBLOCK")
(PUNCT ")")
(KEYWORD or)
(ID "err")
(PUNCT "==")
(ID "EINVAL")
(KEYWORD and)
(ID "os")
(PUNCT ".")
(ID "name")
(KEYWORD in)
(PUNCT "(")
(LIT "nt")
(PUNCT ",")
(LIT "ce")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "addr")
(PUNCT "=")
(ID "address")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "err")
(KEYWORD in)
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "EISCONN")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "addr")
(PUNCT "=")
(ID "address")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "handle_connect_event")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(ID "err")
(PUNCT ",")
(ID "errorcode")
(PUNCT "[")
(ID "err")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "accept")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "conn")
(PUNCT ",")
(ID "addr")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ".")
(ID "accept")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "why")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "why")
(PUNCT ".")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(PUNCT "(")
(ID "EWOULDBLOCK")
(PUNCT ",")
(ID "ECONNABORTED")
(PUNCT ",")
(ID "EAGAIN")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "conn")
(PUNCT ",")
(ID "addr")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "send")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "result")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ".")
(ID "send")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "why")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "why")
(PUNCT ".")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(ID "EWOULDBLOCK")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "why")
(PUNCT ".")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(ID "_DISCONNECTED")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "recv")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "buffer_size")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ".")
(ID "recv")
(PUNCT "(")
(ID "buffer_size")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT #"")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "data")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "why")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "why")
(PUNCT ".")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(ID "_DISCONNECTED")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(LIT #"")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "connected")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "accepting")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "connecting")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "del_channel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "socket")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "why")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "why")
(PUNCT ".")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(ID "ENOTCONN")
(PUNCT ",")
(ID "EBADF")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__getattr__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "attr")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "retattr")
(PUNCT "=")
(ID "getattr")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ",")
(ID "attr")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "AttributeError")
(PUNCT "(")
(LIT "%s instance has no attribute '%s'")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "attr")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(LIT "%(me)s.%(attr)s is deprecated; use %(me)s.socket.%(attr)s ")
(LIT "instead")
(PUNCT "%")
(PUNCT "{")
(LIT "me")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(LIT "attr")
(PUNCT ":")
(ID "attr")
(PUNCT "}")
(NEWLINE)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(ID "msg")
(PUNCT ",")
(ID "DeprecationWarning")
(PUNCT ",")
(ID "stacklevel")
(PUNCT "=")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "retattr")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "log")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "stderr")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT "log: %s\n")
(PUNCT "%")
(ID "str")
(PUNCT "(")
(ID "message")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "log_info")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ",")
(ID "type")
(PUNCT "=")
(LIT "info")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "type")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "ignore_log_types")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "%s: %s")
(PUNCT "%")
(PUNCT "(")
(ID "type")
(PUNCT ",")
(ID "message")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "handle_read_event")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "accepting")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_accept")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "connected")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "connecting")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_connect_event")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "handle_read")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_read")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "handle_connect_event")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "err")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ".")
(ID "getsockopt")
(PUNCT "(")
(ID "socket")
(PUNCT ".")
(ID "SOL_SOCKET")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "SO_ERROR")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "err")
(PUNCT "!=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(ID "err")
(PUNCT ",")
(ID "_strerror")
(PUNCT "(")
(ID "err")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "handle_connect")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "connected")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "connecting")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_write_event")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "accepting")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "connected")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "connecting")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_connect_event")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "handle_write")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_expt_event")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "err")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ".")
(ID "getsockopt")
(PUNCT "(")
(ID "socket")
(PUNCT ".")
(ID "SOL_SOCKET")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "SO_ERROR")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "err")
(PUNCT "!=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_expt")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "handle_error")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "nil")
(PUNCT ",")
(ID "t")
(PUNCT ",")
(ID "v")
(PUNCT ",")
(ID "tbinfo")
(PUNCT "=")
(ID "compact_traceback")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self_repr")
(PUNCT "=")
(ID "repr")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self_repr")
(PUNCT "=")
(LIT "<__repr__(self) failed for object at %0x>")
(PUNCT "%")
(ID "id")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "log_info")
(PUNCT "(")
(LIT "uncaptured python exception, closing channel %s (%s:%s %s)")
(PUNCT "%")
(PUNCT "(")
(ID "self_repr")
(PUNCT ",")
(ID "t")
(PUNCT ",")
(ID "v")
(PUNCT ",")
(ID "tbinfo")
(PUNCT ")")
(PUNCT ",")
(LIT "error")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "handle_close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_expt")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "log_info")
(PUNCT "(")
(LIT "unhandled incoming priority event")
(PUNCT ",")
(LIT "warning")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_read")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "log_info")
(PUNCT "(")
(LIT "unhandled read event")
(PUNCT ",")
(LIT "warning")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_write")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "log_info")
(PUNCT "(")
(LIT "unhandled write event")
(PUNCT ",")
(LIT "warning")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_connect")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "log_info")
(PUNCT "(")
(LIT "unhandled connect event")
(PUNCT ",")
(LIT "warning")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_accept")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pair")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "accept")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "pair")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "handle_accepted")
(PUNCT "(")
(PUNCT "*")
(ID "pair")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "handle_accepted")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "addr")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sock")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "log_info")
(PUNCT "(")
(LIT "unhandled accepted event")
(PUNCT ",")
(LIT "warning")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "log_info")
(PUNCT "(")
(LIT "unhandled close event")
(PUNCT ",")
(LIT "warning")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "dispatcher_with_send")
(PUNCT "(")
(ID "dispatcher")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "map")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dispatcher")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "map")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "out_buffer")
(PUNCT "=")
(LIT #"")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "initiate_send")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "num_sent")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "num_sent")
(PUNCT "=")
(ID "dispatcher")
(PUNCT ".")
(ID "send")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "out_buffer")
(PUNCT "[")
(PUNCT ":")
(LIT 65536)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "out_buffer")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "out_buffer")
(PUNCT "[")
(ID "num_sent")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "handle_write")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "initiate_send")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "writable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "connected")
(PUNCT ")")
(KEYWORD or)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "out_buffer")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "debug")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "log_info")
(PUNCT "(")
(LIT "sending %s")
(PUNCT "%")
(ID "repr")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "out_buffer")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "out_buffer")
(PUNCT "+")
(ID "data")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "initiate_send")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "compact_traceback")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "t")
(PUNCT ",")
(ID "v")
(PUNCT ",")
(ID "tb")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "exc_info")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "tbinfo")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "tb")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "AssertionError")
(PUNCT "(")
(LIT "traceback does not exist")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(ID "tb")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tbinfo")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "tb")
(PUNCT ".")
(ID "tb_frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_filename")
(PUNCT ",")
(ID "tb")
(PUNCT ".")
(ID "tb_frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_name")
(PUNCT ",")
(ID "str")
(PUNCT "(")
(ID "tb")
(PUNCT ".")
(ID "tb_lineno")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "tb")
(PUNCT "=")
(ID "tb")
(PUNCT ".")
(ID "tb_next")
(NEWLINE)
(DEDENT)
(KEYWORD del)
(ID "tb")
(NEWLINE)
(ID "file")
(PUNCT ",")
(ID "function")
(PUNCT ",")
(ID "line")
(PUNCT "=")
(ID "tbinfo")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "info")
(PUNCT "=")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(PUNCT "[")
(LIT "[%s|%s|%s]")
(PUNCT "%")
(ID "x")
(KEYWORD for)
(ID "x")
(KEYWORD in)
(ID "tbinfo")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "(")
(ID "file")
(PUNCT ",")
(ID "function")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(PUNCT ",")
(ID "t")
(PUNCT ",")
(ID "v")
(PUNCT ",")
(ID "info")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close_all")
(PUNCT "(")
(ID "map")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "ignore_all")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "map")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "map")
(PUNCT "=")
(ID "socket_map")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "x")
(KEYWORD in)
(ID "list")
(PUNCT "(")
(ID "map")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "x")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "x")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "x")
(PUNCT ".")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "==")
(ID "EBADF")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(KEYWORD not)
(ID "ignore_all")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "_reraised_exceptions")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "ignore_all")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "map")
(PUNCT ".")
(ID "clear")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "name")
(PUNCT "==")
(LIT "posix")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "fcntl")
(NEWLINE)
(KEYWORD class)
(ID "file_wrapper")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fd")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "fd")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "dup")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__del__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "fd")
(PUNCT ">=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "unclosed file %r")
(PUNCT "%")
(ID "self")
(PUNCT ",")
(ID "ResourceWarning")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "recv")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "fd")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "fd")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "getsockopt")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "level")
(PUNCT ",")
(ID "optname")
(PUNCT ",")
(ID "buflen")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "level")
(PUNCT "==")
(ID "socket")
(PUNCT ".")
(ID "SOL_SOCKET")
(KEYWORD and)
(ID "optname")
(PUNCT "==")
(ID "socket")
(PUNCT ".")
(ID "SO_ERROR")
(KEYWORD and)
(KEYWORD not)
(ID "buflen")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "Only asyncore specific behaviour ")
(LIT "implemented.")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "read")
(PUNCT "=")
(ID "recv")
(NEWLINE)
(ID "write")
(PUNCT "=")
(ID "send")
(NEWLINE)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "fd")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "os")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fd")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "fileno")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "fd")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "file_dispatcher")
(PUNCT "(")
(ID "dispatcher")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fd")
(PUNCT ",")
(ID "map")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dispatcher")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID "map")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "connected")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "fd")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "set_file")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(ID "flags")
(PUNCT "=")
(ID "fcntl")
(PUNCT ".")
(ID "fcntl")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "fcntl")
(PUNCT ".")
(ID "F_GETFL")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(ID "flags")
(PUNCT "=")
(ID "flags")
(PUNCT "|")
(ID "os")
(PUNCT ".")
(ID "O_NONBLOCK")
(NEWLINE)
(ID "fcntl")
(PUNCT ".")
(ID "fcntl")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "fcntl")
(PUNCT ".")
(ID "F_SETFL")
(PUNCT ",")
(ID "flags")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_file")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fd")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT "=")
(ID "file_wrapper")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_fileno")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "socket")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "add_channel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ENDMARKER)
