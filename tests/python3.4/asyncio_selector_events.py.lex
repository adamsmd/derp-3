(LIT "Event loop using a selector and related classes.\n\nA selector is a \"notify-when-ready\" multiplexer.  For a subclass which\nalso includes support for signal handling, see the unix_events sub-module.\n")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "BaseSelectorEventLoop")
(PUNCT "]")
(NEWLINE)
(KEYWORD import)
(ID "collections")
(NEWLINE)
(KEYWORD import)
(ID "errno")
(NEWLINE)
(KEYWORD import)
(ID "functools")
(NEWLINE)
(KEYWORD import)
(ID "socket")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "warnings")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "ssl")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ssl")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "base_events")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "constants")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "events")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "futures")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "selectors")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "transports")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "sslproto")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID "coroutines")
(KEYWORD import)
(ID "coroutine")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(ID "log")
(KEYWORD import)
(ID "logger")
(NEWLINE)
(KEYWORD def)
(ID "_test_selector_event")
(PUNCT "(")
(ID "selector")
(PUNCT ",")
(ID "fd")
(PUNCT ",")
(ID "event")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "selector")
(PUNCT ".")
(ID "get_key")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "key")
(PUNCT ".")
(ID "events")
(PUNCT "&")
(ID "event")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "BaseSelectorEventLoop")
(PUNCT "(")
(ID "base_events")
(PUNCT ".")
(ID "BaseEventLoop")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Selector event loop.\n\n    See events.EventLoop for API specification.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "selector")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "selector")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "selector")
(PUNCT "=")
(ID "selectors")
(PUNCT ".")
(ID "DefaultSelector")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "logger")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "Using selector: %s")
(PUNCT ",")
(ID "selector")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT "=")
(ID "selector")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_make_self_pipe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_make_socket_transport")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "waiter")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "*")
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "server")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_SelectorSocketTransport")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "waiter")
(PUNCT ",")
(ID "extra")
(PUNCT ",")
(ID "server")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_make_ssl_transport")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "rawsock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "sslcontext")
(PUNCT ",")
(ID "waiter")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "*")
(PUNCT ",")
(ID "server_side")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "server_hostname")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "server")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "sslproto")
(PUNCT ".")
(ID "_is_sslproto_available")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_make_legacy_ssl_transport")
(PUNCT "(")
(ID "rawsock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "sslcontext")
(PUNCT ",")
(ID "waiter")
(PUNCT ",")
(ID "server_side")
(PUNCT "=")
(ID "server_side")
(PUNCT ",")
(ID "server_hostname")
(PUNCT "=")
(ID "server_hostname")
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(ID "extra")
(PUNCT ",")
(ID "server")
(PUNCT "=")
(ID "server")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "ssl_protocol")
(PUNCT "=")
(ID "sslproto")
(PUNCT ".")
(ID "SSLProtocol")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "sslcontext")
(PUNCT ",")
(ID "waiter")
(PUNCT ",")
(ID "server_side")
(PUNCT ",")
(ID "server_hostname")
(PUNCT ")")
(NEWLINE)
(ID "_SelectorSocketTransport")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "rawsock")
(PUNCT ",")
(ID "ssl_protocol")
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(ID "extra")
(PUNCT ",")
(ID "server")
(PUNCT "=")
(ID "server")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "ssl_protocol")
(PUNCT ".")
(ID "_app_transport")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_make_legacy_ssl_transport")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "rawsock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "sslcontext")
(PUNCT ",")
(ID "waiter")
(PUNCT ",")
(PUNCT "*")
(PUNCT ",")
(ID "server_side")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "server_hostname")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "server")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_SelectorSslTransport")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "rawsock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "sslcontext")
(PUNCT ",")
(ID "waiter")
(PUNCT ",")
(ID "server_side")
(PUNCT ",")
(ID "server_hostname")
(PUNCT ",")
(ID "extra")
(PUNCT ",")
(ID "server")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_make_datagram_transport")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "address")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "waiter")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_SelectorDatagramTransport")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "address")
(PUNCT ",")
(ID "waiter")
(PUNCT ",")
(ID "extra")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "is_running")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "Cannot close a running event loop")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "is_closed")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_close_self_pipe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_selector")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_socketpair")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "NotImplementedError")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_close_self_pipe")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "remove_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_ssock")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_ssock")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_ssock")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_csock")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_csock")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_internal_fds")
(PUNCT "-=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_make_self_pipe")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_ssock")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_csock")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_socketpair")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_ssock")
(PUNCT ".")
(ID "setblocking")
(PUNCT "(")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_csock")
(PUNCT ".")
(ID "setblocking")
(PUNCT "(")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_internal_fds")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "add_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_ssock")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_read_from_self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_process_self_data")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_read_from_self")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_ssock")
(PUNCT ".")
(ID "recv")
(PUNCT "(")
(LIT 4096)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_process_self_data")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "InterruptedError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "BlockingIOError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_write_to_self")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "csock")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_csock")
(NEWLINE)
(KEYWORD if)
(ID "csock")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "csock")
(PUNCT ".")
(ID "send")
(PUNCT "(")
(LIT #"\0")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_debug")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "Fail to write a null byte into the ")
(LIT "self-pipe socket")
(PUNCT ",")
(ID "exc_info")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_start_serving")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "protocol_factory")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "sslcontext")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "server")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "add_reader")
(PUNCT "(")
(ID "sock")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_accept_connection")
(PUNCT ",")
(ID "protocol_factory")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "sslcontext")
(PUNCT ",")
(ID "server")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_accept_connection")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "protocol_factory")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "sslcontext")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "server")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "conn")
(PUNCT ",")
(ID "addr")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "accept")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_debug")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "%r got a new connection from %r: %r")
(PUNCT ",")
(ID "server")
(PUNCT ",")
(ID "addr")
(PUNCT ",")
(ID "conn")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "conn")
(PUNCT ".")
(ID "setblocking")
(PUNCT "(")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "BlockingIOError")
(PUNCT ",")
(ID "InterruptedError")
(PUNCT ",")
(ID "ConnectionAbortedError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "exc")
(PUNCT ".")
(ID "errno")
(KEYWORD in)
(PUNCT "(")
(ID "errno")
(PUNCT ".")
(ID "EMFILE")
(PUNCT ",")
(ID "errno")
(PUNCT ".")
(ID "ENFILE")
(PUNCT ",")
(ID "errno")
(PUNCT ".")
(ID "ENOBUFS")
(PUNCT ",")
(ID "errno")
(PUNCT ".")
(ID "ENOMEM")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "call_exception_handler")
(PUNCT "(")
(PUNCT "{")
(LIT "message")
(PUNCT ":")
(LIT "socket.accept() out of system resource")
(PUNCT ",")
(LIT "exception")
(PUNCT ":")
(ID "exc")
(PUNCT ",")
(LIT "socket")
(PUNCT ":")
(ID "sock")
(PUNCT ",")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "remove_reader")
(PUNCT "(")
(ID "sock")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "call_later")
(PUNCT "(")
(ID "constants")
(PUNCT ".")
(ID "ACCEPT_RETRY_DELAY")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_start_serving")
(PUNCT ",")
(ID "protocol_factory")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "sslcontext")
(PUNCT ",")
(ID "server")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "extra")
(PUNCT "=")
(PUNCT "{")
(LIT "peername")
(PUNCT ":")
(ID "addr")
(PUNCT "}")
(NEWLINE)
(ID "accept")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_accept_connection2")
(PUNCT "(")
(ID "protocol_factory")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "extra")
(PUNCT ",")
(ID "sslcontext")
(PUNCT ",")
(ID "server")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "create_task")
(PUNCT "(")
(ID "accept")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(PUNCT "@")
(ID "coroutine")
(NEWLINE)
(KEYWORD def)
(ID "_accept_connection2")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "protocol_factory")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "extra")
(PUNCT ",")
(ID "sslcontext")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "server")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "protocol")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "transport")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "protocol")
(PUNCT "=")
(ID "protocol_factory")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "waiter")
(PUNCT "=")
(ID "futures")
(PUNCT ".")
(ID "Future")
(PUNCT "(")
(ID "loop")
(PUNCT "=")
(ID "self")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sslcontext")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "transport")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_make_ssl_transport")
(PUNCT "(")
(ID "conn")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "sslcontext")
(PUNCT ",")
(ID "waiter")
(PUNCT "=")
(ID "waiter")
(PUNCT ",")
(ID "server_side")
(PUNCT "=")
(KEYWORD True)
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(ID "extra")
(PUNCT ",")
(ID "server")
(PUNCT "=")
(ID "server")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "transport")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_make_socket_transport")
(PUNCT "(")
(ID "conn")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "waiter")
(PUNCT "=")
(ID "waiter")
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(ID "extra")
(PUNCT ",")
(ID "server")
(PUNCT "=")
(ID "server")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(KEYWORD from)
(ID "waiter")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "transport")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_debug")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "context")
(PUNCT "=")
(PUNCT "{")
(LIT "message")
(PUNCT ":")
(PUNCT "(")
(LIT "Error on transport creation ")
(LIT "for incoming connection")
(PUNCT ")")
(PUNCT ",")
(LIT "exception")
(PUNCT ":")
(ID "exc")
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD if)
(ID "protocol")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "context")
(PUNCT "[")
(LIT "protocol")
(PUNCT "]")
(PUNCT "=")
(ID "protocol")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "transport")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "context")
(PUNCT "[")
(LIT "transport")
(PUNCT "]")
(PUNCT "=")
(ID "transport")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "call_exception_handler")
(PUNCT "(")
(ID "context")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "add_reader")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fd")
(PUNCT ",")
(ID "callback")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Add a reader callback.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_closed")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "handle")
(PUNCT "=")
(ID "events")
(PUNCT ".")
(ID "Handle")
(PUNCT "(")
(ID "callback")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "get_key")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "selectors")
(PUNCT ".")
(ID "EVENT_READ")
(PUNCT ",")
(PUNCT "(")
(ID "handle")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mask")
(PUNCT ",")
(PUNCT "(")
(ID "reader")
(PUNCT ",")
(ID "writer")
(PUNCT ")")
(PUNCT "=")
(ID "key")
(PUNCT ".")
(ID "events")
(PUNCT ",")
(ID "key")
(PUNCT ".")
(ID "data")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "modify")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "mask")
(PUNCT "|")
(ID "selectors")
(PUNCT ".")
(ID "EVENT_READ")
(PUNCT ",")
(PUNCT "(")
(ID "handle")
(PUNCT ",")
(ID "writer")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "reader")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "reader")
(PUNCT ".")
(ID "cancel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "remove_reader")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fd")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Remove a reader callback.")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "is_closed")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "get_key")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mask")
(PUNCT ",")
(PUNCT "(")
(ID "reader")
(PUNCT ",")
(ID "writer")
(PUNCT ")")
(PUNCT "=")
(ID "key")
(PUNCT ".")
(ID "events")
(PUNCT ",")
(ID "key")
(PUNCT ".")
(ID "data")
(NEWLINE)
(ID "mask")
(PUNCT "&=")
(PUNCT "~")
(ID "selectors")
(PUNCT ".")
(ID "EVENT_READ")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "mask")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "unregister")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "modify")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "mask")
(PUNCT ",")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(ID "writer")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "reader")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "reader")
(PUNCT ".")
(ID "cancel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "add_writer")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fd")
(PUNCT ",")
(ID "callback")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Add a writer callback..")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_check_closed")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "handle")
(PUNCT "=")
(ID "events")
(PUNCT ".")
(ID "Handle")
(PUNCT "(")
(ID "callback")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "get_key")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "selectors")
(PUNCT ".")
(ID "EVENT_WRITE")
(PUNCT ",")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(ID "handle")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mask")
(PUNCT ",")
(PUNCT "(")
(ID "reader")
(PUNCT ",")
(ID "writer")
(PUNCT ")")
(PUNCT "=")
(ID "key")
(PUNCT ".")
(ID "events")
(PUNCT ",")
(ID "key")
(PUNCT ".")
(ID "data")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "modify")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "mask")
(PUNCT "|")
(ID "selectors")
(PUNCT ".")
(ID "EVENT_WRITE")
(PUNCT ",")
(PUNCT "(")
(ID "reader")
(PUNCT ",")
(ID "handle")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "writer")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "writer")
(PUNCT ".")
(ID "cancel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "remove_writer")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fd")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Remove a writer callback.")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "is_closed")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "get_key")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mask")
(PUNCT ",")
(PUNCT "(")
(ID "reader")
(PUNCT ",")
(ID "writer")
(PUNCT ")")
(PUNCT "=")
(ID "key")
(PUNCT ".")
(ID "events")
(PUNCT ",")
(ID "key")
(PUNCT ".")
(ID "data")
(NEWLINE)
(ID "mask")
(PUNCT "&=")
(PUNCT "~")
(ID "selectors")
(PUNCT ".")
(ID "EVENT_WRITE")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "mask")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "unregister")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_selector")
(PUNCT ".")
(ID "modify")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "mask")
(PUNCT ",")
(PUNCT "(")
(ID "reader")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "writer")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "writer")
(PUNCT ".")
(ID "cancel")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "sock_recv")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Receive data from the socket.\n\n        The return value is a bytes object representing the data received.\n        The maximum amount of data to be received at once is specified by\n        nbytes.\n\n        This method is a coroutine.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_debug")
(KEYWORD and)
(ID "sock")
(PUNCT ".")
(ID "gettimeout")
(PUNCT "(")
(PUNCT ")")
(PUNCT "!=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "the socket must be non-blocking")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "fut")
(PUNCT "=")
(ID "futures")
(PUNCT ".")
(ID "Future")
(PUNCT "(")
(ID "loop")
(PUNCT "=")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_sock_recv")
(PUNCT "(")
(ID "fut")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "fut")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_sock_recv")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fut")
(PUNCT ",")
(ID "registered")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "registered")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "remove_reader")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "fut")
(PUNCT ".")
(ID "cancelled")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "recv")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "BlockingIOError")
(PUNCT ",")
(ID "InterruptedError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "add_reader")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_sock_recv")
(PUNCT ",")
(ID "fut")
(PUNCT ",")
(KEYWORD True)
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT ".")
(ID "set_exception")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT ".")
(ID "set_result")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "sock_sendall")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Send data to the socket.\n\n        The socket must be connected to a remote socket. This method continues\n        to send data from data until either all data has been sent or an\n        error occurs. None is returned on success. On error, an exception is\n        raised, and there is no way to determine how much data, if any, was\n        successfully processed by the receiving end of the connection.\n\n        This method is a coroutine.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_debug")
(KEYWORD and)
(ID "sock")
(PUNCT ".")
(ID "gettimeout")
(PUNCT "(")
(PUNCT ")")
(PUNCT "!=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "the socket must be non-blocking")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "fut")
(PUNCT "=")
(ID "futures")
(PUNCT ".")
(ID "Future")
(PUNCT "(")
(ID "loop")
(PUNCT "=")
(ID "self")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_sock_sendall")
(PUNCT "(")
(ID "fut")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT ".")
(ID "set_result")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "fut")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_sock_sendall")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fut")
(PUNCT ",")
(ID "registered")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "registered")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "remove_writer")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "fut")
(PUNCT ".")
(ID "cancelled")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "send")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "BlockingIOError")
(PUNCT ",")
(ID "InterruptedError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT ".")
(ID "set_exception")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "n")
(PUNCT "==")
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT ".")
(ID "set_result")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "data")
(PUNCT "[")
(ID "n")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "add_writer")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_sock_sendall")
(PUNCT ",")
(ID "fut")
(PUNCT ",")
(KEYWORD True)
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "sock_connect")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Connect to a remote socket at address.\n\n        The address must be already resolved to avoid the trap of hanging the\n        entire event loop when the address requires doing a DNS lookup. For\n        example, it must be an IP address, not an hostname, for AF_INET and\n        AF_INET6 address families. Use getaddrinfo() to resolve the hostname\n        asynchronously.\n\n        This method is a coroutine.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_debug")
(KEYWORD and)
(ID "sock")
(PUNCT ".")
(ID "gettimeout")
(PUNCT "(")
(PUNCT ")")
(PUNCT "!=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "the socket must be non-blocking")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "fut")
(PUNCT "=")
(ID "futures")
(PUNCT ".")
(ID "Future")
(PUNCT "(")
(ID "loop")
(PUNCT "=")
(ID "self")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_debug")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "base_events")
(PUNCT ".")
(ID "_check_resolved_address")
(PUNCT "(")
(ID "sock")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(KEYWORD as)
(ID "err")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT ".")
(ID "set_exception")
(PUNCT "(")
(ID "err")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_sock_connect")
(PUNCT "(")
(ID "fut")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "fut")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_sock_connect")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fut")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sock")
(PUNCT ".")
(ID "connect")
(PUNCT "(")
(ID "address")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "InterruptedError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD except)
(ID "BlockingIOError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT ".")
(ID "add_done_callback")
(PUNCT "(")
(ID "functools")
(PUNCT ".")
(ID "partial")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_connect_done")
(PUNCT ",")
(ID "fd")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "add_writer")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_sock_connect_cb")
(PUNCT ",")
(ID "fut")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT ".")
(ID "set_exception")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT ".")
(ID "set_result")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_sock_connect_done")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fd")
(PUNCT ",")
(ID "fut")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "remove_writer")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_sock_connect_cb")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fut")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "fut")
(PUNCT ".")
(ID "cancelled")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "err")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "getsockopt")
(PUNCT "(")
(ID "socket")
(PUNCT ".")
(ID "SOL_SOCKET")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "SO_ERROR")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "err")
(PUNCT "!=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(ID "err")
(PUNCT ",")
(LIT "Connect call failed %s")
(PUNCT "%")
(PUNCT "(")
(ID "address")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "BlockingIOError")
(PUNCT ",")
(ID "InterruptedError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT ".")
(ID "set_exception")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT ".")
(ID "set_result")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "sock_accept")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Accept a connection.\n\n        The socket must be bound to an address and listening for connections.\n        The return value is a pair (conn, address) where conn is a new socket\n        object usable to send and receive data on the connection, and address\n        is the address bound to the socket on the other end of the connection.\n\n        This method is a coroutine.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_debug")
(KEYWORD and)
(ID "sock")
(PUNCT ".")
(ID "gettimeout")
(PUNCT "(")
(PUNCT ")")
(PUNCT "!=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "the socket must be non-blocking")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "fut")
(PUNCT "=")
(ID "futures")
(PUNCT ".")
(ID "Future")
(PUNCT "(")
(ID "loop")
(PUNCT "=")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_sock_accept")
(PUNCT "(")
(ID "fut")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(ID "sock")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "fut")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_sock_accept")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fut")
(PUNCT ",")
(ID "registered")
(PUNCT ",")
(ID "sock")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "registered")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "remove_reader")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "fut")
(PUNCT ".")
(ID "cancelled")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "conn")
(PUNCT ",")
(ID "address")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "accept")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "conn")
(PUNCT ".")
(ID "setblocking")
(PUNCT "(")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "BlockingIOError")
(PUNCT ",")
(ID "InterruptedError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "add_reader")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_sock_accept")
(PUNCT ",")
(ID "fut")
(PUNCT ",")
(KEYWORD True)
(PUNCT ",")
(ID "sock")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT ".")
(ID "set_exception")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fut")
(PUNCT ".")
(ID "set_result")
(PUNCT "(")
(PUNCT "(")
(ID "conn")
(PUNCT ",")
(ID "address")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_process_events")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "event_list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "mask")
(KEYWORD in)
(ID "event_list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fileobj")
(PUNCT ",")
(PUNCT "(")
(ID "reader")
(PUNCT ",")
(ID "writer")
(PUNCT ")")
(PUNCT "=")
(ID "key")
(PUNCT ".")
(ID "fileobj")
(PUNCT ",")
(ID "key")
(PUNCT ".")
(ID "data")
(NEWLINE)
(KEYWORD if)
(ID "mask")
(PUNCT "&")
(ID "selectors")
(PUNCT ".")
(ID "EVENT_READ")
(KEYWORD and)
(ID "reader")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "reader")
(PUNCT ".")
(ID "_cancelled")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "remove_reader")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_add_callback")
(PUNCT "(")
(ID "reader")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "mask")
(PUNCT "&")
(ID "selectors")
(PUNCT ".")
(ID "EVENT_WRITE")
(KEYWORD and)
(ID "writer")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "writer")
(PUNCT ".")
(ID "_cancelled")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "remove_writer")
(PUNCT "(")
(ID "fileobj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_add_callback")
(PUNCT "(")
(ID "writer")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_stop_serving")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sock")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "remove_reader")
(PUNCT "(")
(ID "sock")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "sock")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_SelectorTransport")
(PUNCT "(")
(ID "transports")
(PUNCT ".")
(ID "_FlowControlMixin")
(PUNCT ",")
(ID "transports")
(PUNCT ".")
(ID "Transport")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "max_size")
(PUNCT "=")
(LIT 256)
(PUNCT "*")
(LIT 1024)
(NEWLINE)
(ID "_buffer_factory")
(PUNCT "=")
(ID "bytearray")
(NEWLINE)
(ID "_sock")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "loop")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "server")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "extra")
(PUNCT ",")
(ID "loop")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_extra")
(PUNCT "[")
(LIT "socket")
(PUNCT "]")
(PUNCT "=")
(ID "sock")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_extra")
(PUNCT "[")
(LIT "sockname")
(PUNCT "]")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "getsockname")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT "peername")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_extra")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_extra")
(PUNCT "[")
(LIT "peername")
(PUNCT "]")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "getpeername")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "socket")
(PUNCT ".")
(ID "error")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_extra")
(PUNCT "[")
(LIT "peername")
(PUNCT "]")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT "=")
(ID "sock")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT "=")
(ID "protocol")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_protocol_connected")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_server")
(PUNCT "=")
(ID "server")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_buffer_factory")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_conn_lost")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_closing")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_server")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_server")
(PUNCT ".")
(ID "_attach")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT "=")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT ".")
(ID "__name__")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_sock")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "closed")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "_closing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "closing")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "info")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "fd=%s")
(PUNCT "%")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_loop")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "polling")
(PUNCT "=")
(ID "_test_selector_event")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "_selector")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "selectors")
(PUNCT ".")
(ID "EVENT_READ")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "polling")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "read=polling")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "read=idle")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "polling")
(PUNCT "=")
(ID "_test_selector_event")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "_selector")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "selectors")
(PUNCT ".")
(ID "EVENT_WRITE")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "polling")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "state")
(PUNCT "=")
(LIT "polling")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "state")
(PUNCT "=")
(LIT "idle")
(NEWLINE)
(DEDENT)
(ID "bufsize")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_write_buffer_size")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "info")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(LIT "write=<%s, bufsize=%s>")
(PUNCT "%")
(PUNCT "(")
(ID "state")
(PUNCT ",")
(ID "bufsize")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(LIT "<%s>")
(PUNCT "%")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "info")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "abort")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_force_close")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_closing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_closing")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_conn_lost")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_soon")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_call_connection_lost")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "version_info")
(PUNCT ">=")
(PUNCT "(")
(LIT 3)
(PUNCT ",")
(LIT 4)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__del__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_sock")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "warnings")
(PUNCT ".")
(ID "warn")
(PUNCT "(")
(LIT "unclosed transport %r")
(PUNCT "%")
(ID "self")
(PUNCT ",")
(ID "ResourceWarning")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_fatal_error")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "exc")
(PUNCT ",")
(ID "message")
(PUNCT "=")
(LIT "Fatal error on transport")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "exc")
(PUNCT ",")
(PUNCT "(")
(ID "BrokenPipeError")
(PUNCT ",")
(ID "ConnectionResetError")
(PUNCT ",")
(ID "ConnectionAbortedError")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "get_debug")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "%r: %s")
(PUNCT ",")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ",")
(ID "exc_info")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_exception_handler")
(PUNCT "(")
(PUNCT "{")
(LIT "message")
(PUNCT ":")
(ID "message")
(PUNCT ",")
(LIT "exception")
(PUNCT ":")
(ID "exc")
(PUNCT ",")
(LIT "transport")
(PUNCT ":")
(ID "self")
(PUNCT ",")
(LIT "protocol")
(PUNCT ":")
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT ",")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_force_close")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_force_close")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "exc")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_conn_lost")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ".")
(ID "clear")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_closing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_closing")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_conn_lost")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_soon")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_call_connection_lost")
(PUNCT ",")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_call_connection_lost")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "exc")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_protocol_connected")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT ".")
(ID "connection_lost")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "server")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_server")
(NEWLINE)
(KEYWORD if)
(ID "server")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "server")
(PUNCT ".")
(ID "_detach")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_server")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_write_buffer_size")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_SelectorSocketTransport")
(PUNCT "(")
(ID "_SelectorTransport")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "loop")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "waiter")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "server")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "loop")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "extra")
(PUNCT ",")
(ID "server")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_eof")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_paused")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_soon")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT ".")
(ID "connection_made")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_soon")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "add_reader")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_read_ready")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "waiter")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_soon")
(PUNCT "(")
(ID "waiter")
(PUNCT ".")
(ID "_set_result_unless_cancelled")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "pause_reading")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_closing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "Cannot pause_reading() when closing")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_paused")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "Already paused")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_paused")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "get_debug")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "%r pauses reading")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "resume_reading")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_paused")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "Not paused")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_paused")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_closing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "add_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_read_ready")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "get_debug")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "%r resumes reading")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_read_ready")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "recv")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "max_size")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "BlockingIOError")
(PUNCT ",")
(ID "InterruptedError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_fatal_error")
(PUNCT "(")
(ID "exc")
(PUNCT ",")
(LIT "Fatal read error on socket transport")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT ".")
(ID "data_received")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "get_debug")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "%r received EOF")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "keep_open")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT ".")
(ID "eof_received")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "keep_open")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "write")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(PUNCT "(")
(ID "bytes")
(PUNCT ",")
(ID "bytearray")
(PUNCT ",")
(ID "memoryview")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "data argument must be byte-ish (%r)")
(PUNCT ",")
(ID "type")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_eof")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "Cannot call write() after write_eof()")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_conn_lost")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_conn_lost")
(PUNCT ">=")
(ID "constants")
(PUNCT ".")
(ID "LOG_THRESHOLD_FOR_CONNLOST_WRITES")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "warning")
(PUNCT "(")
(LIT "socket.send() raised exception.")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_conn_lost")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "send")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "BlockingIOError")
(PUNCT ",")
(ID "InterruptedError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_fatal_error")
(PUNCT "(")
(ID "exc")
(PUNCT ",")
(LIT "Fatal write error on socket transport")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "data")
(PUNCT "[")
(ID "n")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "add_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_write_ready")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_maybe_pause_protocol")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_write_ready")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ",")
(LIT "Data should not be empty")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "send")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "BlockingIOError")
(PUNCT ",")
(ID "InterruptedError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ".")
(ID "clear")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_fatal_error")
(PUNCT "(")
(ID "exc")
(PUNCT ",")
(LIT "Fatal write error on socket transport")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT "[")
(PUNCT ":")
(ID "n")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_maybe_resume_protocol")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_closing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_call_connection_lost")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "self")
(PUNCT ".")
(ID "_eof")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "shutdown")
(PUNCT "(")
(ID "socket")
(PUNCT ".")
(ID "SHUT_WR")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "write_eof")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_eof")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_eof")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "shutdown")
(PUNCT "(")
(ID "socket")
(PUNCT ".")
(ID "SHUT_WR")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "can_write_eof")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_SelectorSslTransport")
(PUNCT "(")
(ID "_SelectorTransport")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_buffer_factory")
(PUNCT "=")
(ID "bytearray")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "loop")
(PUNCT ",")
(ID "rawsock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "sslcontext")
(PUNCT ",")
(ID "waiter")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "server_side")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "server_hostname")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "server")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "ssl")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "stdlib ssl module not available")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "sslcontext")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sslcontext")
(PUNCT "=")
(ID "sslproto")
(PUNCT ".")
(ID "_create_transport_context")
(PUNCT "(")
(ID "server_side")
(PUNCT ",")
(ID "server_hostname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "wrap_kwargs")
(PUNCT "=")
(PUNCT "{")
(LIT "server_side")
(PUNCT ":")
(ID "server_side")
(PUNCT ",")
(LIT "do_handshake_on_connect")
(PUNCT ":")
(KEYWORD False)
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD if)
(ID "server_hostname")
(KEYWORD and)
(KEYWORD not)
(ID "server_side")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "wrap_kwargs")
(PUNCT "[")
(LIT "server_hostname")
(PUNCT "]")
(PUNCT "=")
(ID "server_hostname")
(NEWLINE)
(DEDENT)
(ID "sslsock")
(PUNCT "=")
(ID "sslcontext")
(PUNCT ".")
(ID "wrap_socket")
(PUNCT "(")
(ID "rawsock")
(PUNCT ",")
(PUNCT "**")
(ID "wrap_kwargs")
(PUNCT ")")
(NEWLINE)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "loop")
(PUNCT ",")
(ID "sslsock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "extra")
(PUNCT ",")
(ID "server")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_protocol_connected")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_server_hostname")
(PUNCT "=")
(ID "server_hostname")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_waiter")
(PUNCT "=")
(ID "waiter")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_sslcontext")
(PUNCT "=")
(ID "sslcontext")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_paused")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_extra")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "sslcontext")
(PUNCT "=")
(ID "sslcontext")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "get_debug")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "%r starts SSL handshake")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "start_time")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "start_time")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_on_handshake")
(PUNCT "(")
(ID "start_time")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_wakeup_waiter")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "exc")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_waiter")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_waiter")
(PUNCT ".")
(ID "cancelled")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "exc")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_waiter")
(PUNCT ".")
(ID "set_exception")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_waiter")
(PUNCT ".")
(ID "set_result")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_waiter")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_on_handshake")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "start_time")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "do_handshake")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ssl")
(PUNCT ".")
(ID "SSLWantReadError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "add_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_on_handshake")
(PUNCT ",")
(ID "start_time")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ssl")
(PUNCT ".")
(ID "SSLWantWriteError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "add_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_on_handshake")
(PUNCT ",")
(ID "start_time")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "BaseException")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "get_debug")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "warning")
(PUNCT "(")
(LIT "%r: SSL handshake failed")
(PUNCT ",")
(ID "self")
(PUNCT ",")
(ID "exc_info")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_wakeup_waiter")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "exc")
(PUNCT ",")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(ID "peercert")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "getpeercert")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sslcontext")
(PUNCT ",")
(LIT "check_hostname")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_server_hostname")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_sslcontext")
(PUNCT ".")
(ID "verify_mode")
(PUNCT "!=")
(ID "ssl")
(PUNCT ".")
(ID "CERT_NONE")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ssl")
(PUNCT ".")
(ID "match_hostname")
(PUNCT "(")
(ID "peercert")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_server_hostname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "get_debug")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "warning")
(PUNCT "(")
(LIT "%r: SSL handshake failed ")
(LIT "on matching the hostname")
(PUNCT ",")
(ID "self")
(PUNCT ",")
(ID "exc_info")
(PUNCT "=")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_wakeup_waiter")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_extra")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "peercert")
(PUNCT "=")
(ID "peercert")
(PUNCT ",")
(ID "cipher")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "cipher")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "compression")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "compression")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_read_wants_write")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_write_wants_read")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "add_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_read_ready")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_protocol_connected")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_soon")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT ".")
(ID "connection_made")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_soon")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_wakeup_waiter")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "get_debug")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dt")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "time")
(PUNCT "(")
(PUNCT ")")
(PUNCT "-")
(ID "start_time")
(NEWLINE)
(ID "logger")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "%r: SSL handshake took %.1f ms")
(PUNCT ",")
(ID "self")
(PUNCT ",")
(ID "dt")
(PUNCT "*")
(LIT 1000.0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "pause_reading")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_closing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "Cannot pause_reading() when closing")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_paused")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "Already paused")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_paused")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "get_debug")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "%r pauses reading")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "resume_reading")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_paused")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "Not paused")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_paused")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_closing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "add_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_read_ready")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "get_debug")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "%r resumes reading")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_read_ready")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_write_wants_read")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_write_wants_read")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_write_ready")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "add_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_write_ready")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "recv")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "max_size")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "BlockingIOError")
(PUNCT ",")
(ID "InterruptedError")
(PUNCT ",")
(ID "ssl")
(PUNCT ".")
(ID "SSLWantReadError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ssl")
(PUNCT ".")
(ID "SSLWantWriteError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_read_wants_write")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "add_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_write_ready")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_fatal_error")
(PUNCT "(")
(ID "exc")
(PUNCT ",")
(LIT "Fatal read error on SSL transport")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT ".")
(ID "data_received")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "get_debug")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "%r received EOF")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "keep_open")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT ".")
(ID "eof_received")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "keep_open")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "warning")
(PUNCT "(")
(LIT "returning true from eof_received() ")
(LIT "has no effect when using ssl")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_write_ready")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_read_wants_write")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_read_wants_write")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_read_ready")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_paused")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "_closing")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "add_reader")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_read_ready")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "send")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "BlockingIOError")
(PUNCT ",")
(ID "InterruptedError")
(PUNCT ",")
(ID "ssl")
(PUNCT ".")
(ID "SSLWantWriteError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ssl")
(PUNCT ".")
(ID "SSLWantReadError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_write_wants_read")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ".")
(ID "clear")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_fatal_error")
(PUNCT "(")
(ID "exc")
(PUNCT ",")
(LIT "Fatal write error on SSL transport")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT "[")
(PUNCT ":")
(ID "n")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_maybe_resume_protocol")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_closing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_call_connection_lost")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "write")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(PUNCT "(")
(ID "bytes")
(PUNCT ",")
(ID "bytearray")
(PUNCT ",")
(ID "memoryview")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "data argument must be byte-ish (%r)")
(PUNCT ",")
(ID "type")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_conn_lost")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_conn_lost")
(PUNCT ">=")
(ID "constants")
(PUNCT ".")
(ID "LOG_THRESHOLD_FOR_CONNLOST_WRITES")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "warning")
(PUNCT "(")
(LIT "socket.send() raised exception.")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_conn_lost")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "add_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_write_ready")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_maybe_pause_protocol")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "can_write_eof")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_SelectorDatagramTransport")
(PUNCT "(")
(ID "_SelectorTransport")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_buffer_factory")
(PUNCT "=")
(ID "collections")
(PUNCT ".")
(ID "deque")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "loop")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "address")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "waiter")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "extra")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "loop")
(PUNCT ",")
(ID "sock")
(PUNCT ",")
(ID "protocol")
(PUNCT ",")
(ID "extra")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_address")
(PUNCT "=")
(ID "address")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_soon")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT ".")
(ID "connection_made")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_soon")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "add_reader")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_read_ready")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "waiter")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "call_soon")
(PUNCT "(")
(ID "waiter")
(PUNCT ".")
(ID "_set_result_unless_cancelled")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_write_buffer_size")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "sum")
(PUNCT "(")
(ID "len")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(KEYWORD for)
(ID "data")
(PUNCT ",")
(ID "_")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_read_ready")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT ",")
(ID "addr")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "recvfrom")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "max_size")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "BlockingIOError")
(PUNCT ",")
(ID "InterruptedError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT ".")
(ID "error_received")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_fatal_error")
(PUNCT "(")
(ID "exc")
(PUNCT ",")
(LIT "Fatal read error on datagram transport")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT ".")
(ID "datagram_received")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(ID "addr")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "sendto")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "data")
(PUNCT ",")
(ID "addr")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(PUNCT "(")
(ID "bytes")
(PUNCT ",")
(ID "bytearray")
(PUNCT ",")
(ID "memoryview")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "data argument must be byte-ish (%r)")
(PUNCT ",")
(ID "type")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_address")
(KEYWORD and)
(ID "addr")
(KEYWORD not)
(KEYWORD in)
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_address")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Invalid address: must be None or %s")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_address")
(PUNCT ",")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_conn_lost")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_address")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_conn_lost")
(PUNCT ">=")
(ID "constants")
(PUNCT ".")
(ID "LOG_THRESHOLD_FOR_CONNLOST_WRITES")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "logger")
(PUNCT ".")
(ID "warning")
(PUNCT "(")
(LIT "socket.send() raised exception.")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_conn_lost")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_address")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "send")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "sendto")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(ID "addr")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "BlockingIOError")
(PUNCT ",")
(ID "InterruptedError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "add_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_sendto_ready")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT ".")
(ID "error_received")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_fatal_error")
(PUNCT "(")
(ID "exc")
(PUNCT ",")
(LIT "Fatal write error on datagram transport")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "bytes")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(PUNCT ",")
(ID "addr")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_maybe_pause_protocol")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_sendto_ready")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD while)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT ",")
(ID "addr")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ".")
(ID "popleft")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_address")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "send")
(PUNCT "(")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_sock")
(PUNCT ".")
(ID "sendto")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(ID "addr")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "BlockingIOError")
(PUNCT ",")
(ID "InterruptedError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ".")
(ID "appendleft")
(PUNCT "(")
(PUNCT "(")
(ID "data")
(PUNCT ",")
(ID "addr")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_protocol")
(PUNCT ".")
(ID "error_received")
(PUNCT "(")
(ID "exc")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(KEYWORD as)
(ID "exc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_fatal_error")
(PUNCT "(")
(ID "exc")
(PUNCT ",")
(LIT "Fatal write error on datagram transport")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_maybe_resume_protocol")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_buffer")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_loop")
(PUNCT ".")
(ID "remove_writer")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_sock_fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_closing")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_call_connection_lost")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(ENDMARKER)
