(LIT "\n\"PYSTONE\" Benchmark Program\n\nVersion:        Python/1.2 (corresponds to C/1.1 plus 3 Pystone fixes)\n\nAuthor:         Reinhold P. Weicker,  CACM Vol 27, No 10, 10/84 pg. 1013.\n\n                Translated from ADA to C by Rick Richardson.\n                Every method to preserve ADA-likeness has been used,\n                at the expense of C-ness.\n\n                Translated from C to Python by Guido van Rossum.\n\nVersion History:\n\n                Version 1.1 corrects two bugs in version 1.0:\n\n                First, it leaked memory: in Proc1(), NextRecord ends\n                up having a pointer to itself.  I have corrected this\n                by zapping NextRecord.PtrComp at the end of Proc1().\n\n                Second, Proc3() used the operator != to compare a\n                record to None.  This is rather inefficient and not\n                true to the intention of the original benchmark (where\n                a pointer comparison to None is intended; the !=\n                operator attempts to find a method __cmp__ to do value\n                comparison of the record).  Version 1.1 runs 5-10\n                percent faster than version 1.0, so benchmark figures\n                of different versions can't be compared directly.\n\n                Version 1.2 changes the division to floor division.\n\n                Under Python 3 version 1.1 would use the normal division\n                operator, resulting in some of the operations mistakenly\n                yielding floats. Version 1.2 instead uses floor division\n                making the benchmark a integer benchmark again.\n\n")
(NEWLINE)
(ID "LOOPS")
(PUNCT "=")
(LIT 50000)
(NEWLINE)
(KEYWORD from)
(ID "time")
(KEYWORD import)
(ID "clock")
(NEWLINE)
(ID "__version__")
(PUNCT "=")
(LIT "1.2")
(NEWLINE)
(PUNCT "[")
(ID "Ident1")
(PUNCT ",")
(ID "Ident2")
(PUNCT ",")
(ID "Ident3")
(PUNCT ",")
(ID "Ident4")
(PUNCT ",")
(ID "Ident5")
(PUNCT "]")
(PUNCT "=")
(ID "range")
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(LIT 6)
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "Record")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "PtrComp")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "Discr")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "EnumComp")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "IntComp")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "StringComp")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "PtrComp")
(PUNCT "=")
(ID "PtrComp")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "Discr")
(PUNCT "=")
(ID "Discr")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "EnumComp")
(PUNCT "=")
(ID "EnumComp")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "IntComp")
(PUNCT "=")
(ID "IntComp")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "StringComp")
(PUNCT "=")
(ID "StringComp")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "copy")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "Record")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "PtrComp")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "Discr")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "EnumComp")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "IntComp")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "StringComp")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "TRUE")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "FALSE")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD def)
(ID "main")
(PUNCT "(")
(ID "loops")
(PUNCT "=")
(ID "LOOPS")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "benchtime")
(PUNCT ",")
(ID "stones")
(PUNCT "=")
(ID "pystones")
(PUNCT "(")
(ID "loops")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "Pystone(%s) time for %d passes = %g")
(PUNCT "%")
(PUNCT "(")
(ID "__version__")
(PUNCT ",")
(ID "loops")
(PUNCT ",")
(ID "benchtime")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "This machine benchmarks at %g pystones/second")
(PUNCT "%")
(ID "stones")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "pystones")
(PUNCT "(")
(ID "loops")
(PUNCT "=")
(ID "LOOPS")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "Proc0")
(PUNCT "(")
(ID "loops")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "IntGlob")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "BoolGlob")
(PUNCT "=")
(ID "FALSE")
(NEWLINE)
(ID "Char1Glob")
(PUNCT "=")
(LIT "\u0000")
(NEWLINE)
(ID "Char2Glob")
(PUNCT "=")
(LIT "\u0000")
(NEWLINE)
(ID "Array1Glob")
(PUNCT "=")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT "*")
(LIT 51)
(NEWLINE)
(ID "Array2Glob")
(PUNCT "=")
(PUNCT "[")
(ID "x")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(KEYWORD for)
(ID "x")
(KEYWORD in)
(PUNCT "[")
(ID "Array1Glob")
(PUNCT "]")
(PUNCT "*")
(LIT 51)
(PUNCT "]")
(NEWLINE)
(ID "PtrGlb")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "PtrGlbNext")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "Proc0")
(PUNCT "(")
(ID "loops")
(PUNCT "=")
(ID "LOOPS")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD global)
(ID "IntGlob")
(NEWLINE)
(KEYWORD global)
(ID "BoolGlob")
(NEWLINE)
(KEYWORD global)
(ID "Char1Glob")
(NEWLINE)
(KEYWORD global)
(ID "Char2Glob")
(NEWLINE)
(KEYWORD global)
(ID "Array1Glob")
(NEWLINE)
(KEYWORD global)
(ID "Array2Glob")
(NEWLINE)
(KEYWORD global)
(ID "PtrGlb")
(NEWLINE)
(KEYWORD global)
(ID "PtrGlbNext")
(NEWLINE)
(ID "starttime")
(PUNCT "=")
(ID "clock")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "loops")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(ID "nulltime")
(PUNCT "=")
(ID "clock")
(PUNCT "(")
(PUNCT ")")
(PUNCT "-")
(ID "starttime")
(NEWLINE)
(ID "PtrGlbNext")
(PUNCT "=")
(ID "Record")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "PtrGlb")
(PUNCT "=")
(ID "Record")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "PtrGlb")
(PUNCT ".")
(ID "PtrComp")
(PUNCT "=")
(ID "PtrGlbNext")
(NEWLINE)
(ID "PtrGlb")
(PUNCT ".")
(ID "Discr")
(PUNCT "=")
(ID "Ident1")
(NEWLINE)
(ID "PtrGlb")
(PUNCT ".")
(ID "EnumComp")
(PUNCT "=")
(ID "Ident3")
(NEWLINE)
(ID "PtrGlb")
(PUNCT ".")
(ID "IntComp")
(PUNCT "=")
(LIT 40)
(NEWLINE)
(ID "PtrGlb")
(PUNCT ".")
(ID "StringComp")
(PUNCT "=")
(LIT "DHRYSTONE PROGRAM, SOME STRING")
(NEWLINE)
(ID "String1Loc")
(PUNCT "=")
(LIT "DHRYSTONE PROGRAM, 1'ST STRING")
(NEWLINE)
(ID "Array2Glob")
(PUNCT "[")
(LIT 8)
(PUNCT "]")
(PUNCT "[")
(LIT 7)
(PUNCT "]")
(PUNCT "=")
(LIT 10)
(NEWLINE)
(ID "starttime")
(PUNCT "=")
(ID "clock")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "i")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "loops")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "Proc5")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "Proc4")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "IntLoc1")
(PUNCT "=")
(LIT 2)
(NEWLINE)
(ID "IntLoc2")
(PUNCT "=")
(LIT 3)
(NEWLINE)
(ID "String2Loc")
(PUNCT "=")
(LIT "DHRYSTONE PROGRAM, 2'ND STRING")
(NEWLINE)
(ID "EnumLoc")
(PUNCT "=")
(ID "Ident2")
(NEWLINE)
(ID "BoolGlob")
(PUNCT "=")
(KEYWORD not)
(ID "Func2")
(PUNCT "(")
(ID "String1Loc")
(PUNCT ",")
(ID "String2Loc")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "IntLoc1")
(PUNCT "<")
(ID "IntLoc2")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "IntLoc3")
(PUNCT "=")
(LIT 5)
(PUNCT "*")
(ID "IntLoc1")
(PUNCT "-")
(ID "IntLoc2")
(NEWLINE)
(ID "IntLoc3")
(PUNCT "=")
(ID "Proc7")
(PUNCT "(")
(ID "IntLoc1")
(PUNCT ",")
(ID "IntLoc2")
(PUNCT ")")
(NEWLINE)
(ID "IntLoc1")
(PUNCT "=")
(ID "IntLoc1")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "Proc8")
(PUNCT "(")
(ID "Array1Glob")
(PUNCT ",")
(ID "Array2Glob")
(PUNCT ",")
(ID "IntLoc1")
(PUNCT ",")
(ID "IntLoc3")
(PUNCT ")")
(NEWLINE)
(ID "PtrGlb")
(PUNCT "=")
(ID "Proc1")
(PUNCT "(")
(ID "PtrGlb")
(PUNCT ")")
(NEWLINE)
(ID "CharIndex")
(PUNCT "=")
(LIT "A")
(NEWLINE)
(KEYWORD while)
(ID "CharIndex")
(PUNCT "<=")
(ID "Char2Glob")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "EnumLoc")
(PUNCT "==")
(ID "Func1")
(PUNCT "(")
(ID "CharIndex")
(PUNCT ",")
(LIT "C")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "EnumLoc")
(PUNCT "=")
(ID "Proc6")
(PUNCT "(")
(ID "Ident1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "CharIndex")
(PUNCT "=")
(ID "chr")
(PUNCT "(")
(ID "ord")
(PUNCT "(")
(ID "CharIndex")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "IntLoc3")
(PUNCT "=")
(ID "IntLoc2")
(PUNCT "*")
(ID "IntLoc1")
(NEWLINE)
(ID "IntLoc2")
(PUNCT "=")
(ID "IntLoc3")
(PUNCT "//")
(ID "IntLoc1")
(NEWLINE)
(ID "IntLoc2")
(PUNCT "=")
(LIT 7)
(PUNCT "*")
(PUNCT "(")
(ID "IntLoc3")
(PUNCT "-")
(ID "IntLoc2")
(PUNCT ")")
(PUNCT "-")
(ID "IntLoc1")
(NEWLINE)
(ID "IntLoc1")
(PUNCT "=")
(ID "Proc2")
(PUNCT "(")
(ID "IntLoc1")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "benchtime")
(PUNCT "=")
(ID "clock")
(PUNCT "(")
(PUNCT ")")
(PUNCT "-")
(ID "starttime")
(PUNCT "-")
(ID "nulltime")
(NEWLINE)
(KEYWORD if)
(ID "benchtime")
(PUNCT "==")
(LIT 0.0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "loopsPerBenchtime")
(PUNCT "=")
(LIT 0.0)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "loopsPerBenchtime")
(PUNCT "=")
(PUNCT "(")
(ID "loops")
(PUNCT "/")
(ID "benchtime")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "benchtime")
(PUNCT ",")
(ID "loopsPerBenchtime")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "Proc1")
(PUNCT "(")
(ID "PtrParIn")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "PtrParIn")
(PUNCT ".")
(ID "PtrComp")
(PUNCT "=")
(ID "NextRecord")
(PUNCT "=")
(ID "PtrGlb")
(PUNCT ".")
(ID "copy")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "PtrParIn")
(PUNCT ".")
(ID "IntComp")
(PUNCT "=")
(LIT 5)
(NEWLINE)
(ID "NextRecord")
(PUNCT ".")
(ID "IntComp")
(PUNCT "=")
(ID "PtrParIn")
(PUNCT ".")
(ID "IntComp")
(NEWLINE)
(ID "NextRecord")
(PUNCT ".")
(ID "PtrComp")
(PUNCT "=")
(ID "PtrParIn")
(PUNCT ".")
(ID "PtrComp")
(NEWLINE)
(ID "NextRecord")
(PUNCT ".")
(ID "PtrComp")
(PUNCT "=")
(ID "Proc3")
(PUNCT "(")
(ID "NextRecord")
(PUNCT ".")
(ID "PtrComp")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "NextRecord")
(PUNCT ".")
(ID "Discr")
(PUNCT "==")
(ID "Ident1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "NextRecord")
(PUNCT ".")
(ID "IntComp")
(PUNCT "=")
(LIT 6)
(NEWLINE)
(ID "NextRecord")
(PUNCT ".")
(ID "EnumComp")
(PUNCT "=")
(ID "Proc6")
(PUNCT "(")
(ID "PtrParIn")
(PUNCT ".")
(ID "EnumComp")
(PUNCT ")")
(NEWLINE)
(ID "NextRecord")
(PUNCT ".")
(ID "PtrComp")
(PUNCT "=")
(ID "PtrGlb")
(PUNCT ".")
(ID "PtrComp")
(NEWLINE)
(ID "NextRecord")
(PUNCT ".")
(ID "IntComp")
(PUNCT "=")
(ID "Proc7")
(PUNCT "(")
(ID "NextRecord")
(PUNCT ".")
(ID "IntComp")
(PUNCT ",")
(LIT 10)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "PtrParIn")
(PUNCT "=")
(ID "NextRecord")
(PUNCT ".")
(ID "copy")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "NextRecord")
(PUNCT ".")
(ID "PtrComp")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD return)
(ID "PtrParIn")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "Proc2")
(PUNCT "(")
(ID "IntParIO")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "IntLoc")
(PUNCT "=")
(ID "IntParIO")
(PUNCT "+")
(LIT 10)
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "Char1Glob")
(PUNCT "==")
(LIT "A")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "IntLoc")
(PUNCT "=")
(ID "IntLoc")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(ID "IntParIO")
(PUNCT "=")
(ID "IntLoc")
(PUNCT "-")
(ID "IntGlob")
(NEWLINE)
(ID "EnumLoc")
(PUNCT "=")
(ID "Ident1")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "EnumLoc")
(PUNCT "==")
(ID "Ident1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "IntParIO")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "Proc3")
(PUNCT "(")
(ID "PtrParOut")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD global)
(ID "IntGlob")
(NEWLINE)
(KEYWORD if)
(ID "PtrGlb")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "PtrParOut")
(PUNCT "=")
(ID "PtrGlb")
(PUNCT ".")
(ID "PtrComp")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "IntGlob")
(PUNCT "=")
(LIT 100)
(NEWLINE)
(DEDENT)
(ID "PtrGlb")
(PUNCT ".")
(ID "IntComp")
(PUNCT "=")
(ID "Proc7")
(PUNCT "(")
(LIT 10)
(PUNCT ",")
(ID "IntGlob")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "PtrParOut")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "Proc4")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD global)
(ID "Char2Glob")
(NEWLINE)
(ID "BoolLoc")
(PUNCT "=")
(ID "Char1Glob")
(PUNCT "==")
(LIT "A")
(NEWLINE)
(ID "BoolLoc")
(PUNCT "=")
(ID "BoolLoc")
(KEYWORD or)
(ID "BoolGlob")
(NEWLINE)
(ID "Char2Glob")
(PUNCT "=")
(LIT "B")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "Proc5")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD global)
(ID "Char1Glob")
(NEWLINE)
(KEYWORD global)
(ID "BoolGlob")
(NEWLINE)
(ID "Char1Glob")
(PUNCT "=")
(LIT "A")
(NEWLINE)
(ID "BoolGlob")
(PUNCT "=")
(ID "FALSE")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "Proc6")
(PUNCT "(")
(ID "EnumParIn")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "EnumParOut")
(PUNCT "=")
(ID "EnumParIn")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "Func3")
(PUNCT "(")
(ID "EnumParIn")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "EnumParOut")
(PUNCT "=")
(ID "Ident4")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "EnumParIn")
(PUNCT "==")
(ID "Ident1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "EnumParOut")
(PUNCT "=")
(ID "Ident1")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "EnumParIn")
(PUNCT "==")
(ID "Ident2")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "IntGlob")
(PUNCT ">")
(LIT 100)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "EnumParOut")
(PUNCT "=")
(ID "Ident1")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "EnumParOut")
(PUNCT "=")
(ID "Ident4")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(ID "EnumParIn")
(PUNCT "==")
(ID "Ident3")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "EnumParOut")
(PUNCT "=")
(ID "Ident2")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "EnumParIn")
(PUNCT "==")
(ID "Ident4")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "EnumParIn")
(PUNCT "==")
(ID "Ident5")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "EnumParOut")
(PUNCT "=")
(ID "Ident3")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "EnumParOut")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "Proc7")
(PUNCT "(")
(ID "IntParI1")
(PUNCT ",")
(ID "IntParI2")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "IntLoc")
(PUNCT "=")
(ID "IntParI1")
(PUNCT "+")
(LIT 2)
(NEWLINE)
(ID "IntParOut")
(PUNCT "=")
(ID "IntParI2")
(PUNCT "+")
(ID "IntLoc")
(NEWLINE)
(KEYWORD return)
(ID "IntParOut")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "Proc8")
(PUNCT "(")
(ID "Array1Par")
(PUNCT ",")
(ID "Array2Par")
(PUNCT ",")
(ID "IntParI1")
(PUNCT ",")
(ID "IntParI2")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD global)
(ID "IntGlob")
(NEWLINE)
(ID "IntLoc")
(PUNCT "=")
(ID "IntParI1")
(PUNCT "+")
(LIT 5)
(NEWLINE)
(ID "Array1Par")
(PUNCT "[")
(ID "IntLoc")
(PUNCT "]")
(PUNCT "=")
(ID "IntParI2")
(NEWLINE)
(ID "Array1Par")
(PUNCT "[")
(ID "IntLoc")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(PUNCT "=")
(ID "Array1Par")
(PUNCT "[")
(ID "IntLoc")
(PUNCT "]")
(NEWLINE)
(ID "Array1Par")
(PUNCT "[")
(ID "IntLoc")
(PUNCT "+")
(LIT 30)
(PUNCT "]")
(PUNCT "=")
(ID "IntLoc")
(NEWLINE)
(KEYWORD for)
(ID "IntIndex")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "IntLoc")
(PUNCT ",")
(ID "IntLoc")
(PUNCT "+")
(LIT 2)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "Array2Par")
(PUNCT "[")
(ID "IntLoc")
(PUNCT "]")
(PUNCT "[")
(ID "IntIndex")
(PUNCT "]")
(PUNCT "=")
(ID "IntLoc")
(NEWLINE)
(DEDENT)
(ID "Array2Par")
(PUNCT "[")
(ID "IntLoc")
(PUNCT "]")
(PUNCT "[")
(ID "IntLoc")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "=")
(ID "Array2Par")
(PUNCT "[")
(ID "IntLoc")
(PUNCT "]")
(PUNCT "[")
(ID "IntLoc")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "Array2Par")
(PUNCT "[")
(ID "IntLoc")
(PUNCT "+")
(LIT 20)
(PUNCT "]")
(PUNCT "[")
(ID "IntLoc")
(PUNCT "]")
(PUNCT "=")
(ID "Array1Par")
(PUNCT "[")
(ID "IntLoc")
(PUNCT "]")
(NEWLINE)
(ID "IntGlob")
(PUNCT "=")
(LIT 5)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "Func1")
(PUNCT "(")
(ID "CharPar1")
(PUNCT ",")
(ID "CharPar2")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "CharLoc1")
(PUNCT "=")
(ID "CharPar1")
(NEWLINE)
(ID "CharLoc2")
(PUNCT "=")
(ID "CharLoc1")
(NEWLINE)
(KEYWORD if)
(ID "CharLoc2")
(PUNCT "!=")
(ID "CharPar2")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "Ident1")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "Ident2")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "Func2")
(PUNCT "(")
(ID "StrParI1")
(PUNCT ",")
(ID "StrParI2")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "IntLoc")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(KEYWORD while)
(ID "IntLoc")
(PUNCT "<=")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "Func1")
(PUNCT "(")
(ID "StrParI1")
(PUNCT "[")
(ID "IntLoc")
(PUNCT "]")
(PUNCT ",")
(ID "StrParI2")
(PUNCT "[")
(ID "IntLoc")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(PUNCT "==")
(ID "Ident1")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "CharLoc")
(PUNCT "=")
(LIT "A")
(NEWLINE)
(ID "IntLoc")
(PUNCT "=")
(ID "IntLoc")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "CharLoc")
(PUNCT ">=")
(LIT "W")
(KEYWORD and)
(ID "CharLoc")
(PUNCT "<=")
(LIT "Z")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "IntLoc")
(PUNCT "=")
(LIT 7)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "CharLoc")
(PUNCT "==")
(LIT "X")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "TRUE")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "StrParI1")
(PUNCT ">")
(ID "StrParI2")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "IntLoc")
(PUNCT "=")
(ID "IntLoc")
(PUNCT "+")
(LIT 7)
(NEWLINE)
(KEYWORD return)
(ID "TRUE")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "FALSE")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "Func3")
(PUNCT "(")
(ID "EnumParIn")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "EnumLoc")
(PUNCT "=")
(ID "EnumParIn")
(NEWLINE)
(KEYWORD if)
(ID "EnumLoc")
(PUNCT "==")
(ID "Ident3")
(PUNCT ":")
(KEYWORD return)
(ID "TRUE")
(NEWLINE)
(KEYWORD return)
(ID "FALSE")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD def)
(ID "error")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(ID "msg")
(PUNCT ",")
(ID "end")
(PUNCT "=")
(LIT " ")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stderr")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "usage: %s [number_of_loops]")
(PUNCT "%")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stderr")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 100)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "nargs")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "nargs")
(PUNCT ">")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "error")
(PUNCT "(")
(LIT "%d arguments are too many;")
(PUNCT "%")
(ID "nargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "nargs")
(PUNCT "==")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(ID "loops")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "error")
(PUNCT "(")
(LIT "Invalid argument %r;")
(PUNCT "%")
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "loops")
(PUNCT "=")
(ID "LOOPS")
(NEWLINE)
(DEDENT)
(ID "main")
(PUNCT "(")
(ID "loops")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
