(LIT "Support for remote Python debugging.\n\nSome ASCII art to describe the structure:\n\n       IN PYTHON SUBPROCESS          #             IN IDLE PROCESS\n                                     #\n                                     #        oid='gui_adapter'\n                 +----------+        #       +------------+          +-----+\n                 | GUIProxy |--remote#call-->| GUIAdapter |--calls-->| GUI |\n+-----+--calls-->+----------+        #       +------------+          +-----+\n| Idb |                               #                             /\n+-----+<-calls--+------------+         #      +----------+<--calls-/\n                | IdbAdapter |<--remote#call--| IdbProxy |\n                +------------+         #      +----------+\n                oid='idb_adapter'      #\n\nThe purpose of the Proxy and Adapter classes is to translate certain\narguments and return values that cannot be transported through the RPC\nbarrier, in particular frame and traceback objects.\n\n")
(NEWLINE)
(KEYWORD import)
(ID "types")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "rpc")
(NEWLINE)
(KEYWORD from)
(ID "idlelib")
(KEYWORD import)
(ID "Debugger")
(NEWLINE)
(ID "debugging")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "idb_adap_oid")
(PUNCT "=")
(LIT "idb_adapter")
(NEWLINE)
(ID "gui_adap_oid")
(PUNCT "=")
(LIT "gui_adapter")
(NEWLINE)
(ID "frametable")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "dicttable")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "codetable")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "tracebacktable")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "wrap_frame")
(PUNCT "(")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fid")
(PUNCT "=")
(ID "id")
(PUNCT "(")
(ID "frame")
(PUNCT ")")
(NEWLINE)
(ID "frametable")
(PUNCT "[")
(ID "fid")
(PUNCT "]")
(PUNCT "=")
(ID "frame")
(NEWLINE)
(KEYWORD return)
(ID "fid")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "wrap_info")
(PUNCT "(")
(ID "info")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "replace info[2], a traceback instance, by its ID")
(NEWLINE)
(KEYWORD if)
(ID "info")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "traceback")
(PUNCT "=")
(ID "info")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(KEYWORD assert)
(ID "isinstance")
(PUNCT "(")
(ID "traceback")
(PUNCT ",")
(ID "types")
(PUNCT ".")
(ID "TracebackType")
(PUNCT ")")
(NEWLINE)
(ID "traceback_id")
(PUNCT "=")
(ID "id")
(PUNCT "(")
(ID "traceback")
(PUNCT ")")
(NEWLINE)
(ID "tracebacktable")
(PUNCT "[")
(ID "traceback_id")
(PUNCT "]")
(PUNCT "=")
(ID "traceback")
(NEWLINE)
(ID "modified_info")
(PUNCT "=")
(PUNCT "(")
(ID "info")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(ID "info")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ",")
(ID "traceback_id")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "modified_info")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "GUIProxy")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "gui_adap_oid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "conn")
(PUNCT "=")
(ID "conn")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "oid")
(PUNCT "=")
(ID "gui_adap_oid")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "interaction")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "info")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "conn")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "oid")
(PUNCT ",")
(LIT "interaction")
(PUNCT ",")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "wrap_frame")
(PUNCT "(")
(ID "frame")
(PUNCT ")")
(PUNCT ",")
(ID "wrap_info")
(PUNCT "(")
(ID "info")
(PUNCT ")")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "IdbAdapter")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "idb")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "idb")
(PUNCT "=")
(ID "idb")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_step")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "idb")
(PUNCT ".")
(ID "set_step")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_quit")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "idb")
(PUNCT ".")
(ID "set_quit")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_continue")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "idb")
(PUNCT ".")
(ID "set_continue")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_next")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "frame")
(PUNCT "=")
(ID "frametable")
(PUNCT "[")
(ID "fid")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "idb")
(PUNCT ".")
(ID "set_next")
(PUNCT "(")
(ID "frame")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_return")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "frame")
(PUNCT "=")
(ID "frametable")
(PUNCT "[")
(ID "fid")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "idb")
(PUNCT ".")
(ID "set_return")
(PUNCT "(")
(ID "frame")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_stack")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fid")
(PUNCT ",")
(ID "tbid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "frame")
(PUNCT "=")
(ID "frametable")
(PUNCT "[")
(ID "fid")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "tbid")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tb")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tb")
(PUNCT "=")
(ID "tracebacktable")
(PUNCT "[")
(ID "tbid")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "stack")
(PUNCT ",")
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "idb")
(PUNCT ".")
(ID "get_stack")
(PUNCT "(")
(ID "frame")
(PUNCT ",")
(ID "tb")
(PUNCT ")")
(NEWLINE)
(ID "stack")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(ID "wrap_frame")
(PUNCT "(")
(ID "frame")
(PUNCT ")")
(PUNCT ",")
(ID "k")
(PUNCT ")")
(KEYWORD for)
(ID "frame")
(PUNCT ",")
(ID "k")
(KEYWORD in)
(ID "stack")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "stack")
(PUNCT ",")
(ID "i")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "run")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cmd")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "__main__")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "idb")
(PUNCT ".")
(ID "run")
(PUNCT "(")
(ID "cmd")
(PUNCT ",")
(ID "__main__")
(PUNCT ".")
(ID "__dict__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_break")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "idb")
(PUNCT ".")
(ID "set_break")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "msg")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "clear_break")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "idb")
(PUNCT ".")
(ID "clear_break")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "msg")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "clear_all_file_breaks")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "idb")
(PUNCT ".")
(ID "clear_all_file_breaks")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "msg")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "frame_attr")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fid")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "frame")
(PUNCT "=")
(ID "frametable")
(PUNCT "[")
(ID "fid")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "getattr")
(PUNCT "(")
(ID "frame")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "frame_globals")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "frame")
(PUNCT "=")
(ID "frametable")
(PUNCT "[")
(ID "fid")
(PUNCT "]")
(NEWLINE)
(ID "dict")
(PUNCT "=")
(ID "frame")
(PUNCT ".")
(ID "f_globals")
(NEWLINE)
(ID "did")
(PUNCT "=")
(ID "id")
(PUNCT "(")
(ID "dict")
(PUNCT ")")
(NEWLINE)
(ID "dicttable")
(PUNCT "[")
(ID "did")
(PUNCT "]")
(PUNCT "=")
(ID "dict")
(NEWLINE)
(KEYWORD return)
(ID "did")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "frame_locals")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "frame")
(PUNCT "=")
(ID "frametable")
(PUNCT "[")
(ID "fid")
(PUNCT "]")
(NEWLINE)
(ID "dict")
(PUNCT "=")
(ID "frame")
(PUNCT ".")
(ID "f_locals")
(NEWLINE)
(ID "did")
(PUNCT "=")
(ID "id")
(PUNCT "(")
(ID "dict")
(PUNCT ")")
(NEWLINE)
(ID "dicttable")
(PUNCT "[")
(ID "did")
(PUNCT "]")
(PUNCT "=")
(ID "dict")
(NEWLINE)
(KEYWORD return)
(ID "did")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "frame_code")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "fid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "frame")
(PUNCT "=")
(ID "frametable")
(PUNCT "[")
(ID "fid")
(PUNCT "]")
(NEWLINE)
(ID "code")
(PUNCT "=")
(ID "frame")
(PUNCT ".")
(ID "f_code")
(NEWLINE)
(ID "cid")
(PUNCT "=")
(ID "id")
(PUNCT "(")
(ID "code")
(PUNCT ")")
(NEWLINE)
(ID "codetable")
(PUNCT "[")
(ID "cid")
(PUNCT "]")
(PUNCT "=")
(ID "code")
(NEWLINE)
(KEYWORD return)
(ID "cid")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "code_name")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "codetable")
(PUNCT "[")
(ID "cid")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "code")
(PUNCT ".")
(ID "co_name")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "code_filename")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "codetable")
(PUNCT "[")
(ID "cid")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "code")
(PUNCT ".")
(ID "co_filename")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dict_keys")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "did")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "NotImplemented")
(PUNCT "(")
(LIT "dict_keys not public or pickleable")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dict_keys_list")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "did")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dict")
(PUNCT "=")
(ID "dicttable")
(PUNCT "[")
(ID "did")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "dict")
(PUNCT ".")
(ID "keys")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dict_item")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "did")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dict")
(PUNCT "=")
(ID "dicttable")
(PUNCT "[")
(ID "did")
(PUNCT "]")
(NEWLINE)
(ID "value")
(PUNCT "=")
(ID "dict")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(ID "value")
(PUNCT "=")
(ID "repr")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "value")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "start_debugger")
(PUNCT "(")
(ID "rpchandler")
(PUNCT ",")
(ID "gui_adap_oid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Start the debugger and its RPC link in the Python subprocess\n\n    Start the subprocess side of the split debugger and set up that side of the\n    RPC link by instantiating the GUIProxy, Idb debugger, and IdbAdapter\n    objects and linking them together.  Register the IdbAdapter with the\n    RPCServer to handle RPC requests from the split debugger GUI via the\n    IdbProxy.\n\n    ")
(NEWLINE)
(ID "gui_proxy")
(PUNCT "=")
(ID "GUIProxy")
(PUNCT "(")
(ID "rpchandler")
(PUNCT ",")
(ID "gui_adap_oid")
(PUNCT ")")
(NEWLINE)
(ID "idb")
(PUNCT "=")
(ID "Debugger")
(PUNCT ".")
(ID "Idb")
(PUNCT "(")
(ID "gui_proxy")
(PUNCT ")")
(NEWLINE)
(ID "idb_adap")
(PUNCT "=")
(ID "IdbAdapter")
(PUNCT "(")
(ID "idb")
(PUNCT ")")
(NEWLINE)
(ID "rpchandler")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "idb_adap_oid")
(PUNCT ",")
(ID "idb_adap")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "idb_adap_oid")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "FrameProxy")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "fid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT "=")
(ID "conn")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_fid")
(PUNCT "=")
(ID "fid")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_oid")
(PUNCT "=")
(LIT "idb_adapter")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_dictcache")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getattr__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(PUNCT "[")
(PUNCT ":")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "_")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "AttributeError")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "name")
(PUNCT "==")
(LIT "f_code")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_get_f_code")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "name")
(PUNCT "==")
(LIT "f_globals")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_get_f_globals")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "name")
(PUNCT "==")
(LIT "f_locals")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_get_f_locals")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_oid")
(PUNCT ",")
(LIT "frame_attr")
(PUNCT ",")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_fid")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_f_code")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cid")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_oid")
(PUNCT ",")
(LIT "frame_code")
(PUNCT ",")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_fid")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "CodeProxy")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_oid")
(PUNCT ",")
(ID "cid")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_f_globals")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "did")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_oid")
(PUNCT ",")
(LIT "frame_globals")
(PUNCT ",")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_fid")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_get_dict_proxy")
(PUNCT "(")
(ID "did")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_f_locals")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "did")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_oid")
(PUNCT ",")
(LIT "frame_locals")
(PUNCT ",")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_fid")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_get_dict_proxy")
(PUNCT "(")
(ID "did")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_get_dict_proxy")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "did")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "did")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_dictcache")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_dictcache")
(PUNCT "[")
(ID "did")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "dp")
(PUNCT "=")
(ID "DictProxy")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_oid")
(PUNCT ",")
(ID "did")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_dictcache")
(PUNCT "[")
(ID "did")
(PUNCT "]")
(PUNCT "=")
(ID "dp")
(NEWLINE)
(KEYWORD return)
(ID "dp")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "CodeProxy")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "oid")
(PUNCT ",")
(ID "cid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT "=")
(ID "conn")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_oid")
(PUNCT "=")
(ID "oid")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_cid")
(PUNCT "=")
(ID "cid")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getattr__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "name")
(PUNCT "==")
(LIT "co_name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_oid")
(PUNCT ",")
(LIT "code_name")
(PUNCT ",")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_cid")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "name")
(PUNCT "==")
(LIT "co_filename")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_oid")
(PUNCT ",")
(LIT "code_filename")
(PUNCT ",")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_cid")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "DictProxy")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "oid")
(PUNCT ",")
(ID "did")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT "=")
(ID "conn")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_oid")
(PUNCT "=")
(ID "oid")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_did")
(PUNCT "=")
(ID "did")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "keys")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_oid")
(PUNCT ",")
(LIT "dict_keys_list")
(PUNCT ",")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_did")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_conn")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_oid")
(PUNCT ",")
(LIT "dict_item")
(PUNCT ",")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_did")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getattr__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "AttributeError")
(PUNCT "(")
(ID "name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "GUIAdapter")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "gui")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "conn")
(PUNCT "=")
(ID "conn")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "gui")
(PUNCT "=")
(ID "gui")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "interaction")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "message")
(PUNCT ",")
(ID "fid")
(PUNCT ",")
(ID "modified_info")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "frame")
(PUNCT "=")
(ID "FrameProxy")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "conn")
(PUNCT ",")
(ID "fid")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "gui")
(PUNCT ".")
(ID "interaction")
(PUNCT "(")
(ID "message")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "modified_info")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "IdbProxy")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "conn")
(PUNCT ",")
(ID "shell")
(PUNCT ",")
(ID "oid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "oid")
(PUNCT "=")
(ID "oid")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "conn")
(PUNCT "=")
(ID "conn")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "shell")
(PUNCT "=")
(ID "shell")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "methodname")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "value")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "conn")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "oid")
(PUNCT ",")
(ID "methodname")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "value")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "run")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cmd")
(PUNCT ",")
(ID "locals")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "seq")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "conn")
(PUNCT ".")
(ID "asyncqueue")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "oid")
(PUNCT ",")
(LIT "run")
(PUNCT ",")
(PUNCT "(")
(ID "cmd")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "shell")
(PUNCT ".")
(ID "interp")
(PUNCT ".")
(ID "active_seq")
(PUNCT "=")
(ID "seq")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_stack")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "tbid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stack")
(PUNCT ",")
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "get_stack")
(PUNCT ",")
(ID "frame")
(PUNCT ".")
(ID "_fid")
(PUNCT ",")
(ID "tbid")
(PUNCT ")")
(NEWLINE)
(ID "stack")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(ID "FrameProxy")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "conn")
(PUNCT ",")
(ID "fid")
(PUNCT ")")
(PUNCT ",")
(ID "k")
(PUNCT ")")
(KEYWORD for)
(ID "fid")
(PUNCT ",")
(ID "k")
(KEYWORD in)
(ID "stack")
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "stack")
(PUNCT ",")
(ID "i")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_continue")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "set_continue")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_step")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "set_step")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_next")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "set_next")
(PUNCT ",")
(ID "frame")
(PUNCT ".")
(ID "_fid")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_return")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "set_return")
(PUNCT ",")
(ID "frame")
(PUNCT ".")
(ID "_fid")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_quit")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "set_quit")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_break")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "set_break")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "msg")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "clear_break")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "clear_break")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "msg")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "clear_all_file_breaks")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "msg")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "call")
(PUNCT "(")
(LIT "clear_all_file_breaks")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "msg")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "start_remote_debugger")
(PUNCT "(")
(ID "rpcclt")
(PUNCT ",")
(ID "pyshell")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Start the subprocess debugger, initialize the debugger GUI and RPC link\n\n    Request the RPCServer start the Python subprocess debugger and link.  Set\n    up the Idle side of the split debugger by instantiating the IdbProxy,\n    debugger GUI, and debugger GUIAdapter objects and linking them together.\n\n    Register the GUIAdapter with the RPCClient to handle debugger GUI\n    interaction requests coming from the subprocess debugger via the GUIProxy.\n\n    The IdbAdapter will pass execution and environment requests coming from the\n    Idle debugger GUI to the subprocess debugger via the IdbProxy.\n\n    ")
(NEWLINE)
(KEYWORD global)
(ID "idb_adap_oid")
(NEWLINE)
(ID "idb_adap_oid")
(PUNCT "=")
(ID "rpcclt")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(LIT "exec")
(PUNCT ",")
(LIT "start_the_debugger")
(PUNCT ",")
(PUNCT "(")
(ID "gui_adap_oid")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(ID "idb_proxy")
(PUNCT "=")
(ID "IdbProxy")
(PUNCT "(")
(ID "rpcclt")
(PUNCT ",")
(ID "pyshell")
(PUNCT ",")
(ID "idb_adap_oid")
(PUNCT ")")
(NEWLINE)
(ID "gui")
(PUNCT "=")
(ID "Debugger")
(PUNCT ".")
(ID "Debugger")
(PUNCT "(")
(ID "pyshell")
(PUNCT ",")
(ID "idb_proxy")
(PUNCT ")")
(NEWLINE)
(ID "gui_adap")
(PUNCT "=")
(ID "GUIAdapter")
(PUNCT "(")
(ID "rpcclt")
(PUNCT ",")
(ID "gui")
(PUNCT ")")
(NEWLINE)
(ID "rpcclt")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "gui_adap_oid")
(PUNCT ",")
(ID "gui_adap")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "gui")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close_remote_debugger")
(PUNCT "(")
(ID "rpcclt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Shut down subprocess debugger and Idle side of debugger RPC link\n\n    Request that the RPCServer shut down the subprocess debugger and link.\n    Unregister the GUIAdapter, which will cause a GC on the Idle process\n    debugger and RPC link objects.  (The second reference to the debugger GUI\n    is deleted in PyShell.close_remote_debugger().)\n\n    ")
(NEWLINE)
(ID "close_subprocess_debugger")
(PUNCT "(")
(ID "rpcclt")
(PUNCT ")")
(NEWLINE)
(ID "rpcclt")
(PUNCT ".")
(ID "unregister")
(PUNCT "(")
(ID "gui_adap_oid")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "close_subprocess_debugger")
(PUNCT "(")
(ID "rpcclt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rpcclt")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(LIT "exec")
(PUNCT ",")
(LIT "stop_the_debugger")
(PUNCT ",")
(PUNCT "(")
(ID "idb_adap_oid")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "restart_subprocess_debugger")
(PUNCT "(")
(ID "rpcclt")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "idb_adap_oid_ret")
(PUNCT "=")
(ID "rpcclt")
(PUNCT ".")
(ID "remotecall")
(PUNCT "(")
(LIT "exec")
(PUNCT ",")
(LIT "start_the_debugger")
(PUNCT ",")
(PUNCT "(")
(ID "gui_adap_oid")
(PUNCT ",")
(PUNCT ")")
(PUNCT ",")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "idb_adap_oid_ret")
(PUNCT "==")
(ID "idb_adap_oid")
(PUNCT ",")
(LIT "Idb restarted with different oid")
(NEWLINE)
(DEDENT)
(ENDMARKER)
