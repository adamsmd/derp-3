(KEYWORD import)
(ID "copyreg")
(NEWLINE)
(KEYWORD import)
(ID "functools")
(NEWLINE)
(KEYWORD import)
(ID "io")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "pickle")
(NEWLINE)
(KEYWORD import)
(ID "socket")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "context")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "send_handle")
(PUNCT ",")
(LIT "recv_handle")
(PUNCT ",")
(LIT "ForkingPickler")
(PUNCT ",")
(LIT "register")
(PUNCT ",")
(LIT "dump")
(PUNCT "]")
(NEWLINE)
(ID "HAVE_SEND_HANDLE")
(PUNCT "=")
(PUNCT "(")
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(KEYWORD or)
(PUNCT "(")
(ID "hasattr")
(PUNCT "(")
(ID "socket")
(PUNCT ",")
(LIT "CMSG_LEN")
(PUNCT ")")
(KEYWORD and)
(ID "hasattr")
(PUNCT "(")
(ID "socket")
(PUNCT ",")
(LIT "SCM_RIGHTS")
(PUNCT ")")
(KEYWORD and)
(ID "hasattr")
(PUNCT "(")
(ID "socket")
(PUNCT ".")
(ID "socket")
(PUNCT ",")
(LIT "sendmsg")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD class)
(ID "ForkingPickler")
(PUNCT "(")
(ID "pickle")
(PUNCT ".")
(ID "Pickler")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Pickler subclass used by multiprocessing.")
(NEWLINE)
(ID "_extra_reducers")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "_copyreg_dispatch_table")
(PUNCT "=")
(ID "copyreg")
(PUNCT ".")
(ID "dispatch_table")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "dispatch_table")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_copyreg_dispatch_table")
(PUNCT ".")
(ID "copy")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "dispatch_table")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_extra_reducers")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "register")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "type")
(PUNCT ",")
(ID "reduce")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Register a reduce function for a type.")
(NEWLINE)
(ID "cls")
(PUNCT ".")
(ID "_extra_reducers")
(PUNCT "[")
(ID "type")
(PUNCT "]")
(PUNCT "=")
(ID "reduce")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "dumps")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "obj")
(PUNCT ",")
(ID "protocol")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "buf")
(PUNCT "=")
(ID "io")
(PUNCT ".")
(ID "BytesIO")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "cls")
(PUNCT "(")
(ID "buf")
(PUNCT ",")
(ID "protocol")
(PUNCT ")")
(PUNCT ".")
(ID "dump")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "buf")
(PUNCT ".")
(ID "getbuffer")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "loads")
(PUNCT "=")
(ID "pickle")
(PUNCT ".")
(ID "loads")
(NEWLINE)
(DEDENT)
(ID "register")
(PUNCT "=")
(ID "ForkingPickler")
(PUNCT ".")
(ID "register")
(NEWLINE)
(KEYWORD def)
(ID "dump")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "file")
(PUNCT ",")
(ID "protocol")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Replacement for pickle.dump() using ForkingPickler.")
(NEWLINE)
(ID "ForkingPickler")
(PUNCT "(")
(ID "file")
(PUNCT ",")
(ID "protocol")
(PUNCT ")")
(PUNCT ".")
(ID "dump")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "__all__")
(PUNCT "+=")
(PUNCT "[")
(LIT "DupHandle")
(PUNCT ",")
(LIT "duplicate")
(PUNCT ",")
(LIT "steal_handle")
(PUNCT "]")
(NEWLINE)
(KEYWORD import)
(ID "_winapi")
(NEWLINE)
(KEYWORD def)
(ID "duplicate")
(PUNCT "(")
(ID "handle")
(PUNCT ",")
(ID "target_process")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "inheritable")
(PUNCT "=")
(KEYWORD False)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Duplicate a handle.  (target_process is a handle not a pid!)")
(NEWLINE)
(KEYWORD if)
(ID "target_process")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "target_process")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "GetCurrentProcess")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_winapi")
(PUNCT ".")
(ID "DuplicateHandle")
(PUNCT "(")
(ID "_winapi")
(PUNCT ".")
(ID "GetCurrentProcess")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "handle")
(PUNCT ",")
(ID "target_process")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "inheritable")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "DUPLICATE_SAME_ACCESS")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "steal_handle")
(PUNCT "(")
(ID "source_pid")
(PUNCT ",")
(ID "handle")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Steal a handle from process identified by source_pid.")
(NEWLINE)
(ID "source_process_handle")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "OpenProcess")
(PUNCT "(")
(ID "_winapi")
(PUNCT ".")
(ID "PROCESS_DUP_HANDLE")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(ID "source_pid")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_winapi")
(PUNCT ".")
(ID "DuplicateHandle")
(PUNCT "(")
(ID "source_process_handle")
(PUNCT ",")
(ID "handle")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "GetCurrentProcess")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "DUPLICATE_SAME_ACCESS")
(PUNCT "|")
(ID "_winapi")
(PUNCT ".")
(ID "DUPLICATE_CLOSE_SOURCE")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_winapi")
(PUNCT ".")
(ID "CloseHandle")
(PUNCT "(")
(ID "source_process_handle")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "send_handle")
(PUNCT "(")
(ID "conn")
(PUNCT ",")
(ID "handle")
(PUNCT ",")
(ID "destination_pid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Send a handle over a local connection.")
(NEWLINE)
(ID "dh")
(PUNCT "=")
(ID "DupHandle")
(PUNCT "(")
(ID "handle")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "DUPLICATE_SAME_ACCESS")
(PUNCT ",")
(ID "destination_pid")
(PUNCT ")")
(NEWLINE)
(ID "conn")
(PUNCT ".")
(ID "send")
(PUNCT "(")
(ID "dh")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "recv_handle")
(PUNCT "(")
(ID "conn")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Receive a handle over a local connection.")
(NEWLINE)
(KEYWORD return)
(ID "conn")
(PUNCT ".")
(ID "recv")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "detach")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "DupHandle")
(PUNCT "(")
(ID "object")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Picklable wrapper for a handle.")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "handle")
(PUNCT ",")
(ID "access")
(PUNCT ",")
(ID "pid")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "pid")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pid")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "getpid")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "proc")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "OpenProcess")
(PUNCT "(")
(ID "_winapi")
(PUNCT ".")
(ID "PROCESS_DUP_HANDLE")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(ID "pid")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "DuplicateHandle")
(PUNCT "(")
(ID "_winapi")
(PUNCT ".")
(ID "GetCurrentProcess")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "handle")
(PUNCT ",")
(ID "proc")
(PUNCT ",")
(ID "access")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_winapi")
(PUNCT ".")
(ID "CloseHandle")
(PUNCT "(")
(ID "proc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_access")
(PUNCT "=")
(ID "access")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pid")
(PUNCT "=")
(ID "pid")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "detach")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Get the handle.  This should only be called once.")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_pid")
(PUNCT "==")
(ID "os")
(PUNCT ".")
(ID "getpid")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_handle")
(NEWLINE)
(DEDENT)
(ID "proc")
(PUNCT "=")
(ID "_winapi")
(PUNCT ".")
(ID "OpenProcess")
(PUNCT "(")
(ID "_winapi")
(PUNCT ".")
(ID "PROCESS_DUP_HANDLE")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_pid")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_winapi")
(PUNCT ".")
(ID "DuplicateHandle")
(PUNCT "(")
(ID "proc")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_handle")
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "GetCurrentProcess")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_access")
(PUNCT ",")
(KEYWORD False)
(PUNCT ",")
(ID "_winapi")
(PUNCT ".")
(ID "DUPLICATE_CLOSE_SOURCE")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_winapi")
(PUNCT ".")
(ID "CloseHandle")
(PUNCT "(")
(ID "proc")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "__all__")
(PUNCT "+=")
(PUNCT "[")
(LIT "DupFd")
(PUNCT ",")
(LIT "sendfds")
(PUNCT ",")
(LIT "recvfds")
(PUNCT "]")
(NEWLINE)
(KEYWORD import)
(ID "array")
(NEWLINE)
(ID "ACKNOWLEDGE")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "darwin")
(NEWLINE)
(KEYWORD def)
(ID "sendfds")
(PUNCT "(")
(ID "sock")
(PUNCT ",")
(ID "fds")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Send an array of fds over an AF_UNIX socket.")
(NEWLINE)
(ID "fds")
(PUNCT "=")
(ID "array")
(PUNCT ".")
(ID "array")
(PUNCT "(")
(LIT "i")
(PUNCT ",")
(ID "fds")
(PUNCT ")")
(NEWLINE)
(ID "msg")
(PUNCT "=")
(ID "bytes")
(PUNCT "(")
(PUNCT "[")
(ID "len")
(PUNCT "(")
(ID "fds")
(PUNCT ")")
(PUNCT "%")
(LIT 256)
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(ID "sock")
(PUNCT ".")
(ID "sendmsg")
(PUNCT "(")
(PUNCT "[")
(ID "msg")
(PUNCT "]")
(PUNCT ",")
(PUNCT "[")
(PUNCT "(")
(ID "socket")
(PUNCT ".")
(ID "SOL_SOCKET")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "SCM_RIGHTS")
(PUNCT ",")
(ID "fds")
(PUNCT ")")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "ACKNOWLEDGE")
(KEYWORD and)
(ID "sock")
(PUNCT ".")
(ID "recv")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(PUNCT "!=")
(LIT #"A")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "did not receive acknowledgement of fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "recvfds")
(PUNCT "(")
(ID "sock")
(PUNCT ",")
(ID "size")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Receive an array of fds over an AF_UNIX socket.")
(NEWLINE)
(ID "a")
(PUNCT "=")
(ID "array")
(PUNCT ".")
(ID "array")
(PUNCT "(")
(LIT "i")
(PUNCT ")")
(NEWLINE)
(ID "bytes_size")
(PUNCT "=")
(ID "a")
(PUNCT ".")
(ID "itemsize")
(PUNCT "*")
(ID "size")
(NEWLINE)
(ID "msg")
(PUNCT ",")
(ID "ancdata")
(PUNCT ",")
(ID "flags")
(PUNCT ",")
(ID "addr")
(PUNCT "=")
(ID "sock")
(PUNCT ".")
(ID "recvmsg")
(PUNCT "(")
(LIT 1)
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "CMSG_LEN")
(PUNCT "(")
(ID "bytes_size")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "msg")
(KEYWORD and)
(KEYWORD not)
(ID "ancdata")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "EOFError")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "ACKNOWLEDGE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sock")
(PUNCT ".")
(ID "send")
(PUNCT "(")
(LIT #"A")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "ancdata")
(PUNCT ")")
(PUNCT "!=")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "received %d items of ancdata")
(PUNCT "%")
(ID "len")
(PUNCT "(")
(ID "ancdata")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "cmsg_level")
(PUNCT ",")
(ID "cmsg_type")
(PUNCT ",")
(ID "cmsg_data")
(PUNCT "=")
(ID "ancdata")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID "cmsg_level")
(PUNCT "==")
(ID "socket")
(PUNCT ".")
(ID "SOL_SOCKET")
(KEYWORD and)
(ID "cmsg_type")
(PUNCT "==")
(ID "socket")
(PUNCT ".")
(ID "SCM_RIGHTS")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "cmsg_data")
(PUNCT ")")
(PUNCT "%")
(ID "a")
(PUNCT ".")
(ID "itemsize")
(PUNCT "!=")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(NEWLINE)
(DEDENT)
(ID "a")
(PUNCT ".")
(ID "frombytes")
(PUNCT "(")
(ID "cmsg_data")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "len")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(PUNCT "%")
(LIT 256)
(PUNCT "==")
(ID "msg")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "ValueError")
(PUNCT ",")
(ID "IndexError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(ID "RuntimeError")
(PUNCT "(")
(LIT "Invalid data received")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "send_handle")
(PUNCT "(")
(ID "conn")
(PUNCT ",")
(ID "handle")
(PUNCT ",")
(ID "destination_pid")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Send a handle over a local connection.")
(NEWLINE)
(KEYWORD with)
(ID "socket")
(PUNCT ".")
(ID "fromfd")
(PUNCT "(")
(ID "conn")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "AF_UNIX")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "SOCK_STREAM")
(PUNCT ")")
(KEYWORD as)
(ID "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sendfds")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(PUNCT "[")
(ID "handle")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "recv_handle")
(PUNCT "(")
(ID "conn")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Receive a handle over a local connection.")
(NEWLINE)
(KEYWORD with)
(ID "socket")
(PUNCT ".")
(ID "fromfd")
(PUNCT "(")
(ID "conn")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "AF_UNIX")
(PUNCT ",")
(ID "socket")
(PUNCT ".")
(ID "SOCK_STREAM")
(PUNCT ")")
(KEYWORD as)
(ID "s")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "recvfds")
(PUNCT "(")
(ID "s")
(PUNCT ",")
(LIT 1)
(PUNCT ")")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "DupFd")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a wrapper for an fd.")
(NEWLINE)
(ID "popen_obj")
(PUNCT "=")
(ID "context")
(PUNCT ".")
(ID "get_spawning_popen")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "popen_obj")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "popen_obj")
(PUNCT ".")
(ID "DupFd")
(PUNCT "(")
(ID "popen_obj")
(PUNCT ".")
(ID "duplicate_for_child")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "HAVE_SEND_HANDLE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(KEYWORD import)
(ID "resource_sharer")
(NEWLINE)
(KEYWORD return)
(ID "resource_sharer")
(PUNCT ".")
(ID "DupFd")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "SCM_RIGHTS appears not to be available")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_reduce_method")
(PUNCT "(")
(ID "m")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "m")
(PUNCT ".")
(ID "__self__")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "getattr")
(PUNCT ",")
(PUNCT "(")
(ID "m")
(PUNCT ".")
(ID "__class__")
(PUNCT ",")
(ID "m")
(PUNCT ".")
(ID "__func__")
(PUNCT ".")
(ID "__name__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "getattr")
(PUNCT ",")
(PUNCT "(")
(ID "m")
(PUNCT ".")
(ID "__self__")
(PUNCT ",")
(ID "m")
(PUNCT ".")
(ID "__func__")
(PUNCT ".")
(ID "__name__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "_C")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "f")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "register")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "_C")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "f")
(PUNCT ")")
(PUNCT ",")
(ID "_reduce_method")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "_reduce_method_descriptor")
(PUNCT "(")
(ID "m")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "getattr")
(PUNCT ",")
(PUNCT "(")
(ID "m")
(PUNCT ".")
(ID "__objclass__")
(PUNCT ",")
(ID "m")
(PUNCT ".")
(ID "__name__")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "register")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "list")
(PUNCT ".")
(ID "append")
(PUNCT ")")
(PUNCT ",")
(ID "_reduce_method_descriptor")
(PUNCT ")")
(NEWLINE)
(ID "register")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "int")
(PUNCT ".")
(ID "__add__")
(PUNCT ")")
(PUNCT ",")
(ID "_reduce_method_descriptor")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "_reduce_partial")
(PUNCT "(")
(ID "p")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_rebuild_partial")
(PUNCT ",")
(PUNCT "(")
(ID "p")
(PUNCT ".")
(ID "func")
(PUNCT ",")
(ID "p")
(PUNCT ".")
(ID "args")
(PUNCT ",")
(ID "p")
(PUNCT ".")
(ID "keywords")
(KEYWORD or)
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_rebuild_partial")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "args")
(PUNCT ",")
(ID "keywords")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "functools")
(PUNCT ".")
(ID "partial")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "keywords")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "register")
(PUNCT "(")
(ID "functools")
(PUNCT ".")
(ID "partial")
(PUNCT ",")
(ID "_reduce_partial")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "win32")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "_reduce_socket")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(PUNCT ".")
(ID "resource_sharer")
(KEYWORD import)
(ID "DupSocket")
(NEWLINE)
(KEYWORD return)
(ID "_rebuild_socket")
(PUNCT ",")
(PUNCT "(")
(ID "DupSocket")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_rebuild_socket")
(PUNCT "(")
(ID "ds")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "ds")
(PUNCT ".")
(ID "detach")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "register")
(PUNCT "(")
(ID "socket")
(PUNCT ".")
(ID "socket")
(PUNCT ",")
(ID "_reduce_socket")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "_reduce_socket")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "df")
(PUNCT "=")
(ID "DupFd")
(PUNCT "(")
(ID "s")
(PUNCT ".")
(ID "fileno")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "_rebuild_socket")
(PUNCT ",")
(PUNCT "(")
(ID "df")
(PUNCT ",")
(ID "s")
(PUNCT ".")
(ID "family")
(PUNCT ",")
(ID "s")
(PUNCT ".")
(ID "type")
(PUNCT ",")
(ID "s")
(PUNCT ".")
(ID "proto")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_rebuild_socket")
(PUNCT "(")
(ID "df")
(PUNCT ",")
(ID "family")
(PUNCT ",")
(ID "type")
(PUNCT ",")
(ID "proto")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "df")
(PUNCT ".")
(ID "detach")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "socket")
(PUNCT ".")
(ID "socket")
(PUNCT "(")
(ID "family")
(PUNCT ",")
(ID "type")
(PUNCT ",")
(ID "proto")
(PUNCT ",")
(ID "fileno")
(PUNCT "=")
(ID "fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "register")
(PUNCT "(")
(ID "socket")
(PUNCT ".")
(ID "socket")
(PUNCT ",")
(ID "_reduce_socket")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
