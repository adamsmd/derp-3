(LIT "Weak reference support for Python.\n\nThis module is an implementation of PEP 205:\n\nhttp://www.python.org/dev/peps/pep-0205/\n")
(NEWLINE)
(KEYWORD from)
(ID "_weakref")
(KEYWORD import)
(PUNCT "(")
(ID "getweakrefcount")
(PUNCT ",")
(ID "getweakrefs")
(PUNCT ",")
(ID "ref")
(PUNCT ",")
(ID "proxy")
(PUNCT ",")
(ID "CallableProxyType")
(PUNCT ",")
(ID "ProxyType")
(PUNCT ",")
(ID "ReferenceType")
(PUNCT ")")
(NEWLINE)
(KEYWORD from)
(ID "_weakrefset")
(KEYWORD import)
(ID "WeakSet")
(PUNCT ",")
(ID "_IterationGuard")
(NEWLINE)
(KEYWORD import)
(ID "collections")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "itertools")
(NEWLINE)
(ID "ProxyTypes")
(PUNCT "=")
(PUNCT "(")
(ID "ProxyType")
(PUNCT ",")
(ID "CallableProxyType")
(PUNCT ")")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "ref")
(PUNCT ",")
(LIT "proxy")
(PUNCT ",")
(LIT "getweakrefcount")
(PUNCT ",")
(LIT "getweakrefs")
(PUNCT ",")
(LIT "WeakKeyDictionary")
(PUNCT ",")
(LIT "ReferenceType")
(PUNCT ",")
(LIT "ProxyType")
(PUNCT ",")
(LIT "CallableProxyType")
(PUNCT ",")
(LIT "ProxyTypes")
(PUNCT ",")
(LIT "WeakValueDictionary")
(PUNCT ",")
(LIT "WeakSet")
(PUNCT ",")
(LIT "WeakMethod")
(PUNCT ",")
(LIT "finalize")
(PUNCT "]")
(NEWLINE)
(KEYWORD class)
(ID "WeakMethod")
(PUNCT "(")
(ID "ref")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "\n    A custom `weakref.ref` subclass which simulates a weak reference to\n    a bound method, working around the lifetime problem of bound methods.\n    ")
(NEWLINE)
(ID "__slots__")
(PUNCT "=")
(LIT "_func_ref")
(PUNCT ",")
(LIT "_meth_type")
(PUNCT ",")
(LIT "_alive")
(PUNCT ",")
(LIT "__weakref__")
(NEWLINE)
(KEYWORD def)
(ID "__new__")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "meth")
(PUNCT ",")
(ID "callback")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "meth")
(PUNCT ".")
(ID "__self__")
(NEWLINE)
(ID "func")
(PUNCT "=")
(ID "meth")
(PUNCT ".")
(ID "__func__")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "AttributeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "argument should be a bound method, not {}")
(PUNCT ".")
(ID "format")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "meth")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(KEYWORD from)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_cb")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT "=")
(ID "self_wr")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_alive")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_alive")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD if)
(ID "callback")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "callback")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT "=")
(ID "ref")
(PUNCT ".")
(ID "__new__")
(PUNCT "(")
(ID "cls")
(PUNCT ",")
(ID "obj")
(PUNCT ",")
(ID "_cb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_func_ref")
(PUNCT "=")
(ID "ref")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "_cb")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_meth_type")
(PUNCT "=")
(ID "type")
(PUNCT "(")
(ID "meth")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_alive")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self_wr")
(PUNCT "=")
(ID "ref")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__call__")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "func")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_func_ref")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "obj")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID "func")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_meth_type")
(PUNCT "(")
(ID "func")
(PUNCT ",")
(ID "obj")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__eq__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "WeakMethod")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_alive")
(KEYWORD or)
(KEYWORD not)
(ID "other")
(PUNCT ".")
(ID "_alive")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(KEYWORD is)
(ID "other")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "ref")
(PUNCT ".")
(ID "__eq__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_func_ref")
(PUNCT "==")
(ID "other")
(PUNCT ".")
(ID "_func_ref")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__ne__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "other")
(PUNCT ",")
(ID "WeakMethod")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_alive")
(KEYWORD or)
(KEYWORD not)
(ID "other")
(PUNCT ".")
(ID "_alive")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(KEYWORD is)
(KEYWORD not)
(ID "other")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "ref")
(PUNCT ".")
(ID "__ne__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "other")
(PUNCT ")")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "_func_ref")
(PUNCT "!=")
(ID "other")
(PUNCT ".")
(ID "_func_ref")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID "__hash__")
(PUNCT "=")
(ID "ref")
(PUNCT ".")
(ID "__hash__")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "WeakValueDictionary")
(PUNCT "(")
(ID "collections")
(PUNCT ".")
(ID "MutableMapping")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Mapping class that references values weakly.\n\n    Entries in the dictionary will be discarded when no strong\n    reference to the value exists anymore\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "remove")
(PUNCT "(")
(ID "wr")
(PUNCT ",")
(ID "selfref")
(PUNCT "=")
(ID "ref")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT "=")
(ID "selfref")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_iterating")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "wr")
(PUNCT ".")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "wr")
(PUNCT ".")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_remove")
(PUNCT "=")
(ID "remove")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_iterating")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "=")
(ID "d")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_commit_removals")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "l")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(NEWLINE)
(ID "d")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "data")
(NEWLINE)
(KEYWORD while)
(ID "l")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "d")
(PUNCT "[")
(ID "l")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__getitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "o")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "o")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "o")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__delitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_commit_removals")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__len__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ")")
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__contains__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "o")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "o")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<WeakValueDictionary at %s>")
(PUNCT "%")
(ID "id")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__setitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_commit_removals")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "KeyedRef")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_remove")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "copy")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new")
(PUNCT "=")
(ID "WeakValueDictionary")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "wr")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "o")
(PUNCT "=")
(ID "wr")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "o")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "o")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "new")
(NEWLINE)
(DEDENT)
(ID "__copy__")
(PUNCT "=")
(ID "copy")
(NEWLINE)
(KEYWORD def)
(ID "__deepcopy__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "memo")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "copy")
(KEYWORD import)
(ID "deepcopy")
(NEWLINE)
(ID "new")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "wr")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "o")
(PUNCT "=")
(ID "wr")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "o")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new")
(PUNCT "[")
(ID "deepcopy")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "memo")
(PUNCT ")")
(PUNCT "]")
(PUNCT "=")
(ID "o")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "new")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "wr")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "default")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "o")
(PUNCT "=")
(ID "wr")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "o")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "default")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "o")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "items")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "_IterationGuard")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "k")
(PUNCT ",")
(ID "wr")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "v")
(PUNCT "=")
(ID "wr")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "v")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "k")
(PUNCT ",")
(ID "v")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "keys")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "_IterationGuard")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "k")
(PUNCT ",")
(ID "wr")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "wr")
(PUNCT "(")
(PUNCT ")")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "k")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "__iter__")
(PUNCT "=")
(ID "keys")
(NEWLINE)
(KEYWORD def)
(ID "itervaluerefs")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return an iterator that yields the weak references to the values.\n\n        The references are not guaranteed to be 'live' at the time\n        they are used, so the result of calling the references needs\n        to be checked before being used.  This can be used to avoid\n        creating references that will cause the garbage collector to\n        keep the values around longer than needed.\n\n        ")
(NEWLINE)
(KEYWORD with)
(ID "_IterationGuard")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(KEYWORD from)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "values")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "_IterationGuard")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "wr")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "wr")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "obj")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "obj")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "popitem")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_commit_removals")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT ",")
(ID "wr")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "popitem")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "o")
(PUNCT "=")
(ID "wr")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "o")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "key")
(PUNCT ",")
(ID "o")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "pop")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_commit_removals")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "o")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "args")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD raise)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "o")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "KeyError")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "o")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "setdefault")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "wr")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_commit_removals")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "KeyedRef")
(PUNCT "(")
(ID "default")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_remove")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "default")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "wr")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "update")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dict")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_commit_removals")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "d")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "data")
(NEWLINE)
(KEYWORD if)
(ID "dict")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "dict")
(PUNCT ",")
(LIT "items")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dict")
(PUNCT "=")
(ID "type")
(PUNCT "(")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(PUNCT "(")
(ID "dict")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "o")
(KEYWORD in)
(ID "dict")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "d")
(PUNCT "[")
(ID "key")
(PUNCT "]")
(PUNCT "=")
(ID "KeyedRef")
(PUNCT "(")
(ID "o")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_remove")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "valuerefs")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a list of weak references to the values.\n\n        The references are not guaranteed to be 'live' at the time\n        they are used, so the result of calling the references needs\n        to be checked before being used.  This can be used to avoid\n        creating references that will cause the garbage collector to\n        keep the values around longer than needed.\n\n        ")
(NEWLINE)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "values")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "KeyedRef")
(PUNCT "(")
(ID "ref")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Specialized reference that includes a key corresponding to the value.\n\n    This is used in the WeakValueDictionary to avoid having to create\n    a function object for each key stored in the mapping.  A shared\n    callback object can use the 'key' attribute of a KeyedRef instead\n    of getting a reference to the key from an enclosing scope.\n\n    ")
(NEWLINE)
(ID "__slots__")
(PUNCT "=")
(LIT "key")
(PUNCT ",")
(NEWLINE)
(KEYWORD def)
(ID "__new__")
(PUNCT "(")
(ID "type")
(PUNCT ",")
(ID "ob")
(PUNCT ",")
(ID "callback")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT "=")
(ID "ref")
(PUNCT ".")
(ID "__new__")
(PUNCT "(")
(ID "type")
(PUNCT ",")
(ID "ob")
(PUNCT ",")
(ID "callback")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "key")
(PUNCT "=")
(ID "key")
(NEWLINE)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "ob")
(PUNCT ",")
(ID "callback")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "super")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "__init__")
(PUNCT "(")
(ID "ob")
(PUNCT ",")
(ID "callback")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "WeakKeyDictionary")
(PUNCT "(")
(ID "collections")
(PUNCT ".")
(ID "MutableMapping")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT " Mapping class that references keys weakly.\n\n    Entries in the dictionary will be discarded when there is no\n    longer a strong reference to the key. This can be used to\n    associate additional data with an object owned by other parts of\n    an application without adding attributes to those objects. This\n    can be especially useful with objects that override attribute\n    accesses.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dict")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD def)
(ID "remove")
(PUNCT "(")
(ID "k")
(PUNCT ",")
(ID "selfref")
(PUNCT "=")
(ID "ref")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT "=")
(ID "selfref")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_iterating")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "k")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "k")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_remove")
(PUNCT "=")
(ID "remove")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_iterating")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_dirty_len")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD if)
(ID "dict")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "dict")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_commit_removals")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "l")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(NEWLINE)
(ID "d")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "data")
(NEWLINE)
(KEYWORD while)
(ID "l")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "d")
(PUNCT "[")
(ID "l")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_scrub_removals")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "d")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "data")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(PUNCT "=")
(PUNCT "[")
(ID "k")
(KEYWORD for)
(ID "k")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(KEYWORD if)
(ID "k")
(KEYWORD in)
(ID "d")
(PUNCT "]")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_dirty_len")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__delitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_dirty_len")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "ref")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "ref")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__len__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_dirty_len")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_scrub_removals")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ")")
(PUNCT "-")
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_pending_removals")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<WeakKeyDictionary at %s>")
(PUNCT "%")
(ID "id")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__setitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT "[")
(ID "ref")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_remove")
(PUNCT ")")
(PUNCT "]")
(PUNCT "=")
(ID "value")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "copy")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new")
(PUNCT "=")
(ID "WeakKeyDictionary")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "o")
(PUNCT "=")
(ID "key")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "o")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new")
(PUNCT "[")
(ID "o")
(PUNCT "]")
(PUNCT "=")
(ID "value")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "new")
(NEWLINE)
(DEDENT)
(ID "__copy__")
(PUNCT "=")
(ID "copy")
(NEWLINE)
(KEYWORD def)
(ID "__deepcopy__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "memo")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "copy")
(KEYWORD import)
(ID "deepcopy")
(NEWLINE)
(ID "new")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "__class__")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "o")
(PUNCT "=")
(ID "key")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "o")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "new")
(PUNCT "[")
(ID "o")
(PUNCT "]")
(PUNCT "=")
(ID "deepcopy")
(PUNCT "(")
(ID "value")
(PUNCT ",")
(ID "memo")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "new")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "ref")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ",")
(ID "default")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__contains__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "wr")
(PUNCT "=")
(ID "ref")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "TypeError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "wr")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "items")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "_IterationGuard")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "wr")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT "=")
(ID "wr")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "key")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "key")
(PUNCT ",")
(ID "value")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "keys")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "_IterationGuard")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "wr")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "obj")
(PUNCT "=")
(ID "wr")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "obj")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "obj")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(ID "__iter__")
(PUNCT "=")
(ID "keys")
(NEWLINE)
(KEYWORD def)
(ID "values")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD with)
(ID "_IterationGuard")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "wr")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "wr")
(PUNCT "(")
(PUNCT ")")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD yield)
(ID "value")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "keyrefs")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Return a list of weak references to the keys.\n\n        The references are not guaranteed to be 'live' at the time\n        they are used, so the result of calling the references needs\n        to be checked before being used.  This can be used to avoid\n        creating references that will cause the garbage collector to\n        keep the keys around longer than needed.\n\n        ")
(NEWLINE)
(KEYWORD return)
(ID "list")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "popitem")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_dirty_len")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "key")
(PUNCT ",")
(ID "value")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "popitem")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "o")
(PUNCT "=")
(ID "key")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "o")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "o")
(PUNCT ",")
(ID "value")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "pop")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_dirty_len")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(ID "ref")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "setdefault")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "data")
(PUNCT ".")
(ID "setdefault")
(PUNCT "(")
(ID "ref")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_remove")
(PUNCT ")")
(PUNCT ",")
(ID "default")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "update")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dict")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "d")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "data")
(NEWLINE)
(KEYWORD if)
(ID "dict")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "hasattr")
(PUNCT "(")
(ID "dict")
(PUNCT ",")
(LIT "items")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "dict")
(PUNCT "=")
(ID "type")
(PUNCT "(")
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(PUNCT "(")
(ID "dict")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "key")
(PUNCT ",")
(ID "value")
(KEYWORD in)
(ID "dict")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "d")
(PUNCT "[")
(ID "ref")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "_remove")
(PUNCT ")")
(PUNCT "]")
(PUNCT "=")
(ID "value")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(ID "kwargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "finalize")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Class for finalization of weakrefable objects\n\n    finalize(obj, func, *args, **kwargs) returns a callable finalizer\n    object which will be called when obj is garbage collected. The\n    first time the finalizer is called it evaluates func(*arg, **kwargs)\n    and returns the result. After this the finalizer is dead, and\n    calling it just returns None.\n\n    When the program exits any remaining finalizers for which the\n    atexit attribute is true will be run in reverse order of creation.\n    By default atexit is true.\n    ")
(NEWLINE)
(ID "__slots__")
(PUNCT "=")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "_registry")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "_shutdown")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "_index_iter")
(PUNCT "=")
(ID "itertools")
(PUNCT ".")
(ID "count")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "_dirty")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "_registered_with_atexit")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD class)
(ID "_Info")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "__slots__")
(PUNCT "=")
(PUNCT "(")
(LIT "weakref")
(PUNCT ",")
(LIT "func")
(PUNCT ",")
(LIT "args")
(PUNCT ",")
(LIT "kwargs")
(PUNCT ",")
(LIT "atexit")
(PUNCT ",")
(LIT "index")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "obj")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwargs")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_registered_with_atexit")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "atexit")
(NEWLINE)
(ID "atexit")
(PUNCT ".")
(ID "register")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_exitfunc")
(PUNCT ")")
(NEWLINE)
(ID "finalize")
(PUNCT ".")
(ID "_registered_with_atexit")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(ID "info")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_Info")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "info")
(PUNCT ".")
(ID "weakref")
(PUNCT "=")
(ID "ref")
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "info")
(PUNCT ".")
(ID "func")
(PUNCT "=")
(ID "func")
(NEWLINE)
(ID "info")
(PUNCT ".")
(ID "args")
(PUNCT "=")
(ID "args")
(NEWLINE)
(ID "info")
(PUNCT ".")
(ID "kwargs")
(PUNCT "=")
(ID "kwargs")
(KEYWORD or)
(KEYWORD None)
(NEWLINE)
(ID "info")
(PUNCT ".")
(ID "atexit")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "info")
(PUNCT ".")
(ID "index")
(PUNCT "=")
(ID "next")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_index_iter")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_registry")
(PUNCT "[")
(ID "self")
(PUNCT "]")
(PUNCT "=")
(ID "info")
(NEWLINE)
(ID "finalize")
(PUNCT ".")
(ID "_dirty")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__call__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "_")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "If alive then mark as dead and return func(*args, **kwargs);\n        otherwise return None")
(NEWLINE)
(ID "info")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_registry")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "info")
(KEYWORD and)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "_shutdown")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "info")
(PUNCT ".")
(ID "func")
(PUNCT "(")
(PUNCT "*")
(ID "info")
(PUNCT ".")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(PUNCT "(")
(ID "info")
(PUNCT ".")
(ID "kwargs")
(KEYWORD or)
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "detach")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "If alive then mark as dead and return (obj, func, args, kwargs);\n        otherwise return None")
(NEWLINE)
(ID "info")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_registry")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "obj")
(PUNCT "=")
(ID "info")
(KEYWORD and)
(ID "info")
(PUNCT ".")
(ID "weakref")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "obj")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "_registry")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "info")
(PUNCT ".")
(ID "func")
(PUNCT ",")
(ID "info")
(PUNCT ".")
(ID "args")
(PUNCT ",")
(ID "info")
(PUNCT ".")
(ID "kwargs")
(KEYWORD or)
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "peek")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "If alive then return (obj, func, args, kwargs);\n        otherwise return None")
(NEWLINE)
(ID "info")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_registry")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "obj")
(PUNCT "=")
(ID "info")
(KEYWORD and)
(ID "info")
(PUNCT ".")
(ID "weakref")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "obj")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "obj")
(PUNCT ",")
(ID "info")
(PUNCT ".")
(ID "func")
(PUNCT ",")
(ID "info")
(PUNCT ".")
(ID "args")
(PUNCT ",")
(ID "info")
(PUNCT ".")
(ID "kwargs")
(KEYWORD or)
(PUNCT "{")
(PUNCT "}")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "alive")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Whether finalizer is alive")
(NEWLINE)
(KEYWORD return)
(ID "self")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "_registry")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "property")
(NEWLINE)
(KEYWORD def)
(ID "atexit")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Whether finalizer should be called at exit")
(NEWLINE)
(ID "info")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_registry")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "bool")
(PUNCT "(")
(ID "info")
(PUNCT ")")
(KEYWORD and)
(ID "info")
(PUNCT ".")
(ID "atexit")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "atexit")
(PUNCT ".")
(ID "setter")
(NEWLINE)
(KEYWORD def)
(ID "atexit")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_registry")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "info")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT ".")
(ID "atexit")
(PUNCT "=")
(ID "bool")
(PUNCT "(")
(ID "value")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "__repr__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "info")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_registry")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(ID "obj")
(PUNCT "=")
(ID "info")
(KEYWORD and)
(ID "info")
(PUNCT ".")
(ID "weakref")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "obj")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<%s object at %#x; dead>")
(PUNCT "%")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "id")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "<%s object at %#x; for %r at %#x>")
(PUNCT "%")
(PUNCT "(")
(ID "type")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "id")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ",")
(ID "type")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ".")
(ID "__name__")
(PUNCT ",")
(ID "id")
(PUNCT "(")
(ID "obj")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "_select_for_exit")
(PUNCT "(")
(ID "cls")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "L")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(KEYWORD for)
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(KEYWORD in)
(ID "cls")
(PUNCT ".")
(ID "_registry")
(PUNCT ".")
(ID "items")
(PUNCT "(")
(PUNCT ")")
(KEYWORD if)
(ID "i")
(PUNCT ".")
(ID "atexit")
(PUNCT "]")
(NEWLINE)
(ID "L")
(PUNCT ".")
(ID "sort")
(PUNCT "(")
(ID "key")
(PUNCT "=")
(KEYWORD lambda)
(ID "item")
(PUNCT ":")
(ID "item")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(PUNCT ".")
(ID "index")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(PUNCT "[")
(ID "f")
(KEYWORD for)
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(KEYWORD in)
(ID "L")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(PUNCT "@")
(ID "classmethod")
(NEWLINE)
(KEYWORD def)
(ID "_exitfunc")
(PUNCT "(")
(ID "cls")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "reenable_gc")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "cls")
(PUNCT ".")
(ID "_registry")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "gc")
(NEWLINE)
(KEYWORD if)
(ID "gc")
(PUNCT ".")
(ID "isenabled")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "reenable_gc")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "gc")
(PUNCT ".")
(ID "disable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "pending")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "pending")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID "finalize")
(PUNCT ".")
(ID "_dirty")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pending")
(PUNCT "=")
(ID "cls")
(PUNCT ".")
(ID "_select_for_exit")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "finalize")
(PUNCT ".")
(ID "_dirty")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "pending")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "f")
(PUNCT "=")
(ID "pending")
(PUNCT ".")
(ID "pop")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "f")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "Exception")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "excepthook")
(PUNCT "(")
(PUNCT "*")
(ID "sys")
(PUNCT ".")
(ID "exc_info")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD assert)
(ID "f")
(KEYWORD not)
(KEYWORD in)
(ID "cls")
(PUNCT ".")
(ID "_registry")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "finalize")
(PUNCT ".")
(ID "_shutdown")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(KEYWORD if)
(ID "reenable_gc")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "gc")
(PUNCT ".")
(ID "enable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(ENDMARKER)
