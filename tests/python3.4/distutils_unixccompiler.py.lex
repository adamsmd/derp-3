(LIT "distutils.unixccompiler\n\nContains the UnixCCompiler class, a subclass of CCompiler that handles\nthe \"typical\" Unix-style command-line C compiler:\n  * macros defined with -Dname[=value]\n  * macros undefined with -Uname\n  * include search directories specified with -Idir\n  * libraries specified with -lllib\n  * library search directories specified with -Ldir\n  * compile handled by 'cc' (or similar) executable with -c option:\n    compiles .c to .o\n  * link static library handled by 'ar' command (possibly with 'ranlib')\n  * link shared library handled by 'cc -shared'\n")
(NEWLINE)
(KEYWORD import)
(ID "os")
(PUNCT ",")
(ID "sys")
(PUNCT ",")
(ID "re")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(KEYWORD import)
(ID "sysconfig")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "dep_util")
(KEYWORD import)
(ID "newer")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "ccompiler")
(KEYWORD import)
(ID "CCompiler")
(PUNCT ",")
(ID "gen_preprocess_options")
(PUNCT ",")
(ID "gen_lib_options")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(PUNCT ".")
(ID "errors")
(KEYWORD import)
(ID "DistutilsExecError")
(PUNCT ",")
(ID "CompileError")
(PUNCT ",")
(ID "LibError")
(PUNCT ",")
(ID "LinkError")
(NEWLINE)
(KEYWORD from)
(ID "distutils")
(KEYWORD import)
(ID "log")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "darwin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "_osx_support")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "UnixCCompiler")
(PUNCT "(")
(ID "CCompiler")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "compiler_type")
(PUNCT "=")
(LIT "unix")
(NEWLINE)
(ID "executables")
(PUNCT "=")
(PUNCT "{")
(LIT "preprocessor")
(PUNCT ":")
(KEYWORD None)
(PUNCT ",")
(LIT "compiler")
(PUNCT ":")
(PUNCT "[")
(LIT "cc")
(PUNCT "]")
(PUNCT ",")
(LIT "compiler_so")
(PUNCT ":")
(PUNCT "[")
(LIT "cc")
(PUNCT "]")
(PUNCT ",")
(LIT "compiler_cxx")
(PUNCT ":")
(PUNCT "[")
(LIT "cc")
(PUNCT "]")
(PUNCT ",")
(LIT "linker_so")
(PUNCT ":")
(PUNCT "[")
(LIT "cc")
(PUNCT ",")
(LIT "-shared")
(PUNCT "]")
(PUNCT ",")
(LIT "linker_exe")
(PUNCT ":")
(PUNCT "[")
(LIT "cc")
(PUNCT "]")
(PUNCT ",")
(LIT "archiver")
(PUNCT ":")
(PUNCT "[")
(LIT "ar")
(PUNCT ",")
(LIT "-cr")
(PUNCT "]")
(PUNCT ",")
(LIT "ranlib")
(PUNCT ":")
(KEYWORD None)
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "[")
(PUNCT ":")
(LIT 6)
(PUNCT "]")
(PUNCT "==")
(LIT "darwin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "executables")
(PUNCT "[")
(LIT "ranlib")
(PUNCT "]")
(PUNCT "=")
(PUNCT "[")
(LIT "ranlib")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "src_extensions")
(PUNCT "=")
(PUNCT "[")
(LIT ".c")
(PUNCT ",")
(LIT ".C")
(PUNCT ",")
(LIT ".cc")
(PUNCT ",")
(LIT ".cxx")
(PUNCT ",")
(LIT ".cpp")
(PUNCT ",")
(LIT ".m")
(PUNCT "]")
(NEWLINE)
(ID "obj_extension")
(PUNCT "=")
(LIT ".o")
(NEWLINE)
(ID "static_lib_extension")
(PUNCT "=")
(LIT ".a")
(NEWLINE)
(ID "shared_lib_extension")
(PUNCT "=")
(LIT ".so")
(NEWLINE)
(ID "dylib_lib_extension")
(PUNCT "=")
(LIT ".dylib")
(NEWLINE)
(ID "static_lib_format")
(PUNCT "=")
(ID "shared_lib_format")
(PUNCT "=")
(ID "dylib_lib_format")
(PUNCT "=")
(LIT "lib%s%s")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "cygwin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "exe_extension")
(PUNCT "=")
(LIT ".exe")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "preprocess")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "source")
(PUNCT ",")
(ID "output_file")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "macros")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "include_dirs")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "extra_preargs")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "extra_postargs")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fixed_args")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_fix_compile_args")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(ID "macros")
(PUNCT ",")
(ID "include_dirs")
(PUNCT ")")
(NEWLINE)
(ID "ignore")
(PUNCT ",")
(ID "macros")
(PUNCT ",")
(ID "include_dirs")
(PUNCT "=")
(ID "fixed_args")
(NEWLINE)
(ID "pp_opts")
(PUNCT "=")
(ID "gen_preprocess_options")
(PUNCT "(")
(ID "macros")
(PUNCT ",")
(ID "include_dirs")
(PUNCT ")")
(NEWLINE)
(ID "pp_args")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "preprocessor")
(PUNCT "+")
(ID "pp_opts")
(NEWLINE)
(KEYWORD if)
(ID "output_file")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pp_args")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(PUNCT "[")
(LIT "-o")
(PUNCT ",")
(ID "output_file")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "extra_preargs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pp_args")
(PUNCT "[")
(PUNCT ":")
(LIT 0)
(PUNCT "]")
(PUNCT "=")
(ID "extra_preargs")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "extra_postargs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pp_args")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "extra_postargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "pp_args")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "source")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "force")
(KEYWORD or)
(ID "output_file")
(KEYWORD is)
(KEYWORD None)
(KEYWORD or)
(ID "newer")
(PUNCT "(")
(ID "source")
(PUNCT ",")
(ID "output_file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "output_file")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "mkpath")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "dirname")
(PUNCT "(")
(ID "output_file")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "spawn")
(PUNCT "(")
(ID "pp_args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "DistutilsExecError")
(KEYWORD as)
(ID "msg")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "CompileError")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_compile")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "obj")
(PUNCT ",")
(ID "src")
(PUNCT ",")
(ID "ext")
(PUNCT ",")
(ID "cc_args")
(PUNCT ",")
(ID "extra_postargs")
(PUNCT ",")
(ID "pp_opts")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "compiler_so")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "compiler_so")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "darwin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "compiler_so")
(PUNCT "=")
(ID "_osx_support")
(PUNCT ".")
(ID "compiler_fixup")
(PUNCT "(")
(ID "compiler_so")
(PUNCT ",")
(ID "cc_args")
(PUNCT "+")
(ID "extra_postargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "spawn")
(PUNCT "(")
(ID "compiler_so")
(PUNCT "+")
(ID "cc_args")
(PUNCT "+")
(PUNCT "[")
(ID "src")
(PUNCT ",")
(LIT "-o")
(PUNCT ",")
(ID "obj")
(PUNCT "]")
(PUNCT "+")
(ID "extra_postargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "DistutilsExecError")
(KEYWORD as)
(ID "msg")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "CompileError")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "create_static_lib")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "objects")
(PUNCT ",")
(ID "output_libname")
(PUNCT ",")
(ID "output_dir")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "debug")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "target_lang")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "objects")
(PUNCT ",")
(ID "output_dir")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_fix_object_args")
(PUNCT "(")
(ID "objects")
(PUNCT ",")
(ID "output_dir")
(PUNCT ")")
(NEWLINE)
(ID "output_filename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "library_filename")
(PUNCT "(")
(ID "output_libname")
(PUNCT ",")
(ID "output_dir")
(PUNCT "=")
(ID "output_dir")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_need_link")
(PUNCT "(")
(ID "objects")
(PUNCT ",")
(ID "output_filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "mkpath")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "dirname")
(PUNCT "(")
(ID "output_filename")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "spawn")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "archiver")
(PUNCT "+")
(PUNCT "[")
(ID "output_filename")
(PUNCT "]")
(PUNCT "+")
(ID "objects")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "objects")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "ranlib")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "spawn")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "ranlib")
(PUNCT "+")
(PUNCT "[")
(ID "output_filename")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "DistutilsExecError")
(KEYWORD as)
(ID "msg")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "LibError")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "log")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "skipping %s (up-to-date)")
(PUNCT ",")
(ID "output_filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "link")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "target_desc")
(PUNCT ",")
(ID "objects")
(PUNCT ",")
(ID "output_filename")
(PUNCT ",")
(ID "output_dir")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "libraries")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "library_dirs")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "runtime_library_dirs")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "export_symbols")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "debug")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "extra_preargs")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "extra_postargs")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "build_temp")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "target_lang")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "objects")
(PUNCT ",")
(ID "output_dir")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_fix_object_args")
(PUNCT "(")
(ID "objects")
(PUNCT ",")
(ID "output_dir")
(PUNCT ")")
(NEWLINE)
(ID "fixed_args")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "_fix_lib_args")
(PUNCT "(")
(ID "libraries")
(PUNCT ",")
(ID "library_dirs")
(PUNCT ",")
(ID "runtime_library_dirs")
(PUNCT ")")
(NEWLINE)
(ID "libraries")
(PUNCT ",")
(ID "library_dirs")
(PUNCT ",")
(ID "runtime_library_dirs")
(PUNCT "=")
(ID "fixed_args")
(NEWLINE)
(ID "system_libdirs")
(PUNCT "=")
(PUNCT "[")
(LIT "/lib")
(PUNCT ",")
(LIT "/lib64")
(PUNCT ",")
(LIT "/usr/lib")
(PUNCT ",")
(LIT "/usr/lib64")
(PUNCT "]")
(NEWLINE)
(ID "multiarch")
(PUNCT "=")
(ID "sysconfig")
(PUNCT ".")
(ID "get_config_var")
(PUNCT "(")
(LIT "MULTIARCH")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "multiarch")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "system_libdirs")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(PUNCT "[")
(LIT "/lib/%s")
(PUNCT "%")
(ID "multiarch")
(PUNCT ",")
(LIT "/usr/lib/%s")
(PUNCT "%")
(ID "multiarch")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "library_dirs")
(PUNCT "=")
(PUNCT "[")
(ID "dir")
(KEYWORD for)
(ID "dir")
(KEYWORD in)
(ID "library_dirs")
(KEYWORD if)
(KEYWORD not)
(ID "dir")
(KEYWORD in)
(ID "system_libdirs")
(PUNCT "]")
(NEWLINE)
(ID "runtime_library_dirs")
(PUNCT "=")
(PUNCT "[")
(ID "dir")
(KEYWORD for)
(ID "dir")
(KEYWORD in)
(ID "runtime_library_dirs")
(KEYWORD if)
(KEYWORD not)
(ID "dir")
(KEYWORD in)
(ID "system_libdirs")
(PUNCT "]")
(NEWLINE)
(ID "lib_opts")
(PUNCT "=")
(ID "gen_lib_options")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "library_dirs")
(PUNCT ",")
(ID "runtime_library_dirs")
(PUNCT ",")
(ID "libraries")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "isinstance")
(PUNCT "(")
(ID "output_dir")
(PUNCT ",")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "type")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "TypeError")
(PUNCT "(")
(LIT "'output_dir' must be a string or None")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "output_dir")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "output_filename")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "output_dir")
(PUNCT ",")
(ID "output_filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_need_link")
(PUNCT "(")
(ID "objects")
(PUNCT ",")
(ID "output_filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ld_args")
(PUNCT "=")
(PUNCT "(")
(ID "objects")
(PUNCT "+")
(ID "self")
(PUNCT ".")
(ID "objects")
(PUNCT "+")
(ID "lib_opts")
(PUNCT "+")
(PUNCT "[")
(LIT "-o")
(PUNCT ",")
(ID "output_filename")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "debug")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ld_args")
(PUNCT "[")
(PUNCT ":")
(LIT 0)
(PUNCT "]")
(PUNCT "=")
(PUNCT "[")
(LIT "-g")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "extra_preargs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ld_args")
(PUNCT "[")
(PUNCT ":")
(LIT 0)
(PUNCT "]")
(PUNCT "=")
(ID "extra_preargs")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "extra_postargs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ld_args")
(PUNCT ".")
(ID "extend")
(PUNCT "(")
(ID "extra_postargs")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "mkpath")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "dirname")
(PUNCT "(")
(ID "output_filename")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "target_desc")
(PUNCT "==")
(ID "CCompiler")
(PUNCT ".")
(ID "EXECUTABLE")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "linker")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "linker_exe")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "linker")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "linker_so")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "target_lang")
(PUNCT "==")
(LIT "c++")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "compiler_cxx")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "basename")
(PUNCT "(")
(ID "linker")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ")")
(PUNCT "==")
(LIT "env")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(KEYWORD while)
(LIT "=")
(KEYWORD in)
(ID "linker")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "linker")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "compiler_cxx")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "darwin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "linker")
(PUNCT "=")
(ID "_osx_support")
(PUNCT ".")
(ID "compiler_fixup")
(PUNCT "(")
(ID "linker")
(PUNCT ",")
(ID "ld_args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "spawn")
(PUNCT "(")
(ID "linker")
(PUNCT "+")
(ID "ld_args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "DistutilsExecError")
(KEYWORD as)
(ID "msg")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "LinkError")
(PUNCT "(")
(ID "msg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "log")
(PUNCT ".")
(ID "debug")
(PUNCT "(")
(LIT "skipping %s (up-to-date)")
(PUNCT ",")
(ID "output_filename")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "library_dir_option")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dir")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "-L")
(PUNCT "+")
(ID "dir")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_is_gcc")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "compiler_name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "gcc")
(KEYWORD in)
(ID "compiler_name")
(KEYWORD or)
(LIT "g++")
(KEYWORD in)
(ID "compiler_name")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "runtime_library_dir_option")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dir")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "compiler")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "basename")
(PUNCT "(")
(ID "sysconfig")
(PUNCT ".")
(ID "get_config_var")
(PUNCT "(")
(LIT "CC")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "[")
(PUNCT ":")
(LIT 6)
(PUNCT "]")
(PUNCT "==")
(LIT "darwin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "-L")
(PUNCT "+")
(ID "dir")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "[")
(PUNCT ":")
(LIT 5)
(PUNCT "]")
(PUNCT "==")
(LIT "hp-ux")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_is_gcc")
(PUNCT "(")
(ID "compiler")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(LIT "-Wl,+s")
(PUNCT ",")
(LIT "-L")
(PUNCT "+")
(ID "dir")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(PUNCT "[")
(LIT "+s")
(PUNCT ",")
(LIT "-L")
(PUNCT "+")
(ID "dir")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "[")
(PUNCT ":")
(LIT 7)
(PUNCT "]")
(PUNCT "==")
(LIT "irix646")
(KEYWORD or)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "[")
(PUNCT ":")
(LIT 6)
(PUNCT "]")
(PUNCT "==")
(LIT "osf1V5")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(LIT "-rpath")
(PUNCT ",")
(ID "dir")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "_is_gcc")
(PUNCT "(")
(ID "compiler")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "sysconfig")
(PUNCT ".")
(ID "get_config_var")
(PUNCT "(")
(LIT "GNULD")
(PUNCT ")")
(PUNCT "==")
(LIT "yes")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "-Wl,--enable-new-dtags,-R")
(PUNCT "+")
(ID "dir")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "-Wl,-R")
(PUNCT "+")
(ID "dir")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "-R")
(PUNCT "+")
(ID "dir")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "library_option")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "lib")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "-l")
(PUNCT "+")
(ID "lib")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "find_library_file")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "dirs")
(PUNCT ",")
(ID "lib")
(PUNCT ",")
(ID "debug")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "shared_f")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "library_filename")
(PUNCT "(")
(ID "lib")
(PUNCT ",")
(ID "lib_type")
(PUNCT "=")
(LIT "shared")
(PUNCT ")")
(NEWLINE)
(ID "dylib_f")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "library_filename")
(PUNCT "(")
(ID "lib")
(PUNCT ",")
(ID "lib_type")
(PUNCT "=")
(LIT "dylib")
(PUNCT ")")
(NEWLINE)
(ID "static_f")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "library_filename")
(PUNCT "(")
(ID "lib")
(PUNCT ",")
(ID "lib_type")
(PUNCT "=")
(LIT "static")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "darwin")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cflags")
(PUNCT "=")
(ID "sysconfig")
(PUNCT ".")
(ID "get_config_var")
(PUNCT "(")
(LIT "CFLAGS")
(PUNCT ")")
(NEWLINE)
(ID "m")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "search")
(PUNCT "(")
(LIT "-isysroot\\s+(\\S+)")
(PUNCT ",")
(ID "cflags")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "m")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sysroot")
(PUNCT "=")
(LIT "/")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sysroot")
(PUNCT "=")
(ID "m")
(PUNCT ".")
(ID "group")
(PUNCT "(")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD for)
(ID "dir")
(KEYWORD in)
(ID "dirs")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "shared")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "dir")
(PUNCT ",")
(ID "shared_f")
(PUNCT ")")
(NEWLINE)
(ID "dylib")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "dir")
(PUNCT ",")
(ID "dylib_f")
(PUNCT ")")
(NEWLINE)
(ID "static")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "dir")
(PUNCT ",")
(ID "static_f")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "sys")
(PUNCT ".")
(ID "platform")
(PUNCT "==")
(LIT "darwin")
(KEYWORD and)
(PUNCT "(")
(ID "dir")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "/System/")
(PUNCT ")")
(KEYWORD or)
(PUNCT "(")
(ID "dir")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "/usr/")
(PUNCT ")")
(KEYWORD and)
(KEYWORD not)
(ID "dir")
(PUNCT ".")
(ID "startswith")
(PUNCT "(")
(LIT "/usr/local/")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "shared")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "sysroot")
(PUNCT ",")
(ID "dir")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(ID "shared_f")
(PUNCT ")")
(NEWLINE)
(ID "dylib")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "sysroot")
(PUNCT ",")
(ID "dir")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(ID "dylib_f")
(PUNCT ")")
(NEWLINE)
(ID "static")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "sysroot")
(PUNCT ",")
(ID "dir")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ",")
(ID "static_f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "dylib")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "dylib")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "shared")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "shared")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "exists")
(PUNCT "(")
(ID "static")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "static")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
