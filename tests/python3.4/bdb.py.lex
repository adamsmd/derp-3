(LIT "Debugger basics")
(NEWLINE)
(KEYWORD import)
(ID "fnmatch")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD from)
(ID "inspect")
(KEYWORD import)
(ID "CO_GENERATOR")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "BdbQuit")
(PUNCT ",")
(LIT "Bdb")
(PUNCT ",")
(LIT "Breakpoint")
(PUNCT "]")
(NEWLINE)
(KEYWORD class)
(ID "BdbQuit")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Exception to give up completely.")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "Bdb")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Generic Python debugger base class.\n\n    This class takes care of details of the trace facility;\n    a derived class should implement user interaction.\n    The standard debugger class (pdb.Pdb) is an example.\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "skip")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "skip")
(PUNCT "=")
(ID "set")
(PUNCT "(")
(ID "skip")
(PUNCT ")")
(KEYWORD if)
(ID "skip")
(KEYWORD else)
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fncache")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "frame_returning")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "canonic")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "filename")
(PUNCT "==")
(LIT "<")
(PUNCT "+")
(ID "filename")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "+")
(LIT ">")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "filename")
(NEWLINE)
(DEDENT)
(ID "canonic")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "fncache")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "canonic")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "canonic")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "abspath")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(ID "canonic")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "normcase")
(PUNCT "(")
(ID "canonic")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "fncache")
(PUNCT "[")
(ID "filename")
(PUNCT "]")
(PUNCT "=")
(ID "canonic")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "canonic")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "reset")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "linecache")
(NEWLINE)
(ID "linecache")
(PUNCT ".")
(ID "checkcache")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "botframe")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_set_stopinfo")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "trace_dispatch")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "event")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "quitting")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "event")
(PUNCT "==")
(LIT "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "dispatch_line")
(PUNCT "(")
(ID "frame")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "event")
(PUNCT "==")
(LIT "call")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "dispatch_call")
(PUNCT "(")
(ID "frame")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "event")
(PUNCT "==")
(LIT "return")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "dispatch_return")
(PUNCT "(")
(ID "frame")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "event")
(PUNCT "==")
(LIT "exception")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "dispatch_exception")
(PUNCT "(")
(ID "frame")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "event")
(PUNCT "==")
(LIT "c_call")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "event")
(PUNCT "==")
(LIT "c_exception")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "event")
(PUNCT "==")
(LIT "c_return")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(LIT "bdb.Bdb.dispatch: unknown debugging event:")
(PUNCT ",")
(ID "repr")
(PUNCT "(")
(ID "event")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dispatch_line")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "stop_here")
(PUNCT "(")
(ID "frame")
(PUNCT ")")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "break_here")
(PUNCT "(")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "user_line")
(PUNCT "(")
(ID "frame")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "quitting")
(PUNCT ":")
(KEYWORD raise)
(ID "BdbQuit")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dispatch_call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "botframe")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "botframe")
(PUNCT "=")
(ID "frame")
(PUNCT ".")
(ID "f_back")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "stop_here")
(PUNCT "(")
(ID "frame")
(PUNCT ")")
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "break_anywhere")
(PUNCT "(")
(ID "frame")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "stopframe")
(KEYWORD and)
(ID "frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_flags")
(PUNCT "&")
(ID "CO_GENERATOR")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "user_call")
(PUNCT "(")
(ID "frame")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "quitting")
(PUNCT ":")
(KEYWORD raise)
(ID "BdbQuit")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dispatch_return")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "stop_here")
(PUNCT "(")
(ID "frame")
(PUNCT ")")
(KEYWORD or)
(ID "frame")
(PUNCT "==")
(ID "self")
(PUNCT ".")
(ID "returnframe")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "stopframe")
(KEYWORD and)
(ID "frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_flags")
(PUNCT "&")
(ID "CO_GENERATOR")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "frame_returning")
(PUNCT "=")
(ID "frame")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "user_return")
(PUNCT "(")
(ID "frame")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "frame_returning")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "quitting")
(PUNCT ":")
(KEYWORD raise)
(ID "BdbQuit")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "stopframe")
(KEYWORD is)
(ID "frame")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "stoplineno")
(PUNCT "!=")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_set_stopinfo")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dispatch_exception")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "stop_here")
(PUNCT "(")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(PUNCT "(")
(ID "frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_flags")
(PUNCT "&")
(ID "CO_GENERATOR")
(KEYWORD and)
(ID "arg")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD is)
(ID "StopIteration")
(KEYWORD and)
(ID "arg")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(KEYWORD is)
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "user_exception")
(PUNCT "(")
(ID "frame")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "quitting")
(PUNCT ":")
(KEYWORD raise)
(ID "BdbQuit")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD elif)
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "stopframe")
(KEYWORD and)
(ID "frame")
(KEYWORD is)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "stopframe")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "stopframe")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_flags")
(PUNCT "&")
(ID "CO_GENERATOR")
(KEYWORD and)
(ID "arg")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(KEYWORD in)
(PUNCT "(")
(ID "StopIteration")
(PUNCT ",")
(ID "GeneratorExit")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "user_exception")
(PUNCT "(")
(ID "frame")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "quitting")
(PUNCT ":")
(KEYWORD raise)
(ID "BdbQuit")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_skipped_module")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "module_name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "pattern")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "skip")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "fnmatch")
(PUNCT ".")
(ID "fnmatch")
(PUNCT "(")
(ID "module_name")
(PUNCT ",")
(ID "pattern")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "stop_here")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "skip")
(KEYWORD and)
(ID "self")
(PUNCT ".")
(ID "is_skipped_module")
(PUNCT "(")
(ID "frame")
(PUNCT ".")
(ID "f_globals")
(PUNCT ".")
(ID "get")
(PUNCT "(")
(LIT "__name__")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "frame")
(KEYWORD is)
(ID "self")
(PUNCT ".")
(ID "stopframe")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "stoplineno")
(PUNCT "==")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "frame")
(PUNCT ".")
(ID "f_lineno")
(PUNCT ">=")
(ID "self")
(PUNCT ".")
(ID "stoplineno")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "stopframe")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "break_here")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "canonic")
(PUNCT "(")
(ID "frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_filename")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "filename")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(ID "lineno")
(PUNCT "=")
(ID "frame")
(PUNCT ".")
(ID "f_lineno")
(NEWLINE)
(KEYWORD if)
(ID "lineno")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT "[")
(ID "filename")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lineno")
(PUNCT "=")
(ID "frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_firstlineno")
(NEWLINE)
(KEYWORD if)
(ID "lineno")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT "[")
(ID "filename")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(PUNCT "(")
(ID "bp")
(PUNCT ",")
(ID "flag")
(PUNCT ")")
(PUNCT "=")
(ID "effective")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "bp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "currentbp")
(PUNCT "=")
(ID "bp")
(PUNCT ".")
(ID "number")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID "flag")
(KEYWORD and)
(ID "bp")
(PUNCT ".")
(ID "temporary")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "do_clear")
(PUNCT "(")
(ID "str")
(PUNCT "(")
(ID "bp")
(PUNCT ".")
(ID "number")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "do_clear")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "NotImplementedError")
(PUNCT "(")
(LIT "subclass of bdb must implement do_clear()")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "break_anywhere")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "canonic")
(PUNCT "(")
(ID "frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_filename")
(PUNCT ")")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "breaks")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "user_call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "argument_list")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "This method is called when there is the remote possibility\n        that we ever need to stop in this function.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "user_line")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "This method is called when we stop or break at this line.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "user_return")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "return_value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "This method is called when a return trap is set here.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "user_exception")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "exc_info")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "This method is called if an exception occurs,\n        but only if we are to stop at or just below this level.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_set_stopinfo")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "stopframe")
(PUNCT ",")
(ID "returnframe")
(PUNCT ",")
(ID "stoplineno")
(PUNCT "=")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "stopframe")
(PUNCT "=")
(ID "stopframe")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "returnframe")
(PUNCT "=")
(ID "returnframe")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "quitting")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "stoplineno")
(PUNCT "=")
(ID "stoplineno")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_until")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "lineno")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Stop when the line with the line no greater than the current one is\n        reached or when returning from current frame")
(NEWLINE)
(KEYWORD if)
(ID "lineno")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lineno")
(PUNCT "=")
(ID "frame")
(PUNCT ".")
(ID "f_lineno")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_set_stopinfo")
(PUNCT "(")
(ID "frame")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_step")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Stop after one line of code.")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "frame_returning")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "caller_frame")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "frame_returning")
(PUNCT ".")
(ID "f_back")
(NEWLINE)
(KEYWORD if)
(ID "caller_frame")
(KEYWORD and)
(KEYWORD not)
(ID "caller_frame")
(PUNCT ".")
(ID "f_trace")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "caller_frame")
(PUNCT ".")
(ID "f_trace")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_set_stopinfo")
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_next")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Stop on the next line in or below the given frame.")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_set_stopinfo")
(PUNCT "(")
(ID "frame")
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_return")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Stop when returning from the given frame.")
(NEWLINE)
(KEYWORD if)
(ID "frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_flags")
(PUNCT "&")
(ID "CO_GENERATOR")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_set_stopinfo")
(PUNCT "(")
(ID "frame")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_set_stopinfo")
(PUNCT "(")
(ID "frame")
(PUNCT ".")
(ID "f_back")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "set_trace")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Start debugging from `frame`.\n\n        If frame is not specified, debugging starts from caller's frame.\n        ")
(NEWLINE)
(KEYWORD if)
(ID "frame")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "frame")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "_getframe")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "f_back")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "frame")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "frame")
(PUNCT ".")
(ID "f_trace")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "botframe")
(PUNCT "=")
(ID "frame")
(NEWLINE)
(ID "frame")
(PUNCT "=")
(ID "frame")
(PUNCT ".")
(ID "f_back")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "set_step")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "settrace")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_continue")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_set_stopinfo")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "botframe")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "settrace")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "frame")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "_getframe")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "f_back")
(NEWLINE)
(KEYWORD while)
(ID "frame")
(KEYWORD and)
(ID "frame")
(KEYWORD is)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "botframe")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "frame")
(PUNCT ".")
(ID "f_trace")
(NEWLINE)
(ID "frame")
(PUNCT "=")
(ID "frame")
(PUNCT ".")
(ID "f_back")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "set_quit")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "stopframe")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "botframe")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "returnframe")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "quitting")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "settrace")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_break")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ",")
(ID "temporary")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "cond")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "funcname")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "canonic")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(KEYWORD import)
(ID "linecache")
(NEWLINE)
(ID "line")
(PUNCT "=")
(ID "linecache")
(PUNCT ".")
(ID "getline")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "Line %s:%d does not exist")
(PUNCT "%")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "list")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT ".")
(ID "setdefault")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "lineno")
(KEYWORD not)
(KEYWORD in)
(ID "list")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "list")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "bp")
(PUNCT "=")
(ID "Breakpoint")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ",")
(ID "temporary")
(PUNCT ",")
(ID "cond")
(PUNCT ",")
(ID "funcname")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_prune_breaks")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(KEYWORD not)
(KEYWORD in)
(ID "Breakpoint")
(PUNCT ".")
(ID "bplist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT "[")
(ID "filename")
(PUNCT "]")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT "[")
(ID "filename")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT "[")
(ID "filename")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "clear_break")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "canonic")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "filename")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "There are no breakpoints in %s")
(PUNCT "%")
(ID "filename")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "lineno")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT "[")
(ID "filename")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "There is no breakpoint at %s:%d")
(PUNCT "%")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "bp")
(KEYWORD in)
(ID "Breakpoint")
(PUNCT ".")
(ID "bplist")
(PUNCT "[")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT "]")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bp")
(PUNCT ".")
(ID "deleteMe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_prune_breaks")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "clear_bpbynumber")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bp")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "get_bpbynumber")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(KEYWORD as)
(ID "err")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "str")
(PUNCT "(")
(ID "err")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "bp")
(PUNCT ".")
(ID "deleteMe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_prune_breaks")
(PUNCT "(")
(ID "bp")
(PUNCT ".")
(ID "file")
(PUNCT ",")
(ID "bp")
(PUNCT ".")
(ID "line")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "clear_all_file_breaks")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "canonic")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "filename")
(KEYWORD not)
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "There are no breakpoints in %s")
(PUNCT "%")
(ID "filename")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "line")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT "[")
(ID "filename")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "blist")
(PUNCT "=")
(ID "Breakpoint")
(PUNCT ".")
(ID "bplist")
(PUNCT "[")
(ID "filename")
(PUNCT ",")
(ID "line")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "bp")
(KEYWORD in)
(ID "blist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bp")
(PUNCT ".")
(ID "deleteMe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT "[")
(ID "filename")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "clear_all_breaks")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "There are no breakpoints")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "bp")
(KEYWORD in)
(ID "Breakpoint")
(PUNCT ".")
(ID "bpbynumber")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "bp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bp")
(PUNCT ".")
(ID "deleteMe")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_bpbynumber")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "arg")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "arg")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Breakpoint number expected")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "number")
(PUNCT "=")
(ID "int")
(PUNCT "(")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ValueError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Non-numeric breakpoint number %s")
(PUNCT "%")
(ID "arg")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bp")
(PUNCT "=")
(ID "Breakpoint")
(PUNCT ".")
(ID "bpbynumber")
(PUNCT "[")
(ID "number")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "IndexError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Breakpoint number %d out of range")
(PUNCT "%")
(ID "number")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "bp")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD raise)
(ID "ValueError")
(PUNCT "(")
(LIT "Breakpoint %d already deleted")
(PUNCT "%")
(ID "number")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "bp")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_break")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "canonic")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "filename")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "breaks")
(KEYWORD and)
(ID "lineno")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT "[")
(ID "filename")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_breaks")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "canonic")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "filename")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "breaks")
(KEYWORD and)
(ID "lineno")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT "[")
(ID "filename")
(PUNCT "]")
(KEYWORD and)
(ID "Breakpoint")
(PUNCT ".")
(ID "bplist")
(PUNCT "[")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT "]")
(KEYWORD or)
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_file_breaks")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "filename")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "filename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "canonic")
(PUNCT "(")
(ID "filename")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "filename")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "breaks")
(PUNCT "[")
(ID "filename")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_all_breaks")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "breaks")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_stack")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "f")
(PUNCT ",")
(ID "t")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stack")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "t")
(KEYWORD and)
(ID "t")
(PUNCT ".")
(ID "tb_frame")
(KEYWORD is)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "t")
(PUNCT "=")
(ID "t")
(PUNCT ".")
(ID "tb_next")
(NEWLINE)
(DEDENT)
(KEYWORD while)
(ID "f")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stack")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "f")
(PUNCT ",")
(ID "f")
(PUNCT ".")
(ID "f_lineno")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "f")
(KEYWORD is)
(ID "self")
(PUNCT ".")
(ID "botframe")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "f")
(PUNCT "=")
(ID "f")
(PUNCT ".")
(ID "f_back")
(NEWLINE)
(DEDENT)
(ID "stack")
(PUNCT ".")
(ID "reverse")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "stack")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "t")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "stack")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "t")
(PUNCT ".")
(ID "tb_frame")
(PUNCT ",")
(ID "t")
(PUNCT ".")
(ID "tb_lineno")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "t")
(PUNCT "=")
(ID "t")
(PUNCT ".")
(ID "tb_next")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "f")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "max")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "stack")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "stack")
(PUNCT ",")
(ID "i")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "format_stack_entry")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame_lineno")
(PUNCT ",")
(ID "lprefix")
(PUNCT "=")
(LIT ": ")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "linecache")
(PUNCT ",")
(ID "reprlib")
(NEWLINE)
(ID "frame")
(PUNCT ",")
(ID "lineno")
(PUNCT "=")
(ID "frame_lineno")
(NEWLINE)
(ID "filename")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "canonic")
(PUNCT "(")
(ID "frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_filename")
(PUNCT ")")
(NEWLINE)
(ID "s")
(PUNCT "=")
(LIT "%s(%r)")
(PUNCT "%")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_name")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "+=")
(ID "frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_name")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "+=")
(LIT "<lambda>")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "__args__")
(KEYWORD in)
(ID "frame")
(PUNCT ".")
(ID "f_locals")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(ID "frame")
(PUNCT ".")
(ID "f_locals")
(PUNCT "[")
(LIT "__args__")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "args")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "args")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "+=")
(ID "reprlib")
(PUNCT ".")
(ID "repr")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "+=")
(LIT "()")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(LIT "__return__")
(KEYWORD in)
(ID "frame")
(PUNCT ".")
(ID "f_locals")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rv")
(PUNCT "=")
(ID "frame")
(PUNCT ".")
(ID "f_locals")
(PUNCT "[")
(LIT "__return__")
(PUNCT "]")
(NEWLINE)
(ID "s")
(PUNCT "+=")
(LIT "->")
(NEWLINE)
(ID "s")
(PUNCT "+=")
(ID "reprlib")
(PUNCT ".")
(ID "repr")
(PUNCT "(")
(ID "rv")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "line")
(PUNCT "=")
(ID "linecache")
(PUNCT ".")
(ID "getline")
(PUNCT "(")
(ID "filename")
(PUNCT ",")
(ID "lineno")
(PUNCT ",")
(ID "frame")
(PUNCT ".")
(ID "f_globals")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT "+=")
(ID "lprefix")
(PUNCT "+")
(ID "line")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "s")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "run")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cmd")
(PUNCT ",")
(ID "globals")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "locals")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "globals")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "__main__")
(NEWLINE)
(ID "globals")
(PUNCT "=")
(ID "__main__")
(PUNCT ".")
(ID "__dict__")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "locals")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "locals")
(PUNCT "=")
(ID "globals")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "cmd")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "cmd")
(PUNCT "=")
(ID "compile")
(PUNCT "(")
(ID "cmd")
(PUNCT ",")
(LIT "<string>")
(PUNCT ",")
(LIT "exec")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "sys")
(PUNCT ".")
(ID "settrace")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "exec")
(PUNCT "(")
(ID "cmd")
(PUNCT ",")
(ID "globals")
(PUNCT ",")
(ID "locals")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "BdbQuit")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "quitting")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "settrace")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "runeval")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "expr")
(PUNCT ",")
(ID "globals")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "locals")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "globals")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "__main__")
(NEWLINE)
(ID "globals")
(PUNCT "=")
(ID "__main__")
(PUNCT ".")
(ID "__dict__")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "locals")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "locals")
(PUNCT "=")
(ID "globals")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "settrace")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "eval")
(PUNCT "(")
(ID "expr")
(PUNCT ",")
(ID "globals")
(PUNCT ",")
(ID "locals")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "BdbQuit")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "quitting")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "settrace")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "runctx")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cmd")
(PUNCT ",")
(ID "globals")
(PUNCT ",")
(ID "locals")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "run")
(PUNCT "(")
(ID "cmd")
(PUNCT ",")
(ID "globals")
(PUNCT ",")
(ID "locals")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "runcall")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwds")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "reset")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "settrace")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "trace_dispatch")
(PUNCT ")")
(NEWLINE)
(ID "res")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "res")
(PUNCT "=")
(ID "func")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kwds")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "BdbQuit")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "quitting")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "settrace")
(PUNCT "(")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "res")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "set_trace")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "Bdb")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "set_trace")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "Breakpoint")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Breakpoint class.\n\n    Implements temporary breakpoints, ignore counts, disabling and\n    (re)-enabling, and conditionals.\n\n    Breakpoints are indexed by number through bpbynumber and by\n    the file,line tuple using bplist.  The former points to a\n    single instance of class Breakpoint.  The latter points to a\n    list of such instances since there may be more than one\n    breakpoint per line.\n\n    ")
(NEWLINE)
(ID "next")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "bplist")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "bpbynumber")
(PUNCT "=")
(PUNCT "[")
(KEYWORD None)
(PUNCT "]")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "file")
(PUNCT ",")
(ID "line")
(PUNCT ",")
(ID "temporary")
(PUNCT "=")
(KEYWORD False)
(PUNCT ",")
(ID "cond")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "funcname")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "funcname")
(PUNCT "=")
(ID "funcname")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "func_first_executable_line")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT "=")
(ID "file")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "line")
(PUNCT "=")
(ID "line")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "temporary")
(PUNCT "=")
(ID "temporary")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "cond")
(PUNCT "=")
(ID "cond")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "enabled")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "ignore")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "hits")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "number")
(PUNCT "=")
(ID "Breakpoint")
(PUNCT ".")
(ID "next")
(NEWLINE)
(ID "Breakpoint")
(PUNCT ".")
(ID "next")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "bpbynumber")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID "file")
(PUNCT ",")
(ID "line")
(PUNCT ")")
(KEYWORD in)
(ID "self")
(PUNCT ".")
(ID "bplist")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "bplist")
(PUNCT "[")
(ID "file")
(PUNCT ",")
(ID "line")
(PUNCT "]")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "bplist")
(PUNCT "[")
(ID "file")
(PUNCT ",")
(ID "line")
(PUNCT "]")
(PUNCT "=")
(PUNCT "[")
(ID "self")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "deleteMe")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "index")
(PUNCT "=")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "line")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "bpbynumber")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "number")
(PUNCT "]")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "bplist")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "self")
(PUNCT ".")
(ID "bplist")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "self")
(PUNCT ".")
(ID "bplist")
(PUNCT "[")
(ID "index")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "enable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "enabled")
(PUNCT "=")
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "disable")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "enabled")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "bpprint")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "out")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "out")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "out")
(PUNCT "=")
(ID "sys")
(PUNCT ".")
(ID "stdout")
(NEWLINE)
(DEDENT)
(ID "print")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "bpformat")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "file")
(PUNCT "=")
(ID "out")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "bpformat")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "temporary")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "disp")
(PUNCT "=")
(LIT "del  ")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "disp")
(PUNCT "=")
(LIT "keep ")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "enabled")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "disp")
(PUNCT "=")
(ID "disp")
(PUNCT "+")
(LIT "yes  ")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "disp")
(PUNCT "=")
(ID "disp")
(PUNCT "+")
(LIT "no   ")
(NEWLINE)
(DEDENT)
(ID "ret")
(PUNCT "=")
(LIT "%-4dbreakpoint   %s at %s:%d")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "number")
(PUNCT ",")
(ID "disp")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "line")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "cond")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ret")
(PUNCT "+=")
(LIT "\n\tstop only if %s")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "cond")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "ignore")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ret")
(PUNCT "+=")
(LIT "\n\tignore next %d hits")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "ignore")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "hits")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "hits")
(PUNCT ">")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ss")
(PUNCT "=")
(LIT "s")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ss")
(PUNCT "=")
(LIT "")
(NEWLINE)
(DEDENT)
(ID "ret")
(PUNCT "+=")
(LIT "\n\tbreakpoint already hit %d time%s")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "hits")
(PUNCT ",")
(ID "ss")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "ret")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__str__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(LIT "breakpoint %s at %s:%s")
(PUNCT "%")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "number")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "file")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "line")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "checkfuncname")
(PUNCT "(")
(ID "b")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Check whether we should break here because of `b.funcname`.")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "b")
(PUNCT ".")
(ID "funcname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "b")
(PUNCT ".")
(ID "line")
(PUNCT "!=")
(ID "frame")
(PUNCT ".")
(ID "f_lineno")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_name")
(PUNCT "!=")
(ID "b")
(PUNCT ".")
(ID "funcname")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "b")
(PUNCT ".")
(ID "func_first_executable_line")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "b")
(PUNCT ".")
(ID "func_first_executable_line")
(PUNCT "=")
(ID "frame")
(PUNCT ".")
(ID "f_lineno")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "b")
(PUNCT ".")
(ID "func_first_executable_line")
(PUNCT "!=")
(ID "frame")
(PUNCT ".")
(ID "f_lineno")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD False)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(KEYWORD True)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "effective")
(PUNCT "(")
(ID "file")
(PUNCT ",")
(ID "line")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Determine which breakpoint for this file:line is to be acted upon.\n\n    Called only if we know there is a bpt at this\n    location.  Returns breakpoint that was triggered and a flag\n    that indicates if it is ok to delete a temporary bp.\n\n    ")
(NEWLINE)
(ID "possibles")
(PUNCT "=")
(ID "Breakpoint")
(PUNCT ".")
(ID "bplist")
(PUNCT "[")
(ID "file")
(PUNCT ",")
(ID "line")
(PUNCT "]")
(NEWLINE)
(KEYWORD for)
(ID "b")
(KEYWORD in)
(ID "possibles")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(KEYWORD not)
(ID "b")
(PUNCT ".")
(ID "enabled")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "checkfuncname")
(PUNCT "(")
(ID "b")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "b")
(PUNCT ".")
(ID "hits")
(PUNCT "+=")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "b")
(PUNCT ".")
(ID "cond")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "b")
(PUNCT ".")
(ID "ignore")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "b")
(PUNCT ".")
(ID "ignore")
(PUNCT "-=")
(LIT 1)
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "b")
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "val")
(PUNCT "=")
(ID "eval")
(PUNCT "(")
(ID "b")
(PUNCT ".")
(ID "cond")
(PUNCT ",")
(ID "frame")
(PUNCT ".")
(ID "f_globals")
(PUNCT ",")
(ID "frame")
(PUNCT ".")
(ID "f_locals")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "val")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "b")
(PUNCT ".")
(ID "ignore")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "b")
(PUNCT ".")
(ID "ignore")
(PUNCT "-=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "b")
(PUNCT ",")
(KEYWORD True)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD except)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "b")
(PUNCT ",")
(KEYWORD False)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD return)
(PUNCT "(")
(KEYWORD None)
(PUNCT ",")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "Tdb")
(PUNCT "(")
(ID "Bdb")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "user_call")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "args")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "name")
(PUNCT "=")
(ID "frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_name")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "name")
(PUNCT ":")
(ID "name")
(PUNCT "=")
(LIT "???")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "+++ call")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(ID "args")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "user_line")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "linecache")
(NEWLINE)
(ID "name")
(PUNCT "=")
(ID "frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_name")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "name")
(PUNCT ":")
(ID "name")
(PUNCT "=")
(LIT "???")
(NEWLINE)
(ID "fn")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "canonic")
(PUNCT "(")
(ID "frame")
(PUNCT ".")
(ID "f_code")
(PUNCT ".")
(ID "co_filename")
(PUNCT ")")
(NEWLINE)
(ID "line")
(PUNCT "=")
(ID "linecache")
(PUNCT ".")
(ID "getline")
(PUNCT "(")
(ID "fn")
(PUNCT ",")
(ID "frame")
(PUNCT ".")
(ID "f_lineno")
(PUNCT ",")
(ID "frame")
(PUNCT ".")
(ID "f_globals")
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "+++")
(PUNCT ",")
(ID "fn")
(PUNCT ",")
(ID "frame")
(PUNCT ".")
(ID "f_lineno")
(PUNCT ",")
(ID "name")
(PUNCT ",")
(LIT ":")
(PUNCT ",")
(ID "line")
(PUNCT ".")
(ID "strip")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "user_return")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "retval")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "+++ return")
(PUNCT ",")
(ID "retval")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "user_exception")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "frame")
(PUNCT ",")
(ID "exc_stuff")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "+++ exception")
(PUNCT ",")
(ID "exc_stuff")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "set_continue")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "foo")
(PUNCT "(")
(ID "n")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "foo(")
(PUNCT ",")
(ID "n")
(PUNCT ",")
(LIT ")")
(PUNCT ")")
(NEWLINE)
(ID "x")
(PUNCT "=")
(ID "bar")
(PUNCT "(")
(ID "n")
(PUNCT "*")
(LIT 10)
(PUNCT ")")
(NEWLINE)
(ID "print")
(PUNCT "(")
(LIT "bar returned")
(PUNCT ",")
(ID "x")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "bar")
(PUNCT "(")
(ID "a")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "print")
(PUNCT "(")
(LIT "bar(")
(PUNCT ",")
(ID "a")
(PUNCT ",")
(LIT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "a")
(PUNCT "/")
(LIT 2)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "test")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "t")
(PUNCT "=")
(ID "Tdb")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "t")
(PUNCT ".")
(ID "run")
(PUNCT "(")
(LIT "import bdb; bdb.foo(10)")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
