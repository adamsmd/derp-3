(KEYWORD import)
(ID "re")
(NEWLINE)
(KEYWORD import)
(ID "sys")
(NEWLINE)
(KEYWORD from)
(ID "collections")
(KEYWORD import)
(ID "Mapping")
(NEWLINE)
(KEYWORD from)
(ID "functools")
(KEYWORD import)
(ID "partial")
(NEWLINE)
(PUNCT "(")
(ID "C_NONE")
(PUNCT ",")
(ID "C_BACKSLASH")
(PUNCT ",")
(ID "C_STRING_FIRST_LINE")
(PUNCT ",")
(ID "C_STRING_NEXT_LINES")
(PUNCT ",")
(ID "C_BRACKET")
(PUNCT ")")
(PUNCT "=")
(ID "range")
(PUNCT "(")
(LIT 5)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "dump")
(PUNCT "(")
(PUNCT "*")
(ID "stuff")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "sys")
(PUNCT ".")
(ID "__stdout__")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(LIT " ")
(PUNCT ".")
(ID "join")
(PUNCT "(")
(ID "map")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "stuff")
(PUNCT ")")
(PUNCT ")")
(PUNCT "+")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "_synchre")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "\n    ^\n    [ \\t]*\n    (?: while\n    |   else\n    |   def\n    |   return\n    |   assert\n    |   break\n    |   class\n    |   continue\n    |   elif\n    |   try\n    |   except\n    |   raise\n    |   import\n    |   yield\n    )\n    \\b\n")
(PUNCT ",")
(ID "re")
(PUNCT ".")
(ID "VERBOSE")
(PUNCT "|")
(ID "re")
(PUNCT ".")
(ID "MULTILINE")
(PUNCT ")")
(PUNCT ".")
(ID "search")
(NEWLINE)
(ID "_junkre")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "\n    [ \\t]*\n    (?: \\# \\S .* )?\n    \\n\n")
(PUNCT ",")
(ID "re")
(PUNCT ".")
(ID "VERBOSE")
(PUNCT ")")
(PUNCT ".")
(ID "match")
(NEWLINE)
(ID "_match_stringre")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "\n    \\\"\"\" [^\"\\\\]* (?:\n                     (?: \\\\. | \"(?!\"\") )\n                     [^\"\\\\]*\n                 )*\n    (?: \\\"\"\" )?\n\n|   \" [^\"\\\\\\n]* (?: \\\\. [^\"\\\\\\n]* )* \"?\n\n|   ''' [^'\\\\]* (?:\n                   (?: \\\\. | '(?!'') )\n                   [^'\\\\]*\n                )*\n    (?: ''' )?\n\n|   ' [^'\\\\\\n]* (?: \\\\. [^'\\\\\\n]* )* '?\n")
(PUNCT ",")
(ID "re")
(PUNCT ".")
(ID "VERBOSE")
(PUNCT "|")
(ID "re")
(PUNCT ".")
(ID "DOTALL")
(PUNCT ")")
(PUNCT ".")
(ID "match")
(NEWLINE)
(ID "_itemre")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "\n    [ \\t]*\n    [^\\s#\\\\]    # if we match, m.end()-1 is the interesting char\n")
(PUNCT ",")
(ID "re")
(PUNCT ".")
(ID "VERBOSE")
(PUNCT ")")
(PUNCT ".")
(ID "match")
(NEWLINE)
(ID "_closere")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "\n    \\s*\n    (?: return\n    |   break\n    |   continue\n    |   raise\n    |   pass\n    )\n    \\b\n")
(PUNCT ",")
(ID "re")
(PUNCT ".")
(ID "VERBOSE")
(PUNCT ")")
(PUNCT ".")
(ID "match")
(NEWLINE)
(ID "_chew_ordinaryre")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "compile")
(PUNCT "(")
(LIT "\n    [^[\\](){}#'\"\\\\]+\n")
(PUNCT ",")
(ID "re")
(PUNCT ".")
(ID "VERBOSE")
(PUNCT ")")
(PUNCT ".")
(ID "match")
(NEWLINE)
(KEYWORD class)
(ID "StringTranslatePseudoMapping")
(PUNCT "(")
(ID "Mapping")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Utility class to be used with str.translate()\n\n    This Mapping class wraps a given dict. When a value for a key is\n    requested via __getitem__() or get(), the key is looked up in the\n    given dict. If found there, the value from the dict is returned.\n    Otherwise, the default value given upon initialization is returned.\n\n    This allows using str.translate() to make some replacements, and to\n    replace all characters for which no replacement was specified with\n    a given character instead of leaving them as-is.\n\n    For example, to replace everything except whitespace with 'x':\n\n    >>> whitespace_chars = ' \\t\\n\\r'\n    >>> preserve_dict = {ord(c): ord(c) for c in whitespace_chars}\n    >>> mapping = StringTranslatePseudoMapping(preserve_dict, ord('x'))\n    >>> text = \"a + b\\tc\\nd\"\n    >>> text.translate(mapping)\n    'x x x\\tx\\nx'\n    ")
(NEWLINE)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "non_defaults")
(PUNCT ",")
(ID "default_value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_non_defaults")
(PUNCT "=")
(ID "non_defaults")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "_default_value")
(PUNCT "=")
(ID "default_value")
(NEWLINE)
(KEYWORD def)
(ID "_get")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "_get")
(PUNCT "=")
(ID "non_defaults")
(PUNCT ".")
(ID "get")
(PUNCT ",")
(ID "_default")
(PUNCT "=")
(ID "default_value")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_get")
(PUNCT "(")
(ID "key")
(PUNCT ",")
(ID "_default")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_get")
(PUNCT "=")
(ID "_get")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__getitem__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "item")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_get")
(PUNCT "(")
(ID "item")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__len__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_non_defaults")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "__iter__")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "iter")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_non_defaults")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "key")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "_get")
(PUNCT "(")
(ID "key")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD class)
(ID "Parser")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD def)
(ID "__init__")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "indentwidth")
(PUNCT ",")
(ID "tabwidth")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(PUNCT "=")
(ID "indentwidth")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT "=")
(ID "tabwidth")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_str")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "len")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT "==")
(LIT 0)
(KEYWORD or)
(ID "s")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "\n")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "str")
(PUNCT "=")
(ID "s")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "study_level")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "find_good_parse_start")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "is_char_in_string")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "_synchre")
(PUNCT "=")
(ID "_synchre")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "str")
(PUNCT ",")
(ID "pos")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "str")
(PUNCT ",")
(KEYWORD None)
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "is_char_in_string")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "limit")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "str")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "tries")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(LIT 5)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "str")
(PUNCT ".")
(ID "rfind")
(PUNCT "(")
(LIT ":\n")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "limit")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "i")
(PUNCT "<")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "i")
(PUNCT "=")
(ID "str")
(PUNCT ".")
(ID "rfind")
(PUNCT "(")
(LIT "\n")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "i")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "m")
(PUNCT "=")
(ID "_synchre")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "limit")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "m")
(KEYWORD and)
(KEYWORD not)
(ID "is_char_in_string")
(PUNCT "(")
(ID "m")
(PUNCT ".")
(ID "start")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pos")
(PUNCT "=")
(ID "m")
(PUNCT ".")
(ID "start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(ID "limit")
(PUNCT "=")
(ID "i")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "pos")
(KEYWORD is)
(KEYWORD None)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT "=")
(ID "_synchre")
(PUNCT "(")
(ID "str")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "m")
(KEYWORD and)
(KEYWORD not)
(ID "is_char_in_string")
(PUNCT "(")
(ID "m")
(PUNCT ".")
(ID "start")
(PUNCT "(")
(PUNCT ")")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pos")
(PUNCT "=")
(ID "m")
(PUNCT ".")
(ID "start")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "pos")
(NEWLINE)
(DEDENT)
(ID "i")
(PUNCT "=")
(ID "pos")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD while)
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT "=")
(ID "_synchre")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "m")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "s")
(PUNCT ",")
(ID "i")
(PUNCT "=")
(ID "m")
(PUNCT ".")
(ID "span")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "is_char_in_string")
(PUNCT "(")
(ID "s")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pos")
(PUNCT "=")
(ID "s")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "pos")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "set_lo")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "lo")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "lo")
(PUNCT "==")
(LIT 0)
(KEYWORD or)
(ID "self")
(PUNCT ".")
(ID "str")
(PUNCT "[")
(ID "lo")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(LIT "\n")
(NEWLINE)
(KEYWORD if)
(ID "lo")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "str")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "str")
(PUNCT "[")
(ID "lo")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "_tran")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "_tran")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(PUNCT "(")
(ID "ord")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(LIT "(")
(PUNCT ")")
(PUNCT ")")
(KEYWORD for)
(ID "c")
(KEYWORD in)
(LIT "({[")
(PUNCT ")")
(NEWLINE)
(ID "_tran")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(PUNCT "(")
(ID "ord")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(LIT ")")
(PUNCT ")")
(PUNCT ")")
(KEYWORD for)
(ID "c")
(KEYWORD in)
(LIT ")}]")
(PUNCT ")")
(NEWLINE)
(ID "_tran")
(PUNCT ".")
(ID "update")
(PUNCT "(")
(PUNCT "(")
(ID "ord")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(PUNCT ",")
(ID "ord")
(PUNCT "(")
(ID "c")
(PUNCT ")")
(PUNCT ")")
(KEYWORD for)
(ID "c")
(KEYWORD in)
(LIT "\"'\\\n#")
(PUNCT ")")
(NEWLINE)
(ID "_tran")
(PUNCT "=")
(ID "StringTranslatePseudoMapping")
(PUNCT "(")
(ID "_tran")
(PUNCT ",")
(ID "default_value")
(PUNCT "=")
(ID "ord")
(PUNCT "(")
(LIT "x")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD def)
(ID "_study1")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "study_level")
(PUNCT ">=")
(LIT 1)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "study_level")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "str")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "str")
(NEWLINE)
(ID "str")
(PUNCT "=")
(ID "str")
(PUNCT ".")
(ID "translate")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "_tran")
(PUNCT ")")
(NEWLINE)
(ID "str")
(PUNCT "=")
(ID "str")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "xxxxxxxx")
(PUNCT ",")
(LIT "x")
(PUNCT ")")
(NEWLINE)
(ID "str")
(PUNCT "=")
(ID "str")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "xxxx")
(PUNCT ",")
(LIT "x")
(PUNCT ")")
(NEWLINE)
(ID "str")
(PUNCT "=")
(ID "str")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "xx")
(PUNCT ",")
(LIT "x")
(PUNCT ")")
(NEWLINE)
(ID "str")
(PUNCT "=")
(ID "str")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "xx")
(PUNCT ",")
(LIT "x")
(PUNCT ")")
(NEWLINE)
(ID "str")
(PUNCT "=")
(ID "str")
(PUNCT ".")
(ID "replace")
(PUNCT "(")
(LIT "\nx")
(PUNCT ",")
(LIT "\n")
(PUNCT ")")
(NEWLINE)
(ID "continuation")
(PUNCT "=")
(ID "C_NONE")
(NEWLINE)
(ID "level")
(PUNCT "=")
(ID "lno")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "goodlines")
(PUNCT "=")
(ID "goodlines")
(PUNCT "=")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "push_good")
(PUNCT "=")
(ID "goodlines")
(PUNCT ".")
(ID "append")
(NEWLINE)
(ID "i")
(PUNCT ",")
(ID "n")
(PUNCT "=")
(LIT 0)
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "str")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "i")
(PUNCT "<")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ch")
(PUNCT "=")
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "ch")
(PUNCT "==")
(LIT "x")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "ch")
(PUNCT "==")
(LIT "\n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lno")
(PUNCT "=")
(ID "lno")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "level")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push_good")
(PUNCT "(")
(ID "lno")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "ch")
(PUNCT "==")
(LIT "(")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "level")
(PUNCT "=")
(ID "level")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "ch")
(PUNCT "==")
(LIT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "level")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "level")
(PUNCT "=")
(ID "level")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "ch")
(PUNCT "==")
(LIT "\"")
(KEYWORD or)
(ID "ch")
(PUNCT "==")
(LIT "'")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "quote")
(PUNCT "=")
(ID "ch")
(NEWLINE)
(KEYWORD if)
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(ID "i")
(PUNCT "+")
(LIT 2)
(PUNCT "]")
(PUNCT "==")
(ID "quote")
(PUNCT "*")
(LIT 3)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "quote")
(PUNCT "=")
(ID "quote")
(PUNCT "*")
(LIT 3)
(NEWLINE)
(DEDENT)
(ID "firstlno")
(PUNCT "=")
(ID "lno")
(NEWLINE)
(ID "w")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "quote")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(ID "w")
(NEWLINE)
(KEYWORD while)
(ID "i")
(PUNCT "<")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ch")
(PUNCT "=")
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "ch")
(PUNCT "==")
(LIT "x")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT "-")
(LIT 1)
(PUNCT ":")
(ID "i")
(PUNCT "+")
(ID "w")
(PUNCT "]")
(PUNCT "==")
(ID "quote")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(ID "w")
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "ch")
(PUNCT "==")
(LIT "\n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lno")
(PUNCT "=")
(ID "lno")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "w")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "level")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push_good")
(PUNCT "(")
(ID "lno")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "ch")
(PUNCT "==")
(LIT "\\")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "i")
(PUNCT "<")
(ID "n")
(NEWLINE)
(KEYWORD if)
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT "==")
(LIT "\n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lno")
(PUNCT "=")
(ID "lno")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(PUNCT "(")
(ID "lno")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT "==")
(ID "firstlno")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "continuation")
(PUNCT "=")
(ID "C_STRING_FIRST_LINE")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "continuation")
(PUNCT "=")
(ID "C_STRING_NEXT_LINES")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "ch")
(PUNCT "==")
(LIT "#")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "str")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT "\n")
(PUNCT ",")
(ID "i")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "i")
(PUNCT ">=")
(LIT 0)
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD assert)
(ID "ch")
(PUNCT "==")
(LIT "\\")
(NEWLINE)
(KEYWORD assert)
(ID "i")
(PUNCT "<")
(ID "n")
(NEWLINE)
(KEYWORD if)
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT "==")
(LIT "\n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lno")
(PUNCT "=")
(ID "lno")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD if)
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT "==")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "continuation")
(PUNCT "=")
(ID "C_BACKSLASH")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(PUNCT "(")
(ID "continuation")
(PUNCT "!=")
(ID "C_STRING_FIRST_LINE")
(KEYWORD and)
(ID "continuation")
(PUNCT "!=")
(ID "C_STRING_NEXT_LINES")
(KEYWORD and)
(ID "level")
(PUNCT ">")
(LIT 0)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "continuation")
(PUNCT "=")
(ID "C_BRACKET")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "continuation")
(PUNCT "=")
(ID "continuation")
(NEWLINE)
(KEYWORD assert)
(PUNCT "(")
(ID "continuation")
(PUNCT "==")
(ID "C_NONE")
(PUNCT ")")
(PUNCT "==")
(PUNCT "(")
(ID "goodlines")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "==")
(ID "lno")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "goodlines")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "!=")
(ID "lno")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push_good")
(PUNCT "(")
(ID "lno")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "get_continuation_type")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_study1")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "continuation")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_study2")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "self")
(PUNCT ".")
(ID "study_level")
(PUNCT ">=")
(LIT 2)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "_study1")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "study_level")
(PUNCT "=")
(LIT 2)
(NEWLINE)
(ID "str")
(PUNCT ",")
(ID "goodlines")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "str")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "goodlines")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "goodlines")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(ID "p")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "str")
(PUNCT ")")
(NEWLINE)
(KEYWORD while)
(ID "i")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "p")
(NEWLINE)
(ID "q")
(PUNCT "=")
(ID "p")
(NEWLINE)
(KEYWORD for)
(ID "nothing")
(KEYWORD in)
(ID "range")
(PUNCT "(")
(ID "goodlines")
(PUNCT "[")
(ID "i")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT ",")
(ID "goodlines")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "p")
(PUNCT "=")
(ID "str")
(PUNCT ".")
(ID "rfind")
(PUNCT "(")
(LIT "\n")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "p")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "_junkre")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "p")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "i")
(PUNCT "==")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD assert)
(ID "p")
(PUNCT "==")
(LIT 0)
(NEWLINE)
(ID "q")
(PUNCT "=")
(ID "p")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "stmt_start")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "stmt_end")
(PUNCT "=")
(ID "p")
(PUNCT ",")
(ID "q")
(NEWLINE)
(ID "lastch")
(PUNCT "=")
(LIT "")
(NEWLINE)
(ID "stack")
(PUNCT "=")
(PUNCT "[")
(PUNCT "]")
(NEWLINE)
(ID "push_stack")
(PUNCT "=")
(ID "stack")
(PUNCT ".")
(ID "append")
(NEWLINE)
(ID "bracketing")
(PUNCT "=")
(PUNCT "[")
(PUNCT "(")
(ID "p")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(ID "p")
(PUNCT "<")
(ID "q")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT "=")
(ID "_chew_ordinaryre")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "p")
(PUNCT ",")
(ID "q")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "m")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "newp")
(PUNCT "=")
(ID "m")
(PUNCT ".")
(ID "end")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "newp")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(KEYWORD while)
(ID "i")
(PUNCT ">=")
(ID "p")
(KEYWORD and)
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(KEYWORD in)
(LIT " \t\n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "i")
(PUNCT ">=")
(ID "p")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lastch")
(PUNCT "=")
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "p")
(PUNCT "=")
(ID "newp")
(NEWLINE)
(KEYWORD if)
(ID "p")
(PUNCT ">=")
(ID "q")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "ch")
(PUNCT "=")
(ID "str")
(PUNCT "[")
(ID "p")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "ch")
(KEYWORD in)
(LIT "([{")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "push_stack")
(PUNCT "(")
(ID "p")
(PUNCT ")")
(NEWLINE)
(ID "bracketing")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "p")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "stack")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "lastch")
(PUNCT "=")
(ID "ch")
(NEWLINE)
(ID "p")
(PUNCT "=")
(ID "p")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "ch")
(KEYWORD in)
(LIT ")]}")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "stack")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD del)
(ID "stack")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "lastch")
(PUNCT "=")
(ID "ch")
(NEWLINE)
(ID "p")
(PUNCT "=")
(ID "p")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "bracketing")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "p")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "stack")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "ch")
(PUNCT "==")
(LIT "\"")
(KEYWORD or)
(ID "ch")
(PUNCT "==")
(LIT "'")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bracketing")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "p")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "stack")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "lastch")
(PUNCT "=")
(ID "ch")
(NEWLINE)
(ID "p")
(PUNCT "=")
(ID "_match_stringre")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "p")
(PUNCT ",")
(ID "q")
(PUNCT ")")
(PUNCT ".")
(ID "end")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "bracketing")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "p")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "stack")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "ch")
(PUNCT "==")
(LIT "#")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "bracketing")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "p")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "stack")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(ID "p")
(PUNCT "=")
(ID "str")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT "\n")
(PUNCT ",")
(ID "p")
(PUNCT ",")
(ID "q")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD assert)
(ID "p")
(PUNCT ">")
(LIT 0)
(NEWLINE)
(ID "bracketing")
(PUNCT ".")
(ID "append")
(PUNCT "(")
(PUNCT "(")
(ID "p")
(PUNCT ",")
(ID "len")
(PUNCT "(")
(ID "stack")
(PUNCT ")")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD assert)
(ID "ch")
(PUNCT "==")
(LIT "\\")
(NEWLINE)
(ID "p")
(PUNCT "=")
(ID "p")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD assert)
(ID "p")
(PUNCT "<")
(ID "q")
(NEWLINE)
(KEYWORD if)
(ID "str")
(PUNCT "[")
(ID "p")
(PUNCT "]")
(PUNCT "!=")
(LIT "\n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "lastch")
(PUNCT "=")
(ID "ch")
(PUNCT "+")
(ID "str")
(PUNCT "[")
(ID "p")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "p")
(PUNCT "=")
(ID "p")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "lastch")
(PUNCT "=")
(ID "lastch")
(NEWLINE)
(KEYWORD if)
(ID "stack")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "lastopenbracketpos")
(PUNCT "=")
(ID "stack")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "self")
(PUNCT ".")
(ID "stmt_bracketing")
(PUNCT "=")
(ID "tuple")
(PUNCT "(")
(ID "bracketing")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "compute_bracket_indent")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_study2")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "self")
(PUNCT ".")
(ID "continuation")
(PUNCT "==")
(ID "C_BRACKET")
(NEWLINE)
(ID "j")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "lastopenbracketpos")
(NEWLINE)
(ID "str")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "str")
(NEWLINE)
(ID "n")
(PUNCT "=")
(ID "len")
(PUNCT "(")
(ID "str")
(PUNCT ")")
(NEWLINE)
(ID "origi")
(PUNCT "=")
(ID "i")
(PUNCT "=")
(ID "str")
(PUNCT ".")
(ID "rfind")
(PUNCT "(")
(LIT "\n")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "j")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "j")
(PUNCT "=")
(ID "j")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(KEYWORD while)
(ID "j")
(PUNCT "<")
(ID "n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "m")
(PUNCT "=")
(ID "_itemre")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "j")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "m")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "j")
(PUNCT "=")
(ID "m")
(PUNCT ".")
(ID "end")
(PUNCT "(")
(PUNCT ")")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(ID "extra")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "j")
(PUNCT "=")
(ID "str")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT "\n")
(PUNCT ",")
(ID "j")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "j")
(PUNCT "=")
(ID "i")
(PUNCT "=")
(ID "origi")
(NEWLINE)
(KEYWORD while)
(ID "str")
(PUNCT "[")
(ID "j")
(PUNCT "]")
(KEYWORD in)
(LIT " \t")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "j")
(PUNCT "=")
(ID "j")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "extra")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "indentwidth")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "j")
(PUNCT "]")
(PUNCT ".")
(ID "expandtabs")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT ")")
(PUNCT ")")
(PUNCT "+")
(ID "extra")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_num_lines_in_stmt")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_study1")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "goodlines")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "goodlines")
(NEWLINE)
(KEYWORD return)
(ID "goodlines")
(PUNCT "[")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(PUNCT "-")
(ID "goodlines")
(PUNCT "[")
(PUNCT "-")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "compute_backslash_indent")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_study2")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD assert)
(ID "self")
(PUNCT ".")
(ID "continuation")
(PUNCT "==")
(ID "C_BACKSLASH")
(NEWLINE)
(ID "str")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "str")
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stmt_start")
(NEWLINE)
(KEYWORD while)
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(KEYWORD in)
(LIT " \t")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "startpos")
(PUNCT "=")
(ID "i")
(NEWLINE)
(ID "endpos")
(PUNCT "=")
(ID "str")
(PUNCT ".")
(ID "find")
(PUNCT "(")
(LIT "\n")
(PUNCT ",")
(ID "startpos")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "found")
(PUNCT "=")
(ID "level")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD while)
(ID "i")
(PUNCT "<")
(ID "endpos")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ch")
(PUNCT "=")
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(NEWLINE)
(KEYWORD if)
(ID "ch")
(KEYWORD in)
(LIT "([{")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "level")
(PUNCT "=")
(ID "level")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "ch")
(KEYWORD in)
(LIT ")]}")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "level")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "level")
(PUNCT "=")
(ID "level")
(PUNCT "-")
(LIT 1)
(NEWLINE)
(DEDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "ch")
(PUNCT "==")
(LIT "\"")
(KEYWORD or)
(ID "ch")
(PUNCT "==")
(LIT "'")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "_match_stringre")
(PUNCT "(")
(ID "str")
(PUNCT ",")
(ID "i")
(PUNCT ",")
(ID "endpos")
(PUNCT ")")
(PUNCT ".")
(ID "end")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "ch")
(PUNCT "==")
(LIT "#")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD elif)
(ID "level")
(PUNCT "==")
(LIT 0)
(KEYWORD and)
(ID "ch")
(PUNCT "==")
(LIT "=")
(KEYWORD and)
(PUNCT "(")
(ID "i")
(PUNCT "==")
(LIT 0)
(KEYWORD or)
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT "-")
(LIT 1)
(PUNCT "]")
(KEYWORD not)
(KEYWORD in)
(LIT "=<>!")
(PUNCT ")")
(KEYWORD and)
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT "+")
(LIT 1)
(PUNCT "]")
(PUNCT "!=")
(LIT "=")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "found")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(KEYWORD break)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "found")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(ID "found")
(PUNCT "=")
(ID "re")
(PUNCT ".")
(ID "match")
(PUNCT "(")
(LIT "\\s*\\\\")
(PUNCT ",")
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "endpos")
(PUNCT "]")
(PUNCT ")")
(KEYWORD is)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(KEYWORD if)
(KEYWORD not)
(ID "found")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "startpos")
(NEWLINE)
(KEYWORD while)
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT "]")
(KEYWORD not)
(KEYWORD in)
(LIT " \t\n")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "i")
(PUNCT "=")
(ID "i")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "len")
(PUNCT "(")
(ID "str")
(PUNCT "[")
(ID "self")
(PUNCT ".")
(ID "stmt_start")
(PUNCT ":")
(ID "i")
(PUNCT "]")
(PUNCT ".")
(ID "expandtabs")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "tabwidth")
(PUNCT ")")
(PUNCT ")")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "get_base_indent_string")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_study2")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "i")
(PUNCT ",")
(ID "n")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "stmt_start")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "stmt_end")
(NEWLINE)
(ID "j")
(PUNCT "=")
(ID "i")
(NEWLINE)
(ID "str")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "str")
(NEWLINE)
(KEYWORD while)
(ID "j")
(PUNCT "<")
(ID "n")
(KEYWORD and)
(ID "str")
(PUNCT "[")
(ID "j")
(PUNCT "]")
(KEYWORD in)
(LIT " \t")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "j")
(PUNCT "=")
(ID "j")
(PUNCT "+")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "str")
(PUNCT "[")
(ID "i")
(PUNCT ":")
(ID "j")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_block_opener")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_study2")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "lastch")
(PUNCT "==")
(LIT ":")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "is_block_closer")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_study2")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "_closere")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "str")
(PUNCT ",")
(ID "self")
(PUNCT ".")
(ID "stmt_start")
(PUNCT ")")
(KEYWORD is)
(KEYWORD not)
(KEYWORD None)
(NEWLINE)
(DEDENT)
(ID "lastopenbracketpos")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "get_last_open_bracket_pos")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_study2")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "lastopenbracketpos")
(NEWLINE)
(DEDENT)
(ID "stmt_bracketing")
(PUNCT "=")
(KEYWORD None)
(NEWLINE)
(KEYWORD def)
(ID "get_last_stmt_bracketing")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "_study2")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "stmt_bracketing")
(NEWLINE)
(DEDENT)
(DEDENT)
(ENDMARKER)
