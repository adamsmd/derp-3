(LIT "Pseudo terminal utilities.")
(NEWLINE)
(KEYWORD from)
(ID "select")
(KEYWORD import)
(ID "select")
(NEWLINE)
(KEYWORD import)
(ID "os")
(NEWLINE)
(KEYWORD import)
(ID "tty")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "openpty")
(PUNCT ",")
(LIT "fork")
(PUNCT ",")
(LIT "spawn")
(PUNCT "]")
(NEWLINE)
(ID "STDIN_FILENO")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(ID "STDOUT_FILENO")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(ID "STDERR_FILENO")
(PUNCT "=")
(LIT 2)
(NEWLINE)
(ID "CHILD")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(KEYWORD def)
(ID "openpty")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "openpty() -> (master_fd, slave_fd)\n    Open a pty master/slave pair, using os.openpty() if possible.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "openpty")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "AttributeError")
(PUNCT ",")
(ID "OSError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(ID "master_fd")
(PUNCT ",")
(ID "slave_name")
(PUNCT "=")
(ID "_open_terminal")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "slave_fd")
(PUNCT "=")
(ID "slave_open")
(PUNCT "(")
(ID "slave_name")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "master_fd")
(PUNCT ",")
(ID "slave_fd")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "master_open")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "master_open() -> (master_fd, slave_name)\n    Open a pty master and return the fd, and the filename of the slave end.\n    Deprecated, use openpty() instead.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "master_fd")
(PUNCT ",")
(ID "slave_fd")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "openpty")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "AttributeError")
(PUNCT ",")
(ID "OSError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "slave_name")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "ttyname")
(PUNCT "(")
(ID "slave_fd")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(ID "slave_fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "master_fd")
(PUNCT ",")
(ID "slave_name")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "_open_terminal")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_open_terminal")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Open pty master and return (master_fd, tty_name).")
(NEWLINE)
(KEYWORD for)
(ID "x")
(KEYWORD in)
(LIT "pqrstuvwxyzPQRST")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD for)
(ID "y")
(KEYWORD in)
(LIT "0123456789abcdef")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pty_name")
(PUNCT "=")
(LIT "/dev/pty")
(PUNCT "+")
(ID "x")
(PUNCT "+")
(ID "y")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fd")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "pty_name")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "O_RDWR")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(LIT "/dev/tty")
(PUNCT "+")
(ID "x")
(PUNCT "+")
(ID "y")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD raise)
(ID "OSError")
(PUNCT "(")
(LIT "out of pty devices")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "slave_open")
(PUNCT "(")
(ID "tty_name")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "slave_open(tty_name) -> slave_fd\n    Open the pty slave and acquire the controlling terminal, returning\n    opened filedescriptor.\n    Deprecated, use openpty() instead.")
(NEWLINE)
(ID "result")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "tty_name")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "O_RDWR")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD from)
(ID "fcntl")
(KEYWORD import)
(ID "ioctl")
(PUNCT ",")
(ID "I_PUSH")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "ImportError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "ioctl")
(PUNCT "(")
(ID "result")
(PUNCT ",")
(ID "I_PUSH")
(PUNCT ",")
(LIT "ptem")
(PUNCT ")")
(NEWLINE)
(ID "ioctl")
(PUNCT "(")
(ID "result")
(PUNCT ",")
(ID "I_PUSH")
(PUNCT ",")
(LIT "ldterm")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "result")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "fork")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "fork() -> (pid, master_fd)\n    Fork and make the child a session leader with a controlling terminal.")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "pid")
(PUNCT ",")
(ID "fd")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "forkpty")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(PUNCT "(")
(ID "AttributeError")
(PUNCT ",")
(ID "OSError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "pid")
(PUNCT "==")
(ID "CHILD")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "setsid")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD return)
(ID "pid")
(PUNCT ",")
(ID "fd")
(NEWLINE)
(DEDENT)
(ID "master_fd")
(PUNCT ",")
(ID "slave_fd")
(PUNCT "=")
(ID "openpty")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "pid")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "fork")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "pid")
(PUNCT "==")
(ID "CHILD")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "setsid")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(ID "master_fd")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "dup2")
(PUNCT "(")
(ID "slave_fd")
(PUNCT ",")
(ID "STDIN_FILENO")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "dup2")
(PUNCT "(")
(ID "slave_fd")
(PUNCT ",")
(ID "STDOUT_FILENO")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "dup2")
(PUNCT "(")
(ID "slave_fd")
(PUNCT ",")
(ID "STDERR_FILENO")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(PUNCT "(")
(ID "slave_fd")
(PUNCT ">")
(ID "STDERR_FILENO")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(ID "slave_fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "tmp_fd")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "open")
(PUNCT "(")
(ID "os")
(PUNCT ".")
(ID "ttyname")
(PUNCT "(")
(ID "STDOUT_FILENO")
(PUNCT ")")
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "O_RDWR")
(PUNCT ")")
(NEWLINE)
(ID "os")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(ID "tmp_fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(ID "slave_fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "pid")
(PUNCT ",")
(ID "master_fd")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_writen")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Write all the data to a descriptor.")
(NEWLINE)
(KEYWORD while)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "n")
(PUNCT "=")
(ID "os")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(NEWLINE)
(ID "data")
(PUNCT "=")
(ID "data")
(PUNCT "[")
(ID "n")
(PUNCT ":")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "_read")
(PUNCT "(")
(ID "fd")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Default read function.")
(NEWLINE)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(ID "fd")
(PUNCT ",")
(LIT 1024)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "_copy")
(PUNCT "(")
(ID "master_fd")
(PUNCT ",")
(ID "master_read")
(PUNCT "=")
(ID "_read")
(PUNCT ",")
(ID "stdin_read")
(PUNCT "=")
(ID "_read")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Parent copy loop.\n    Copies\n            pty master -> standard output   (master_read)\n            standard input -> pty master    (stdin_read)")
(NEWLINE)
(ID "fds")
(PUNCT "=")
(PUNCT "[")
(ID "master_fd")
(PUNCT ",")
(ID "STDIN_FILENO")
(PUNCT "]")
(NEWLINE)
(KEYWORD while)
(KEYWORD True)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "rfds")
(PUNCT ",")
(ID "wfds")
(PUNCT ",")
(ID "xfds")
(PUNCT "=")
(ID "select")
(PUNCT "(")
(ID "fds")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ",")
(PUNCT "[")
(PUNCT "]")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "master_fd")
(KEYWORD in)
(ID "rfds")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "master_read")
(PUNCT "(")
(ID "master_fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fds")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "master_fd")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "write")
(PUNCT "(")
(ID "STDOUT_FILENO")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD if)
(ID "STDIN_FILENO")
(KEYWORD in)
(ID "rfds")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "data")
(PUNCT "=")
(ID "stdin_read")
(PUNCT "(")
(ID "STDIN_FILENO")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "data")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "fds")
(PUNCT ".")
(ID "remove")
(PUNCT "(")
(ID "STDIN_FILENO")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_writen")
(PUNCT "(")
(ID "master_fd")
(PUNCT ",")
(ID "data")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "spawn")
(PUNCT "(")
(ID "argv")
(PUNCT ",")
(ID "master_read")
(PUNCT "=")
(ID "_read")
(PUNCT ",")
(ID "stdin_read")
(PUNCT "=")
(ID "_read")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Create a spawned process.")
(NEWLINE)
(KEYWORD if)
(ID "type")
(PUNCT "(")
(ID "argv")
(PUNCT ")")
(PUNCT "==")
(ID "type")
(PUNCT "(")
(LIT "")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "argv")
(PUNCT "=")
(PUNCT "(")
(ID "argv")
(PUNCT ",")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "pid")
(PUNCT ",")
(ID "master_fd")
(PUNCT "=")
(ID "fork")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(ID "pid")
(PUNCT "==")
(ID "CHILD")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "os")
(PUNCT ".")
(ID "execlp")
(PUNCT "(")
(ID "argv")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(PUNCT ",")
(PUNCT "*")
(ID "argv")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "mode")
(PUNCT "=")
(ID "tty")
(PUNCT ".")
(ID "tcgetattr")
(PUNCT "(")
(ID "STDIN_FILENO")
(PUNCT ")")
(NEWLINE)
(ID "tty")
(PUNCT ".")
(ID "setraw")
(PUNCT "(")
(ID "STDIN_FILENO")
(PUNCT ")")
(NEWLINE)
(ID "restore")
(PUNCT "=")
(LIT 1)
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "tty")
(PUNCT ".")
(ID "error")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "restore")
(PUNCT "=")
(LIT 0)
(NEWLINE)
(DEDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "_copy")
(PUNCT "(")
(ID "master_fd")
(PUNCT ",")
(ID "master_read")
(PUNCT ",")
(ID "stdin_read")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "OSError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "restore")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "tty")
(PUNCT ".")
(ID "tcsetattr")
(PUNCT "(")
(ID "STDIN_FILENO")
(PUNCT ",")
(ID "tty")
(PUNCT ".")
(ID "TCSAFLUSH")
(PUNCT ",")
(ID "mode")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(ID "os")
(PUNCT ".")
(ID "close")
(PUNCT "(")
(ID "master_fd")
(PUNCT ")")
(NEWLINE)
(KEYWORD return)
(ID "os")
(PUNCT ".")
(ID "waitpid")
(PUNCT "(")
(ID "pid")
(PUNCT ",")
(LIT 0)
(PUNCT ")")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ENDMARKER)
