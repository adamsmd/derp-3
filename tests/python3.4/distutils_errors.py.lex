(LIT "distutils.errors\n\nProvides exceptions used by the Distutils modules.  Note that Distutils\nmodules may raise standard exceptions; in particular, SystemExit is\nusually raised for errors that are obviously the end-user's fault\n(eg. bad command-line arguments).\n\nThis module is safe to use in \"from ... import *\" mode; it only exports\nsymbols whose names start with \"Distutils\" and end with \"Error\".")
(NEWLINE)
(KEYWORD class)
(ID "DistutilsError")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "The root of all Distutils evil.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "DistutilsModuleError")
(PUNCT "(")
(ID "DistutilsError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Unable to load an expected module, or to find an expected class\n    within some module (in particular, command modules and classes).")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "DistutilsClassError")
(PUNCT "(")
(ID "DistutilsError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Some command class (or possibly distribution class, if anyone\n    feels a need to subclass Distribution) is found not to be holding\n    up its end of the bargain, ie. implementing some part of the\n    \"command \"interface.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "DistutilsGetoptError")
(PUNCT "(")
(ID "DistutilsError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "The option table provided to 'fancy_getopt()' is bogus.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "DistutilsArgError")
(PUNCT "(")
(ID "DistutilsError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Raised by fancy_getopt in response to getopt.error -- ie. an\n    error in the command line usage.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "DistutilsFileError")
(PUNCT "(")
(ID "DistutilsError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Any problems in the filesystem: expected file not found, etc.\n    Typically this is for problems that we detect before OSError\n    could be raised.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "DistutilsOptionError")
(PUNCT "(")
(ID "DistutilsError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Syntactic/semantic errors in command options, such as use of\n    mutually conflicting options, or inconsistent options,\n    badly-spelled values, etc.  No distinction is made between option\n    values originating in the setup script, the command line, config\n    files, or what-have-you -- but if we *know* something originated in\n    the setup script, we'll raise DistutilsSetupError instead.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "DistutilsSetupError")
(PUNCT "(")
(ID "DistutilsError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "For errors that can be definitely blamed on the setup script,\n    such as invalid keyword arguments to 'setup()'.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "DistutilsPlatformError")
(PUNCT "(")
(ID "DistutilsError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "We don't know how to do something on the current platform (but\n    we do know how to do it on some platform) -- eg. trying to compile\n    C files on a platform not supported by a CCompiler subclass.")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "DistutilsExecError")
(PUNCT "(")
(ID "DistutilsError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Any problems executing an external program (such as the C\n    compiler, when compiling C files).")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "DistutilsInternalError")
(PUNCT "(")
(ID "DistutilsError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Internal inconsistencies or impossibilities (obviously, this\n    should never be seen if the code is working!).")
(NEWLINE)
(KEYWORD pass)
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "DistutilsTemplateError")
(PUNCT "(")
(ID "DistutilsError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Syntax error in a file list template.")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "DistutilsByteCompileError")
(PUNCT "(")
(ID "DistutilsError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Byte compile error.")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "CCompilerError")
(PUNCT "(")
(ID "Exception")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Some compile/link operation failed.")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "PreprocessError")
(PUNCT "(")
(ID "CCompilerError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Failure to preprocess one or more C/C++ files.")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "CompileError")
(PUNCT "(")
(ID "CCompilerError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Failure to compile one or more C/C++ source files.")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "LibError")
(PUNCT "(")
(ID "CCompilerError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Failure to create a static library from one or more C/C++ object\n    files.")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "LinkError")
(PUNCT "(")
(ID "CCompilerError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Failure to link one or more C/C++ object files into an executable\n    or shared library file.")
(NEWLINE)
(DEDENT)
(KEYWORD class)
(ID "UnknownFileError")
(PUNCT "(")
(ID "CCompilerError")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Attempt to process an unknown file type.")
(NEWLINE)
(DEDENT)
(ENDMARKER)
