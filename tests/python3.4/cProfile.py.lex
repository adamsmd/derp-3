(LIT "Python interface for the 'lsprof' profiler.\n   Compatible with the 'profile' module.\n")
(NEWLINE)
(ID "__all__")
(PUNCT "=")
(PUNCT "[")
(LIT "run")
(PUNCT ",")
(LIT "runctx")
(PUNCT ",")
(LIT "Profile")
(PUNCT "]")
(NEWLINE)
(KEYWORD import)
(ID "_lsprof")
(NEWLINE)
(KEYWORD import)
(ID "profile")
(KEYWORD as)
(ID "_pyprofile")
(NEWLINE)
(KEYWORD def)
(ID "run")
(PUNCT "(")
(ID "statement")
(PUNCT ",")
(ID "filename")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "sort")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_pyprofile")
(PUNCT ".")
(ID "_Utils")
(PUNCT "(")
(ID "Profile")
(PUNCT ")")
(PUNCT ".")
(ID "run")
(PUNCT "(")
(ID "statement")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "sort")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "runctx")
(PUNCT "(")
(ID "statement")
(PUNCT ",")
(ID "globals")
(PUNCT ",")
(ID "locals")
(PUNCT ",")
(ID "filename")
(PUNCT "=")
(KEYWORD None)
(PUNCT ",")
(ID "sort")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "_pyprofile")
(PUNCT ".")
(ID "_Utils")
(PUNCT "(")
(ID "Profile")
(PUNCT ")")
(PUNCT ".")
(ID "runctx")
(PUNCT "(")
(ID "statement")
(PUNCT ",")
(ID "globals")
(PUNCT ",")
(ID "locals")
(PUNCT ",")
(ID "filename")
(PUNCT ",")
(ID "sort")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "run")
(PUNCT ".")
(ID "__doc__")
(PUNCT "=")
(ID "_pyprofile")
(PUNCT ".")
(ID "run")
(PUNCT ".")
(ID "__doc__")
(NEWLINE)
(ID "runctx")
(PUNCT ".")
(ID "__doc__")
(PUNCT "=")
(ID "_pyprofile")
(PUNCT ".")
(ID "runctx")
(PUNCT ".")
(ID "__doc__")
(NEWLINE)
(KEYWORD class)
(ID "Profile")
(PUNCT "(")
(ID "_lsprof")
(PUNCT ".")
(ID "Profiler")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(LIT "Profile(custom_timer=None, time_unit=None, subcalls=True, builtins=True)\n\n    Builds a profiler object using the specified timer function.\n    The default timer is a fast built-in one based on real time.\n    For custom timer functions returning integers, time_unit can\n    be a float specifying a scale (i.e. how long each integer unit\n    is, in seconds).\n    ")
(NEWLINE)
(KEYWORD def)
(ID "print_stats")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "sort")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "pstats")
(NEWLINE)
(ID "pstats")
(PUNCT ".")
(ID "Stats")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ".")
(ID "strip_dirs")
(PUNCT "(")
(PUNCT ")")
(PUNCT ".")
(ID "sort_stats")
(PUNCT "(")
(ID "sort")
(PUNCT ")")
(PUNCT ".")
(ID "print_stats")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "dump_stats")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "file")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "marshal")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "file")
(PUNCT ",")
(LIT "wb")
(PUNCT ")")
(KEYWORD as)
(ID "f")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "create_stats")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "marshal")
(PUNCT ".")
(ID "dump")
(PUNCT "(")
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT ",")
(ID "f")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "create_stats")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "disable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "snapshot_stats")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "snapshot_stats")
(PUNCT "(")
(ID "self")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "entries")
(PUNCT "=")
(ID "self")
(PUNCT ".")
(ID "getstats")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "callersdicts")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "entries")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "func")
(PUNCT "=")
(ID "label")
(PUNCT "(")
(ID "entry")
(PUNCT ".")
(ID "code")
(PUNCT ")")
(NEWLINE)
(ID "nc")
(PUNCT "=")
(ID "entry")
(PUNCT ".")
(ID "callcount")
(NEWLINE)
(ID "cc")
(PUNCT "=")
(ID "nc")
(PUNCT "-")
(ID "entry")
(PUNCT ".")
(ID "reccallcount")
(NEWLINE)
(ID "tt")
(PUNCT "=")
(ID "entry")
(PUNCT ".")
(ID "inlinetime")
(NEWLINE)
(ID "ct")
(PUNCT "=")
(ID "entry")
(PUNCT ".")
(ID "totaltime")
(NEWLINE)
(ID "callers")
(PUNCT "=")
(PUNCT "{")
(PUNCT "}")
(NEWLINE)
(ID "callersdicts")
(PUNCT "[")
(ID "id")
(PUNCT "(")
(ID "entry")
(PUNCT ".")
(ID "code")
(PUNCT ")")
(PUNCT "]")
(PUNCT "=")
(ID "callers")
(NEWLINE)
(ID "self")
(PUNCT ".")
(ID "stats")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(PUNCT "=")
(ID "cc")
(PUNCT ",")
(ID "nc")
(PUNCT ",")
(ID "tt")
(PUNCT ",")
(ID "ct")
(PUNCT ",")
(ID "callers")
(NEWLINE)
(DEDENT)
(KEYWORD for)
(ID "entry")
(KEYWORD in)
(ID "entries")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "entry")
(PUNCT ".")
(ID "calls")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "func")
(PUNCT "=")
(ID "label")
(PUNCT "(")
(ID "entry")
(PUNCT ".")
(ID "code")
(PUNCT ")")
(NEWLINE)
(KEYWORD for)
(ID "subentry")
(KEYWORD in)
(ID "entry")
(PUNCT ".")
(ID "calls")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "callers")
(PUNCT "=")
(ID "callersdicts")
(PUNCT "[")
(ID "id")
(PUNCT "(")
(ID "subentry")
(PUNCT ".")
(ID "code")
(PUNCT ")")
(PUNCT "]")
(NEWLINE)
(DEDENT)
(KEYWORD except)
(ID "KeyError")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD continue)
(NEWLINE)
(DEDENT)
(ID "nc")
(PUNCT "=")
(ID "subentry")
(PUNCT ".")
(ID "callcount")
(NEWLINE)
(ID "cc")
(PUNCT "=")
(ID "nc")
(PUNCT "-")
(ID "subentry")
(PUNCT ".")
(ID "reccallcount")
(NEWLINE)
(ID "tt")
(PUNCT "=")
(ID "subentry")
(PUNCT ".")
(ID "inlinetime")
(NEWLINE)
(ID "ct")
(PUNCT "=")
(ID "subentry")
(PUNCT ".")
(ID "totaltime")
(NEWLINE)
(KEYWORD if)
(ID "func")
(KEYWORD in)
(ID "callers")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "prev")
(PUNCT "=")
(ID "callers")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(NEWLINE)
(ID "nc")
(PUNCT "+=")
(ID "prev")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "cc")
(PUNCT "+=")
(ID "prev")
(PUNCT "[")
(LIT 1)
(PUNCT "]")
(NEWLINE)
(ID "tt")
(PUNCT "+=")
(ID "prev")
(PUNCT "[")
(LIT 2)
(PUNCT "]")
(NEWLINE)
(ID "ct")
(PUNCT "+=")
(ID "prev")
(PUNCT "[")
(LIT 3)
(PUNCT "]")
(NEWLINE)
(DEDENT)
(ID "callers")
(PUNCT "[")
(ID "func")
(PUNCT "]")
(PUNCT "=")
(ID "nc")
(PUNCT ",")
(ID "cc")
(PUNCT ",")
(ID "tt")
(PUNCT ",")
(ID "ct")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "run")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cmd")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "__main__")
(NEWLINE)
(ID "dict")
(PUNCT "=")
(ID "__main__")
(PUNCT ".")
(ID "__dict__")
(NEWLINE)
(KEYWORD return)
(ID "self")
(PUNCT ".")
(ID "runctx")
(PUNCT "(")
(ID "cmd")
(PUNCT ",")
(ID "dict")
(PUNCT ",")
(ID "dict")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "runctx")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "cmd")
(PUNCT ",")
(ID "globals")
(PUNCT ",")
(ID "locals")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "enable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "exec")
(PUNCT "(")
(ID "cmd")
(PUNCT ",")
(ID "globals")
(PUNCT ",")
(ID "locals")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "disable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "self")
(NEWLINE)
(DEDENT)
(KEYWORD def)
(ID "runcall")
(PUNCT "(")
(ID "self")
(PUNCT ",")
(ID "func")
(PUNCT ",")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "enable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(KEYWORD try)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(ID "func")
(PUNCT "(")
(PUNCT "*")
(ID "args")
(PUNCT ",")
(PUNCT "**")
(ID "kw")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD finally)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "self")
(PUNCT ".")
(ID "disable")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "label")
(PUNCT "(")
(ID "code")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD if)
(ID "isinstance")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(ID "str")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(LIT "~")
(PUNCT ",")
(LIT 0)
(PUNCT ",")
(ID "code")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD return)
(PUNCT "(")
(ID "code")
(PUNCT ".")
(ID "co_filename")
(PUNCT ",")
(ID "code")
(PUNCT ".")
(ID "co_firstlineno")
(PUNCT ",")
(ID "code")
(PUNCT ".")
(ID "co_name")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(DEDENT)
(KEYWORD def)
(ID "main")
(PUNCT "(")
(PUNCT ")")
(PUNCT ":")
(NEWLINE)
(INDENT)
(KEYWORD import)
(ID "os")
(PUNCT ",")
(ID "sys")
(NEWLINE)
(KEYWORD from)
(ID "optparse")
(KEYWORD import)
(ID "OptionParser")
(NEWLINE)
(ID "usage")
(PUNCT "=")
(LIT "cProfile.py [-o output_file_path] [-s sort] scriptfile [arg] ...")
(NEWLINE)
(ID "parser")
(PUNCT "=")
(ID "OptionParser")
(PUNCT "(")
(ID "usage")
(PUNCT "=")
(ID "usage")
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "allow_interspersed_args")
(PUNCT "=")
(KEYWORD False)
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_option")
(PUNCT "(")
(LIT "-o")
(PUNCT ",")
(LIT "--outfile")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "outfile")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "Save stats to <outfile>")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(KEYWORD None)
(PUNCT ")")
(NEWLINE)
(ID "parser")
(PUNCT ".")
(ID "add_option")
(PUNCT "(")
(LIT "-s")
(PUNCT ",")
(LIT "--sort")
(PUNCT ",")
(ID "dest")
(PUNCT "=")
(LIT "sort")
(PUNCT ",")
(ID "help")
(PUNCT "=")
(LIT "Sort order when printing to stdout, based on pstats.Stats class")
(PUNCT ",")
(ID "default")
(PUNCT "=")
(PUNCT "-")
(LIT 1)
(PUNCT ")")
(NEWLINE)
(KEYWORD if)
(KEYWORD not)
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(LIT 1)
(PUNCT ":")
(PUNCT "]")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "print_usage")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "exit")
(PUNCT "(")
(LIT 2)
(PUNCT ")")
(NEWLINE)
(DEDENT)
(PUNCT "(")
(ID "options")
(PUNCT ",")
(ID "args")
(PUNCT ")")
(PUNCT "=")
(ID "parser")
(PUNCT ".")
(ID "parse_args")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "argv")
(PUNCT "[")
(PUNCT ":")
(PUNCT "]")
(PUNCT "=")
(ID "args")
(NEWLINE)
(KEYWORD if)
(ID "len")
(PUNCT "(")
(ID "args")
(PUNCT ")")
(PUNCT ">")
(LIT 0)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "progname")
(PUNCT "=")
(ID "args")
(PUNCT "[")
(LIT 0)
(PUNCT "]")
(NEWLINE)
(ID "sys")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "insert")
(PUNCT "(")
(LIT 0)
(PUNCT ",")
(ID "os")
(PUNCT ".")
(ID "path")
(PUNCT ".")
(ID "dirname")
(PUNCT "(")
(ID "progname")
(PUNCT ")")
(PUNCT ")")
(NEWLINE)
(KEYWORD with)
(ID "open")
(PUNCT "(")
(ID "progname")
(PUNCT ",")
(LIT "rb")
(PUNCT ")")
(KEYWORD as)
(ID "fp")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "code")
(PUNCT "=")
(ID "compile")
(PUNCT "(")
(ID "fp")
(PUNCT ".")
(ID "read")
(PUNCT "(")
(PUNCT ")")
(PUNCT ",")
(ID "progname")
(PUNCT ",")
(LIT "exec")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ID "globs")
(PUNCT "=")
(PUNCT "{")
(LIT "__file__")
(PUNCT ":")
(ID "progname")
(PUNCT ",")
(LIT "__name__")
(PUNCT ":")
(LIT "__main__")
(PUNCT ",")
(LIT "__package__")
(PUNCT ":")
(KEYWORD None)
(PUNCT ",")
(LIT "__cached__")
(PUNCT ":")
(KEYWORD None)
(PUNCT ",")
(PUNCT "}")
(NEWLINE)
(ID "runctx")
(PUNCT "(")
(ID "code")
(PUNCT ",")
(ID "globs")
(PUNCT ",")
(KEYWORD None)
(PUNCT ",")
(ID "options")
(PUNCT ".")
(ID "outfile")
(PUNCT ",")
(ID "options")
(PUNCT ".")
(ID "sort")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD else)
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "parser")
(PUNCT ".")
(ID "print_usage")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(KEYWORD return)
(ID "parser")
(NEWLINE)
(DEDENT)
(KEYWORD if)
(ID "__name__")
(PUNCT "==")
(LIT "__main__")
(PUNCT ":")
(NEWLINE)
(INDENT)
(ID "main")
(PUNCT "(")
(PUNCT ")")
(NEWLINE)
(DEDENT)
(ENDMARKER)
